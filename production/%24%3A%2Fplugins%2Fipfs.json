{
    "title": "$:/plugins/ipfs",
    "description": "IPFS with TiddlyWiki",
    "author": "Xavier Maysonnave",
    "version": "v0.3.0-200806414",
    "license": "GPL-3.0-or-later",
    "tags": "$:/ipfs/core",
    "core-version": ">=5.1.2",
    "_project_uri": "https://github.com/xmaysonnave/tiddlywiki-ipfs",
    "plugin-type": "plugin",
    "list": "readme changelog",
    "dependents": "",
    "type": "application/json",
    "text": "{\n    \"tiddlers\": {\n        \"$:/images/fa5/brands/ethereum\": {\n            \"title\": \"$:/images/fa5/brands/ethereum\",\n            \"caption\": \"ethereum (Brands)\",\n            \"modified\": \"20200626040451692\",\n            \"tags\": \"$:/tags/Image [[Font Awesome 5]] Brands $:/ipfs/core $:/isAttachment $:/isEmbedded\",\n            \"text\": \"<svg class=\\\"tc-image-ethereum tc-image-button\\\" width=\\\"22pt\\\" height=\\\"22pt\\\" viewBox=\\\"0 0 320 512\\\">\\n  <path d=\\\"M311.9 260.8L160 353.6 8 260.8 160 0l151.9 260.8zM160 383.4L8 290.6 160 512l152-221.4-152 92.8z\\\"/>\\n</svg>\"\n        },\n        \"$:/images/fa5/solid/user-cog\": {\n            \"title\": \"$:/images/fa5/solid/user-cog\",\n            \"caption\": \"user-cog (Solid)\",\n            \"modified\": \"20200626040451692\",\n            \"tags\": \"$:/tags/Image [[Font Awesome 5]] Solid $:/ipfs/core $:/isAttachment $:/isEmbedded\",\n            \"_license_uri\": \"https://creativecommons.org/licenses/by/4.0\",\n            \"_project_uri\": \"https://fontawesome.com/\",\n            \"_source_uri\": \"http://fa5-free-svg.tiddlyspot.com/\",\n            \"text\": \"<svg\\n  class=\\\"tc-image-user-cog tc-image-button\\\"\\n  width=\\\"22pt\\\"\\n  height=\\\"22pt\\\"\\n  viewBox=\\\"0 0 640 512\\\"\\n>\\n  <path d=\\\"M610.5 373.3c2.6-14.1 2.6-28.5 0-42.6l25.8-14.9c3-1.7 4.3-5.2 3.3-8.5-6.7-21.6-18.2-41.2-33.2-57.4-2.3-2.5-6-3.1-9-1.4l-25.8 14.9c-10.9-9.3-23.4-16.5-36.9-21.3v-29.8c0-3.4-2.4-6.4-5.7-7.1-22.3-5-45-4.8-66.2 0-3.3.7-5.7 3.7-5.7 7.1v29.8c-13.5 4.8-26 12-36.9 21.3l-25.8-14.9c-2.9-1.7-6.7-1.1-9 1.4-15 16.2-26.5 35.8-33.2 57.4-1 3.3.4 6.8 3.3 8.5l25.8 14.9c-2.6 14.1-2.6 28.5 0 42.6l-25.8 14.9c-3 1.7-4.3 5.2-3.3 8.5 6.7 21.6 18.2 41.1 33.2 57.4 2.3 2.5 6 3.1 9 1.4l25.8-14.9c10.9 9.3 23.4 16.5 36.9 21.3v29.8c0 3.4 2.4 6.4 5.7 7.1 22.3 5 45 4.8 66.2 0 3.3-.7 5.7-3.7 5.7-7.1v-29.8c13.5-4.8 26-12 36.9-21.3l25.8 14.9c2.9 1.7 6.7 1.1 9-1.4 15-16.2 26.5-35.8 33.2-57.4 1-3.3-.4-6.8-3.3-8.5l-25.8-14.9zM496 400.5c-26.8 0-48.5-21.8-48.5-48.5s21.8-48.5 48.5-48.5 48.5 21.8 48.5 48.5-21.7 48.5-48.5 48.5zM224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm201.2 226.5c-2.3-1.2-4.6-2.6-6.8-3.9l-7.9 4.6c-6 3.4-12.8 5.3-19.6 5.3-10.9 0-21.4-4.6-28.9-12.6-18.3-19.8-32.3-43.9-40.2-69.6-5.5-17.7 1.9-36.4 17.9-45.7l7.9-4.6c-.1-2.6-.1-5.2 0-7.8l-7.9-4.6c-16-9.2-23.4-28-17.9-45.7.9-2.9 2.2-5.8 3.2-8.7-3.8-.3-7.5-1.2-11.4-1.2h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c10.1 0 19.5-3.2 27.2-8.5-1.2-3.8-2-7.7-2-11.8v-9.2z\\\"/>\\n</svg>\"\n        },\n        \"$:/ipfs/image/bluelight\": {\n            \"title\": \"$:/ipfs/image/bluelight\",\n            \"modified\": \"20200804065100279\",\n            \"_canonical_uri\": \"ipfs://bafybeibi5ldguonidlwomjxwjehodpmypgex5qd2fe6f6yuka4dqvbzvpq\",\n            \"_import_uri\": \"ipfs://bafybeiejplubmcgpkaqwjc23ebo6vorv2p4cwlr7kkhm4cakgtneefjuc4\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $$:/isAttachment $:/isIpfs\",\n            \"type\": \"image/jpg\"\n        },\n        \"$:/core/images/ens\": {\n            \"title\": \"$:/core/images/ens\",\n            \"modified\": \"20200619044634920\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/ensdomains/ens-app/dev/LICENSE\",\n            \"_project_uri\": \"https://github.com/ensdomains/ens-app/\",\n            \"_source_uri\": \"https://github.com/ensdomains/ens-app/blob/dev/public/safari-pinned-tab.svg\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isEmbedded\",\n            \"type\": \"image/svg+xml\",\n            \"text\": \"<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   version=\\\"1.0\\\"\\n   width=\\\"18\\\"\\n   height=\\\"18\\\"\\n   viewBox=\\\"0 0 128 128\\\"\\n   class=\\\"tc-image-button\\\"\\n   preserveAspectRatio=\\\"xMidYMid meet\\\"\\n   id=\\\"svg14\\\"\\n   sodipodi:docname=\\\"ens-small.svg\\\"\\n   inkscape:version=\\\"0.92.4 (5da689c313, 2019-01-14)\\\"\\n>\\n  <defs\\n     id=\\\"defs18\\\" />\\n  <sodipodi:namedview\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1\\\"\\n     objecttolerance=\\\"10\\\"\\n     gridtolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1020\\\"\\n     id=\\\"namedview16\\\"\\n     showgrid=\\\"false\\\"\\n     inkscape:zoom=\\\"12.361274\\\"\\n     inkscape:cx=\\\"41.295086\\\"\\n     inkscape:cy=\\\"21.734019\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"31\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"svg14\\\" />\\n  <metadata\\n     id=\\\"metadata2\\\">\\nCreated by potrace 1.11, written by Peter Selinger 2001-2013\\n<rdf:RDF>\\n  <cc:Work\\n     rdf:about=\\\"\\\">\\n    <dc:format>image/svg+xml</dc:format>\\n    <dc:type\\n       rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n    <dc:title></dc:title>\\n  </cc:Work>\\n</rdf:RDF>\\n</metadata>\\n  <g\\n     transform=\\\"matrix(0.08837363,0,0,-0.07925696,-8.0787259,127.6037)\\\"\\n     id=\\\"g12\\\"\\n     style=\\\"fill:#000000;stroke:none\\\">\\n    <path\\n       d=\\\"m 640,1519 c -69,-48 -173,-122 -231,-163 -94,-65 -110,-82 -134,-129 -30,-63 -37,-155 -15,-222 15,-49 61,-135 71,-135 6,0 437,704 447,731 7,19 -17,4 -138,-82 z\\\"\\n       id=\\\"path4\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       d=\\\"m 856,1598 c 4,-7 44,-67 89,-133 118,-175 286,-437 393,-615 93,-154 122,-224 125,-300 2,-55 17,-35 52,75 26,80 28,92 22,217 -7,185 -45,284 -149,387 -35,36 -520,381 -534,381 -3,0 -2,-6 2,-12 z\\\"\\n       id=\\\"path6\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       d=\\\"M 141,1068 C 97,969 87,913 93,776 98,649 106,607 146,523 163,485 224,403 254,378 291,346 772,9 776,12 c 2,2 -57,95 -131,206 -132,199 -320,496 -404,639 -48,81 -70,145 -73,210 -1,23 -3,43 -4,43 -2,0 -12,-19 -23,-42 z\\\"\\n       id=\\\"path8\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       d=\\\"M 1079,398 C 962,204 859,34 851,20 l -16,-25 30,21 c 306,211 436,304 461,331 51,53 72,165 49,254 -14,51 -63,149 -76,149 -4,0 -103,-159 -220,-352 z\\\"\\n       id=\\\"path10\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n</svg>\"\n        },\n        \"$:/ipfs/logo/vector/ice/text\": {\n            \"title\": \"$:/ipfs/logo/vector/ice/text\",\n            \"modified\": \"20200804040053586\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/ipfs-inactive/logo/master/LICENSE\",\n            \"_project_uri\": \"https://github.com/ipfs-inactive/logo/\",\n            \"_source_uri\": \"https://github.com/ipfs-inactive/logo/blob/master/vector/ipfs-logo-vector-ice-text.svg\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $$:/isAttachment $:/isEmbedded\",\n            \"type\": \"image/svg+xml\",\n            \"text\": \"<svg\\n  xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n  style=\\\"enable-background:new\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  height=\\\"512\\\"\\n  width=\\\"512\\\"\\n  version=\\\"1.1\\\"\\n  xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n  xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n  viewBox=\\\"0 0 512 512\\\"\\n>\\n  <defs>\\n    <linearGradient id=\\\"c\\\" y2=\\\"771.51\\\" gradientUnits=\\\"userSpaceOnUse\\\" y1=\\\"771.51\\\" x2=\\\"527.72\\\" x1=\\\"84.315\\\">\\n      <stop stop-color=\\\"#4a9ea1\\\" offset=\\\"0\\\"/>\\n    </linearGradient>\\n    <linearGradient id=\\\"d\\\" y2=\\\"771.48\\\" gradientUnits=\\\"userSpaceOnUse\\\" y1=\\\"771.48\\\" x2=\\\"512.36\\\" x1=\\\"99.675\\\">\\n      <stop stop-color=\\\"#63d3d7\\\" offset=\\\"0\\\"/>\\n    </linearGradient>\\n  </defs>\\n  <g>\\n    <g style=\\\"enable-background:new\\\" transform=\\\"translate(-50.017,-515.51)\\\">\\n      <path fill=\\\"url(#c)\\\" d=\\\"m84.315 899.51 221.7 128 221.7-128v-256l-221.7-127.99-221.7 128z\\\"/>\\n      <path fill=\\\"url(#d)\\\" d=\\\"m283.13 546.35-160.74 92.806c0.32126 2.8543 0.32125 5.7352 0 8.5894l160.75 92.806c13.554-10.001 32.043-10.001 45.597 0l160.75-92.807c-0.32126-2.8543-0.32293-5.7338-0.001-8.588l-160.74-92.806c-13.554 10.001-32.044 10.001-45.599 0zm221.79 127.03-160.92 93.84c1.884 16.739-7.3611 32.751-22.799 39.489l0.18062 184.58c2.6325 1.1489 5.1267 2.5886 7.438 4.294l160.75-92.805c-1.884-16.739 7.3611-32.752 22.799-39.49v-185.61c-2.6325-1.1489-5.1281-2.5886-7.4394-4.294zm-397.81 1.0315c-2.3112 1.7054-4.8054 3.1465-7.438 4.2954v185.61c15.438 6.7378 24.683 22.75 22.799 39.489l160.74 92.806c2.3112-1.7054 4.8069-3.1465 7.4394-4.2954v-185.61c-15.438-6.7378-24.683-22.75-22.799-39.489l-160.74-92.81z\\\"/>\\n    </g>\\n    <g style=\\\"enable-background:new\\\" transform=\\\"translate(0,-196.66)\\\">\\n      <path fill-opacity=\\\".25098\\\" d=\\\"m256 708.66 221.7-128v-256l-221.7 128v256z\\\"/>\\n      <path fill-opacity=\\\".039216\\\" d=\\\"m256 708.66v-256l-221.7-128v256l221.7 128z\\\"/>\\n      <path fill-opacity=\\\".13018\\\" d=\\\"m34.298 324.66 221.7 128 221.7-128-221.7-128-221.7 128z\\\"/>\\n    </g>\\n  </g>\\n  <g style=\\\"enable-background:new\\\" fill=\\\"#fff\\\">\\n    <path d=\\\"m103.09 186h-29.2v141.2h29.2v-141.2z\\\"/>\\n    <path d=\\\"m153.97 327.2v-51.8c7.2 0.6 14.4 0.6 20.4 0.6 41.6 0 53.6-20.6 53.6-46 0-30.8-22-44-56-44h-47.2v141.2h29.2zm15.8-71.8c-5.4 0-13.4 0-15.8-0.2v-48h18.2c17.6 0 27.6 8.4 27.6 23.8v0.4c0 12-4.4 24-30 24z\\\"/>\\n    <path d=\\\"m327.95 186h-88.6v141.2h29.2v-62.2h55.4v-21.2h-55.6v-36.4h57.6l2-21.4z\\\"/>\\n    <path d=\\\"m423.51 213.6 7.6-19.6c-11.4-8.2-26.8-11.2-46.2-11.2-28.2 0-51.4 13.2-51.4 40.2 0 24.2 17.8 33.8 35.6 39.6l17.8 6c12.2 4.2 22.2 8.2 22.2 21.4 0 12-10.4 16.8-26.2 16.8-16 0-33.2-4.8-43-11l-7.6 21.2c12.8 8.2 29 12.2 50.8 12.2 31 0 55-13.6 55-42.6 0-27-20.6-35.6-41.4-42.6l-19.4-6.4c-8.4-2.8-14.8-6.6-14.8-17.4 0-11 9-15.4 22.4-15.4 16.4 0 29.2 3 38.6 8.8z\\\"/>\\n  </g>\\n</svg>\"\n        },\n        \"$:/core/images/ipfs\": {\n            \"title\": \"$:/core/images/ipfs\",\n            \"modified\": \"20200619044634920\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/ipfs-inactive/logo/master/LICENSE\",\n            \"_project_uri\": \"https://github.com/ipfs-inactive/logo/\",\n            \"_source_uri\": \"https://github.com/ipfs-inactive/logo/blob/master/vector/ipfs-logo-vector-black.svg\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isEmbedded\",\n            \"type\": \"image/svg+xml\",\n            \"text\": \"<svg\\n   xmlns:dc=\\\"http://purl.org/dc/elements/1.1/\\\"\\n   xmlns:cc=\\\"http://creativecommons.org/ns#\\\"\\n   xmlns:rdf=\\\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\\\"\\n   xmlns:svg=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n   xmlns:sodipodi=\\\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\\\"\\n   xmlns:inkscape=\\\"http://www.inkscape.org/namespaces/inkscape\\\"\\n   style=\\\"enable-background:new\\\"\\n   height=\\\"22\\\"\\n   width=\\\"22\\\"\\n   version=\\\"1.1\\\"\\n   viewBox=\\\"0 0 128 128\\\"\\n   class=\\\"tc-image-button\\\"\\n   id=\\\"svg24\\\"\\n   sodipodi:docname=\\\"ipfs-small.svg\\\"\\n   inkscape:version=\\\"0.92.4 (5da689c313, 2019-01-14)\\\"\\n>\\n  <metadata\\n     id=\\\"metadata28\\\">\\n    <rdf:RDF>\\n      <cc:Work\\n         rdf:about=\\\"\\\">\\n        <dc:format>image/svg+xml</dc:format>\\n        <dc:type\\n           rdf:resource=\\\"http://purl.org/dc/dcmitype/StillImage\\\" />\\n        <dc:title></dc:title>\\n      </cc:Work>\\n    </rdf:RDF>\\n  </metadata>\\n  <sodipodi:namedview\\n     pagecolor=\\\"#ffffff\\\"\\n     bordercolor=\\\"#666666\\\"\\n     borderopacity=\\\"1\\\"\\n     objecttolerance=\\\"10\\\"\\n     gridtolerance=\\\"10\\\"\\n     guidetolerance=\\\"10\\\"\\n     inkscape:pageopacity=\\\"0\\\"\\n     inkscape:pageshadow=\\\"2\\\"\\n     inkscape:window-width=\\\"1920\\\"\\n     inkscape:window-height=\\\"1020\\\"\\n     id=\\\"namedview26\\\"\\n     showgrid=\\\"false\\\"\\n     units=\\\"pt\\\"\\n     inkscape:zoom=\\\"5.2149125\\\"\\n     inkscape:cx=\\\"133.61143\\\"\\n     inkscape:cy=\\\"41.576599\\\"\\n     inkscape:window-x=\\\"0\\\"\\n     inkscape:window-y=\\\"31\\\"\\n     inkscape:window-maximized=\\\"1\\\"\\n     inkscape:current-layer=\\\"svg24\\\" />\\n  <defs\\n     id=\\\"defs8\\\">\\n    <linearGradient\\n       id=\\\"b\\\"\\n       y2=\\\"771.51001\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       x2=\\\"527.71997\\\"\\n       y1=\\\"771.51001\\\"\\n       x1=\\\"84.315002\\\">\\n      <stop\\n         offset=\\\"0\\\"\\n         id=\\\"stop2\\\" />\\n    </linearGradient>\\n    <linearGradient\\n       id=\\\"a\\\"\\n       y2=\\\"771.47998\\\"\\n       gradientUnits=\\\"userSpaceOnUse\\\"\\n       x2=\\\"512.35999\\\"\\n       y1=\\\"771.47998\\\"\\n       x1=\\\"99.675003\\\">\\n      <stop\\n         stop-color=\\\"#d8d8d8\\\"\\n         offset=\\\"0\\\"\\n         id=\\\"stop5\\\" />\\n    </linearGradient>\\n  </defs>\\n  <g\\n     transform=\\\"matrix(0.28867709,0,0,0.24999998,-24.339808,-128.87748)\\\"\\n     id=\\\"g14\\\">\\n    <path\\n       d=\\\"m 84.315,899.51 221.7,128 221.7,-128 v -256 l -221.7,-127.99 -221.7,128 z\\\"\\n       id=\\\"path10\\\"\\n       style=\\\"fill:url(#b)\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n    <path\\n       d=\\\"m 283.13,546.35 -160.74,92.806 c 0.32126,2.8543 0.32125,5.7352 0,8.5894 l 160.75,92.806 c 13.554,-10.001 32.043,-10.001 45.597,0 l 160.75,-92.807 c -0.32126,-2.8543 -0.32293,-5.7338 -0.001,-8.588 l -160.74,-92.806 c -13.554,10.001 -32.044,10.001 -45.599,0 z M 504.92,673.38 344,767.22 c 1.884,16.739 -7.3611,32.751 -22.799,39.489 l 0.18062,184.58 c 2.6325,1.1489 5.1267,2.5886 7.438,4.294 l 160.75,-92.805 c -1.884,-16.739 7.3611,-32.752 22.799,-39.49 v -185.61 c -2.6325,-1.1489 -5.1281,-2.5886 -7.4394,-4.294 z m -397.81,1.0315 c -2.3112,1.7054 -4.8054,3.1465 -7.438,4.2954 v 185.61 c 15.438,6.7378 24.683,22.75 22.799,39.489 l 160.74,92.806 c 2.3112,-1.7054 4.8069,-3.1465 7.4394,-4.2954 v -185.61 c -15.438,-6.7378 -24.683,-22.75 -22.799,-39.489 l -160.74,-92.81 z\\\"\\n       id=\\\"path12\\\"\\n       style=\\\"fill:url(#a)\\\"\\n       inkscape:connector-curvature=\\\"0\\\" />\\n  </g>\\n  <g\\n     transform=\\\"matrix(0.28867709,0,0,0.24999998,-9.9010468,-49.164992)\\\"\\n     id=\\\"g22\\\">\\n    <path\\n       d=\\\"m 256,708.66 221.7,-128 v -256 l -221.7,128 z\\\"\\n       id=\\\"path16\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill-opacity:0.25097997\\\" />\\n    <path\\n       d=\\\"m 256,708.66 v -256 l -221.7,-128 v 256 z\\\"\\n       id=\\\"path18\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill-opacity:0.03921599\\\" />\\n    <path\\n       d=\\\"m 34.298,324.66 221.7,128 221.7,-128 -221.7,-128 z\\\"\\n       id=\\\"path20\\\"\\n       inkscape:connector-curvature=\\\"0\\\"\\n       style=\\\"fill-opacity:0.13018003\\\" />\\n  </g>\\n</svg>\"\n        },\n        \"$:/core/images/bluelight\": {\n            \"title\": \"$:/core/images/bluelight\",\n            \"modified\": \"20200528045157536\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isEmbedded\",\n            \"type\": \"image/png\",\n            \"text\": \"\"\n        },\n        \"$:/ipfs/image/tiddlywiki\": {\n            \"title\": \"$:/ipfs/image/tiddlywiki\",\n            \"modified\": \"20200723080350311\",\n            \"_canonical_uri\": \"ipfs://bafkreihzzc42nwumjeaz4d6kxsbxa6vy5llnsvqtz3xjjwnjrhwkjy5loq\",\n            \"tags\": \"$:/tags/Image $:/ipfs/core $:/isAttachment $:/isIpfs\",\n            \"type\": \"image/svg+xml\"\n        },\n        \"$:/config/PreferredSaver\": {\n            \"title\": \"$:/config/PreferredSaver\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"$:/plugins/ipfs/ipfs-saver.js\"\n        },\n        \"$:/ipfs/saver/api\": {\n            \"title\": \"$:/ipfs/saver/api\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"$:/ipfs/saver/api/https/ipfs.infura.io/5001\"\n        },\n        \"$:/ipfs/saver/ens/domain\": {\n            \"title\": \"$:/ipfs/saver/ens/domain\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\"\n        },\n        \"$:/ipfs/saver/export\": {\n            \"title\": \"$:/ipfs/saver/export\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"json\"\n        },\n        \"$:/ipfs/saver/gateway\": {\n            \"title\": \"$:/ipfs/saver/gateway\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"$:/ipfs/saver/gateway/https/ipfs.infura.io\"\n        },\n        \"$:/ipfs/saver/ipns/key\": {\n            \"title\": \"$:/ipfs/saver/ipns/key\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\"\n        },\n        \"$:/ipfs/saver/ipns/name\": {\n            \"title\": \"$:/ipfs/saver/ipns/name\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\"\n        },\n        \"$:/ipfs/saver/policy\": {\n            \"title\": \"$:/ipfs/saver/policy\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"gateway\"\n        },\n        \"$:/ipfs/saver/protocol\": {\n            \"title\": \"$:/ipfs/saver/protocol\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"ipfs\"\n        },\n        \"$:/ipfs/saver/provider\": {\n            \"title\": \"$:/ipfs/saver/provider\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"http\"\n        },\n        \"$:/ipfs/saver/unpin\": {\n            \"title\": \"$:/ipfs/saver/unpin\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"no\"\n        },\n        \"$:/ipfs/saver/verbose\": {\n            \"title\": \"$:/ipfs/saver/verbose\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"yes\"\n        },\n        \"$:/core/modules/commands/compress.js\": {\n            \"title\": \"$:/core/modules/commands/compress.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/compress.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: command\\n\\nSet compression state\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  exports.info = {\\n    name: 'compress',\\n    synchronous: true\\n  }\\n\\n  var Command = function (params, commander, callback) {\\n    this.params = params\\n    this.commander = commander\\n    this.callback = callback\\n  }\\n\\n  Command.prototype.execute = function () {\\n    var compress = false\\n    if (this.params.length > 0) {\\n      compress = this.params[0] === 'true'\\n    }\\n    $tw.compress.setCompressState(compress)\\n    return null\\n  }\\n\\n  exports.Command = Command\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/publickey.js\": {\n            \"title\": \"$:/core/modules/commands/publickey.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/publickey.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: command\\n\\nSave publickey for crypto operations\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  exports.info = {\\n    name: 'publickey',\\n    synchronous: true\\n  }\\n\\n  var Command = function (params, commander, callback) {\\n    this.params = params\\n    this.commander = commander\\n    this.callback = callback\\n  }\\n\\n  Command.prototype.execute = function () {\\n    if (this.params.length < 1) {\\n      return 'Missing publickey'\\n    }\\n    $tw.crypto.setEncryptionKey(this.params[0])\\n    return null\\n  }\\n\\n  exports.Command = Command\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/commands/savewikifolder.js\": {\n            \"title\": \"$:/core/modules/commands/savewikifolder.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/commands/savewikifolder.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: command\\n\\nCommand to save the current wiki as a wiki folder\\n\\n--savewikifolder <wikifolderpath> [<filter>]\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  exports.info = {\\n    name: 'savewikifolder',\\n    synchronous: true\\n  }\\n\\n  var fs, path\\n  if ($tw.node) {\\n    fs = require('fs')\\n    path = require('path')\\n  }\\n\\n  var Command = function (params, commander, callback) {\\n    this.params = params\\n    this.commander = commander\\n    this.callback = callback\\n  }\\n\\n  Command.prototype.execute = function () {\\n    if (this.params.length < 1) {\\n      return 'Missing wiki folder path'\\n    }\\n    var wikifoldermaker = new WikiFolderMaker(\\n      this.params[0],\\n      this.params[1],\\n      this.commander\\n    )\\n    return wikifoldermaker.save()\\n  }\\n\\n  function WikiFolderMaker (wikiFolderPath, wikiFilter, commander) {\\n    this.wikiFolderPath = wikiFolderPath\\n    this.wikiFilter = wikiFilter || '[all[tiddlers]]'\\n    this.commander = commander\\n    this.wiki = commander.wiki\\n    this.savedPaths = [] // So that we can detect filename clashes\\n  }\\n\\n  WikiFolderMaker.prototype.log = function (str) {\\n    if (this.commander.verbose) {\\n      console.log(str)\\n    }\\n  }\\n\\n  WikiFolderMaker.prototype.tiddlersToIgnore = [\\n    '$:/boot/boot.css',\\n    '$:/boot/boot.js',\\n    '$:/boot/bootprefix.js',\\n    '$:/core',\\n    '$:/library/detect-provider.min.js',\\n    '$:/library/eth-sig-util.min.js',\\n    '$:/library/loglevel.min.js',\\n    '$:/library/pako.min.js',\\n    '$:/library/sjcl.js',\\n    '$:/temp/info-plugin'\\n  ]\\n\\n  /*\\nReturns null if successful, or an error string if there was an error\\n*/\\n  WikiFolderMaker.prototype.save = function () {\\n    var self = this\\n    // Check that the output directory doesn't exist\\n    if (\\n      fs.existsSync(this.wikiFolderPath) &&\\n      !$tw.utils.isDirectoryEmpty(this.wikiFolderPath)\\n    ) {\\n      return 'The unpackwiki command requires that the output wiki folder be empty'\\n    }\\n    // Get the tiddlers from the source wiki\\n    var tiddlerTitles = this.wiki.filterTiddlers(this.wikiFilter)\\n    // Initialise a new tiddlwiki.info file\\n    var newWikiInfo = {}\\n    // Process each incoming tiddler in turn\\n    $tw.utils.each(tiddlerTitles, function (title) {\\n      var tiddler = self.wiki.getTiddler(title)\\n      if (tiddler) {\\n        if (self.tiddlersToIgnore.indexOf(title) !== -1) {\\n          // Ignore the core plugin and the ephemeral info plugin\\n          self.log('Ignoring tiddler: ' + title)\\n        } else {\\n          var type = tiddler.fields.type\\n          var pluginType = tiddler.fields['plugin-type']\\n          if (type === 'application/json' && pluginType) {\\n            // Plugin tiddler\\n            var libraryDetails = self.findPluginInLibrary(title)\\n            if (libraryDetails) {\\n              // A plugin from the core library\\n              self.log('Adding built-in plugin: ' + libraryDetails.name)\\n              newWikiInfo[libraryDetails.type] =\\n                newWikiInfo[libraryDetails.type] || []\\n              $tw.utils.pushTop(\\n                newWikiInfo[libraryDetails.type],\\n                libraryDetails.name\\n              )\\n            } else {\\n              // A custom plugin\\n              self.log('Processing custom plugin: ' + title)\\n              self.saveCustomPlugin(tiddler)\\n            }\\n          } else {\\n            // Ordinary tiddler\\n            self.saveTiddler('tiddlers', tiddler)\\n          }\\n        }\\n      }\\n    })\\n    // Save the tiddlywiki.info file\\n    this.saveJSONFile('tiddlywiki.info', newWikiInfo)\\n    self.log(\\n      'Writing tiddlywiki.info: ' +\\n        JSON.stringify(newWikiInfo, null, $tw.config.preferences.jsonSpaces)\\n    )\\n    return null\\n  }\\n\\n  /*\\nTest whether the specified tiddler is a plugin in the plugin library\\n*/\\n  WikiFolderMaker.prototype.findPluginInLibrary = function (title) {\\n    var parts = title.split('/')\\n    var pluginPath\\n    var type\\n    var name\\n    if (parts[0] === '$:') {\\n      if (parts[1] === 'languages' && parts.length === 3) {\\n        pluginPath = 'languages' + path.sep + parts[2]\\n        type = parts[1]\\n        name = parts[2]\\n      } else if (\\n        parts[1] === 'plugins' ||\\n        (parts[1] === 'themes' && parts.length === 4)\\n      ) {\\n        pluginPath = parts[1] + path.sep + parts[2] + path.sep + parts[3]\\n        type = parts[1]\\n        name = parts[2] + '/' + parts[3]\\n      }\\n    }\\n    if (pluginPath && type && name) {\\n      pluginPath = path.resolve($tw.boot.bootPath, '..', pluginPath)\\n      if (fs.existsSync(pluginPath)) {\\n        return {\\n          pluginPath: pluginPath,\\n          type: type,\\n          name: name\\n        }\\n      }\\n    }\\n    return false\\n  }\\n\\n  WikiFolderMaker.prototype.saveCustomPlugin = function (pluginTiddler) {\\n    var self = this\\n    var pluginTitle = pluginTiddler.fields.title\\n    var titleParts = pluginTitle.split('/')\\n    var directory = $tw.utils.generateTiddlerFilepath(\\n      titleParts[titleParts.length - 1],\\n      {\\n        directory: path.resolve(\\n          this.wikiFolderPath,\\n          pluginTiddler.fields['plugin-type'] + 's'\\n        )\\n      }\\n    )\\n    var pluginInfo = pluginTiddler.getFieldStrings({\\n      exclude: ['text', 'type']\\n    })\\n    this.saveJSONFile(directory + path.sep + 'plugin.info', pluginInfo)\\n    self.log(\\n      'Writing ' +\\n        directory +\\n        path.sep +\\n        'plugin.info: ' +\\n        JSON.stringify(pluginInfo, null, $tw.config.preferences.jsonSpaces)\\n    )\\n    var pluginTiddlers = JSON.parse(pluginTiddler.fields.text).tiddlers // A hashmap of tiddlers in the plugin\\n    $tw.utils.each(pluginTiddlers, function (tiddler) {\\n      self.saveTiddler(directory, new $tw.Tiddler(tiddler))\\n    })\\n  }\\n\\n  WikiFolderMaker.prototype.saveTiddler = function (directory, tiddler) {\\n    var fileInfo = $tw.utils.generateTiddlerFileInfo(tiddler, {\\n      directory: path.resolve(this.wikiFolderPath, directory),\\n      wiki: this.wiki\\n    })\\n    $tw.utils.saveTiddlerToFileSync(tiddler, fileInfo)\\n  }\\n\\n  WikiFolderMaker.prototype.saveJSONFile = function (filename, json) {\\n    this.saveTextFile(\\n      filename,\\n      JSON.stringify(json, null, $tw.config.preferences.jsonSpaces)\\n    )\\n  }\\n\\n  WikiFolderMaker.prototype.saveTextFile = function (filename, data) {\\n    this.saveFile(filename, 'utf8', data)\\n  }\\n\\n  WikiFolderMaker.prototype.saveFile = function (filename, encoding, data) {\\n    var filepath = path.resolve(this.wikiFolderPath, filename)\\n    $tw.utils.createFileDirectories(filepath)\\n    fs.writeFileSync(filepath, data, encoding)\\n  }\\n\\n  exports.Command = Command\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"command\"\n        },\n        \"$:/core/modules/filters/savers.js\": {\n            \"title\": \"$:/core/modules/filters/savers.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/filters/savers.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: filteroperator\\n\\nThis Filter operator return savers title\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n  Export our filter function\\n  */\\n  exports.savers = function (source, operator, options) {\\n    var results = []\\n    for (var i in $tw.saverHandler.savers) {\\n      results.push($tw.saverHandler.savers[i].title)\\n    }\\n    return results\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"filteroperator\"\n        },\n        \"$:/core/modules/ipfs-wiki.js\": {\n            \"title\": \"$:/core/modules/ipfs-wiki.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/ipfs-wiki.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: wikimethod\\n\\nwikimethod\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Parse a block of text of a specified MIME type\\n   *  type: content type of text to be parsed\\n   *  text: text\\n   *  options: see below\\n   * Options include:\\n   *  parseAsInline: if true, the text of the tiddler will be parsed as an inline run\\n   *  _canonical_uri: optional string of the canonical URI of this content\\n   */\\n  exports.parseText = function (type, text, options) {\\n    text = text || ''\\n    options = options || {}\\n    // Select a parser\\n    var Parser = $tw.Wiki.parsers[type]\\n    if (!Parser && $tw.utils.getFileExtensionInfo(type)) {\\n      Parser = $tw.Wiki.parsers[$tw.utils.getFileExtensionInfo(type).type]\\n    }\\n    if (!Parser) {\\n      Parser = $tw.Wiki.parsers[options.defaultType || 'text/vnd.tiddlywiki']\\n    }\\n    if (!Parser) {\\n      return null\\n    }\\n    // Return the parser instance\\n    return new Parser(type, text, {\\n      parseAsInline: options.parseAsInline,\\n      wiki: this,\\n      _canonical_uri: options._canonical_uri,\\n      tiddler: options.tiddler\\n    })\\n  }\\n\\n  /*\\n   * Parse a tiddler according to its MIME type\\n   */\\n  exports.parseTiddler = function (title, options) {\\n    options = $tw.utils.extend({}, options)\\n    var cacheType = options.parseAsInline ? 'inlineParseTree' : 'blockParseTree'\\n    var tiddler = this.getTiddler(title)\\n    var self = this\\n    return tiddler\\n      ? this.getCacheForTiddler(title, cacheType, function () {\\n          if (tiddler.hasField('_canonical_uri')) {\\n            options._canonical_uri = tiddler.fields._canonical_uri\\n          }\\n          options.tiddler = tiddler\\n          return self.parseText(\\n            tiddler.fields.type,\\n            tiddler.fields.text,\\n            options\\n          )\\n        })\\n      : null\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"wikimethod\"\n        },\n        \"$:/core/modules/macros/infosaver.js\": {\n            \"title\": \"$:/core/modules/macros/infosaver.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/macros/infosaver.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: macro\\n\\nDisplay saver info name\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Information about this macro\\n   */\\n  exports.name = 'infosaver'\\n\\n  exports.params = [{ name: 'tiddler' }]\\n\\n  /*\\n   * Run the macro\\n   */\\n  exports.run = function (tiddler) {\\n    return $tw.saverHandler.getSaver(tiddler).module.info.name\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/core/modules/parsers/audioparser.js\": {\n            \"title\": \"$:/core/modules/parsers/audioparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/audioparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe audio parser parses an audio tiddler into an embeddable HTML element\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  var name = 'ipfs-audioparser'\\n\\n  var AudioParser = function (type, text, options) {\\n    var value = `data:${type};base64,`\\n    var element = {\\n      type: 'element',\\n      tag: 'audio',\\n      attributes: {\\n        controls: { type: 'string', value: 'controls' },\\n        style: { type: 'string', value: 'width: 100%; object-fit: contain' }\\n      }\\n    }\\n    if (\\n      $tw.browser &&\\n      options.tiddler !== undefined &&\\n      options.tiddler !== null\\n    ) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri =\\n        canonicalUri === undefined ||\\n        canonicalUri == null ||\\n        canonicalUri.trim() === ''\\n          ? null\\n          : canonicalUri.trim()\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password =\\n          password === undefined || password == null || password.trim() === ''\\n            ? null\\n            : password.trim()\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url =\\n              resolvedUrl !== null\\n                ? resolvedUrl.toString()\\n                : normalizedUrl !== null\\n                ? normalizedUrl.toString()\\n                : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToBase64(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.src = {\\n                      type: 'string',\\n                      value: `${value}${data}`\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(\\n                      options.tiddler\\n                    )\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        element.attributes.src = { type: 'string', value: `${value}${text}` }\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['audio/ogg'] = AudioParser\\n  exports['audio/mpeg'] = AudioParser\\n  exports['audio/mp3'] = AudioParser\\n  exports['audio/mp4'] = AudioParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/binaryparser.js\": {\n            \"title\": \"$:/core/modules/parsers/binaryparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/binaryparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe binary parser parses a binary tiddler into a warning message and download link\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n  const name = 'ipfs-binaryparser'\\n\\n  var BINARY_WARNING_MESSAGE = '$:/core/ui/BinaryWarning'\\n  var EXPORT_BUTTON_IMAGE = '$:/core/images/export-button'\\n\\n  var BinaryParser = function (type, text, options) {\\n    var self = this\\n    var value = `data:${type};base64,`\\n    // Transclude the binary data tiddler warning message\\n    var warn = {\\n      type: 'element',\\n      tag: 'p',\\n      children: [\\n        {\\n          type: 'transclude',\\n          attributes: {\\n            tiddler: { type: 'string', value: BINARY_WARNING_MESSAGE }\\n          }\\n        }\\n      ]\\n    }\\n    // Create download link based on binary tiddler title\\n    var link = {\\n      type: 'element',\\n      tag: 'a',\\n      attributes: {\\n        title: { type: 'indirect', textReference: '!!title' },\\n        download: { type: 'indirect', textReference: '!!title' }\\n      },\\n      children: [\\n        {\\n          type: 'transclude',\\n          attributes: {\\n            tiddler: { type: 'string', value: EXPORT_BUTTON_IMAGE }\\n          }\\n        }\\n      ]\\n    }\\n    if (\\n      $tw.browser &&\\n      options.tiddler !== undefined &&\\n      options.tiddler !== null\\n    ) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri =\\n        canonicalUri === undefined ||\\n        canonicalUri == null ||\\n        canonicalUri.trim() === ''\\n          ? null\\n          : canonicalUri.trim()\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password =\\n          password === undefined || password == null || password.trim() === ''\\n            ? null\\n            : password.trim()\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url =\\n              resolvedUrl !== null\\n                ? resolvedUrl.toString()\\n                : normalizedUrl !== null\\n                ? normalizedUrl.toString()\\n                : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToBase64(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    link.attributes.href = {\\n                      type: 'string',\\n                      value: `${value}${data}`\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(\\n                      options.tiddler\\n                    )\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        link.attributes.href = {\\n          type: 'string',\\n          value: `${value}${text}`\\n        }\\n      }\\n    }\\n    // Combine warning message and download link in a div\\n    var element = {\\n      type: 'element',\\n      tag: 'div',\\n      attributes: {\\n        class: { type: 'string', value: 'tc-binary-warning' }\\n      },\\n      children: [warn, link]\\n    }\\n    this.tree = [element]\\n  }\\n\\n  exports['application/octet-stream'] = BinaryParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/csvparser.js\": {\n            \"title\": \"$:/core/modules/parsers/csvparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/csvparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe CSV text parser processes CSV files into a table wrapped in a scrollable widget\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var CsvParser = function (type, text, options) {\\n    var self = this\\n    // Table framework\\n    this.tree = [\\n      {\\n        type: 'scrollable',\\n        children: [\\n          {\\n            type: 'element',\\n            tag: 'table',\\n            children: [\\n              {\\n                type: 'element',\\n                tag: 'tbody',\\n                children: []\\n              }\\n            ],\\n            attributes: {\\n              class: { type: 'string', value: 'tc-csv-table' }\\n            }\\n          }\\n        ]\\n      }\\n    ]\\n    if (\\n      $tw.browser &&\\n      options.tiddler !== undefined &&\\n      options.tiddler !== null\\n    ) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri =\\n        canonicalUri === undefined ||\\n        canonicalUri == null ||\\n        canonicalUri.trim() === ''\\n          ? null\\n          : canonicalUri.trim()\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password =\\n          password === undefined || password == null || password.trim() === ''\\n            ? null\\n            : password.trim()\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url =\\n              resolvedUrl !== null\\n                ? resolvedUrl.toString()\\n                : normalizedUrl !== null\\n                ? normalizedUrl.toString()\\n                : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToUtf8(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    self.split(data)\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(\\n                      options.tiddler\\n                    )\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        this.split(text)\\n      }\\n    }\\n  }\\n\\n  CsvParser.prototype.split = function (text) {\\n    // Split the text into lines\\n    var lines = text.split(/\\\\r?\\\\n/gm)\\n    var tag = 'th'\\n    for (var line = 0; line < lines.length; line++) {\\n      var lineText = lines[line]\\n      if (lineText) {\\n        var row = {\\n          type: 'element',\\n          tag: 'tr',\\n          children: []\\n        }\\n        var columns = lineText.split(',')\\n        for (var column = 0; column < columns.length; column++) {\\n          row.children.push({\\n            type: 'element',\\n            tag: tag,\\n            children: [\\n              {\\n                type: 'text',\\n                text: columns[column]\\n              }\\n            ]\\n          })\\n        }\\n        tag = 'td'\\n        this.tree[0].children[0].children[0].children.push(row)\\n      }\\n    }\\n  }\\n\\n  exports['text/csv'] = CsvParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/htmlparser.js\": {\n            \"title\": \"$:/core/modules/parsers/htmlparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/htmlparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe HTML parser displays text as raw HTML\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*eslint no-unused-vars: \\\"off\\\"*/\\n  const name = 'ipfs-htmlparser'\\n\\n  var HtmlParser = function (type, text, options) {\\n    var self = this\\n    var value = 'data:text/html;charset=utf-8,'\\n    var src\\n    if (\\n      $tw.browser &&\\n      options.tiddler !== undefined &&\\n      options.tiddler !== null\\n    ) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri =\\n        canonicalUri === undefined ||\\n        canonicalUri == null ||\\n        canonicalUri.trim() === ''\\n          ? null\\n          : canonicalUri.trim()\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password =\\n          password === undefined || password == null || password.trim() === ''\\n            ? null\\n            : password.trim()\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url =\\n              resolvedUrl !== null\\n                ? resolvedUrl.toString()\\n                : normalizedUrl !== null\\n                ? normalizedUrl.toString()\\n                : null\\n            if (url !== null) {\\n              src = url\\n              var parsedTiddler = $tw.utils.getChangedTiddler(options.tiddler)\\n              $tw.rootWidget.refresh(parsedTiddler)\\n            }\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToUtf8(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    src = value + encodeURIComponent(data)\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(\\n                      options.tiddler\\n                    )\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        src = value + encodeURIComponent(text)\\n      }\\n    }\\n    this.tree = [\\n      {\\n        type: 'element',\\n        tag: 'iframe',\\n        attributes: {\\n          src: { type: 'string', value: src },\\n          sandbox: { type: 'string', value: '' }\\n        }\\n      }\\n    ]\\n  }\\n\\n  exports['text/html'] = HtmlParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/imageparser.js\": {\n            \"title\": \"$:/core/modules/parsers/imageparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/imageparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe image parser parses an image into an embeddable HTML element\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  var name = 'ipfs-imageparser'\\n\\n  var ImageParser = function (type, text, options) {\\n    var value = `data:${type};base64,`\\n    var element = {\\n      type: 'element',\\n      tag: 'img',\\n      attributes: {}\\n    }\\n    if (\\n      $tw.browser &&\\n      options.tiddler !== undefined &&\\n      options.tiddler !== null\\n    ) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri =\\n        canonicalUri === undefined ||\\n        canonicalUri == null ||\\n        canonicalUri.trim() === ''\\n          ? null\\n          : canonicalUri.trim()\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password =\\n          password === undefined || password == null || password.trim() === ''\\n            ? null\\n            : password.trim()\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url =\\n              resolvedUrl !== null\\n                ? resolvedUrl.toString()\\n                : normalizedUrl !== null\\n                ? normalizedUrl.toString()\\n                : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToBase64(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.src = {\\n                      type: 'string',\\n                      value: `${value}${data}`\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(\\n                      options.tiddler\\n                    )\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        element.attributes.src = { type: 'string', value: `${value}${text}` }\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['image/gif'] = ImageParser\\n  exports['image/heic'] = ImageParser\\n  exports['image/heif'] = ImageParser\\n  exports['image/jpeg'] = ImageParser\\n  exports['image/jpg'] = ImageParser\\n  exports['image/png'] = ImageParser\\n  exports['image/webp'] = ImageParser\\n  exports['image/x-icon'] = ImageParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/pdfparser.js\": {\n            \"title\": \"$:/core/modules/parsers/pdfparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/pdfparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe PDF parser embeds a PDF viewer\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const name = 'ipfs-pdfparser'\\n\\n  var PdfParser = function (type, text, options) {\\n    var value = 'data:application/pdf;base64,'\\n    var element = {\\n      type: 'element',\\n      tag: 'embed',\\n      attributes: {}\\n    }\\n    if (\\n      $tw.browser &&\\n      options.tiddler !== undefined &&\\n      options.tiddler !== null\\n    ) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri =\\n        canonicalUri === undefined ||\\n        canonicalUri == null ||\\n        canonicalUri.trim() === ''\\n          ? null\\n          : canonicalUri.trim()\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password =\\n          password === undefined || password == null || password.trim() === ''\\n            ? null\\n            : password.trim()\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url =\\n              resolvedUrl !== null\\n                ? resolvedUrl.toString()\\n                : normalizedUrl !== null\\n                ? normalizedUrl.toString()\\n                : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToBase64(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.src = {\\n                      type: 'string',\\n                      value: `${value}${data}`\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(\\n                      options.tiddler\\n                    )\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        element.attributes.src = { type: 'string', value: `${value}${text}` }\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['application/pdf'] = PdfParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/svgparser.js\": {\n            \"title\": \"$:/core/modules/parsers/svgparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/svgparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe image parser parses an image into an embeddable HTML element\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const name = 'ipfs-svgparser'\\n\\n  var SvgParser = function (type, text, options) {\\n    var value = 'data:image/svg+xml,'\\n    var element = {\\n      type: 'element',\\n      tag: 'img',\\n      attributes: {}\\n    }\\n    if (\\n      $tw.browser &&\\n      options.tiddler !== undefined &&\\n      options.tiddler !== null\\n    ) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri =\\n        canonicalUri === undefined ||\\n        canonicalUri == null ||\\n        canonicalUri.trim() === ''\\n          ? null\\n          : canonicalUri.trim()\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password =\\n          password === undefined || password == null || password.trim() === ''\\n            ? null\\n            : password.trim()\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url =\\n              resolvedUrl !== null\\n                ? resolvedUrl.toString()\\n                : normalizedUrl !== null\\n                ? normalizedUrl.toString()\\n                : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToUtf8(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.src = {\\n                      type: 'string',\\n                      value: value + encodeURIComponent(data)\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(\\n                      options.tiddler\\n                    )\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else {\\n        element.attributes.src = {\\n          type: 'string',\\n          value: value + encodeURIComponent(text)\\n        }\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['image/svg+xml'] = SvgParser\\n  exports['.svg'] = SvgParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/textparser.js\": {\n            \"title\": \"$:/core/modules/parsers/textparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/textparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe plain text parser processes blocks of source text into a degenerate parse tree consisting of a single text node\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var TextParser = function (type, text, options) {\\n    var element = {\\n      type: 'codeblock',\\n      attributes: {\\n        code: { type: 'string', value: text },\\n        language: { type: 'string', value: type }\\n      }\\n    }\\n    if (\\n      $tw.browser &&\\n      options.tiddler !== undefined &&\\n      options.tiddler !== null\\n    ) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri =\\n        canonicalUri === undefined ||\\n        canonicalUri == null ||\\n        canonicalUri.trim() === ''\\n          ? null\\n          : canonicalUri.trim()\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password =\\n          password === undefined || password == null || password.trim() === ''\\n            ? null\\n            : password.trim()\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url =\\n              resolvedUrl !== null\\n                ? resolvedUrl.toString()\\n                : normalizedUrl !== null\\n                ? normalizedUrl.toString()\\n                : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToUtf8(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.code.value = data\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(\\n                      options.tiddler\\n                    )\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        element.attributes.code.value = text\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['application/javascript'] = TextParser\\n  exports['application/json'] = TextParser\\n  exports['application/x-tiddler-dictionary'] = TextParser\\n  exports['text/css'] = TextParser\\n  exports['text/plain'] = TextParser\\n  exports['text/x-tiddlywiki'] = TextParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/videoparser.js\": {\n            \"title\": \"$:/core/modules/parsers/videoparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/videoparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nThe video parser parses a video tiddler into an embeddable HTML element\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const name = 'ipfs-videoparser'\\n\\n  var VideoParser = function (type, text, options) {\\n    var value = `data:${type};base64,`\\n    var element = {\\n      type: 'element',\\n      tag: 'video',\\n      attributes: {\\n        controls: { type: 'string', value: 'controls' },\\n        style: { type: 'string', value: 'width: 100%; object-fit: contain' }\\n      }\\n    }\\n    if (\\n      $tw.browser &&\\n      options.tiddler !== undefined &&\\n      options.tiddler !== null\\n    ) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri =\\n        canonicalUri === undefined ||\\n        canonicalUri == null ||\\n        canonicalUri.trim() === ''\\n          ? null\\n          : canonicalUri.trim()\\n      if (canonicalUri !== null) {\\n        var password = options.tiddler.fields._password\\n        password =\\n          password === undefined || password == null || password.trim() === ''\\n            ? null\\n            : password.trim()\\n        $tw.ipfs\\n          .resolveUrl(false, true, canonicalUri)\\n          .then(data => {\\n            var { normalizedUrl, resolvedUrl } = data\\n            var url =\\n              resolvedUrl !== null\\n                ? resolvedUrl.toString()\\n                : normalizedUrl !== null\\n                ? normalizedUrl.toString()\\n                : null\\n            if (url !== null) {\\n              $tw.ipfs\\n                .loadToBase64(url, password)\\n                .then(data => {\\n                  if (data) {\\n                    element.attributes.src = {\\n                      type: 'string',\\n                      value: `${value}${data}`\\n                    }\\n                    var parsedTiddler = $tw.utils.getChangedTiddler(\\n                      options.tiddler\\n                    )\\n                    $tw.rootWidget.refresh(parsedTiddler)\\n                  }\\n                })\\n                .catch(error => {\\n                  $tw.ipfs.getLogger().error(error)\\n                  $tw.utils.alert(name, error.message)\\n                })\\n            }\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n          })\\n      } else if (text) {\\n        element.attributes.src = { type: 'string', value: `${value}${text}` }\\n      }\\n    }\\n    // Return the parsed tree\\n    this.tree = [element]\\n  }\\n\\n  exports['video/mp4'] = VideoParser\\n  exports['video/ogg'] = VideoParser\\n  exports['video/quicktime'] = VideoParser\\n  exports['video/webm'] = VideoParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/parsers/wikiparser/wikiparser.js\": {\n            \"title\": \"$:/core/modules/parsers/wikiparser/wikiparser.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/parsers/wikiparser/wikiparser.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: parser\\n\\nwikiparser\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2020, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const IpfsImport = require('$:/plugins/ipfs/ipfs-import.js').IpfsImport\\n\\n  var name = 'ipfs-wikiparser'\\n\\n  var WikiParser = function (type, text, options) {\\n    this.wiki = options.wiki\\n    // Check for an externally linked tiddler\\n    if (\\n      $tw.browser &&\\n      (text || '') === '' &&\\n      options.tiddler !== undefined &&\\n      options.tiddler !== null\\n    ) {\\n      var canonicalUri = options.tiddler.fields._canonical_uri\\n      canonicalUri =\\n        canonicalUri === undefined ||\\n        canonicalUri == null ||\\n        canonicalUri.trim() === ''\\n          ? null\\n          : canonicalUri.trim()\\n      var importUri = options.tiddler.fields._import_uri\\n      importUri =\\n        importUri === undefined || importUri == null || importUri.trim() === ''\\n          ? null\\n          : importUri.trim()\\n      if (canonicalUri !== null || importUri !== null) {\\n        var ipfsImport = new IpfsImport()\\n        ipfsImport\\n          .import(canonicalUri, importUri, options.tiddler)\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n            $tw.utils.alert(name, error.message)\\n          })\\n        text = $tw.language.getRawString('LazyLoadingWarning')\\n      }\\n    }\\n    // Initialise the classes if we don't have them already\\n    if (!this.pragmaRuleClasses) {\\n      WikiParser.prototype.pragmaRuleClasses = $tw.modules.createClassesFromModules(\\n        'wikirule',\\n        'pragma',\\n        $tw.WikiRuleBase\\n      )\\n      this.setupRules(\\n        WikiParser.prototype.pragmaRuleClasses,\\n        '$:/config/WikiParserRules/Pragmas/'\\n      )\\n    }\\n    if (!this.blockRuleClasses) {\\n      WikiParser.prototype.blockRuleClasses = $tw.modules.createClassesFromModules(\\n        'wikirule',\\n        'block',\\n        $tw.WikiRuleBase\\n      )\\n      this.setupRules(\\n        WikiParser.prototype.blockRuleClasses,\\n        '$:/config/WikiParserRules/Block/'\\n      )\\n    }\\n    if (!this.inlineRuleClasses) {\\n      WikiParser.prototype.inlineRuleClasses = $tw.modules.createClassesFromModules(\\n        'wikirule',\\n        'inline',\\n        $tw.WikiRuleBase\\n      )\\n      this.setupRules(\\n        WikiParser.prototype.inlineRuleClasses,\\n        '$:/config/WikiParserRules/Inline/'\\n      )\\n    }\\n    // Save the parse text\\n    this.type = type || 'text/vnd.tiddlywiki'\\n    this.source = text || ''\\n    this.sourceLength = this.source.length\\n    // Flag for ignoring whitespace\\n    this.configTrimWhiteSpace = false\\n    // Set current parse position\\n    this.pos = 0\\n    // Instantiate the pragma parse rules\\n    this.pragmaRules = this.instantiateRules(\\n      this.pragmaRuleClasses,\\n      'pragma',\\n      0\\n    )\\n    // Instantiate the parser block and inline rules\\n    this.blockRules = this.instantiateRules(this.blockRuleClasses, 'block', 0)\\n    this.inlineRules = this.instantiateRules(\\n      this.inlineRuleClasses,\\n      'inline',\\n      0\\n    )\\n    // Parse any pragmas\\n    this.tree = []\\n    var topBranch = this.parsePragmas()\\n    // Parse the text into inline runs or blocks\\n    if (options.parseAsInline) {\\n      topBranch.push.apply(topBranch, this.parseInlineRun())\\n    } else {\\n      topBranch.push.apply(topBranch, this.parseBlocks())\\n    }\\n    // Return the parsed tree\\n  }\\n\\n  /*\\n   */\\n  WikiParser.prototype.setupRules = function (proto, configPrefix) {\\n    var self = this\\n    if (!$tw.safemode) {\\n      $tw.utils.each(proto, function (object, name) {\\n        if (\\n          self.wiki.getTiddlerText(configPrefix + name, 'enable') !== 'enable'\\n        ) {\\n          delete proto[name]\\n        }\\n      })\\n    }\\n  }\\n\\n  /*\\nInstantiate an array of parse rules\\n*/\\n  WikiParser.prototype.instantiateRules = function (classes, type, startPos) {\\n    var rulesInfo = []\\n    var self = this\\n    $tw.utils.each(classes, function (RuleClass) {\\n      // Instantiate the rule\\n      var rule = new RuleClass(self)\\n      rule.is = {}\\n      rule.is[type] = true\\n      rule.init(self)\\n      var matchIndex = rule.findNextMatch(startPos)\\n      if (matchIndex !== undefined) {\\n        rulesInfo.push({\\n          rule: rule,\\n          matchIndex: matchIndex\\n        })\\n      }\\n    })\\n    return rulesInfo\\n  }\\n\\n  /*\\nSkip any whitespace at the current position. Options are:\\n  treatNewlinesAsNonWhitespace: true if newlines are NOT to be treated as whitespace\\n*/\\n  WikiParser.prototype.skipWhitespace = function (options) {\\n    options = options || {}\\n    var whitespaceRegExp = options.treatNewlinesAsNonWhitespace\\n      ? /([^\\\\S\\\\n]+)/gm\\n      : /(\\\\s+)/gm\\n    whitespaceRegExp.lastIndex = this.pos\\n    var whitespaceMatch = whitespaceRegExp.exec(this.source)\\n    if (whitespaceMatch && whitespaceMatch.index === this.pos) {\\n      this.pos = whitespaceRegExp.lastIndex\\n    }\\n  }\\n\\n  /*\\nGet the next match out of an array of parse rule instances\\n*/\\n  WikiParser.prototype.findNextMatch = function (rules, startPos) {\\n    // Find the best matching rule by finding the closest match position\\n    var matchingRule\\n    var matchingRulePos = this.sourceLength\\n    // Step through each rule\\n    for (var t = 0; t < rules.length; t++) {\\n      var ruleInfo = rules[t]\\n      // Ask the rule to get the next match if we've moved past the current one\\n      if (ruleInfo.matchIndex !== undefined && ruleInfo.matchIndex < startPos) {\\n        ruleInfo.matchIndex = ruleInfo.rule.findNextMatch(startPos)\\n      }\\n      // Adopt this match if it's closer than the current best match\\n      if (\\n        ruleInfo.matchIndex !== undefined &&\\n        ruleInfo.matchIndex <= matchingRulePos\\n      ) {\\n        matchingRule = ruleInfo\\n        matchingRulePos = ruleInfo.matchIndex\\n      }\\n    }\\n    return matchingRule\\n  }\\n\\n  /*\\nParse any pragmas at the beginning of a block of parse text\\n*/\\n  WikiParser.prototype.parsePragmas = function () {\\n    var currentTreeBranch = this.tree\\n    while (true) {\\n      // Skip whitespace\\n      this.skipWhitespace()\\n      // Check for the end of the text\\n      if (this.pos >= this.sourceLength) {\\n        break\\n      }\\n      // Check if we've arrived at a pragma rule match\\n      var nextMatch = this.findNextMatch(this.pragmaRules, this.pos)\\n      // If not, just exit\\n      if (!nextMatch || nextMatch.matchIndex !== this.pos) {\\n        break\\n      }\\n      // Process the pragma rule\\n      var subTree = nextMatch.rule.parse()\\n      if (subTree.length > 0) {\\n        // Quick hack; we only cope with a single parse tree node being returned, which is true at the moment\\n        currentTreeBranch.push.apply(currentTreeBranch, subTree)\\n        subTree[0].children = []\\n        currentTreeBranch = subTree[0].children\\n      }\\n    }\\n    return currentTreeBranch\\n  }\\n\\n  /*\\nParse a block from the current position\\n  terminatorRegExpString: optional regular expression string that identifies the end of plain paragraphs. Must not include capturing parenthesis\\n*/\\n  WikiParser.prototype.parseBlock = function (terminatorRegExpString) {\\n    var terminatorRegExp = terminatorRegExpString\\n      ? new RegExp('(' + terminatorRegExpString + '|\\\\\\\\r?\\\\\\\\n\\\\\\\\r?\\\\\\\\n)', 'gm')\\n      : /(\\\\r?\\\\n\\\\r?\\\\n)/gm\\n    this.skipWhitespace()\\n    if (this.pos >= this.sourceLength) {\\n      return []\\n    }\\n    // Look for a block rule that applies at the current position\\n    var nextMatch = this.findNextMatch(this.blockRules, this.pos)\\n    if (nextMatch && nextMatch.matchIndex === this.pos) {\\n      return nextMatch.rule.parse()\\n    }\\n    // Treat it as a paragraph if we didn't find a block rule\\n    return [\\n      {\\n        type: 'element',\\n        tag: 'p',\\n        children: this.parseInlineRun(terminatorRegExp)\\n      }\\n    ]\\n  }\\n\\n  /*\\nParse a series of blocks of text until a terminating regexp is encountered or the end of the text\\n  terminatorRegExpString: terminating regular expression\\n*/\\n  WikiParser.prototype.parseBlocks = function (terminatorRegExpString) {\\n    if (terminatorRegExpString) {\\n      return this.parseBlocksTerminated(terminatorRegExpString)\\n    } else {\\n      return this.parseBlocksUnterminated()\\n    }\\n  }\\n\\n  /*\\nParse a block from the current position to the end of the text\\n*/\\n  WikiParser.prototype.parseBlocksUnterminated = function () {\\n    var tree = []\\n    while (this.pos < this.sourceLength) {\\n      tree.push.apply(tree, this.parseBlock())\\n    }\\n    return tree\\n  }\\n\\n  /*\\nParse blocks of text until a terminating regexp is encountered\\n*/\\n  WikiParser.prototype.parseBlocksTerminated = function (\\n    terminatorRegExpString\\n  ) {\\n    var terminatorRegExp = new RegExp('(' + terminatorRegExpString + ')', 'gm')\\n    var tree = []\\n    // Skip any whitespace\\n    this.skipWhitespace()\\n    //  Check if we've got the end marker\\n    terminatorRegExp.lastIndex = this.pos\\n    var match = terminatorRegExp.exec(this.source)\\n    // Parse the text into blocks\\n    while (\\n      this.pos < this.sourceLength &&\\n      !(match && match.index === this.pos)\\n    ) {\\n      var blocks = this.parseBlock(terminatorRegExpString)\\n      tree.push.apply(tree, blocks)\\n      // Skip any whitespace\\n      this.skipWhitespace()\\n      //  Check if we've got the end marker\\n      terminatorRegExp.lastIndex = this.pos\\n      match = terminatorRegExp.exec(this.source)\\n    }\\n    if (match && match.index === this.pos) {\\n      this.pos = match.index + match[0].length\\n    }\\n    return tree\\n  }\\n\\n  /*\\nParse a run of text at the current position\\n  terminatorRegExp: a regexp at which to stop the run\\n  options: see below\\nOptions available:\\n  eatTerminator: move the parse position past any encountered terminator (default false)\\n*/\\n  WikiParser.prototype.parseInlineRun = function (terminatorRegExp, options) {\\n    if (terminatorRegExp) {\\n      return this.parseInlineRunTerminated(terminatorRegExp, options)\\n    } else {\\n      return this.parseInlineRunUnterminated(options)\\n    }\\n  }\\n\\n  WikiParser.prototype.parseInlineRunUnterminated = function (options) {\\n    var tree = []\\n    // Find the next occurrence of an inline rule\\n    var nextMatch = this.findNextMatch(this.inlineRules, this.pos)\\n    // Loop around the matches until we've reached the end of the text\\n    while (this.pos < this.sourceLength && nextMatch) {\\n      // Process the text preceding the run rule\\n      if (nextMatch.matchIndex > this.pos) {\\n        this.pushTextWidget(\\n          tree,\\n          this.source.substring(this.pos, nextMatch.matchIndex)\\n        )\\n        this.pos = nextMatch.matchIndex\\n      }\\n      // Process the run rule\\n      tree.push.apply(tree, nextMatch.rule.parse())\\n      // Look for the next run rule\\n      nextMatch = this.findNextMatch(this.inlineRules, this.pos)\\n    }\\n    // Process the remaining text\\n    if (this.pos < this.sourceLength) {\\n      this.pushTextWidget(tree, this.source.substr(this.pos))\\n    }\\n    this.pos = this.sourceLength\\n    return tree\\n  }\\n\\n  WikiParser.prototype.parseInlineRunTerminated = function (\\n    terminatorRegExp,\\n    options\\n  ) {\\n    options = options || {}\\n    var tree = []\\n    // Find the next occurrence of the terminator\\n    terminatorRegExp.lastIndex = this.pos\\n    var terminatorMatch = terminatorRegExp.exec(this.source)\\n    // Find the next occurrence of a inlinerule\\n    var inlineRuleMatch = this.findNextMatch(this.inlineRules, this.pos)\\n    // Loop around until we've reached the end of the text\\n    while (\\n      this.pos < this.sourceLength &&\\n      (terminatorMatch || inlineRuleMatch)\\n    ) {\\n      // Return if we've found the terminator, and it precedes any inline rule match\\n      if (terminatorMatch) {\\n        if (\\n          !inlineRuleMatch ||\\n          inlineRuleMatch.matchIndex >= terminatorMatch.index\\n        ) {\\n          if (terminatorMatch.index > this.pos) {\\n            this.pushTextWidget(\\n              tree,\\n              this.source.substring(this.pos, terminatorMatch.index)\\n            )\\n          }\\n          this.pos = terminatorMatch.index\\n          if (options.eatTerminator) {\\n            this.pos += terminatorMatch[0].length\\n          }\\n          return tree\\n        }\\n      }\\n      // Process any inline rule, along with the text preceding it\\n      if (inlineRuleMatch) {\\n        // Preceding text\\n        if (inlineRuleMatch.matchIndex > this.pos) {\\n          this.pushTextWidget(\\n            tree,\\n            this.source.substring(this.pos, inlineRuleMatch.matchIndex)\\n          )\\n          this.pos = inlineRuleMatch.matchIndex\\n        }\\n        // Process the inline rule\\n        tree.push.apply(tree, inlineRuleMatch.rule.parse())\\n        // Look for the next inline rule\\n        inlineRuleMatch = this.findNextMatch(this.inlineRules, this.pos)\\n        // Look for the next terminator match\\n        terminatorRegExp.lastIndex = this.pos\\n        terminatorMatch = terminatorRegExp.exec(this.source)\\n      }\\n    }\\n    // Process the remaining text\\n    if (this.pos < this.sourceLength) {\\n      this.pushTextWidget(tree, this.source.substr(this.pos))\\n    }\\n    this.pos = this.sourceLength\\n    return tree\\n  }\\n\\n  /*\\nPush a text widget onto an array, respecting the configTrimWhiteSpace setting\\n*/\\n  WikiParser.prototype.pushTextWidget = function (array, text) {\\n    if (this.configTrimWhiteSpace) {\\n      text = $tw.utils.trim(text)\\n    }\\n    if (text) {\\n      array.push({ type: 'text', text: text })\\n    }\\n  }\\n\\n  /*\\nParse zero or more class specifiers `.classname`\\n*/\\n  /*eslint no-useless-escape:\\\"off\\\"*/\\n  WikiParser.prototype.parseClasses = function () {\\n    var classRegExp = /\\\\.([^\\\\s\\\\.]+)/gm\\n    var classNames = []\\n    classRegExp.lastIndex = this.pos\\n    var match = classRegExp.exec(this.source)\\n    while (match && match.index === this.pos) {\\n      this.pos = match.index + match[0].length\\n      classNames.push(match[1])\\n      match = classRegExp.exec(this.source)\\n    }\\n    return classNames\\n  }\\n\\n  /*\\nAmend the rules used by this instance of the parser\\n  type: `only` keeps just the named rules, `except` keeps all but the named rules\\n  names: array of rule names\\n*/\\n  WikiParser.prototype.amendRules = function (type, names) {\\n    names = names || []\\n    // Define the filter function\\n    var keepFilter\\n    if (type === 'only') {\\n      keepFilter = function (name) {\\n        return names.indexOf(name) !== -1\\n      }\\n    } else if (type === 'except') {\\n      keepFilter = function (name) {\\n        return names.indexOf(name) === -1\\n      }\\n    } else {\\n      return\\n    }\\n    // Define a function to process each of our rule arrays\\n    var processRuleArray = function (ruleArray) {\\n      for (var t = ruleArray.length - 1; t >= 0; t--) {\\n        if (!keepFilter(ruleArray[t].rule.name)) {\\n          ruleArray.splice(t, 1)\\n        }\\n      }\\n    }\\n    // Process each rule array\\n    processRuleArray(this.pragmaRules)\\n    processRuleArray(this.blockRules)\\n    processRuleArray(this.inlineRules)\\n  }\\n\\n  exports['text/vnd.tiddlywiki'] = WikiParser\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"parser\"\n        },\n        \"$:/core/modules/saver-handler.js\": {\n            \"title\": \"$:/core/modules/saver-handler.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/saver-handler.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: global\\n\\nThe saver handler tracks changes to the store and handles saving the entire wiki via saver modules.\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\nInstantiate the saver handler with the following options:\\nwiki: wiki to be synced\\ndirtyTracking: true if dirty tracking should be performed\\n*/\\n  function SaverHandler (options) {\\n    var self = this\\n    this.wiki = options.wiki\\n    this.dirtyTracking = options.dirtyTracking\\n    this.preloadDirty = options.preloadDirty || []\\n    this.pendingAutoSave = false\\n    // Make a logger\\n    this.logger = new $tw.utils.Logger('saver-handler')\\n    // Initialise our savers\\n    if ($tw.browser) {\\n      this.initSavers()\\n    }\\n    // Only do dirty tracking if required\\n    if ($tw.browser && this.dirtyTracking) {\\n      // Compile the dirty tiddler filter\\n      this.filterFn = this.wiki.compileFilter(\\n        this.wiki.getTiddlerText(this.titleSyncFilter)\\n      )\\n      // Count of changes that have not yet been saved\\n      var filteredChanges = self.filterFn.call(self.wiki, function (iterator) {\\n        $tw.utils.each(self.preloadDirty, function (title) {\\n          var tiddler = self.wiki.getTiddler(title)\\n          iterator(tiddler, title)\\n        })\\n      })\\n      this.numChanges = filteredChanges.length\\n      // Listen out for changes to tiddlers\\n      this.wiki.addEventListener('change', async function (changes) {\\n        // Filter the changes so that we only count changes to tiddlers that we care about\\n        var filteredChanges = self.filterFn.call(self.wiki, function (\\n          iterator\\n        ) {\\n          $tw.utils.each(changes, function (change, title) {\\n            var tiddler = self.wiki.getTiddler(title)\\n            iterator(tiddler, title)\\n          })\\n        })\\n        // Adjust the number of changes\\n        self.numChanges += filteredChanges.length\\n        self.updateDirtyStatus()\\n        // Do any autosave if one is pending and there's no more change events\\n        if (\\n          self.pendingAutoSave &&\\n          self.wiki.getSizeOfTiddlerEventQueue() === 0\\n        ) {\\n          // Check if we're dirty\\n          if (self.numChanges > 0) {\\n            await self.saveWiki({\\n              method: 'autosave',\\n              downloadType: 'text/plain'\\n            })\\n          }\\n          self.pendingAutoSave = false\\n        }\\n      })\\n      // Listen for the autosave event\\n      $tw.rootWidget.addEventListener('tm-auto-save-wiki', async function (\\n        event\\n      ) {\\n        // Do the autosave unless there are outstanding tiddler change events\\n        if (self.wiki.getSizeOfTiddlerEventQueue() === 0) {\\n          // Check if we're dirty\\n          if (self.numChanges > 0) {\\n            await self.saveWiki({\\n              method: 'autosave',\\n              downloadType: 'text/plain'\\n            })\\n          }\\n        } else {\\n          // Otherwise put ourselves in the \\\"pending autosave\\\" state and wait for the change event before we do the autosave\\n          self.pendingAutoSave = true\\n        }\\n      })\\n      // Set up our beforeunload handler\\n      $tw.addUnloadTask(function (event) {\\n        var confirmationMessage\\n        if (self.isDirty()) {\\n          confirmationMessage = $tw.language.getString('UnsavedChangesWarning')\\n          event.returnValue = confirmationMessage // Gecko\\n        }\\n        return confirmationMessage\\n      })\\n    }\\n    // Install the save action handlers\\n    if ($tw.browser) {\\n      $tw.rootWidget.addEventListener('tm-save-wiki', async function (event) {\\n        await self.saveWiki({\\n          template: event.param,\\n          downloadType: 'text/plain',\\n          variables: event.paramObject\\n        })\\n      })\\n      $tw.rootWidget.addEventListener('tm-download-file', async function (\\n        event\\n      ) {\\n        await self.saveWiki({\\n          method: 'download',\\n          template: event.param,\\n          downloadType: 'text/plain',\\n          variables: event.paramObject\\n        })\\n      })\\n    }\\n  }\\n\\n  SaverHandler.prototype.titleSyncFilter = '$:/config/SaverFilter'\\n  SaverHandler.prototype.titleAutoSave = '$:/config/AutoSave'\\n  SaverHandler.prototype.titleSavedNotification =\\n    '$:/language/Notifications/Save/Done'\\n\\n  /*\\nSelect the appropriate saver modules and set them up\\n*/\\n  SaverHandler.prototype.initSavers = function (moduleType) {\\n    moduleType = moduleType || 'saver'\\n    // Instantiate the available savers\\n    this.savers = []\\n    var self = this\\n    $tw.modules.forEachModuleOfType(moduleType, function (title, module) {\\n      if (module.canSave(self)) {\\n        self.savers.push({ title: title, module: module.create(self.wiki) })\\n      }\\n    })\\n    // Sort savers\\n    this.sortSavers()\\n  }\\n\\n  /*\\n   * Sort the savers into priority order\\n   */\\n  SaverHandler.prototype.sortSavers = function () {\\n    this.savers.sort(function (a, b) {\\n      if (a.module.info.priority < b.module.info.priority) {\\n        return -1\\n      } else {\\n        if (a.module.info.priority > b.module.info.priority) {\\n          return +1\\n        } else {\\n          return 0\\n        }\\n      }\\n    })\\n  }\\n\\n  /*\\nSave the wiki contents. Options are:\\nmethod: \\\"save\\\", \\\"autosave\\\" or \\\"download\\\"\\ntemplate: the tiddler containing the template to save\\ndownloadType: the content type for the saved file\\n*/\\n  SaverHandler.prototype.saveWiki = async function (options) {\\n    options = options || {}\\n    var self = this\\n    var method = options.method || 'save'\\n    // Ignore autosave if disabled\\n    if (\\n      method === 'autosave' &&\\n      this.wiki.getTiddlerText(this.titleAutoSave, 'yes') !== 'yes'\\n    ) {\\n      return false\\n    }\\n    var variables = options.variables || {}\\n    var template = options.template || '$:/core/save/all'\\n    var downloadType = options.downloadType || 'text/plain'\\n    var text = this.wiki.renderTiddler(downloadType, template, options)\\n    var callback = function (err) {\\n      if (err) {\\n        alert($tw.language.getString('Error/WhileSaving') + ':\\\\n\\\\n' + err)\\n      } else {\\n        // Clear the task queue if we're saving (rather than downloading)\\n        if (method !== 'download') {\\n          self.numChanges = 0\\n          self.updateDirtyStatus()\\n        }\\n        $tw.notifier.display(self.titleSavedNotification)\\n        if (options.callback) {\\n          options.callback()\\n        }\\n      }\\n    }\\n    // Process preferred if any\\n    var ignorePreferred = null\\n    var preferredSaver = $tw.wiki.getTiddler('$:/config/PreferredSaver')\\n    if (preferredSaver !== undefined && preferredSaver !== null) {\\n      var title = preferredSaver.getFieldString('text')\\n      title =\\n        title === undefined || title == null || title.trim() === ''\\n          ? null\\n          : title.trim()\\n      if (title !== null) {\\n        var saver = this.getSaver(title)\\n        if (saver !== null && saver.module !== undefined) {\\n          if (\\n            await this.save(saver.module, method, variables, text, callback)\\n          ) {\\n            return true\\n          }\\n        }\\n        ignorePreferred = title\\n      }\\n    }\\n\\n    // Call the highest priority saver that supports this method\\n    for (var t = this.savers.length - 1; t >= 0; t--) {\\n      // Ignore failed preferred if any\\n      if (this.savers[t].title === ignorePreferred) {\\n        continue\\n      }\\n      // Process\\n      if (\\n        await this.save(\\n          this.savers[t].module,\\n          method,\\n          variables,\\n          text,\\n          callback\\n        )\\n      ) {\\n        return true\\n      }\\n    }\\n    return false\\n  }\\n\\n  SaverHandler.prototype.getSaver = function (title) {\\n    // Locate saver\\n    var saver = null\\n    for (var i = 0; i < this.savers.length; i++) {\\n      var current = this.savers[i]\\n      if (current.title === title) {\\n        saver = current\\n        break\\n      }\\n    }\\n    return saver\\n  }\\n\\n  SaverHandler.prototype.save = async function (\\n    saver,\\n    method,\\n    variables,\\n    text,\\n    callback\\n  ) {\\n    if (saver.info.capabilities.indexOf(method) !== -1) {\\n      var saved = await saver.save(text, method, callback, {\\n        variables: { filename: variables.filename }\\n      })\\n      if (saved) {\\n        this.logger.log(\\n          'Saved wiki with method',\\n          method,\\n          'through saver',\\n          saver.info.name\\n        )\\n        return true\\n      }\\n    }\\n    return false\\n  }\\n\\n  /*\\nChecks whether the wiki is dirty (ie the window shouldn't be closed)\\n*/\\n  SaverHandler.prototype.isDirty = function () {\\n    return this.numChanges > 0\\n  }\\n\\n  /*\\nUpdate the document body with the class \\\"tc-dirty\\\" if the wiki has unsaved/unsynced changes\\n*/\\n  SaverHandler.prototype.updateDirtyStatus = function () {\\n    if ($tw.browser) {\\n      $tw.utils.toggleClass(document.body, 'tc-dirty', this.isDirty())\\n    }\\n  }\\n\\n  exports.SaverHandler = SaverHandler\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"global\"\n        },\n        \"$:/core/modules/startup/compress.js\": {\n            \"title\": \"$:/core/modules/startup/compress.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/startup/compress.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: startup\\n\\nCompression handling\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  // Export name and synchronous status\\n  exports.name = 'compress'\\n  exports.platforms = ['browser']\\n  exports.after = ['startup']\\n  exports.synchronous = true\\n\\n  exports.startup = function () {\\n    // Ensure that $:/isCompressed is maintained properly\\n    $tw.wiki.addEventListener('change', function (changes) {\\n      if ($tw.utils.hop(changes, '$:/isCompressed')) {\\n        var tiddler = $tw.wiki.getTiddler('$:/isCompressed')\\n        $tw.compress.setCompressState(tiddler.fields.text)\\n      }\\n    })\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/core/modules/widgets/button.js\": {\n            \"title\": \"$:/core/modules/widgets/button.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/widgets/button.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: widget\\n\\nButton widget\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  var ButtonWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /*\\nInherit from the base widget class\\n*/\\n  ButtonWidget.prototype = new Widget()\\n\\n  /*\\nRender this widget into the DOM\\n*/\\n  ButtonWidget.prototype.render = function (parent, nextSibling) {\\n    var self = this\\n    // Remember parent\\n    this.parentDomNode = parent\\n    // Compute attributes and execute state\\n    this.computeAttributes()\\n    this.execute()\\n    // Create element\\n    var tag = 'button'\\n    if (\\n      this.buttonTag &&\\n      $tw.config.htmlUnsafeElements.indexOf(this.buttonTag) === -1\\n    ) {\\n      tag = this.buttonTag\\n    }\\n    var domNode = this.document.createElement(tag)\\n    // Assign classes\\n    var classes = this.class.split(' ') || []\\n    var isPoppedUp = (this.popup || this.popupTitle) && this.isPoppedUp()\\n    if (this.selectedClass) {\\n      if ((this.set || this.setTitle) && this.setTo && this.isSelected()) {\\n        $tw.utils.pushTop(classes, this.selectedClass.split(' '))\\n      }\\n      if (isPoppedUp) {\\n        $tw.utils.pushTop(classes, this.selectedClass.split(' '))\\n      }\\n    }\\n    if (isPoppedUp) {\\n      $tw.utils.pushTop(classes, 'tc-popup-handle')\\n    }\\n    domNode.className = classes.join(' ')\\n    // Assign other attributes\\n    if (this.style) {\\n      domNode.setAttribute('style', this.style)\\n    }\\n    if (this.tooltip) {\\n      domNode.setAttribute('title', this.tooltip)\\n    }\\n    if (this['aria-label']) {\\n      domNode.setAttribute('aria-label', this['aria-label'])\\n    }\\n    // Set the tabindex\\n    if (this.tabIndex) {\\n      domNode.setAttribute('tabindex', this.tabIndex)\\n    }\\n    // Add a click event handler\\n    domNode.addEventListener(\\n      'click',\\n      function (event) {\\n        var handled = false\\n        if (self.invokeActions(self, event)) {\\n          handled = true\\n        }\\n        if (self.to) {\\n          self.navigateTo(event)\\n          handled = true\\n        }\\n        if (self.message) {\\n          self.dispatchMessage(event)\\n          handled = true\\n        }\\n        if (self.popup || self.popupTitle) {\\n          self.triggerPopup(event)\\n          handled = true\\n        }\\n        if (self.set || self.setTitle) {\\n          self.setTiddler()\\n          handled = true\\n        }\\n        if (self.actions) {\\n          self.invokeActionString(self.actions, self, event)\\n        }\\n        if (handled) {\\n          event.preventDefault()\\n          event.stopPropagation()\\n        }\\n        return handled\\n      },\\n      false\\n    )\\n    // Make it draggable if required\\n    if (this.dragTiddler || this.dragFilter) {\\n      $tw.utils.makeDraggable({\\n        domNode: domNode,\\n        dragTiddlerFn: function () {\\n          return self.dragTiddler\\n        },\\n        dragFilterFn: function () {\\n          return self.dragFilter\\n        },\\n        widget: this\\n      })\\n    }\\n    // Insert element\\n    parent.insertBefore(domNode, nextSibling)\\n    this.renderChildren(domNode, null)\\n    this.domNodes.push(domNode)\\n  }\\n\\n  /*\\nWe don't allow actions to propagate because we trigger actions ourselves\\n*/\\n  ButtonWidget.prototype.allowActionPropagation = function () {\\n    return false\\n  }\\n\\n  ButtonWidget.prototype.getBoundingClientRect = function () {\\n    return this.domNodes[0].getBoundingClientRect()\\n  }\\n\\n  ButtonWidget.prototype.isSelected = function () {\\n    return this.setTitle\\n      ? (this.setField\\n          ? this.wiki\\n              .getTiddler(this.setTitle)\\n              .getFieldString(this.setField) === this.setTo\\n          : this.setIndex\\n          ? this.wiki.extractTiddlerDataItem(this.setTitle, this.setIndex) ===\\n            this.setTo\\n          : this.wiki.getTiddlerText(this.setTitle)) ||\\n          this.defaultSetValue ||\\n          this.getVariable('currentTiddler')\\n      : this.wiki.getTextReference(\\n          this.set,\\n          this.defaultSetValue,\\n          this.getVariable('currentTiddler')\\n        ) === this.setTo\\n  }\\n\\n  ButtonWidget.prototype.isPoppedUp = function () {\\n    var tiddler = this.popupTitle\\n      ? this.wiki.getTiddler(this.popupTitle)\\n      : this.wiki.getTiddler(this.popup)\\n    var result =\\n      tiddler && tiddler.fields.text\\n        ? $tw.popup.readPopupState(tiddler.fields.text)\\n        : false\\n    return result\\n  }\\n\\n  ButtonWidget.prototype.navigateTo = function (event) {\\n    var bounds = this.getBoundingClientRect()\\n    this.dispatchEvent({\\n      type: 'tm-navigate',\\n      navigateTo: this.to,\\n      navigateFromTitle: this.getVariable('storyTiddler'),\\n      navigateFromNode: this,\\n      navigateFromClientRect: {\\n        top: bounds.top,\\n        left: bounds.left,\\n        width: bounds.width,\\n        right: bounds.right,\\n        bottom: bounds.bottom,\\n        height: bounds.height\\n      },\\n      navigateSuppressNavigation:\\n        event.metaKey || event.ctrlKey || event.button === 1,\\n      event: event\\n    })\\n  }\\n\\n  ButtonWidget.prototype.dispatchMessage = function (event) {\\n    this.dispatchEvent({\\n      type: this.message,\\n      param: this.param,\\n      tiddlerTitle: this.getVariable('currentTiddler'),\\n      event: event\\n    })\\n  }\\n\\n  ButtonWidget.prototype.triggerPopup = function (event) {\\n    if (this.popupTitle) {\\n      $tw.popup.triggerPopup({\\n        domNode: this.domNodes[0],\\n        title: this.popupTitle,\\n        wiki: this.wiki,\\n        noStateReference: true\\n      })\\n    } else {\\n      $tw.popup.triggerPopup({\\n        domNode: this.domNodes[0],\\n        title: this.popup,\\n        wiki: this.wiki\\n      })\\n    }\\n  }\\n\\n  ButtonWidget.prototype.setTiddler = function () {\\n    if (this.setTitle) {\\n      this.setField\\n        ? this.wiki.setText(this.setTitle, this.setField, undefined, this.setTo)\\n        : this.setIndex\\n        ? this.wiki.setText(this.setTitle, undefined, this.setIndex, this.setTo)\\n        : this.wiki.setText(this.setTitle, 'text', undefined, this.setTo)\\n    } else {\\n      this.wiki.setTextReference(\\n        this.set,\\n        this.setTo,\\n        this.getVariable('currentTiddler')\\n      )\\n    }\\n  }\\n\\n  /*\\nCompute the internal state of the widget\\n*/\\n  ButtonWidget.prototype.execute = function () {\\n    // Get attributes\\n    this.actions = this.getAttribute('actions')\\n    this.to = this.getAttribute('to')\\n    this.message = this.getAttribute('message')\\n    this.param = this.getAttribute('param')\\n    this.set = this.getAttribute('set')\\n    this.setTo = this.getAttribute('setTo')\\n    this.popup = this.getAttribute('popup')\\n    this.hover = this.getAttribute('hover')\\n    this.class = this.getAttribute('class', '')\\n    this['aria-label'] = this.getAttribute('aria-label')\\n    this.tooltip = this.getAttribute('tooltip')\\n    this.style = this.getAttribute('style')\\n    this.selectedClass = this.getAttribute('selectedClass')\\n    this.defaultSetValue = this.getAttribute('default', '')\\n    this.buttonTag = this.getAttribute('tag')\\n    this.dragTiddler = this.getAttribute('dragTiddler')\\n    this.dragFilter = this.getAttribute('dragFilter')\\n    this.setTitle = this.getAttribute('setTitle')\\n    this.setField = this.getAttribute('setField')\\n    this.setIndex = this.getAttribute('setIndex')\\n    this.popupTitle = this.getAttribute('popupTitle')\\n    this.tabIndex = this.getAttribute('tabindex')\\n    // Make child widgets\\n    this.makeChildWidgets()\\n  }\\n\\n  /*\\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n*/\\n  ButtonWidget.prototype.refresh = function (changedTiddlers) {\\n    var changedAttributes = this.computeAttributes()\\n    if (\\n      changedAttributes.tooltip ||\\n      changedAttributes.actions ||\\n      changedAttributes.to ||\\n      changedAttributes.message ||\\n      changedAttributes.param ||\\n      changedAttributes.set ||\\n      changedAttributes.setTo ||\\n      changedAttributes.popup ||\\n      changedAttributes.hover ||\\n      changedAttributes.class ||\\n      changedAttributes.selectedClass ||\\n      changedAttributes.style ||\\n      changedAttributes.dragFilter ||\\n      changedAttributes.dragTiddler ||\\n      (this.set && changedTiddlers[this.set]) ||\\n      (this.popup && changedTiddlers[this.popup]) ||\\n      (this.popupTitle && changedTiddlers[this.popupTitle]) ||\\n      changedAttributes.setTitle ||\\n      changedAttributes.setField ||\\n      changedAttributes.setIndex ||\\n      changedAttributes.popupTitle\\n    ) {\\n      this.refreshSelf()\\n      return true\\n    }\\n    return this.refreshChildren(changedTiddlers)\\n  }\\n\\n  exports.button = ButtonWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/core/modules/widgets/compress.js\": {\n            \"title\": \"$:/core/modules/widgets/compress.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/widgets/compress.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: widget\\n\\nCompress widget\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node: true, browser: true */\\n  /*global $tw: false */\\n  'use strict'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  var CompressWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /*\\n   * Inherit from the base widget class\\n   */\\n  CompressWidget.prototype = new Widget()\\n\\n  /*\\n   * Render this widget into the DOM\\n   */\\n  CompressWidget.prototype.render = function (parent, nextSibling) {\\n    this.parentDomNode = parent\\n    this.computeAttributes()\\n    this.execute()\\n    var textNode = this.document.createTextNode(this.compressedText)\\n    parent.insertBefore(textNode, nextSibling)\\n    this.domNodes.push(textNode)\\n  }\\n\\n  /*\\n   * Compute the internal state of the widget\\n   */\\n  CompressWidget.prototype.execute = function () {\\n    // Get parameters from our attributes\\n    this.filter = this.getAttribute('filter', '[!is[system]]')\\n    // Compress the filtered tiddlers\\n    var tiddlers = this.wiki.filterTiddlers(this.filter)\\n    var json = {}\\n    var self = this\\n    $tw.utils.each(tiddlers, function (title) {\\n      var tiddler = self.wiki.getTiddler(title)\\n      var jsonTiddler = {}\\n      for (var f in tiddler.fields) {\\n        jsonTiddler[f] = tiddler.getFieldString(f)\\n      }\\n      json[title] = jsonTiddler\\n    })\\n    var content = JSON.stringify(json)\\n    content = { pako: $tw.compress.deflate(content) }\\n    var tiddler = $tw.wiki.getTiddler('$:/isEncrypted')\\n    if (tiddler && tiddler.fields.text === 'yes') {\\n      content.pako = $tw.crypto.encrypt(content.pako)\\n    }\\n    content = JSON.stringify(content)\\n    this.compressedText = $tw.utils.htmlEncode(content)\\n  }\\n\\n  /*\\n   * Selectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n   */\\n  CompressWidget.prototype.refresh = function (changedTiddlers) {\\n    // We don't need to worry about refreshing because the compress widget isn't for interactive use\\n    return false\\n  }\\n\\n  exports.compress = CompressWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/core/modules/widgets/image.js\": {\n            \"title\": \"$:/core/modules/widgets/image.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/core/modules/widgets/image.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: widget\\n\\nThe image widget displays an image referenced with an external URI or with a local tiddler title.\\n\\n```\\n<$image src=\\\"TiddlerTitle\\\" width=\\\"320\\\" height=\\\"400\\\" class=\\\"classnames\\\">\\n```\\n\\nThe image source can be the title of an existing tiddler or the URL of an external image.\\n\\nExternal images always generate an HTML `<img>` tag.\\n\\nTiddlers that have a _canonical_uri field generate an HTML `<img>` tag with the src attribute containing the URI.\\n\\nTiddlers that contain image data generate an HTML `<img>` tag with the src attribute containing a base64 representation of the image.\\n\\nTiddlers that contain wikitext could be rendered to a DIV of the usual size of a tiddler, and then transformed to the size requested.\\n\\nThe width and height attributes are interpreted as a number of pixels, and do not need to include the \\\"px\\\" suffix.\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  var name = 'ipfs-image'\\n\\n  var ImageWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /*\\nInherit from the base widget class\\n*/\\n  ImageWidget.prototype = new Widget()\\n\\n  /*\\nRender this widget into the DOM\\n*/\\n  ImageWidget.prototype.render = function (parent, nextSibling) {\\n    this.parentDomNode = parent\\n    this.computeAttributes()\\n    this.execute()\\n    // Create element\\n    // Determine what type of image it is\\n    var tiddler = this.wiki.getTiddler(this.imageSource)\\n    // Create default element\\n    var domNode = this.document.createElement('img')\\n    if (!tiddler) {\\n      // The source isn't the title of a tiddler, so we'll assume it's a URL\\n      domNode.setAttribute(\\n        'src',\\n        this.getVariable('tv-get-export-image-link', {\\n          params: [{ name: 'src', value: this.imageSource }],\\n          defaultValue: this.imageSource\\n        })\\n      )\\n    } else {\\n      // Check if it is an image tiddler\\n      if (this.wiki.isImageTiddler(this.imageSource)) {\\n        var type = tiddler.fields.type\\n        var text = tiddler.fields.text\\n        var canonicalUri = tiddler.fields._canonical_uri\\n        canonicalUri =\\n          canonicalUri === undefined ||\\n          canonicalUri == null ||\\n          canonicalUri.trim() === ''\\n            ? null\\n            : canonicalUri.trim()\\n        // If the tiddler has body text then it doesn't need to be lazily loaded\\n        if (text) {\\n          // Render the appropriate element for the image type\\n          switch (type) {\\n            case 'application/pdf':\\n              domNode = this.document.createElement('embed')\\n              domNode.setAttribute('src', 'data:application/pdf;base64,' + text)\\n              break\\n            case 'image/svg+xml':\\n              domNode.setAttribute(\\n                'src',\\n                'data:image/svg+xml,' + encodeURIComponent(text)\\n              )\\n              break\\n            default:\\n              domNode.setAttribute('src', 'data:' + type + ';base64,' + text)\\n              break\\n          }\\n        } else if (canonicalUri) {\\n          var password = tiddler.fields._password\\n          password =\\n            password === undefined || password == null || password.trim() === ''\\n              ? null\\n              : password.trim()\\n          $tw.ipfs\\n            .resolveUrl(false, true, canonicalUri)\\n            .then(data => {\\n              var { normalizedUrl, resolvedUrl } = data\\n              var url =\\n                resolvedUrl !== null\\n                  ? resolvedUrl.toString()\\n                  : normalizedUrl !== null\\n                  ? normalizedUrl.toString()\\n                  : null\\n              if (url !== null) {\\n                switch (type) {\\n                  case 'application/pdf':\\n                    domNode = this.document.createElement('embed')\\n                    $tw.ipfs\\n                      .loadToBase64(url, password)\\n                      .then(data => {\\n                        if (data !== undefined && data !== null) {\\n                          domNode.setAttribute(\\n                            'src',\\n                            'data:application/pdf;base64,' + data\\n                          )\\n                        }\\n                      })\\n                      .catch(error => {\\n                        $tw.ipfs.getLogger().error(error)\\n                        $tw.utils.alert(name, error.message)\\n                      })\\n                    break\\n                  case 'image/svg+xml':\\n                    $tw.ipfs\\n                      .loadToUtf8(url, password)\\n                      .then(data => {\\n                        if (data !== undefined && data !== null) {\\n                          domNode.setAttribute(\\n                            'src',\\n                            'data:image/svg+xml,' + encodeURIComponent(data)\\n                          )\\n                        }\\n                      })\\n                      .catch(error => {\\n                        $tw.ipfs.getLogger().error(error)\\n                        $tw.utils.alert(name, error.message)\\n                      })\\n                    break\\n                  default:\\n                    $tw.ipfs\\n                      .loadToBase64(url, password)\\n                      .then(data => {\\n                        if (data !== undefined && data !== null) {\\n                          domNode.setAttribute(\\n                            'src',\\n                            'data:' + type + ';base64,' + data\\n                          )\\n                        }\\n                      })\\n                      .catch(error => {\\n                        $tw.ipfs.getLogger().error(error)\\n                        $tw.utils.alert(name, error.message)\\n                      })\\n                    break\\n                }\\n              }\\n            })\\n            .catch(error => {\\n              $tw.ipfs.getLogger().error(error)\\n            })\\n        } else {\\n          // Just trigger loading of the tiddler\\n          this.wiki.getTiddlerText(this.imageSource)\\n          domNode.setAttribute('src', '')\\n        }\\n      }\\n    }\\n    // Assign the attributes\\n    if (this.imageClass) {\\n      domNode.setAttribute('class', this.imageClass)\\n    }\\n    if (this.imageWidth) {\\n      domNode.setAttribute('width', this.imageWidth)\\n    }\\n    if (this.imageHeight) {\\n      domNode.setAttribute('height', this.imageHeight)\\n    }\\n    if (this.imageTooltip) {\\n      domNode.setAttribute('title', this.imageTooltip)\\n    }\\n    if (this.imageAlt) {\\n      domNode.setAttribute('alt', this.imageAlt)\\n    }\\n    // Insert element\\n    parent.insertBefore(domNode, nextSibling)\\n    this.domNodes.push(domNode)\\n  }\\n\\n  /*\\nCompute the internal state of the widget\\n*/\\n  ImageWidget.prototype.execute = function () {\\n    // Get our parameters\\n    this.imageSource = this.getAttribute('source')\\n    this.imageWidth = this.getAttribute('width')\\n    this.imageHeight = this.getAttribute('height')\\n    this.imageClass = this.getAttribute('class')\\n    this.imageTooltip = this.getAttribute('tooltip')\\n    this.imageAlt = this.getAttribute('alt')\\n  }\\n\\n  /*\\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n*/\\n  ImageWidget.prototype.refresh = function (changedTiddlers) {\\n    var changedAttributes = this.computeAttributes()\\n    if (\\n      changedAttributes.source ||\\n      changedAttributes.width ||\\n      changedAttributes.height ||\\n      changedAttributes.class ||\\n      changedAttributes.tooltip ||\\n      changedTiddlers[this.imageSource]\\n    ) {\\n      this.refreshSelf()\\n      return true\\n    } else {\\n      return false\\n    }\\n  }\\n\\n  exports.image = ImageWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/core/templates/store.area.template.html\": {\n            \"title\": \"$:/core/templates/store.area.template.html\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"<$reveal type=\\\"nomatch\\\" state=\\\"$:/isCompressed\\\" text=\\\"yes\\\">\\n<$reveal type=\\\"nomatch\\\" state=\\\"$:/isEncrypted\\\" text=\\\"yes\\\">\\n`<div id=\\\"storeArea\\\" style=\\\"display:none;\\\">`\\n<$list filter=<<saveTiddlerFilter>> template=\\\"$:/core/templates/html-div-tiddler\\\"/>\\n<$list filter={{{ [<skinnySaveTiddlerFilter>] }}} template=\\\"$:/core/templates/html-div-skinny-tiddler\\\"/>\\n`</div>`\\n</$reveal>\\n<$reveal type=\\\"match\\\" state=\\\"$:/isEncrypted\\\" text=\\\"yes\\\">\\n`<!--~~ Encrypted tiddlers ~~-->`\\n`<pre id=\\\"encryptedStoreArea\\\" type=\\\"text/plain\\\" style=\\\"display:none;\\\">`\\n<$encrypt filter=<<saveTiddlerFilter>>/>\\n`</pre>`\\n</$reveal>\\n</$reveal>\\n<$reveal type=\\\"match\\\" state=\\\"$:/isCompressed\\\" text=\\\"yes\\\">\\n`<!--~~ Compressed tiddlers ~~-->`\\n`<pre id=\\\"compressedStoreArea\\\" type=\\\"text/plain\\\" style=\\\"display:none;\\\">`\\n<$compress filter=<<saveTiddlerFilter>>/>\\n`</pre>`\\n</$reveal>\"\n        },\n        \"$:/core/ui/ControlPanel/Saving/General\": {\n            \"title\": \"$:/core/ui/ControlPanel/Saving/General\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/ControlPanel/Saving\",\n            \"caption\": \"{{$:/language/ControlPanel/Saving/General/Caption}}\",\n            \"list-before\": \"\",\n            \"text\": \"\\\\define lingo-base() $:/language/ControlPanel/Settings/\\n\\n\\\\define preferred-saver()\\n<$text text=<<infosaver \\\"$(currentTiddler)$\\\">>/>\\n\\\\end\\n\\n{{$:/language/ControlPanel/Saving/General/Hint}}\\n\\n!! <$link to=\\\"$:/config/AutoSave\\\"><<lingo AutoSave/Caption>></$link>\\n\\n<<lingo AutoSave/Hint>>\\n\\n<$radio tiddler=\\\"$:/config/AutoSave\\\" value=\\\"yes\\\"> <<lingo AutoSave/Enabled/Description>> </$radio>\\n\\n<$radio tiddler=\\\"$:/config/AutoSave\\\" value=\\\"no\\\"> <<lingo AutoSave/Disabled/Description>> </$radio>\\n\\n!! <$link to=\\\"$:/isCompressed\\\"><<lingo Compression/Caption>></$link>\\n\\n<$checkbox tiddler=\\\"$:/isCompressed\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"> <<lingo Compression/Description>> </$checkbox>\\n\\n!! <$link to=\\\"$:/config/Standford\\\"><<lingo Encryption/Caption>></$link>\\n\\n<$radio tiddler=\\\"$:/config/Standford\\\" value=\\\"yes\\\"> <<lingo Encryption/Standford/Description>> </$radio>\\n\\n<$radio tiddler=\\\"$:/config/Standford\\\" value=\\\"no\\\"> <<lingo Encryption/Ethereum/Description>> </$radio>\\n\\n!! <$link to=\\\"$:/config/PreferredSaver\\\"><<lingo PreferredSaver/Caption>></$link>\\n\\n<$select tiddler=\\\"$:/config/PreferredSaver\\\">\\n<$list filter=\\\"[savers[]sort[]]\\\">\\n<option value=<<currentTiddler>>><<preferred-saver>></option>\\n</$list>\\n</$select>\"\n        },\n        \"$:/core/ui/ControlPanel/Toolbars/ItemTemplate\": {\n            \"title\": \"$:/core/ui/ControlPanel/Toolbars/ItemTemplate\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\\\\define config-title()\\n$(config-base)$$(currentTiddler)$\\n\\\\end\\n\\n<$draggable tiddler=<<currentTiddler>>>\\n<$checkbox tiddler=<<config-title>> field=\\\"text\\\" checked=\\\"show\\\" unchecked=\\\"hide\\\" default=\\\"show\\\"/> <span class=\\\"tc-icon-wrapper tc-icon-ipfs-wrapper\\\"> <$transclude field=\\\"caption\\\"/> <i class=\\\"tc-muted\\\">-- <$transclude field=\\\"description\\\"/></i></span>\\n</$draggable>\\n\"\n        },\n        \"$:/core/ui/EditTemplate/body\": {\n            \"title\": \"$:/core/ui/EditTemplate/body\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/EditTemplate\",\n            \"text\": \"\\\\define lingo-base() $:/language/EditTemplate/Body/\\n\\\\define config-visibility-title()\\n$:/config/EditorToolbarButtons/Visibility/$(currentTiddler)$\\n\\\\end\\n<$list filter=\\\"[all[current]has[_canonical_uri]]\\\">\\n\\n<div class=\\\"tc-message-box\\\">\\n\\n<<lingo External/Hint>>\\n\\n<p><$ipfslink field=\\\"_canonical_uri\\\" tiddler=<<currentTiddler>>/></p>\\n\\n</div>\\n\\n</$list>\\n\\n<$list filter=\\\"[all[current]!has[_canonical_uri]]\\\">\\n\\n<$reveal state=\\\"$:/state/showeditpreview\\\" type=\\\"match\\\" text=\\\"yes\\\">\\n\\n<div class=\\\"tc-tiddler-preview\\\">\\n\\n<$transclude tiddler=\\\"$:/core/ui/EditTemplate/body/editor\\\" mode=\\\"inline\\\"/>\\n\\n<div class=\\\"tc-tiddler-preview-preview\\\">\\n\\n<$transclude tiddler={{$:/state/editpreviewtype}} mode=\\\"inline\\\">\\n\\n<$transclude tiddler=\\\"$:/core/ui/EditTemplate/body/preview/output\\\" mode=\\\"inline\\\"/>\\n\\n</$transclude>\\n\\n</div>\\n\\n</div>\\n\\n</$reveal>\\n\\n<$reveal state=\\\"$:/state/showeditpreview\\\" type=\\\"nomatch\\\" text=\\\"yes\\\">\\n\\n<$transclude tiddler=\\\"$:/core/ui/EditTemplate/body/editor\\\" mode=\\\"inline\\\"/>\\n\\n</$reveal>\\n\\n</$list>\"\n        },\n        \"$:/core/ui/EditTemplate/fields\": {\n            \"title\": \"$:/core/ui/EditTemplate/fields\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/EditTemplate\",\n            \"text\": \"\\\\define lingo-base() $:/language/EditTemplate/\\n\\\\define config-title()\\n$:/config/EditTemplateFields/Visibility/$(currentField)$\\n\\\\end\\n\\n\\\\define config-filter()\\n[[hide]] -[title{$(config-title)$}]\\n\\\\end\\n\\n\\\\define current-tiddler-new-field-selector()\\n[data-tiddler-title=\\\"$(currentTiddlerCSSescaped)$\\\"] .tc-edit-field-add-name-wrapper input\\n\\\\end\\n\\n\\\\define new-field-actions()\\n<$action-sendmessage $message=\\\"tm-add-field\\\" $name={{{ [<newFieldNameTiddler>get[text]] }}} $value={{{ [<newFieldValueTiddler>get[text]] }}}/>\\n<$action-deletetiddler $tiddler=<<newFieldNameTiddler>>/>\\n<$action-deletetiddler $tiddler=<<newFieldValueTiddler>>/>\\n<$action-sendmessage $message=\\\"tm-focus-selector\\\" $param=<<current-tiddler-new-field-selector>>/>\\n\\\\end\\n\\n\\\\define new-field()\\n<$vars name={{{ [<newFieldNameTiddler>get[text]] }}}>\\n<$reveal type=\\\"nomatch\\\" text=\\\"\\\" default=<<name>>>\\n<$button tooltip=<<lingo Fields/Add/Button/Hint>>>\\n<$action-sendmessage $message=\\\"tm-add-field\\\"\\n$name=<<name>>\\n$value={{{ [<newFieldValueTiddler>get[text]] }}}/>\\n<$action-deletetiddler $tiddler=<<newFieldNameTiddler>>/>\\n<$action-deletetiddler $tiddler=<<newFieldValueTiddler>>/>\\n<<lingo Fields/Add/Button>>\\n</$button>\\n</$reveal>\\n<$reveal type=\\\"match\\\" text=\\\"\\\" default=<<name>>>\\n<$button>\\n<<lingo Fields/Add/Button>>\\n</$button>\\n</$reveal>\\n</$vars>\\n\\\\end\\n\\\\whitespace trim\\n\\n<div class=\\\"tc-edit-fields\\\">\\n<table class=\\\"tc-edit-fields\\\">\\n<tbody>\\n<$list filter=\\\"[all[current]fields[]] +[sort[title]]\\\" variable=\\\"currentField\\\" storyview=\\\"pop\\\">\\n<$list filter=<<config-filter>> variable=\\\"temp\\\">\\n<tr class=\\\"tc-edit-field\\\">\\n<td class=\\\"tc-edit-field-name\\\">\\n<$ipfslink value=<<currentField>> field=<<currentField>> tiddler=<<currentTiddler>>/>:</td>\\n<td class=\\\"tc-edit-field-value\\\">\\n<$edit-text tiddler=<<currentTiddler>> field=<<currentField>> placeholder={{$:/language/EditTemplate/Fields/Add/Value/Placeholder}} tabindex={{$:/config/EditTabIndex}} cancelPopups=\\\"yes\\\"/>\\n</td>\\n<td class=\\\"tc-edit-field-remove\\\">\\n<$button class=\\\"tc-btn-invisible\\\" tooltip={{$:/language/EditTemplate/Field/Remove/Hint}} aria-label={{$:/language/EditTemplate/Field/Remove/Caption}}>\\n<$action-deletefield $field=<<currentField>>/>\\n{{$:/core/images/delete-button}}\\n</$button>\\n</td>\\n</tr>\\n</$list>\\n</$list>\\n</tbody>\\n</table>\\n</div>\\n\\n<$fieldmangler>\\n<div class=\\\"tc-edit-field-add\\\">\\n<em class=\\\"tc-edit\\\">\\n<<lingo Fields/Add/Prompt>>&nbsp;&nbsp;\\n</em>\\n<div class=\\\"tc-edit-field-add-name-wrapper\\\">\\n<$edit-text tiddler=<<newFieldNameTiddler>> tag=\\\"input\\\" default=\\\"\\\" placeholder={{$:/language/EditTemplate/Fields/Add/Name/Placeholder}} focusPopup=<<qualify \\\"$:/state/popup/field-dropdown\\\">> class=\\\"tc-edit-texteditor tc-popup-handle\\\" tabindex={{$:/config/EditTabIndex}} focus={{{ [{$:/config/AutoFocus}match[fields]then[true]] ~[[false]] }}} cancelPopups=\\\"yes\\\"/>\\n&nbsp;\\n<$button popup=<<qualify \\\"$:/state/popup/field-dropdown\\\">> class=\\\"tc-btn-invisible tc-btn-dropdown\\\" tooltip={{$:/language/EditTemplate/Field/Dropdown/Hint}} aria-label={{$:/language/EditTemplate/Field/Dropdown/Caption}}>{{$:/core/images/down-arrow}}</$button>&nbsp;\\n<$reveal state=<<qualify \\\"$:/state/popup/field-dropdown\\\">> type=\\\"nomatch\\\" text=\\\"\\\" default=\\\"\\\">\\n<div class=\\\"tc-block-dropdown tc-edit-type-dropdown\\\">\\n<$set name=\\\"tv-show-missing-links\\\" value=\\\"yes\\\">\\n<$linkcatcher to=<<newFieldNameTiddler>>>\\n<div class=\\\"tc-dropdown-item\\\">\\n<<lingo Fields/Add/Dropdown/User>>\\n</div>\\n<$set name=\\\"newFieldName\\\" value={{{ [<newFieldNameTiddler>get[text]] }}}>\\n<$list filter=\\\"[!is[shadow]!is[system]fields[]search:title<newFieldName>sort[]] -created -creator -draft.of -draft.title -modified -modifier -tags -text -title -type\\\"  variable=\\\"currentField\\\">\\n<$link to=<<currentField>>>\\n<$text text=<<currentField>>/>\\n</$link>\\n</$list>\\n<div class=\\\"tc-dropdown-item\\\">\\n<<lingo Fields/Add/Dropdown/System>>\\n</div>\\n<$list filter=\\\"[fields[]search:title<newFieldName>sort[]] -[!is[shadow]!is[system]fields[]]\\\" variable=\\\"currentField\\\">\\n<$link to=<<currentField>>>\\n<$text text=<<currentField>>/>\\n</$link>\\n</$list>\\n</$set>\\n</$linkcatcher>\\n</$set>\\n</div>\\n</$reveal>\\n</div>\\n<span class=\\\"tc-edit-field-add-value\\\">\\n<$set name=\\\"currentTiddlerCSSescaped\\\" value={{{ [<currentTiddler>escapecss[]] }}}>\\n<$keyboard key=\\\"((add-field))\\\" actions=<<new-field-actions>>>\\n<$edit-text tiddler=<<newFieldValueTiddler>> tag=\\\"input\\\" default=\\\"\\\" placeholder={{$:/language/EditTemplate/Fields/Add/Value/Placeholder}} class=\\\"tc-edit-texteditor\\\" tabindex={{$:/config/EditTabIndex}} cancelPopups=\\\"yes\\\"/>\\n</$keyboard>\\n</$set>\\n</span>&nbsp;\\n<span class=\\\"tc-edit-field-add-button\\\">\\n<$macrocall $name=\\\"new-field\\\"/>\\n</span>\\n</div>\\n</$fieldmangler>\"\n        },\n        \"$:/core/ui/EditTemplate\": {\n            \"title\": \"$:/core/ui/EditTemplate\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"\\\\define save-tiddler-actions()\\n<$action-sendmessage $message=\\\"tm-add-tag\\\" $param={{{ [<newTagNameTiddler>get[text]] }}}/>\\n<$action-deletetiddler $tiddler=<<newTagNameTiddler>>/>\\n<$action-sendmessage $message=\\\"tm-add-field\\\" $name={{{ [<newFieldNameTiddler>get[text]] }}} $value={{{ [<newFieldValueTiddler>get[text]] }}}/>\\n<$action-deletetiddler $tiddler=<<newFieldNameTiddler>>/>\\n<$action-deletetiddler $tiddler=<<newFieldValueTiddler>>/>\\n<$action-sendmessage $message=\\\"tm-save-tiddler\\\"/>\\n\\\\end\\n<div data-tiddler-title=<<currentTiddler>> data-tags={{!!tags}} class={{{ tc-tiddler-frame tc-tiddler-edit-frame [<currentTiddler>is[tiddler]then[tc-tiddler-exists]] [<currentTiddler>is[missing]!is[shadow]then[tc-tiddler-missing]] [<currentTiddler>is[shadow]then[tc-tiddler-exists tc-tiddler-shadow]] [<currentTiddler>is[system]then[tc-tiddler-system]] [{!!class}] [<currentTiddler>tags[]encodeuricomponent[]addprefix[tc-tagged-]] +[join[ ]] }}}>\\n<$fieldmangler>\\n<$vars storyTiddler=<<currentTiddler>> newTagNameTiddler=<<qualify \\\"$:/temp/NewTagName\\\">> newFieldNameTiddler=<<qualify \\\"$:/temp/NewFieldName\\\">> newFieldValueTiddler=<<qualify \\\"$:/temp/NewFieldValue\\\">>>\\n<$keyboard key=\\\"((cancel-edit-tiddler))\\\" message=\\\"tm-cancel-tiddler\\\">\\n<$keyboard key=\\\"((save-tiddler))\\\" actions=<<save-tiddler-actions>>>\\n<$list filter=\\\"[all[shadows+tiddlers]list[$:/tags/EditTemplate]!has[draft.of]]\\\" variable=\\\"listItem\\\">\\n<$set name=\\\"tv-config-toolbar-class\\\" filter=\\\"[<tv-config-toolbar-class>] [<listItem>encodeuricomponent[]addprefix[tc-btn-]]\\\">\\n<$transclude tiddler=<<listItem>>/>\\n</$set>\\n</$list>\\n</$keyboard>\\n</$keyboard>\\n</$vars>\\n</$fieldmangler>\\n</div>\"\n        },\n        \"$:/core/ui/Buttons/encryption\": {\n            \"title\": \"$:/core/ui/Buttons/encryption\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/PageControls\",\n            \"caption\": \"{{$:/core/images/locked-padlock}} {{$:/language/Buttons/Encryption/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Encryption/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$reveal type=\\\"match\\\" state=\\\"$:/isEncrypted\\\" text=\\\"yes\\\">\\n<$button message=\\\"tm-clear-password\\\" tooltip=<<ipfs-encryption-tooltip>> aria-label={{$:/language/Buttons/Encryption/ClearPassword/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/locked-padlock}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Encryption/ClearPassword/Caption}}/></span>\\n</$list>\\n</$button>\\n</$reveal>\\n<$reveal type=\\\"nomatch\\\" state=\\\"$:/isEncrypted\\\" text=\\\"yes\\\">\\n<$button message=\\\"tm-set-password\\\" tooltip=<<ipfs-encryption-tooltip>> aria-label={{$:/language/Buttons/Encryption/SetPassword/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/unlocked-padlock}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Encryption/SetPassword/Caption}}/></span>\\n</$list>\\n</$button>\\n</$reveal>\\n\"\n        },\n        \"$:/core/ui/SideBar/Tools\": {\n            \"title\": \"$:/core/ui/SideBar/Tools\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/SideBar\",\n            \"caption\": \"{{$:/language/SideBar/Tools/Caption}}\",\n            \"text\": \"\\\\define lingo-base() $:/language/ControlPanel/\\n\\\\define config-title()\\n$:/config/PageControlButtons/Visibility/$(listItem)$\\n\\\\end\\n\\n<<lingo Basics/Version/Prompt>> <b><<version>></b>, <<lingo Ipfs/Version/Prompt>> <b><<ipfs-plugin-version>></b>\\n\\n<$set name=\\\"tv-config-toolbar-icons\\\" value=\\\"yes\\\">\\n\\n<$set name=\\\"tv-config-toolbar-text\\\" value=\\\"yes\\\">\\n\\n<$set name=\\\"tv-config-toolbar-class\\\" value=\\\"\\\">\\n\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/tags/PageControls]!has[draft.of]]\\\" variable=\\\"listItem\\\">\\n\\n<div style=\\\"position:relative;\\\" class={{{ [<listItem>encodeuricomponent[]addprefix[tc-btn-]] }}}>\\n\\n<$checkbox tiddler=<<config-title>> field=\\\"text\\\" checked=\\\"show\\\" unchecked=\\\"hide\\\" default=\\\"show\\\"/> <$transclude tiddler=<<listItem>>/> <i class=\\\"tc-muted\\\"><$transclude tiddler=<<listItem>> field=\\\"description\\\"/></i>\\n\\n</div>\\n\\n</$list>\\n\\n</$set>\\n\\n</$set>\\n\\n</$set>\"\n        },\n        \"$:/config/AutoSave\": {\n            \"title\": \"$:/config/AutoSave\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"no\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/encryption\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/encryption\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"show\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/home\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/home\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"show\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/pin\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/pin\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/unpin\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/unpin\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/console/mobile\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipfs/console/mobile\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"show\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/more-page-actions\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/more-page-actions\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"show\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ens/publish\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ens/publish\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipns/publish\": {\n            \"title\": \"$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/ipns/publish\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/Standford\": {\n            \"title\": \"$:/config/Standford\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"yes\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export/content\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export/content\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export/attachment\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/export/attachment\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/refresh\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/refresh\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/tiddler/pin\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/tiddler/pin\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/tiddler/unpin\": {\n            \"title\": \"$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/ipfs/tiddler/unpin\",\n            \"modified\": \"20200529094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"hide\"\n        },\n        \"$:/plugins/ipfs/ens-action.js\": {\n            \"title\": \"$:/plugins/ipfs/ens-action.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ens-action.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nENS Action\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const ipfsKeyword = 'ipfs'\\n  const ipnsKeyword = 'ipns'\\n\\n  const name = 'ens-action'\\n\\n  var EnsAction = function () {\\n    this.once = false\\n  }\\n\\n  EnsAction.prototype.init = function () {\\n    // Init once\\n    if (this.once) {\\n      return\\n    }\\n    const self = this\\n    $tw.rootWidget.addEventListener('tm-ens-manager-open', function (event) {\\n      return self.handleOpenEnsManager(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ens-resolve-and-open', async function (\\n      event\\n    ) {\\n      return await self.handleResolveEnsAndOpen(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ens-publish', async function (event) {\\n      return await self.handlePublishToEns(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-publish-to-ens', async function (\\n      event\\n    ) {\\n      return await self.handlePublishIpnsToEns(event)\\n    })\\n    // Init once\\n    this.once = true\\n  }\\n\\n  EnsAction.prototype.handleOpenEnsManager = function (event) {\\n    var ensDomain = $tw.utils.getIpfsEnsDomain()\\n    ensDomain =\\n      ensDomain === undefined || ensDomain == null || ensDomain.trim() === ''\\n        ? null\\n        : ensDomain.trim()\\n    // Check\\n    if (ensDomain == null) {\\n      window.open('https://app.ens.domains', '_blank', 'noopener,noreferrer')\\n    } else {\\n      window.open(\\n        `https://app.ens.domains/name/${ensDomain}`,\\n        '_blank',\\n        'noopener,noreferrer'\\n      )\\n    }\\n    return true\\n  }\\n\\n  EnsAction.prototype.handleResolveEnsAndOpen = async function (event) {\\n    var ensDomain = $tw.utils.getIpfsEnsDomain()\\n    ensDomain =\\n      ensDomain === undefined || ensDomain == null || ensDomain.trim() === ''\\n        ? null\\n        : ensDomain.trim()\\n    if (ensDomain == null) {\\n      $tw.utils.alert(name, 'Undefined ENS domain...')\\n      return false\\n    }\\n    try {\\n      $tw.ipfs.getLogger().info(`ENS domain: ${ensDomain}`)\\n      const { resolvedUrl } = await $tw.ipfs.resolveEns(ensDomain)\\n      if (resolvedUrl !== null) {\\n        window.open(resolvedUrl.href, '_blank', 'noopener,noreferrer')\\n      }\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    return true\\n  }\\n\\n  EnsAction.prototype.handlePublishToEns = async function (event) {\\n    var cid = null\\n    var ipnsKey = null\\n    const wiki = $tw.ipfs.getDocumentUrl()\\n    var ensDomain = $tw.utils.getIpfsEnsDomain()\\n    ensDomain =\\n      ensDomain === undefined || ensDomain == null || ensDomain.trim() === ''\\n        ? null\\n        : ensDomain.trim()\\n    if (ensDomain == null) {\\n      $tw.utils.alert(name, 'Undefined ENS domain...')\\n      return false\\n    }\\n    try {\\n      var { cid, ipnsKey } = await $tw.ipfs.resolveUrl(false, false, wiki)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    if (cid == null && ipnsKey == null) {\\n      $tw.utils.alert(name, 'Undefined IPFS identifier...')\\n      return false\\n    }\\n    if (cid !== null) {\\n      return await this.publishToEns(ensDomain, `/${ipfsKeyword}/${cid}`)\\n    }\\n    return await this.publishToEns(ensDomain, `/${ipnsKeyword}/${ipnsKey}`)\\n  }\\n\\n  EnsAction.prototype.handlePublishIpnsToEns = async function (event) {\\n    var ipnsKey = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    ipnsName =\\n      ipnsName === undefined || ipnsName == null || ipnsName.trim() === ''\\n        ? null\\n        : ipnsName.trim()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    var ensDomain = $tw.utils.getIpfsEnsDomain()\\n    ensDomain =\\n      ensDomain === undefined || ensDomain == null || ensDomain.trim() === ''\\n        ? null\\n        : ensDomain.trim()\\n    if (ensDomain == null) {\\n      $tw.utils.alert(name, 'Undefined ENS domain...')\\n      return false\\n    }\\n    try {\\n      var { ipnsKey } = await $tw.ipfs.resolveUrl(\\n        true,\\n        false,\\n        `/${ipnsKeyword}/${ipnsName}`\\n      )\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    return await this.publishToEns(ensDomain, `/${ipnsKeyword}/${ipnsKey}`)\\n  }\\n\\n  EnsAction.prototype.publishToEns = async function (ensDomain, cid) {\\n    var account = null\\n    var ensCid = null\\n    var ensResolvedUrl = null\\n    var web3 = null\\n    try {\\n      var { account, web3 } = await $tw.ipfs.getEnabledWeb3Provider()\\n      var {\\n        cid: ensCid,\\n        resolvedUrl: ensResolvedUrl\\n      } = await $tw.ipfs.resolveUrl(false, true, ensDomain, null, web3)\\n      if (ensCid !== null && cid === ensResolvedUrl.pathname) {\\n        $tw.utils.alert(\\n          name,\\n          'The current resolved ENS domain content is up to date...'\\n        )\\n        return false\\n      }\\n      const isOwner = await $tw.ipfs.isOwner(ensDomain, web3, account)\\n      if (isOwner === false) {\\n        const err = new Error('Unauthorized Account...')\\n        err.name = 'OwnerError'\\n        throw err\\n      }\\n    } catch (error) {\\n      if (error.name !== 'OwnerError') {\\n        $tw.ipfs.getLogger().error(error)\\n      }\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    $tw.utils.alert(name, `Publishing to ENS: ${ensDomain}`)\\n    $tw.ipfs\\n      .requestToUnpin(ensCid)\\n      .then(data => {\\n        if (data) {\\n          $tw.ipfs.removeFromPinUnpin(ensCid, ensResolvedUrl)\\n        }\\n        $tw.ipfs\\n          .setContentHash(ensDomain, cid, web3, account)\\n          .then(data => {\\n            $tw.utils.alert(name, 'Successfully published to ENS...')\\n          })\\n          .catch(error => {\\n            $tw.ipfs.requestToPin(ensCid)\\n            if (\\n              error.name !== 'OwnerError' &&\\n              error.name !== 'RejectedUserRequest' &&\\n              error.name !== 'UnauthorizedUserAccount'\\n            ) {\\n              $tw.ipfs.getLogger().error(error)\\n            }\\n            $tw.utils.alert(name, error.message)\\n          })\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n    return true\\n  }\\n\\n  exports.EnsAction = EnsAction\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ens-wrapper.js\": {\n            \"title\": \"$:/plugins/ipfs/ens-wrapper.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ens-wrapper.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nENS Wrapper\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n  const name = 'ens-wrapper'\\n\\n  var EnsWrapper = function (ensLibrary) {\\n    this.ensLibrary = ensLibrary\\n  }\\n\\n  EnsWrapper.prototype.getContentHash = async function (domain, web3) {\\n    try {\\n      var { content, protocol } = await this.ensLibrary.getContentHash(\\n        domain,\\n        web3\\n      )\\n      if (content !== null && protocol !== null) {\\n        // Success\\n        return {\\n          content: content,\\n          protocol: protocol\\n        }\\n      }\\n      $tw.utils.alert(name, 'Unassigned ENS domain content...')\\n      return {\\n        content: null,\\n        protocol: null\\n      }\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      throw new Error('Unable to fetch ENS domain content...')\\n    }\\n  }\\n\\n  EnsWrapper.prototype.setContentHash = async function (\\n    domain,\\n    cid,\\n    web3,\\n    account\\n  ) {\\n    try {\\n      await this.ensLibrary.setContentHash(domain, cid, web3, account)\\n    } catch (error) {\\n      if (\\n        error.name === 'OwnerError' ||\\n        error.name === 'RejectedUserRequest' ||\\n        error.name === 'UnauthorizedUserAccount'\\n      ) {\\n        throw error\\n      }\\n      $tw.ipfs.getLogger().error(error)\\n      throw new Error('Unable to set ENS domain content...')\\n    }\\n  }\\n\\n  exports.EnsWrapper = EnsWrapper\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ipfs-action.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-action.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-action.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Action\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const ipfsKeyword = 'ipfs'\\n  const ipnsKeyword = 'ipns'\\n\\n  const name = 'ipfs-action'\\n\\n  var IpfsAction = function () {\\n    this.once = false\\n    this.console = false\\n    this.ipnsName = $tw.utils.getIpfsIpnsName()\\n    this.ipnsKey = $tw.utils.getIpfsIpnsKey()\\n  }\\n\\n  IpfsAction.prototype.init = function () {\\n    // Init once\\n    if (this.once) {\\n      return\\n    }\\n    const self = this\\n    // Widget\\n    $tw.rootWidget.addEventListener('tm-ipfs-export', async function (event) {\\n      return await self.handleExportToIpfs(event, false)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipfs-export-content', async function (\\n      event\\n    ) {\\n      return await self.handleExportToIpfs(event, true)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-fetch', async function (event) {\\n      return await self.handleFetchIpnsKey(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-generate', async function (event) {\\n      return await self.handleGenerateIpnsKey(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-console-mobile', async function (\\n      event\\n    ) {\\n      return await self.handleMobileConsole(event)\\n    })\\n    $tw.rootWidget.addEventListener(\\n      'tm-ipfs-export-attachment',\\n      async function (event) {\\n        return await self.handleExportAttachmentToIpfs(event)\\n      }\\n    )\\n    $tw.rootWidget.addEventListener('tm-ipns-publish', async function (event) {\\n      return await self.handlePublishToIpns(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-remove', async function (event) {\\n      return await self.handleRemoveIpnsKey(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-rename', async function (event) {\\n      return await self.handleRenameIpnsName(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipns-resolve-and-open', async function (\\n      event\\n    ) {\\n      return await self.handleResolveIpnsKeyAndOpen(event)\\n    })\\n    // Init once\\n    this.once = true\\n  }\\n\\n  IpfsAction.prototype.handleExportToIpfs = async function (event, child) {\\n    var account = null\\n    var added = null\\n    var cid = null\\n    var fields = []\\n    var ipnsKey = null\\n    var ipnsName = null\\n    var normalizedUrl = null\\n    var web3 = null\\n    const title = event.tiddlerTitle\\n    var tiddler = $tw.wiki.getTiddler(title)\\n    var exportUri = tiddler.getFieldString('_export_uri')\\n    try {\\n      var { cid, ipnsKey, ipnsName, normalizedUrl } = await $tw.ipfs.resolveUrl(\\n        true,\\n        true,\\n        exportUri\\n      )\\n      if (normalizedUrl !== null && normalizedUrl.hostname.endsWith('.eth')) {\\n        var { account, web3 } = await $tw.ipfs.getEnabledWeb3Provider()\\n        const isOwner = await $tw.ipfs.isOwner(\\n          normalizedUrl.hostname,\\n          web3,\\n          account\\n        )\\n        if (isOwner === false) {\\n          const err = new Error('Unauthorized Account...')\\n          err.name = 'OwnerError'\\n          throw err\\n        }\\n      }\\n    } catch (error) {\\n      if (error.name !== 'OwnerError') {\\n        $tw.ipfs.getLogger().error(error)\\n      }\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    // Retrieve content\\n    const content = await this.exportTiddler(child, exportUri, tiddler)\\n    // Check\\n    if (content == null) {\\n      return false\\n    }\\n    $tw.ipfs.getLogger().info(`Uploading Tiddler: ${content.length}`)\\n    try {\\n      var { added } = await $tw.ipfs.addToIpfs(content)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    // Prepare New value\\n    fields.push({ key: '_export_uri', value: `${ipfsKeyword}://${added}` })\\n    var tiddler = $tw.wiki.getTiddler(title)\\n    var updatedTiddler = $tw.utils.updateTiddler({\\n      tiddler: tiddler,\\n      addTags: ['$:/isExported', '$:/isIpfs'],\\n      fields: fields\\n    })\\n    $tw.wiki.addTiddler(updatedTiddler)\\n    if (ipnsKey !== null) {\\n      $tw.utils.alert(name, `Publishing IPNS name: ${ipnsName}`)\\n      $tw.ipfs\\n        .pinToIpfs(added)\\n        .then(data => {\\n          $tw.ipfs\\n            .publishIpnsName(added, ipnsKey, ipnsName)\\n            .then(data => {\\n              fields.push({ key: '_export_uri', value: exportUri })\\n              tiddler = $tw.utils.updateTiddler({\\n                tiddler: tiddler,\\n                addTags: ['$:/isExported', '$:/isIpfs'],\\n                fields: fields\\n              })\\n              $tw.wiki.addTiddler(tiddler)\\n              $tw.utils.alert(\\n                name,\\n                `Successfully Published IPNS name: ${ipnsName}`\\n              )\\n              if ($tw.utils.getIpfsUnpin()) {\\n                $tw.ipfs\\n                  .unpinFromIpfs(cid)\\n                  .then(data => {\\n                    if (data !== undefined && data !== null) {\\n                      $tw.ipfs.removeFromPinUnpin(cid, normalizedUrl)\\n                    }\\n                  })\\n                  .catch(error => {\\n                    $tw.ipfs.getLogger().error(error)\\n                    $tw.utils.alert(name, error.message)\\n                  })\\n              }\\n            })\\n            .catch(error => {\\n              $tw.ipfs.requestToUnpin(added)\\n              $tw.ipfs.getLogger().error(error)\\n              $tw.utils.alert(name, error.message)\\n            })\\n        })\\n        .catch(error => {\\n          $tw.ipfs.getLogger().error(error)\\n          $tw.utils.alert(name, error.message)\\n        })\\n    } else if (\\n      normalizedUrl !== null &&\\n      normalizedUrl.hostname.endsWith('.eth')\\n    ) {\\n      $tw.utils.alert(name, `Publishing to ENS: ${normalizedUrl.hostname}`)\\n      $tw.ipfs\\n        .pinToIpfs(added)\\n        .then(data => {\\n          $tw.ipfs\\n            .setContentHash(\\n              normalizedUrl.hostname,\\n              `/${ipfsKeyword}/${added}`,\\n              web3,\\n              account\\n            )\\n            .then(data => {\\n              fields.push({ key: '_export_uri', value: exportUri })\\n              tiddler = $tw.utils.updateTiddler({\\n                tiddler: tiddler,\\n                addTags: ['$:/isExported', '$:/isIpfs'],\\n                fields: fields\\n              })\\n              $tw.wiki.addTiddler(tiddler)\\n              $tw.utils.alert(name, 'Successfully Published to ENS...')\\n              if ($tw.utils.getIpfsUnpin()) {\\n                $tw.ipfs\\n                  .unpinFromIpfs(cid)\\n                  .then(data => {\\n                    if (data !== undefined && data !== null) {\\n                      $tw.ipfs.removeFromPinUnpin(cid, normalizedUrl)\\n                    }\\n                  })\\n                  .catch(error => {\\n                    $tw.ipfs.getLogger().error(error)\\n                    $tw.utils.alert(name, error.message)\\n                  })\\n              }\\n            })\\n            .catch(error => {\\n              $tw.ipfs.requestToUnpin(added)\\n              if (\\n                error.name !== 'OwnerError' &&\\n                error.name !== 'RejectedUserRequest' &&\\n                error.name !== 'UnauthorizedUserAccount'\\n              ) {\\n                $tw.ipfs.getLogger().error(error)\\n              }\\n              $tw.utils.alert(name, error.message)\\n            })\\n        })\\n        .catch(error => {\\n          $tw.ipfs.getLogger().error(error)\\n          $tw.utils.alert(name, error.message)\\n        })\\n    }\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleExportAttachmentToIpfs = async function (event) {\\n    const title = event.tiddlerTitle\\n    var tiddler = $tw.wiki.getTiddler(title)\\n    var added = null\\n    // Do not process if _canonical_uri is set and the text field is empty\\n    const canonicalUri = tiddler.getFieldString('_canonical_uri')\\n    if (\\n      canonicalUri !== undefined &&\\n      canonicalUri !== null &&\\n      canonicalUri.trim() !== ''\\n    ) {\\n      $tw.utils.alert(name, 'Attachment content is already exported...')\\n      return false\\n    }\\n    try {\\n      const content = this.getAttachmentContent(tiddler)\\n      if (content == null) {\\n        return false\\n      }\\n      $tw.ipfs\\n        .getLogger()\\n        .info(`Uploading attachment content: ${content.length} bytes`)\\n      var { added } = await $tw.ipfs.addToIpfs(content)\\n      $tw.ipfs.requestToPin(added)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    const addTags = ['$:/isAttachment', '$:/isIpfs']\\n    const removeTags = ['$:/isEmbedded']\\n    // Update\\n    tiddler = $tw.utils.updateTiddler({\\n      tiddler: tiddler,\\n      addTags: addTags,\\n      removeTags: removeTags,\\n      fields: [\\n        { key: 'text', value: '' },\\n        { key: '_canonical_uri', value: `${ipfsKeyword}://${added}` }\\n      ]\\n    })\\n    $tw.wiki.addTiddler(tiddler)\\n    return true\\n  }\\n\\n  IpfsAction.prototype.getAttachmentContent = function (tiddler) {\\n    const { info } = $tw.utils.getContentType(\\n      tiddler.fields.title,\\n      tiddler.fields.type\\n    )\\n    var content = tiddler.getFieldString('text')\\n    if (content === undefined || content == null || content === '') {\\n      $tw.utils.alert(name, 'Empty attachment content...')\\n      return null\\n    }\\n    return $tw.ipfs.processContent(tiddler, content, info.encoding)\\n  }\\n\\n  IpfsAction.prototype.handleRenameIpnsName = async function (event) {\\n    var ipnsKey = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    ipnsName =\\n      ipnsName === undefined || ipnsName == null || ipnsName.trim() === ''\\n        ? null\\n        : ipnsName.trim()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    if (this.ipnsName == null || this.ipnsName === ipnsName) {\\n      $tw.utils.alert(name, 'Nothing to rename....')\\n      return false\\n    }\\n    try {\\n      var { ipnsKey } = await $tw.ipfs.renameIpnsName(this.ipnsName, ipnsName)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined && this.ipnsKey !== ipnsKey) {\\n      tiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: ipnsKey }]\\n      })\\n      $tw.wiki.addTiddler(tiddler)\\n    }\\n    this.ipnsKey = ipnsKey\\n    this.ipnsName = ipnsName\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleGenerateIpnsKey = async function (event) {\\n    var ipnsKey = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    ipnsName =\\n      ipnsName === undefined || ipnsName == null || ipnsName.trim() === ''\\n        ? null\\n        : ipnsName.trim()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    try {\\n      var ipnsKey = await $tw.ipfs.generateIpnsKey(ipnsName)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined && this.ipnsKey !== ipnsKey) {\\n      tiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: ipnsKey }]\\n      })\\n      $tw.wiki.addTiddler(tiddler)\\n    }\\n    this.ipnsKey = ipnsKey\\n    this.ipnsName = ipnsName\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleRemoveIpnsKey = async function (event) {\\n    var ipnsKey = null\\n    var normalizedUrl = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    ipnsName =\\n      ipnsName === undefined || ipnsName == null || ipnsName.trim() === ''\\n        ? null\\n        : ipnsName.trim()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    try {\\n      var { ipnsKey, normalizedUrl } = await $tw.ipfs.getIpnsIdentifiers(\\n        ipnsName\\n      )\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    // Async\\n    $tw.ipfs\\n      .requestToUnpin(null, ipnsKey, normalizedUrl)\\n      .then(data => {\\n        $tw.ipfs\\n          .removeIpnsKey(ipnsName)\\n          .then(data => {\\n            $tw.utils.alert(name, 'Succesfully removed Ipns key....')\\n          })\\n          .catch(error => {\\n            $tw.ipfs.getLogger().error(error)\\n            $tw.utils.alert(name, error.message)\\n          })\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/name')\\n    if (tiddler !== undefined) {\\n      const updatedTiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: '' }]\\n      })\\n      $tw.wiki.addTiddler(updatedTiddler)\\n    }\\n    tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined) {\\n      const updatedTiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: '' }]\\n      })\\n      $tw.wiki.addTiddler(updatedTiddler)\\n    }\\n    this.ipnsName = null\\n    this.ipnsKey = null\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleFetchIpnsKey = async function (event) {\\n    var ipnsKey = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    ipnsName =\\n      ipnsName === undefined || ipnsName == null || ipnsName.trim() === ''\\n        ? null\\n        : ipnsName.trim()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    try {\\n      var { ipnsKey } = await $tw.ipfs.getIpnsIdentifiers(ipnsName)\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined && this.ipnsKey !== ipnsKey) {\\n      tiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: ipnsKey }]\\n      })\\n      $tw.wiki.addTiddler(tiddler)\\n      this.ipnsKey = ipnsKey\\n    }\\n    this.ipnsName = ipnsName\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleResolveIpnsKeyAndOpen = async function (event) {\\n    var ipnsKey = null\\n    var resolvedUrl = null\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    ipnsName =\\n      ipnsName === undefined || ipnsName == null || ipnsName.trim() === ''\\n        ? null\\n        : ipnsName.trim()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    try {\\n      var { ipnsKey, resolvedUrl } = await $tw.ipfs.resolveUrl(\\n        true,\\n        false,\\n        `${ipnsKeyword}://${ipnsName}`\\n      )\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined && this.ipnsKey !== ipnsKey) {\\n      tiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: ipnsKey }]\\n      })\\n      this.ipnsKey = ipnsKey\\n      $tw.wiki.addTiddler(tiddler)\\n    }\\n    this.ipnsName = ipnsName\\n    if (resolvedUrl !== null) {\\n      window.open(resolvedUrl.href, '_blank', 'noopener,noreferrer')\\n    }\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handleMobileConsole = async function (event) {\\n    // Show or Hide\\n    if (typeof window.eruda !== 'undefined') {\\n      if (this.console === false) {\\n        window.eruda.show()\\n        window.eruda.show('console')\\n        this.console = true\\n      } else {\\n        window.eruda.hide()\\n        this.console = false\\n      }\\n      $tw.rootWidget.refresh(\\n        $tw.utils.getChangedTiddler('$:/core/ui/Buttons/ipfs/console/mobile')\\n      )\\n      return true\\n    }\\n    // Load mobile console\\n    try {\\n      // Load eruda\\n      await $tw.ipfs.ipfsBundle.ipfsLoader.loadErudaLibrary()\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    const erudaContainer = window.document.createElement('div')\\n    window.document.body.appendChild(erudaContainer)\\n    window.eruda.init({\\n      container: erudaContainer,\\n      tool: ['console'],\\n      useShadowDom: true,\\n      autoScale: true\\n    })\\n    // Inherit font\\n    erudaContainer.style.fontFamily = 'inherit'\\n    // Preserve user preference if any, default is 80\\n    if (window.eruda.get().config.get('displaySize') === 80) {\\n      window.eruda.get().config.set('displaySize', 40)\\n    }\\n    // Preserve user preference if any, default is 0.95\\n    if (window.eruda.get().config.get('transparency') === 0.95) {\\n      window.eruda.get().config.set('transparency', 1)\\n    }\\n    // Hide Eruda button\\n    if (window.eruda._shadowRoot !== undefined) {\\n      const btn = window.eruda._shadowRoot.querySelector('.eruda-entry-btn')\\n      if (btn !== undefined) {\\n        btn.style.display = 'none'\\n      }\\n    }\\n    // Init Logger\\n    const log = window.log.getLogger('eruda')\\n    if ($tw.utils.getIpfsVerbose()) {\\n      log.setLevel('info', false)\\n    } else {\\n      log.setLevel('warn', false)\\n    }\\n    // Log\\n    log.info('Mobile console has been loaded...')\\n    // Show\\n    window.eruda.show()\\n    window.eruda.show('console')\\n    this.console = true\\n    $tw.rootWidget.refresh(\\n      $tw.utils.getChangedTiddler('$:/core/ui/Buttons/ipfs/console/mobile')\\n    )\\n    return true\\n  }\\n\\n  IpfsAction.prototype.handlePublishToIpns = async function (event) {\\n    var cid = null\\n    var ipnsKey = null\\n    var wikiCid = null\\n    var wikiIpnsKey = null\\n    const wiki = $tw.ipfs.getDocumentUrl()\\n    var ipnsName = $tw.utils.getIpfsIpnsName()\\n    ipnsName =\\n      ipnsName === undefined || ipnsName == null || ipnsName.trim() === ''\\n        ? null\\n        : ipnsName.trim()\\n    if (ipnsName == null) {\\n      $tw.utils.alert(name, 'Undefined IPNS name....')\\n      return false\\n    }\\n    try {\\n      var { cid: wikiCid, ipnsKey: wikiIpnsKey } = await $tw.ipfs.resolveUrl(\\n        true,\\n        true,\\n        wiki\\n      )\\n      var { cid, ipnsKey } = await $tw.ipfs.resolveUrl(\\n        true,\\n        false,\\n        `${ipnsKeyword}://${ipnsName}`\\n      )\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return false\\n    }\\n    if (wikiCid == null && wikiIpnsKey == null) {\\n      $tw.utils.alert(name, 'Undefined IPFS identifier...')\\n      return false\\n    }\\n    if (wikiIpnsKey !== null && wikiIpnsKey === ipnsKey) {\\n      $tw.utils.alert(name, 'Default IPNS key matches current IPNS key....')\\n      return false\\n    }\\n    $tw.utils.alert(name, 'Publishing IPNS name: ' + ipnsName)\\n    $tw.ipfs\\n      .publishIpnsName(wikiCid, ipnsKey, ipnsName)\\n      .then(data => {\\n        $tw.ipfs.requestToUnpin(cid)\\n        $tw.utils.alert(name, 'Successfully Published IPNS name: ' + ipnsName)\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n    return true\\n  }\\n\\n  IpfsAction.prototype.exportTiddlersAsJson = async function (\\n    exportFilter,\\n    exportUri,\\n    spaces\\n  ) {\\n    var tiddlers = $tw.wiki.filterTiddlers(exportFilter)\\n    var spaces =\\n      spaces === undefined ? $tw.config.preferences.jsonSpaces : spaces\\n    var data = []\\n    // Process Tiddlers\\n    for (var t = 0; t < tiddlers.length; t++) {\\n      // Load Tiddler\\n      var tiddler = $tw.wiki.getTiddler(tiddlers[t])\\n      // Process\\n      var fields = {}\\n      // Process fields\\n      for (var field in tiddler.fields) {\\n        // Discard\\n        if (field === 'tags' || field === '_export_uri') {\\n          continue\\n        }\\n        var ipnsKey = null\\n        var fieldValue = tiddler.getFieldString(field)\\n        if (field === '_canonical_uri' && fieldValue === exportUri) {\\n          continue\\n        }\\n        if (field === '_import_uri' && fieldValue === exportUri) {\\n          continue\\n        }\\n        try {\\n          var { ipnsKey } = await $tw.ipfs.resolveUrl(false, false, fieldValue)\\n        } catch (error) {\\n          $tw.ipfs.getLogger().error(error)\\n          $tw.utils.alert(name, error.message)\\n          return null\\n        }\\n        // IPNS\\n        if (ipnsKey !== null) {\\n          fieldValue = `${ipnsKeyword}://${ipnsKey}`\\n        }\\n        // Store field\\n        fields[field] = fieldValue\\n      }\\n      // Process tags\\n      var tags = tiddler.fields.tags\\n      if (tags !== undefined && tags !== null) {\\n        var tagValues = ''\\n        for (var i = 0; i < tags.length; i++) {\\n          const tag = tags[i]\\n          // Discard\\n          if (tag === '$:/isExported' || tag === '$:/isImported') {\\n            continue\\n          }\\n          tagValues =\\n            (tagValues.length === 0 ? '[[' : `${tagValues} [[`) + `${tag}]]`\\n        }\\n        // Store tags\\n        fields.tags = tagValues\\n      }\\n      // Store\\n      data.push(fields)\\n    }\\n    return JSON.stringify(data, null, spaces)\\n  }\\n\\n  IpfsAction.prototype.exportTiddler = async function (\\n    child,\\n    exportUri,\\n    tiddler\\n  ) {\\n    // Check\\n    if (tiddler === undefined || tiddler == null) {\\n      const error = new Error('Unknown Tiddler...')\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n      return null\\n    }\\n    // Title\\n    const title = tiddler.getFieldString('title')\\n    // Filter\\n    var exportFilter = `[[${tiddler.fields.title}]]`\\n    // Child filters\\n    if (child) {\\n      // Links\\n      const linked = $tw.wiki.getTiddlerLinks(title)\\n      $tw.ipfs.getLogger().info(`Found ${linked.length} Tiddler link(s)...`)\\n      // Transcluded\\n      const transcluded = this.transcludeContent(title)\\n      $tw.ipfs\\n        .getLogger()\\n        .info(`Found ${transcluded.length} transcluded Tiddler reference(s)...`)\\n      const filtered = linked.concat(transcluded)\\n      // Process filtered content\\n      for (var i = 0; i < filtered.length; i++) {\\n        if (exportFilter.includes(`[[${filtered[i]}]]`) === false) {\\n          exportFilter = `${exportFilter} [[${filtered[i]}]]`\\n        }\\n      }\\n    }\\n    var content = null\\n    var contentType = 'text/plain'\\n    if (child || $tw.utils.getIpfsExport() === 'json') {\\n      content = await this.exportTiddlersAsJson(exportFilter, exportUri)\\n    } else if ($tw.utils.getIpfsExport() === 'static') {\\n      const options = {\\n        downloadType: contentType,\\n        method: 'download',\\n        template: '$:/core/templates/exporters/StaticRiver',\\n        variables: {\\n          exportFilter: exportFilter\\n        }\\n      }\\n      content = $tw.wiki.renderTiddler(\\n        contentType,\\n        '$:/core/templates/exporters/StaticRiver',\\n        options\\n      )\\n    } else {\\n      const options = {\\n        downloadType: contentType,\\n        method: 'download',\\n        template: '$:/core/templates/exporters/TidFile',\\n        variables: {\\n          exportFilter: exportFilter\\n        }\\n      }\\n      content = $tw.wiki.renderTiddler(\\n        contentType,\\n        '$:/core/templates/exporters/TidFile',\\n        options\\n      )\\n    }\\n    return $tw.ipfs.processContent(tiddler, content, 'utf8')\\n  }\\n\\n  IpfsAction.prototype.transcludeContent = function (title) {\\n    var tiddlers = []\\n    // Build a transclude widget\\n    var transclude = $tw.wiki.makeTranscludeWidget(title)\\n    // Build a fake document element\\n    const container = $tw.fakeDocument.createElement('div')\\n    // Transclude\\n    transclude.render(container, null)\\n    // Process children\\n    this.locateTiddlers(transclude, tiddlers)\\n    // Return\\n    return tiddlers\\n  }\\n\\n  IpfsAction.prototype.locateTiddlers = function (transclude, tiddlers) {\\n    // Children lookup\\n    for (var i = 0; i < transclude.children.length; i++) {\\n      // Current child\\n      const child = transclude.children[i]\\n      if (child.variables !== undefined && child.variables !== null) {\\n        // Locate Tiddler\\n        const currentTiddler = 'currentTiddler'\\n        const current = child.variables[currentTiddler]\\n        if (\\n          current !== undefined &&\\n          current !== null &&\\n          current.value !== undefined &&\\n          current.value !== null\\n        ) {\\n          if (tiddlers.indexOf(current.value) === -1) {\\n            tiddlers.push(current.value)\\n          }\\n        }\\n      }\\n      // Process children\\n      this.locateTiddlers(child, tiddlers)\\n    }\\n  }\\n\\n  exports.IpfsAction = IpfsAction\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ipfs-bundle.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-bundle.js\",\n            \"text\": \"(function(f){if(typeof exports===\\\"object\\\"&&typeof module!==\\\"undefined\\\"){module.exports=f()}else if(typeof define===\\\"function\\\"&&define.amd){define([],f)}else{var g;if(typeof window!==\\\"undefined\\\"){g=window}else if(typeof global!==\\\"undefined\\\"){g=global}else if(typeof self!==\\\"undefined\\\"){g=self}else{g=this}g.IpfsBundle = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\\\"function\\\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\\\"Cannot find module '\\\"+i+\\\"'\\\");throw a.code=\\\"MODULE_NOT_FOUND\\\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\\\"function\\\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\\nfunction _asyncIterator(iterable) {\\n  var method;\\n\\n  if (typeof Symbol !== \\\"undefined\\\") {\\n    if (Symbol.asyncIterator) {\\n      method = iterable[Symbol.asyncIterator];\\n      if (method != null) return method.call(iterable);\\n    }\\n\\n    if (Symbol.iterator) {\\n      method = iterable[Symbol.iterator];\\n      if (method != null) return method.call(iterable);\\n    }\\n  }\\n\\n  throw new TypeError(\\\"Object is not async iterable\\\");\\n}\\n\\nmodule.exports = _asyncIterator;\\n},{}],2:[function(require,module,exports){\\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\\n  try {\\n    var info = gen[key](arg);\\n    var value = info.value;\\n  } catch (error) {\\n    reject(error);\\n    return;\\n  }\\n\\n  if (info.done) {\\n    resolve(value);\\n  } else {\\n    Promise.resolve(value).then(_next, _throw);\\n  }\\n}\\n\\nfunction _asyncToGenerator(fn) {\\n  return function () {\\n    var self = this,\\n        args = arguments;\\n    return new Promise(function (resolve, reject) {\\n      var gen = fn.apply(self, args);\\n\\n      function _next(value) {\\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"next\\\", value);\\n      }\\n\\n      function _throw(err) {\\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"throw\\\", err);\\n      }\\n\\n      _next(undefined);\\n    });\\n  };\\n}\\n\\nmodule.exports = _asyncToGenerator;\\n},{}],3:[function(require,module,exports){\\nfunction _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : {\\n    \\\"default\\\": obj\\n  };\\n}\\n\\nmodule.exports = _interopRequireDefault;\\n},{}],4:[function(require,module,exports){\\nmodule.exports = require(\\\"regenerator-runtime\\\");\\n\\n},{\\\"regenerator-runtime\\\":75}],5:[function(require,module,exports){\\n/**\\n * Returns a Promise that resolves to the value of window.ethereum if it is\\n * set within the given timeout, or null.\\n * The Promise will not reject, but an error will be thrown if invalid options\\n * are provided.\\n *\\n * @param {Object} [options] - Options bag.\\n * @param {boolean} [options.mustBeMetaMask] - Whether to only look for MetaMask\\n * providers. Default: false\\n * @param {boolean} [options.silent] - Whether to silence console errors. Does\\n * not affect thrown errors. Default: false\\n * @param {number} [options.timeout] - Milliseconds to wait for\\n * 'ethereum#initialized' to be dispatched. Default: 3000\\n * @returns {Promise<EthereumProvider | null>} A Promise that resolves with the\\n * Provider if it is detected within the given timeout, otherwise null.\\n */\\nmodule.exports = function detectEthereumProvider ({\\n  mustBeMetaMask = false,\\n  silent = false,\\n  timeout = 3000,\\n} = {}) {\\n\\n  _validateInputs()\\n\\n  let handled = false\\n\\n  return new Promise((resolve) => {\\n    if (window.ethereum) {\\n\\n      handleEthereum()\\n\\n    } else {\\n\\n      window.addEventListener(\\n        'ethereum#initialized',\\n        handleEthereum,\\n        { once: true },\\n      )\\n\\n      setTimeout(() => {\\n        handleEthereum()\\n      }, timeout)\\n    }\\n\\n    function handleEthereum () {\\n\\n      if (handled) {\\n        return\\n      }\\n      handled = true\\n\\n      window.removeEventListener('ethereum#initialized', handleEthereum)\\n\\n      const { ethereum } = window\\n\\n      if (ethereum && (!mustBeMetaMask || ethereum.isMetaMask)) {\\n        resolve(ethereum)\\n      } else {\\n\\n        const message = mustBeMetaMask && ethereum\\n          ? 'Non-MetaMask window.ethereum detected.'\\n          : 'Unable to detect window.ethereum.'\\n\\n        !silent && console.error('@metamask/detect-provider:', message)\\n        resolve(null)\\n      }\\n    }\\n  })\\n\\n  function _validateInputs () {\\n    if (typeof mustBeMetaMask !== 'boolean') {\\n      throw new Error(`@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.`)\\n    }\\n    if (typeof silent !== 'boolean') {\\n      throw new Error(`@metamask/detect-provider: Expected option 'silent' to be a boolean.`)\\n    }\\n    if (typeof timeout !== 'number') {\\n      throw new Error(`@metamask/detect-provider: Expected option 'timeout' to be a number.`)\\n    }\\n  }\\n}\\n\\n},{}],6:[function(require,module,exports){\\n'use strict'\\n// base-x encoding / decoding\\n// Copyright (c) 2018 base-x contributors\\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\\n// Distributed under the MIT software license, see the accompanying\\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\\n// @ts-ignore\\nvar _Buffer = require('safe-buffer').Buffer\\nfunction base (ALPHABET) {\\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\\n  var BASE_MAP = new Uint8Array(256)\\n  for (var j = 0; j < BASE_MAP.length; j++) {\\n    BASE_MAP[j] = 255\\n  }\\n  for (var i = 0; i < ALPHABET.length; i++) {\\n    var x = ALPHABET.charAt(i)\\n    var xc = x.charCodeAt(0)\\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\\n    BASE_MAP[xc] = i\\n  }\\n  var BASE = ALPHABET.length\\n  var LEADER = ALPHABET.charAt(0)\\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\\n  function encode (source) {\\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\\n    if (source.length === 0) { return '' }\\n        // Skip & count leading zeroes.\\n    var zeroes = 0\\n    var length = 0\\n    var pbegin = 0\\n    var pend = source.length\\n    while (pbegin !== pend && source[pbegin] === 0) {\\n      pbegin++\\n      zeroes++\\n    }\\n        // Allocate enough space in big-endian base58 representation.\\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\\n    var b58 = new Uint8Array(size)\\n        // Process the bytes.\\n    while (pbegin !== pend) {\\n      var carry = source[pbegin]\\n            // Apply \\\"b58 = b58 * 256 + ch\\\".\\n      var i = 0\\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\\n        carry += (256 * b58[it1]) >>> 0\\n        b58[it1] = (carry % BASE) >>> 0\\n        carry = (carry / BASE) >>> 0\\n      }\\n      if (carry !== 0) { throw new Error('Non-zero carry') }\\n      length = i\\n      pbegin++\\n    }\\n        // Skip leading zeroes in base58 result.\\n    var it2 = size - length\\n    while (it2 !== size && b58[it2] === 0) {\\n      it2++\\n    }\\n        // Translate the result into a string.\\n    var str = LEADER.repeat(zeroes)\\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\\n    return str\\n  }\\n  function decodeUnsafe (source) {\\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\\n    if (source.length === 0) { return _Buffer.alloc(0) }\\n    var psz = 0\\n        // Skip leading spaces.\\n    if (source[psz] === ' ') { return }\\n        // Skip and count leading '1's.\\n    var zeroes = 0\\n    var length = 0\\n    while (source[psz] === LEADER) {\\n      zeroes++\\n      psz++\\n    }\\n        // Allocate enough space in big-endian base256 representation.\\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\\n    var b256 = new Uint8Array(size)\\n        // Process the characters.\\n    while (source[psz]) {\\n            // Decode character\\n      var carry = BASE_MAP[source.charCodeAt(psz)]\\n            // Invalid character\\n      if (carry === 255) { return }\\n      var i = 0\\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\\n        carry += (BASE * b256[it3]) >>> 0\\n        b256[it3] = (carry % 256) >>> 0\\n        carry = (carry / 256) >>> 0\\n      }\\n      if (carry !== 0) { throw new Error('Non-zero carry') }\\n      length = i\\n      psz++\\n    }\\n        // Skip trailing spaces.\\n    if (source[psz] === ' ') { return }\\n        // Skip leading zeroes in b256.\\n    var it4 = size - length\\n    while (it4 !== size && b256[it4] === 0) {\\n      it4++\\n    }\\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\\n    vch.fill(0x00, 0, zeroes)\\n    var j = zeroes\\n    while (it4 !== size) {\\n      vch[j++] = b256[it4++]\\n    }\\n    return vch\\n  }\\n  function decode (string) {\\n    var buffer = decodeUnsafe(string)\\n    if (buffer) { return buffer }\\n    throw new Error('Non-base' + BASE + ' character')\\n  }\\n  return {\\n    encode: encode,\\n    decodeUnsafe: decodeUnsafe,\\n    decode: decode\\n  }\\n}\\nmodule.exports = base\\n\\n},{\\\"safe-buffer\\\":76}],7:[function(require,module,exports){\\n'use strict'\\n\\nexports.byteLength = byteLength\\nexports.toByteArray = toByteArray\\nexports.fromByteArray = fromByteArray\\n\\nvar lookup = []\\nvar revLookup = []\\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\\n\\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\\nfor (var i = 0, len = code.length; i < len; ++i) {\\n  lookup[i] = code[i]\\n  revLookup[code.charCodeAt(i)] = i\\n}\\n\\n// Support decoding URL-safe base64 strings, as Node.js does.\\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\\nrevLookup['-'.charCodeAt(0)] = 62\\nrevLookup['_'.charCodeAt(0)] = 63\\n\\nfunction getLens (b64) {\\n  var len = b64.length\\n\\n  if (len % 4 > 0) {\\n    throw new Error('Invalid string. Length must be a multiple of 4')\\n  }\\n\\n  // Trim off extra bytes after placeholder bytes are found\\n  // See: https://github.com/beatgammit/base64-js/issues/42\\n  var validLen = b64.indexOf('=')\\n  if (validLen === -1) validLen = len\\n\\n  var placeHoldersLen = validLen === len\\n    ? 0\\n    : 4 - (validLen % 4)\\n\\n  return [validLen, placeHoldersLen]\\n}\\n\\n// base64 is 4/3 + up to two characters of the original data\\nfunction byteLength (b64) {\\n  var lens = getLens(b64)\\n  var validLen = lens[0]\\n  var placeHoldersLen = lens[1]\\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\\n}\\n\\nfunction _byteLength (b64, validLen, placeHoldersLen) {\\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\\n}\\n\\nfunction toByteArray (b64) {\\n  var tmp\\n  var lens = getLens(b64)\\n  var validLen = lens[0]\\n  var placeHoldersLen = lens[1]\\n\\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\\n\\n  var curByte = 0\\n\\n  // if there are placeholders, only get up to the last complete 4 chars\\n  var len = placeHoldersLen > 0\\n    ? validLen - 4\\n    : validLen\\n\\n  var i\\n  for (i = 0; i < len; i += 4) {\\n    tmp =\\n      (revLookup[b64.charCodeAt(i)] << 18) |\\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\\n      revLookup[b64.charCodeAt(i + 3)]\\n    arr[curByte++] = (tmp >> 16) & 0xFF\\n    arr[curByte++] = (tmp >> 8) & 0xFF\\n    arr[curByte++] = tmp & 0xFF\\n  }\\n\\n  if (placeHoldersLen === 2) {\\n    tmp =\\n      (revLookup[b64.charCodeAt(i)] << 2) |\\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\\n    arr[curByte++] = tmp & 0xFF\\n  }\\n\\n  if (placeHoldersLen === 1) {\\n    tmp =\\n      (revLookup[b64.charCodeAt(i)] << 10) |\\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\\n    arr[curByte++] = (tmp >> 8) & 0xFF\\n    arr[curByte++] = tmp & 0xFF\\n  }\\n\\n  return arr\\n}\\n\\nfunction tripletToBase64 (num) {\\n  return lookup[num >> 18 & 0x3F] +\\n    lookup[num >> 12 & 0x3F] +\\n    lookup[num >> 6 & 0x3F] +\\n    lookup[num & 0x3F]\\n}\\n\\nfunction encodeChunk (uint8, start, end) {\\n  var tmp\\n  var output = []\\n  for (var i = start; i < end; i += 3) {\\n    tmp =\\n      ((uint8[i] << 16) & 0xFF0000) +\\n      ((uint8[i + 1] << 8) & 0xFF00) +\\n      (uint8[i + 2] & 0xFF)\\n    output.push(tripletToBase64(tmp))\\n  }\\n  return output.join('')\\n}\\n\\nfunction fromByteArray (uint8) {\\n  var tmp\\n  var len = uint8.length\\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\\n  var parts = []\\n  var maxChunkLength = 16383 // must be multiple of 3\\n\\n  // go through the array every three bytes, we'll deal with trailing stuff later\\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\\n    parts.push(encodeChunk(\\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\\n    ))\\n  }\\n\\n  // pad the end with zeros, but make sure to not forget the extra bytes\\n  if (extraBytes === 1) {\\n    tmp = uint8[len - 1]\\n    parts.push(\\n      lookup[tmp >> 2] +\\n      lookup[(tmp << 4) & 0x3F] +\\n      '=='\\n    )\\n  } else if (extraBytes === 2) {\\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\\n    parts.push(\\n      lookup[tmp >> 10] +\\n      lookup[(tmp >> 4) & 0x3F] +\\n      lookup[(tmp << 2) & 0x3F] +\\n      '='\\n    )\\n  }\\n\\n  return parts.join('')\\n}\\n\\n},{}],8:[function(require,module,exports){\\n(function (Buffer){\\n/*!\\n * The buffer module from node.js, for the browser.\\n *\\n * @author   Feross Aboukhadijeh <https://feross.org>\\n * @license  MIT\\n */\\n/* eslint-disable no-proto */\\n\\n'use strict'\\n\\nvar base64 = require('base64-js')\\nvar ieee754 = require('ieee754')\\n\\nexports.Buffer = Buffer\\nexports.SlowBuffer = SlowBuffer\\nexports.INSPECT_MAX_BYTES = 50\\n\\nvar K_MAX_LENGTH = 0x7fffffff\\nexports.kMaxLength = K_MAX_LENGTH\\n\\n/**\\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\\n *   === true    Use Uint8Array implementation (fastest)\\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\\n *               implementation (most compatible, even IE6)\\n *\\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\\n * Opera 11.6+, iOS 4.2+.\\n *\\n * We report that the browser does not support typed arrays if the are not subclassable\\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\\n * for __proto__ and has a buggy typed array implementation.\\n */\\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\\n\\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\\n    typeof console.error === 'function') {\\n  console.error(\\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\\n  )\\n}\\n\\nfunction typedArraySupport () {\\n  // Can typed array instances can be augmented?\\n  try {\\n    var arr = new Uint8Array(1)\\n    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }\\n    return arr.foo() === 42\\n  } catch (e) {\\n    return false\\n  }\\n}\\n\\nObject.defineProperty(Buffer.prototype, 'parent', {\\n  enumerable: true,\\n  get: function () {\\n    if (!Buffer.isBuffer(this)) return undefined\\n    return this.buffer\\n  }\\n})\\n\\nObject.defineProperty(Buffer.prototype, 'offset', {\\n  enumerable: true,\\n  get: function () {\\n    if (!Buffer.isBuffer(this)) return undefined\\n    return this.byteOffset\\n  }\\n})\\n\\nfunction createBuffer (length) {\\n  if (length > K_MAX_LENGTH) {\\n    throw new RangeError('The value \\\"' + length + '\\\" is invalid for option \\\"size\\\"')\\n  }\\n  // Return an augmented `Uint8Array` instance\\n  var buf = new Uint8Array(length)\\n  buf.__proto__ = Buffer.prototype\\n  return buf\\n}\\n\\n/**\\n * The Buffer constructor returns instances of `Uint8Array` that have their\\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\\n * returns a single octet.\\n *\\n * The `Uint8Array` prototype remains unmodified.\\n */\\n\\nfunction Buffer (arg, encodingOrOffset, length) {\\n  // Common case.\\n  if (typeof arg === 'number') {\\n    if (typeof encodingOrOffset === 'string') {\\n      throw new TypeError(\\n        'The \\\"string\\\" argument must be of type string. Received type number'\\n      )\\n    }\\n    return allocUnsafe(arg)\\n  }\\n  return from(arg, encodingOrOffset, length)\\n}\\n\\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\\n    Buffer[Symbol.species] === Buffer) {\\n  Object.defineProperty(Buffer, Symbol.species, {\\n    value: null,\\n    configurable: true,\\n    enumerable: false,\\n    writable: false\\n  })\\n}\\n\\nBuffer.poolSize = 8192 // not used by this implementation\\n\\nfunction from (value, encodingOrOffset, length) {\\n  if (typeof value === 'string') {\\n    return fromString(value, encodingOrOffset)\\n  }\\n\\n  if (ArrayBuffer.isView(value)) {\\n    return fromArrayLike(value)\\n  }\\n\\n  if (value == null) {\\n    throw TypeError(\\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\\n      'or Array-like Object. Received type ' + (typeof value)\\n    )\\n  }\\n\\n  if (isInstance(value, ArrayBuffer) ||\\n      (value && isInstance(value.buffer, ArrayBuffer))) {\\n    return fromArrayBuffer(value, encodingOrOffset, length)\\n  }\\n\\n  if (typeof value === 'number') {\\n    throw new TypeError(\\n      'The \\\"value\\\" argument must not be of type number. Received type number'\\n    )\\n  }\\n\\n  var valueOf = value.valueOf && value.valueOf()\\n  if (valueOf != null && valueOf !== value) {\\n    return Buffer.from(valueOf, encodingOrOffset, length)\\n  }\\n\\n  var b = fromObject(value)\\n  if (b) return b\\n\\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\\n      typeof value[Symbol.toPrimitive] === 'function') {\\n    return Buffer.from(\\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\\n    )\\n  }\\n\\n  throw new TypeError(\\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\\n    'or Array-like Object. Received type ' + (typeof value)\\n  )\\n}\\n\\n/**\\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\\n * if value is a number.\\n * Buffer.from(str[, encoding])\\n * Buffer.from(array)\\n * Buffer.from(buffer)\\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\\n **/\\nBuffer.from = function (value, encodingOrOffset, length) {\\n  return from(value, encodingOrOffset, length)\\n}\\n\\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\\n// https://github.com/feross/buffer/pull/148\\nBuffer.prototype.__proto__ = Uint8Array.prototype\\nBuffer.__proto__ = Uint8Array\\n\\nfunction assertSize (size) {\\n  if (typeof size !== 'number') {\\n    throw new TypeError('\\\"size\\\" argument must be of type number')\\n  } else if (size < 0) {\\n    throw new RangeError('The value \\\"' + size + '\\\" is invalid for option \\\"size\\\"')\\n  }\\n}\\n\\nfunction alloc (size, fill, encoding) {\\n  assertSize(size)\\n  if (size <= 0) {\\n    return createBuffer(size)\\n  }\\n  if (fill !== undefined) {\\n    // Only pay attention to encoding if it's a string. This\\n    // prevents accidentally sending in a number that would\\n    // be interpretted as a start offset.\\n    return typeof encoding === 'string'\\n      ? createBuffer(size).fill(fill, encoding)\\n      : createBuffer(size).fill(fill)\\n  }\\n  return createBuffer(size)\\n}\\n\\n/**\\n * Creates a new filled Buffer instance.\\n * alloc(size[, fill[, encoding]])\\n **/\\nBuffer.alloc = function (size, fill, encoding) {\\n  return alloc(size, fill, encoding)\\n}\\n\\nfunction allocUnsafe (size) {\\n  assertSize(size)\\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\\n}\\n\\n/**\\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\\n * */\\nBuffer.allocUnsafe = function (size) {\\n  return allocUnsafe(size)\\n}\\n/**\\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\\n */\\nBuffer.allocUnsafeSlow = function (size) {\\n  return allocUnsafe(size)\\n}\\n\\nfunction fromString (string, encoding) {\\n  if (typeof encoding !== 'string' || encoding === '') {\\n    encoding = 'utf8'\\n  }\\n\\n  if (!Buffer.isEncoding(encoding)) {\\n    throw new TypeError('Unknown encoding: ' + encoding)\\n  }\\n\\n  var length = byteLength(string, encoding) | 0\\n  var buf = createBuffer(length)\\n\\n  var actual = buf.write(string, encoding)\\n\\n  if (actual !== length) {\\n    // Writing a hex string, for example, that contains invalid characters will\\n    // cause everything after the first invalid character to be ignored. (e.g.\\n    // 'abxxcd' will be treated as 'ab')\\n    buf = buf.slice(0, actual)\\n  }\\n\\n  return buf\\n}\\n\\nfunction fromArrayLike (array) {\\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\\n  var buf = createBuffer(length)\\n  for (var i = 0; i < length; i += 1) {\\n    buf[i] = array[i] & 255\\n  }\\n  return buf\\n}\\n\\nfunction fromArrayBuffer (array, byteOffset, length) {\\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\\n    throw new RangeError('\\\"offset\\\" is outside of buffer bounds')\\n  }\\n\\n  if (array.byteLength < byteOffset + (length || 0)) {\\n    throw new RangeError('\\\"length\\\" is outside of buffer bounds')\\n  }\\n\\n  var buf\\n  if (byteOffset === undefined && length === undefined) {\\n    buf = new Uint8Array(array)\\n  } else if (length === undefined) {\\n    buf = new Uint8Array(array, byteOffset)\\n  } else {\\n    buf = new Uint8Array(array, byteOffset, length)\\n  }\\n\\n  // Return an augmented `Uint8Array` instance\\n  buf.__proto__ = Buffer.prototype\\n  return buf\\n}\\n\\nfunction fromObject (obj) {\\n  if (Buffer.isBuffer(obj)) {\\n    var len = checked(obj.length) | 0\\n    var buf = createBuffer(len)\\n\\n    if (buf.length === 0) {\\n      return buf\\n    }\\n\\n    obj.copy(buf, 0, 0, len)\\n    return buf\\n  }\\n\\n  if (obj.length !== undefined) {\\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\\n      return createBuffer(0)\\n    }\\n    return fromArrayLike(obj)\\n  }\\n\\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\\n    return fromArrayLike(obj.data)\\n  }\\n}\\n\\nfunction checked (length) {\\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\\n  // length is NaN (which is otherwise coerced to zero.)\\n  if (length >= K_MAX_LENGTH) {\\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\\n  }\\n  return length | 0\\n}\\n\\nfunction SlowBuffer (length) {\\n  if (+length != length) { // eslint-disable-line eqeqeq\\n    length = 0\\n  }\\n  return Buffer.alloc(+length)\\n}\\n\\nBuffer.isBuffer = function isBuffer (b) {\\n  return b != null && b._isBuffer === true &&\\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\\n}\\n\\nBuffer.compare = function compare (a, b) {\\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\\n    throw new TypeError(\\n      'The \\\"buf1\\\", \\\"buf2\\\" arguments must be one of type Buffer or Uint8Array'\\n    )\\n  }\\n\\n  if (a === b) return 0\\n\\n  var x = a.length\\n  var y = b.length\\n\\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\\n    if (a[i] !== b[i]) {\\n      x = a[i]\\n      y = b[i]\\n      break\\n    }\\n  }\\n\\n  if (x < y) return -1\\n  if (y < x) return 1\\n  return 0\\n}\\n\\nBuffer.isEncoding = function isEncoding (encoding) {\\n  switch (String(encoding).toLowerCase()) {\\n    case 'hex':\\n    case 'utf8':\\n    case 'utf-8':\\n    case 'ascii':\\n    case 'latin1':\\n    case 'binary':\\n    case 'base64':\\n    case 'ucs2':\\n    case 'ucs-2':\\n    case 'utf16le':\\n    case 'utf-16le':\\n      return true\\n    default:\\n      return false\\n  }\\n}\\n\\nBuffer.concat = function concat (list, length) {\\n  if (!Array.isArray(list)) {\\n    throw new TypeError('\\\"list\\\" argument must be an Array of Buffers')\\n  }\\n\\n  if (list.length === 0) {\\n    return Buffer.alloc(0)\\n  }\\n\\n  var i\\n  if (length === undefined) {\\n    length = 0\\n    for (i = 0; i < list.length; ++i) {\\n      length += list[i].length\\n    }\\n  }\\n\\n  var buffer = Buffer.allocUnsafe(length)\\n  var pos = 0\\n  for (i = 0; i < list.length; ++i) {\\n    var buf = list[i]\\n    if (isInstance(buf, Uint8Array)) {\\n      buf = Buffer.from(buf)\\n    }\\n    if (!Buffer.isBuffer(buf)) {\\n      throw new TypeError('\\\"list\\\" argument must be an Array of Buffers')\\n    }\\n    buf.copy(buffer, pos)\\n    pos += buf.length\\n  }\\n  return buffer\\n}\\n\\nfunction byteLength (string, encoding) {\\n  if (Buffer.isBuffer(string)) {\\n    return string.length\\n  }\\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\\n    return string.byteLength\\n  }\\n  if (typeof string !== 'string') {\\n    throw new TypeError(\\n      'The \\\"string\\\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\\n      'Received type ' + typeof string\\n    )\\n  }\\n\\n  var len = string.length\\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\\n  if (!mustMatch && len === 0) return 0\\n\\n  // Use a for loop to avoid recursion\\n  var loweredCase = false\\n  for (;;) {\\n    switch (encoding) {\\n      case 'ascii':\\n      case 'latin1':\\n      case 'binary':\\n        return len\\n      case 'utf8':\\n      case 'utf-8':\\n        return utf8ToBytes(string).length\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return len * 2\\n      case 'hex':\\n        return len >>> 1\\n      case 'base64':\\n        return base64ToBytes(string).length\\n      default:\\n        if (loweredCase) {\\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\\n        }\\n        encoding = ('' + encoding).toLowerCase()\\n        loweredCase = true\\n    }\\n  }\\n}\\nBuffer.byteLength = byteLength\\n\\nfunction slowToString (encoding, start, end) {\\n  var loweredCase = false\\n\\n  // No need to verify that \\\"this.length <= MAX_UINT32\\\" since it's a read-only\\n  // property of a typed array.\\n\\n  // This behaves neither like String nor Uint8Array in that we set start/end\\n  // to their upper/lower bounds if the value passed is out of range.\\n  // undefined is handled specially as per ECMA-262 6th Edition,\\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\\n  if (start === undefined || start < 0) {\\n    start = 0\\n  }\\n  // Return early if start > this.length. Done here to prevent potential uint32\\n  // coercion fail below.\\n  if (start > this.length) {\\n    return ''\\n  }\\n\\n  if (end === undefined || end > this.length) {\\n    end = this.length\\n  }\\n\\n  if (end <= 0) {\\n    return ''\\n  }\\n\\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\\n  end >>>= 0\\n  start >>>= 0\\n\\n  if (end <= start) {\\n    return ''\\n  }\\n\\n  if (!encoding) encoding = 'utf8'\\n\\n  while (true) {\\n    switch (encoding) {\\n      case 'hex':\\n        return hexSlice(this, start, end)\\n\\n      case 'utf8':\\n      case 'utf-8':\\n        return utf8Slice(this, start, end)\\n\\n      case 'ascii':\\n        return asciiSlice(this, start, end)\\n\\n      case 'latin1':\\n      case 'binary':\\n        return latin1Slice(this, start, end)\\n\\n      case 'base64':\\n        return base64Slice(this, start, end)\\n\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return utf16leSlice(this, start, end)\\n\\n      default:\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\\n        encoding = (encoding + '').toLowerCase()\\n        loweredCase = true\\n    }\\n  }\\n}\\n\\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\\n// reliably in a browserify context because there could be multiple different\\n// copies of the 'buffer' package in use. This method works even for Buffer\\n// instances that were created from another copy of the `buffer` package.\\n// See: https://github.com/feross/buffer/issues/154\\nBuffer.prototype._isBuffer = true\\n\\nfunction swap (b, n, m) {\\n  var i = b[n]\\n  b[n] = b[m]\\n  b[m] = i\\n}\\n\\nBuffer.prototype.swap16 = function swap16 () {\\n  var len = this.length\\n  if (len % 2 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\\n  }\\n  for (var i = 0; i < len; i += 2) {\\n    swap(this, i, i + 1)\\n  }\\n  return this\\n}\\n\\nBuffer.prototype.swap32 = function swap32 () {\\n  var len = this.length\\n  if (len % 4 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\\n  }\\n  for (var i = 0; i < len; i += 4) {\\n    swap(this, i, i + 3)\\n    swap(this, i + 1, i + 2)\\n  }\\n  return this\\n}\\n\\nBuffer.prototype.swap64 = function swap64 () {\\n  var len = this.length\\n  if (len % 8 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\\n  }\\n  for (var i = 0; i < len; i += 8) {\\n    swap(this, i, i + 7)\\n    swap(this, i + 1, i + 6)\\n    swap(this, i + 2, i + 5)\\n    swap(this, i + 3, i + 4)\\n  }\\n  return this\\n}\\n\\nBuffer.prototype.toString = function toString () {\\n  var length = this.length\\n  if (length === 0) return ''\\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\\n  return slowToString.apply(this, arguments)\\n}\\n\\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\\n\\nBuffer.prototype.equals = function equals (b) {\\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\\n  if (this === b) return true\\n  return Buffer.compare(this, b) === 0\\n}\\n\\nBuffer.prototype.inspect = function inspect () {\\n  var str = ''\\n  var max = exports.INSPECT_MAX_BYTES\\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\\n  if (this.length > max) str += ' ... '\\n  return '<Buffer ' + str + '>'\\n}\\n\\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\\n  if (isInstance(target, Uint8Array)) {\\n    target = Buffer.from(target, target.offset, target.byteLength)\\n  }\\n  if (!Buffer.isBuffer(target)) {\\n    throw new TypeError(\\n      'The \\\"target\\\" argument must be one of type Buffer or Uint8Array. ' +\\n      'Received type ' + (typeof target)\\n    )\\n  }\\n\\n  if (start === undefined) {\\n    start = 0\\n  }\\n  if (end === undefined) {\\n    end = target ? target.length : 0\\n  }\\n  if (thisStart === undefined) {\\n    thisStart = 0\\n  }\\n  if (thisEnd === undefined) {\\n    thisEnd = this.length\\n  }\\n\\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\\n    throw new RangeError('out of range index')\\n  }\\n\\n  if (thisStart >= thisEnd && start >= end) {\\n    return 0\\n  }\\n  if (thisStart >= thisEnd) {\\n    return -1\\n  }\\n  if (start >= end) {\\n    return 1\\n  }\\n\\n  start >>>= 0\\n  end >>>= 0\\n  thisStart >>>= 0\\n  thisEnd >>>= 0\\n\\n  if (this === target) return 0\\n\\n  var x = thisEnd - thisStart\\n  var y = end - start\\n  var len = Math.min(x, y)\\n\\n  var thisCopy = this.slice(thisStart, thisEnd)\\n  var targetCopy = target.slice(start, end)\\n\\n  for (var i = 0; i < len; ++i) {\\n    if (thisCopy[i] !== targetCopy[i]) {\\n      x = thisCopy[i]\\n      y = targetCopy[i]\\n      break\\n    }\\n  }\\n\\n  if (x < y) return -1\\n  if (y < x) return 1\\n  return 0\\n}\\n\\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\\n//\\n// Arguments:\\n// - buffer - a Buffer to search\\n// - val - a string, Buffer, or number\\n// - byteOffset - an index into `buffer`; will be clamped to an int32\\n// - encoding - an optional encoding, relevant is val is a string\\n// - dir - true for indexOf, false for lastIndexOf\\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\\n  // Empty buffer means no match\\n  if (buffer.length === 0) return -1\\n\\n  // Normalize byteOffset\\n  if (typeof byteOffset === 'string') {\\n    encoding = byteOffset\\n    byteOffset = 0\\n  } else if (byteOffset > 0x7fffffff) {\\n    byteOffset = 0x7fffffff\\n  } else if (byteOffset < -0x80000000) {\\n    byteOffset = -0x80000000\\n  }\\n  byteOffset = +byteOffset // Coerce to Number.\\n  if (numberIsNaN(byteOffset)) {\\n    // byteOffset: it it's undefined, null, NaN, \\\"foo\\\", etc, search whole buffer\\n    byteOffset = dir ? 0 : (buffer.length - 1)\\n  }\\n\\n  // Normalize byteOffset: negative offsets start from the end of the buffer\\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\\n  if (byteOffset >= buffer.length) {\\n    if (dir) return -1\\n    else byteOffset = buffer.length - 1\\n  } else if (byteOffset < 0) {\\n    if (dir) byteOffset = 0\\n    else return -1\\n  }\\n\\n  // Normalize val\\n  if (typeof val === 'string') {\\n    val = Buffer.from(val, encoding)\\n  }\\n\\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\\n  if (Buffer.isBuffer(val)) {\\n    // Special case: looking for empty string/buffer always fails\\n    if (val.length === 0) {\\n      return -1\\n    }\\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\\n  } else if (typeof val === 'number') {\\n    val = val & 0xFF // Search for a byte value [0-255]\\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\\n      if (dir) {\\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\\n      } else {\\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\\n      }\\n    }\\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\\n  }\\n\\n  throw new TypeError('val must be string, number or Buffer')\\n}\\n\\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\\n  var indexSize = 1\\n  var arrLength = arr.length\\n  var valLength = val.length\\n\\n  if (encoding !== undefined) {\\n    encoding = String(encoding).toLowerCase()\\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\\n        encoding === 'utf16le' || encoding === 'utf-16le') {\\n      if (arr.length < 2 || val.length < 2) {\\n        return -1\\n      }\\n      indexSize = 2\\n      arrLength /= 2\\n      valLength /= 2\\n      byteOffset /= 2\\n    }\\n  }\\n\\n  function read (buf, i) {\\n    if (indexSize === 1) {\\n      return buf[i]\\n    } else {\\n      return buf.readUInt16BE(i * indexSize)\\n    }\\n  }\\n\\n  var i\\n  if (dir) {\\n    var foundIndex = -1\\n    for (i = byteOffset; i < arrLength; i++) {\\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\\n        if (foundIndex === -1) foundIndex = i\\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\\n      } else {\\n        if (foundIndex !== -1) i -= i - foundIndex\\n        foundIndex = -1\\n      }\\n    }\\n  } else {\\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\\n    for (i = byteOffset; i >= 0; i--) {\\n      var found = true\\n      for (var j = 0; j < valLength; j++) {\\n        if (read(arr, i + j) !== read(val, j)) {\\n          found = false\\n          break\\n        }\\n      }\\n      if (found) return i\\n    }\\n  }\\n\\n  return -1\\n}\\n\\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\\n  return this.indexOf(val, byteOffset, encoding) !== -1\\n}\\n\\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\\n}\\n\\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\\n}\\n\\nfunction hexWrite (buf, string, offset, length) {\\n  offset = Number(offset) || 0\\n  var remaining = buf.length - offset\\n  if (!length) {\\n    length = remaining\\n  } else {\\n    length = Number(length)\\n    if (length > remaining) {\\n      length = remaining\\n    }\\n  }\\n\\n  var strLen = string.length\\n\\n  if (length > strLen / 2) {\\n    length = strLen / 2\\n  }\\n  for (var i = 0; i < length; ++i) {\\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\\n    if (numberIsNaN(parsed)) return i\\n    buf[offset + i] = parsed\\n  }\\n  return i\\n}\\n\\nfunction utf8Write (buf, string, offset, length) {\\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\\n}\\n\\nfunction asciiWrite (buf, string, offset, length) {\\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\\n}\\n\\nfunction latin1Write (buf, string, offset, length) {\\n  return asciiWrite(buf, string, offset, length)\\n}\\n\\nfunction base64Write (buf, string, offset, length) {\\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\\n}\\n\\nfunction ucs2Write (buf, string, offset, length) {\\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\\n}\\n\\nBuffer.prototype.write = function write (string, offset, length, encoding) {\\n  // Buffer#write(string)\\n  if (offset === undefined) {\\n    encoding = 'utf8'\\n    length = this.length\\n    offset = 0\\n  // Buffer#write(string, encoding)\\n  } else if (length === undefined && typeof offset === 'string') {\\n    encoding = offset\\n    length = this.length\\n    offset = 0\\n  // Buffer#write(string, offset[, length][, encoding])\\n  } else if (isFinite(offset)) {\\n    offset = offset >>> 0\\n    if (isFinite(length)) {\\n      length = length >>> 0\\n      if (encoding === undefined) encoding = 'utf8'\\n    } else {\\n      encoding = length\\n      length = undefined\\n    }\\n  } else {\\n    throw new Error(\\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\\n    )\\n  }\\n\\n  var remaining = this.length - offset\\n  if (length === undefined || length > remaining) length = remaining\\n\\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\\n    throw new RangeError('Attempt to write outside buffer bounds')\\n  }\\n\\n  if (!encoding) encoding = 'utf8'\\n\\n  var loweredCase = false\\n  for (;;) {\\n    switch (encoding) {\\n      case 'hex':\\n        return hexWrite(this, string, offset, length)\\n\\n      case 'utf8':\\n      case 'utf-8':\\n        return utf8Write(this, string, offset, length)\\n\\n      case 'ascii':\\n        return asciiWrite(this, string, offset, length)\\n\\n      case 'latin1':\\n      case 'binary':\\n        return latin1Write(this, string, offset, length)\\n\\n      case 'base64':\\n        // Warning: maxLength not taken into account in base64Write\\n        return base64Write(this, string, offset, length)\\n\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return ucs2Write(this, string, offset, length)\\n\\n      default:\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\\n        encoding = ('' + encoding).toLowerCase()\\n        loweredCase = true\\n    }\\n  }\\n}\\n\\nBuffer.prototype.toJSON = function toJSON () {\\n  return {\\n    type: 'Buffer',\\n    data: Array.prototype.slice.call(this._arr || this, 0)\\n  }\\n}\\n\\nfunction base64Slice (buf, start, end) {\\n  if (start === 0 && end === buf.length) {\\n    return base64.fromByteArray(buf)\\n  } else {\\n    return base64.fromByteArray(buf.slice(start, end))\\n  }\\n}\\n\\nfunction utf8Slice (buf, start, end) {\\n  end = Math.min(buf.length, end)\\n  var res = []\\n\\n  var i = start\\n  while (i < end) {\\n    var firstByte = buf[i]\\n    var codePoint = null\\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\\n      : (firstByte > 0xDF) ? 3\\n        : (firstByte > 0xBF) ? 2\\n          : 1\\n\\n    if (i + bytesPerSequence <= end) {\\n      var secondByte, thirdByte, fourthByte, tempCodePoint\\n\\n      switch (bytesPerSequence) {\\n        case 1:\\n          if (firstByte < 0x80) {\\n            codePoint = firstByte\\n          }\\n          break\\n        case 2:\\n          secondByte = buf[i + 1]\\n          if ((secondByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\\n            if (tempCodePoint > 0x7F) {\\n              codePoint = tempCodePoint\\n            }\\n          }\\n          break\\n        case 3:\\n          secondByte = buf[i + 1]\\n          thirdByte = buf[i + 2]\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\\n              codePoint = tempCodePoint\\n            }\\n          }\\n          break\\n        case 4:\\n          secondByte = buf[i + 1]\\n          thirdByte = buf[i + 2]\\n          fourthByte = buf[i + 3]\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\\n              codePoint = tempCodePoint\\n            }\\n          }\\n      }\\n    }\\n\\n    if (codePoint === null) {\\n      // we did not generate a valid codePoint so insert a\\n      // replacement char (U+FFFD) and advance only 1 byte\\n      codePoint = 0xFFFD\\n      bytesPerSequence = 1\\n    } else if (codePoint > 0xFFFF) {\\n      // encode to utf16 (surrogate pair dance)\\n      codePoint -= 0x10000\\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\\n      codePoint = 0xDC00 | codePoint & 0x3FF\\n    }\\n\\n    res.push(codePoint)\\n    i += bytesPerSequence\\n  }\\n\\n  return decodeCodePointsArray(res)\\n}\\n\\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\\n// the lowest limit is Chrome, with 0x10000 args.\\n// We go 1 magnitude less, for safety\\nvar MAX_ARGUMENTS_LENGTH = 0x1000\\n\\nfunction decodeCodePointsArray (codePoints) {\\n  var len = codePoints.length\\n  if (len <= MAX_ARGUMENTS_LENGTH) {\\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\\n  }\\n\\n  // Decode in chunks to avoid \\\"call stack size exceeded\\\".\\n  var res = ''\\n  var i = 0\\n  while (i < len) {\\n    res += String.fromCharCode.apply(\\n      String,\\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\\n    )\\n  }\\n  return res\\n}\\n\\nfunction asciiSlice (buf, start, end) {\\n  var ret = ''\\n  end = Math.min(buf.length, end)\\n\\n  for (var i = start; i < end; ++i) {\\n    ret += String.fromCharCode(buf[i] & 0x7F)\\n  }\\n  return ret\\n}\\n\\nfunction latin1Slice (buf, start, end) {\\n  var ret = ''\\n  end = Math.min(buf.length, end)\\n\\n  for (var i = start; i < end; ++i) {\\n    ret += String.fromCharCode(buf[i])\\n  }\\n  return ret\\n}\\n\\nfunction hexSlice (buf, start, end) {\\n  var len = buf.length\\n\\n  if (!start || start < 0) start = 0\\n  if (!end || end < 0 || end > len) end = len\\n\\n  var out = ''\\n  for (var i = start; i < end; ++i) {\\n    out += toHex(buf[i])\\n  }\\n  return out\\n}\\n\\nfunction utf16leSlice (buf, start, end) {\\n  var bytes = buf.slice(start, end)\\n  var res = ''\\n  for (var i = 0; i < bytes.length; i += 2) {\\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\\n  }\\n  return res\\n}\\n\\nBuffer.prototype.slice = function slice (start, end) {\\n  var len = this.length\\n  start = ~~start\\n  end = end === undefined ? len : ~~end\\n\\n  if (start < 0) {\\n    start += len\\n    if (start < 0) start = 0\\n  } else if (start > len) {\\n    start = len\\n  }\\n\\n  if (end < 0) {\\n    end += len\\n    if (end < 0) end = 0\\n  } else if (end > len) {\\n    end = len\\n  }\\n\\n  if (end < start) end = start\\n\\n  var newBuf = this.subarray(start, end)\\n  // Return an augmented `Uint8Array` instance\\n  newBuf.__proto__ = Buffer.prototype\\n  return newBuf\\n}\\n\\n/*\\n * Need to make sure that buffer isn't trying to write out of bounds.\\n */\\nfunction checkOffset (offset, ext, length) {\\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\\n}\\n\\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\n\\n  var val = this[offset]\\n  var mul = 1\\n  var i = 0\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    val += this[offset + i] * mul\\n  }\\n\\n  return val\\n}\\n\\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) {\\n    checkOffset(offset, byteLength, this.length)\\n  }\\n\\n  var val = this[offset + --byteLength]\\n  var mul = 1\\n  while (byteLength > 0 && (mul *= 0x100)) {\\n    val += this[offset + --byteLength] * mul\\n  }\\n\\n  return val\\n}\\n\\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 1, this.length)\\n  return this[offset]\\n}\\n\\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  return this[offset] | (this[offset + 1] << 8)\\n}\\n\\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  return (this[offset] << 8) | this[offset + 1]\\n}\\n\\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return ((this[offset]) |\\n      (this[offset + 1] << 8) |\\n      (this[offset + 2] << 16)) +\\n      (this[offset + 3] * 0x1000000)\\n}\\n\\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return (this[offset] * 0x1000000) +\\n    ((this[offset + 1] << 16) |\\n    (this[offset + 2] << 8) |\\n    this[offset + 3])\\n}\\n\\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\n\\n  var val = this[offset]\\n  var mul = 1\\n  var i = 0\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    val += this[offset + i] * mul\\n  }\\n  mul *= 0x80\\n\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\\n\\n  return val\\n}\\n\\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\n\\n  var i = byteLength\\n  var mul = 1\\n  var val = this[offset + --i]\\n  while (i > 0 && (mul *= 0x100)) {\\n    val += this[offset + --i] * mul\\n  }\\n  mul *= 0x80\\n\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\\n\\n  return val\\n}\\n\\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 1, this.length)\\n  if (!(this[offset] & 0x80)) return (this[offset])\\n  return ((0xff - this[offset] + 1) * -1)\\n}\\n\\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  var val = this[offset] | (this[offset + 1] << 8)\\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\\n}\\n\\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  var val = this[offset + 1] | (this[offset] << 8)\\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\\n}\\n\\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return (this[offset]) |\\n    (this[offset + 1] << 8) |\\n    (this[offset + 2] << 16) |\\n    (this[offset + 3] << 24)\\n}\\n\\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return (this[offset] << 24) |\\n    (this[offset + 1] << 16) |\\n    (this[offset + 2] << 8) |\\n    (this[offset + 3])\\n}\\n\\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n  return ieee754.read(this, offset, true, 23, 4)\\n}\\n\\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n  return ieee754.read(this, offset, false, 23, 4)\\n}\\n\\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 8, this.length)\\n  return ieee754.read(this, offset, true, 52, 8)\\n}\\n\\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\\n  offset = offset >>> 0\\n  if (!noAssert) checkOffset(offset, 8, this.length)\\n  return ieee754.read(this, offset, false, 52, 8)\\n}\\n\\nfunction checkInt (buf, value, offset, ext, max, min) {\\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\\\"buffer\\\" argument must be a Buffer instance')\\n  if (value > max || value < min) throw new RangeError('\\\"value\\\" argument is out of bounds')\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\\n}\\n\\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) {\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\\n  }\\n\\n  var mul = 1\\n  var i = 0\\n  this[offset] = value & 0xFF\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    this[offset + i] = (value / mul) & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  byteLength = byteLength >>> 0\\n  if (!noAssert) {\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\\n  }\\n\\n  var i = byteLength - 1\\n  var mul = 1\\n  this[offset + i] = value & 0xFF\\n  while (--i >= 0 && (mul *= 0x100)) {\\n    this[offset + i] = (value / mul) & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\\n  this[offset] = (value & 0xff)\\n  return offset + 1\\n}\\n\\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\\n  this[offset] = (value & 0xff)\\n  this[offset + 1] = (value >>> 8)\\n  return offset + 2\\n}\\n\\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\\n  this[offset] = (value >>> 8)\\n  this[offset + 1] = (value & 0xff)\\n  return offset + 2\\n}\\n\\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\\n  this[offset + 3] = (value >>> 24)\\n  this[offset + 2] = (value >>> 16)\\n  this[offset + 1] = (value >>> 8)\\n  this[offset] = (value & 0xff)\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\\n  this[offset] = (value >>> 24)\\n  this[offset + 1] = (value >>> 16)\\n  this[offset + 2] = (value >>> 8)\\n  this[offset + 3] = (value & 0xff)\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) {\\n    var limit = Math.pow(2, (8 * byteLength) - 1)\\n\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\\n  }\\n\\n  var i = 0\\n  var mul = 1\\n  var sub = 0\\n  this[offset] = value & 0xFF\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\\n      sub = 1\\n    }\\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) {\\n    var limit = Math.pow(2, (8 * byteLength) - 1)\\n\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\\n  }\\n\\n  var i = byteLength - 1\\n  var mul = 1\\n  var sub = 0\\n  this[offset + i] = value & 0xFF\\n  while (--i >= 0 && (mul *= 0x100)) {\\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\\n      sub = 1\\n    }\\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\\n  if (value < 0) value = 0xff + value + 1\\n  this[offset] = (value & 0xff)\\n  return offset + 1\\n}\\n\\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\\n  this[offset] = (value & 0xff)\\n  this[offset + 1] = (value >>> 8)\\n  return offset + 2\\n}\\n\\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\\n  this[offset] = (value >>> 8)\\n  this[offset + 1] = (value & 0xff)\\n  return offset + 2\\n}\\n\\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\\n  this[offset] = (value & 0xff)\\n  this[offset + 1] = (value >>> 8)\\n  this[offset + 2] = (value >>> 16)\\n  this[offset + 3] = (value >>> 24)\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\\n  if (value < 0) value = 0xffffffff + value + 1\\n  this[offset] = (value >>> 24)\\n  this[offset + 1] = (value >>> 16)\\n  this[offset + 2] = (value >>> 8)\\n  this[offset + 3] = (value & 0xff)\\n  return offset + 4\\n}\\n\\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\\n  if (offset < 0) throw new RangeError('Index out of range')\\n}\\n\\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) {\\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\\n  }\\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\\n  return writeFloat(this, value, offset, true, noAssert)\\n}\\n\\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\\n  return writeFloat(this, value, offset, false, noAssert)\\n}\\n\\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\\n  value = +value\\n  offset = offset >>> 0\\n  if (!noAssert) {\\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\\n  }\\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\\n  return offset + 8\\n}\\n\\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\\n  return writeDouble(this, value, offset, true, noAssert)\\n}\\n\\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\\n  return writeDouble(this, value, offset, false, noAssert)\\n}\\n\\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\\n  if (!start) start = 0\\n  if (!end && end !== 0) end = this.length\\n  if (targetStart >= target.length) targetStart = target.length\\n  if (!targetStart) targetStart = 0\\n  if (end > 0 && end < start) end = start\\n\\n  // Copy 0 bytes; we're done\\n  if (end === start) return 0\\n  if (target.length === 0 || this.length === 0) return 0\\n\\n  // Fatal error conditions\\n  if (targetStart < 0) {\\n    throw new RangeError('targetStart out of bounds')\\n  }\\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\\n\\n  // Are we oob?\\n  if (end > this.length) end = this.length\\n  if (target.length - targetStart < end - start) {\\n    end = target.length - targetStart + start\\n  }\\n\\n  var len = end - start\\n\\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\\n    // Use built-in when available, missing from IE11\\n    this.copyWithin(targetStart, start, end)\\n  } else if (this === target && start < targetStart && targetStart < end) {\\n    // descending copy from end\\n    for (var i = len - 1; i >= 0; --i) {\\n      target[i + targetStart] = this[i + start]\\n    }\\n  } else {\\n    Uint8Array.prototype.set.call(\\n      target,\\n      this.subarray(start, end),\\n      targetStart\\n    )\\n  }\\n\\n  return len\\n}\\n\\n// Usage:\\n//    buffer.fill(number[, offset[, end]])\\n//    buffer.fill(buffer[, offset[, end]])\\n//    buffer.fill(string[, offset[, end]][, encoding])\\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\\n  // Handle string cases:\\n  if (typeof val === 'string') {\\n    if (typeof start === 'string') {\\n      encoding = start\\n      start = 0\\n      end = this.length\\n    } else if (typeof end === 'string') {\\n      encoding = end\\n      end = this.length\\n    }\\n    if (encoding !== undefined && typeof encoding !== 'string') {\\n      throw new TypeError('encoding must be a string')\\n    }\\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\\n      throw new TypeError('Unknown encoding: ' + encoding)\\n    }\\n    if (val.length === 1) {\\n      var code = val.charCodeAt(0)\\n      if ((encoding === 'utf8' && code < 128) ||\\n          encoding === 'latin1') {\\n        // Fast path: If `val` fits into a single byte, use that numeric value.\\n        val = code\\n      }\\n    }\\n  } else if (typeof val === 'number') {\\n    val = val & 255\\n  }\\n\\n  // Invalid ranges are not set to a default, so can range check early.\\n  if (start < 0 || this.length < start || this.length < end) {\\n    throw new RangeError('Out of range index')\\n  }\\n\\n  if (end <= start) {\\n    return this\\n  }\\n\\n  start = start >>> 0\\n  end = end === undefined ? this.length : end >>> 0\\n\\n  if (!val) val = 0\\n\\n  var i\\n  if (typeof val === 'number') {\\n    for (i = start; i < end; ++i) {\\n      this[i] = val\\n    }\\n  } else {\\n    var bytes = Buffer.isBuffer(val)\\n      ? val\\n      : Buffer.from(val, encoding)\\n    var len = bytes.length\\n    if (len === 0) {\\n      throw new TypeError('The value \\\"' + val +\\n        '\\\" is invalid for argument \\\"value\\\"')\\n    }\\n    for (i = 0; i < end - start; ++i) {\\n      this[i + start] = bytes[i % len]\\n    }\\n  }\\n\\n  return this\\n}\\n\\n// HELPER FUNCTIONS\\n// ================\\n\\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\\n\\nfunction base64clean (str) {\\n  // Node takes equal signs as end of the Base64 encoding\\n  str = str.split('=')[0]\\n  // Node strips out invalid characters like \\\\n and \\\\t from the string, base64-js does not\\n  str = str.trim().replace(INVALID_BASE64_RE, '')\\n  // Node converts strings with length < 2 to ''\\n  if (str.length < 2) return ''\\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\\n  while (str.length % 4 !== 0) {\\n    str = str + '='\\n  }\\n  return str\\n}\\n\\nfunction toHex (n) {\\n  if (n < 16) return '0' + n.toString(16)\\n  return n.toString(16)\\n}\\n\\nfunction utf8ToBytes (string, units) {\\n  units = units || Infinity\\n  var codePoint\\n  var length = string.length\\n  var leadSurrogate = null\\n  var bytes = []\\n\\n  for (var i = 0; i < length; ++i) {\\n    codePoint = string.charCodeAt(i)\\n\\n    // is surrogate component\\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\\n      // last char was a lead\\n      if (!leadSurrogate) {\\n        // no lead yet\\n        if (codePoint > 0xDBFF) {\\n          // unexpected trail\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n          continue\\n        } else if (i + 1 === length) {\\n          // unpaired lead\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n          continue\\n        }\\n\\n        // valid lead\\n        leadSurrogate = codePoint\\n\\n        continue\\n      }\\n\\n      // 2 leads in a row\\n      if (codePoint < 0xDC00) {\\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n        leadSurrogate = codePoint\\n        continue\\n      }\\n\\n      // valid surrogate pair\\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\\n    } else if (leadSurrogate) {\\n      // valid bmp char, but last char was a lead\\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n    }\\n\\n    leadSurrogate = null\\n\\n    // encode utf8\\n    if (codePoint < 0x80) {\\n      if ((units -= 1) < 0) break\\n      bytes.push(codePoint)\\n    } else if (codePoint < 0x800) {\\n      if ((units -= 2) < 0) break\\n      bytes.push(\\n        codePoint >> 0x6 | 0xC0,\\n        codePoint & 0x3F | 0x80\\n      )\\n    } else if (codePoint < 0x10000) {\\n      if ((units -= 3) < 0) break\\n      bytes.push(\\n        codePoint >> 0xC | 0xE0,\\n        codePoint >> 0x6 & 0x3F | 0x80,\\n        codePoint & 0x3F | 0x80\\n      )\\n    } else if (codePoint < 0x110000) {\\n      if ((units -= 4) < 0) break\\n      bytes.push(\\n        codePoint >> 0x12 | 0xF0,\\n        codePoint >> 0xC & 0x3F | 0x80,\\n        codePoint >> 0x6 & 0x3F | 0x80,\\n        codePoint & 0x3F | 0x80\\n      )\\n    } else {\\n      throw new Error('Invalid code point')\\n    }\\n  }\\n\\n  return bytes\\n}\\n\\nfunction asciiToBytes (str) {\\n  var byteArray = []\\n  for (var i = 0; i < str.length; ++i) {\\n    // Node's code seems to be doing this and not & 0x7F..\\n    byteArray.push(str.charCodeAt(i) & 0xFF)\\n  }\\n  return byteArray\\n}\\n\\nfunction utf16leToBytes (str, units) {\\n  var c, hi, lo\\n  var byteArray = []\\n  for (var i = 0; i < str.length; ++i) {\\n    if ((units -= 2) < 0) break\\n\\n    c = str.charCodeAt(i)\\n    hi = c >> 8\\n    lo = c % 256\\n    byteArray.push(lo)\\n    byteArray.push(hi)\\n  }\\n\\n  return byteArray\\n}\\n\\nfunction base64ToBytes (str) {\\n  return base64.toByteArray(base64clean(str))\\n}\\n\\nfunction blitBuffer (src, dst, offset, length) {\\n  for (var i = 0; i < length; ++i) {\\n    if ((i + offset >= dst.length) || (i >= src.length)) break\\n    dst[i + offset] = src[i]\\n  }\\n  return i\\n}\\n\\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\\n// the `instanceof` check but they should be treated as of that type.\\n// See: https://github.com/feross/buffer/issues/166\\nfunction isInstance (obj, type) {\\n  return obj instanceof type ||\\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\\n      obj.constructor.name === type.name)\\n}\\nfunction numberIsNaN (obj) {\\n  // For IE11 support\\n  return obj !== obj // eslint-disable-line no-self-compare\\n}\\n\\n}).call(this,require(\\\"buffer\\\").Buffer)\\n},{\\\"base64-js\\\":7,\\\"buffer\\\":8,\\\"ieee754\\\":41}],9:[function(require,module,exports){\\n(function (global){\\n/*! https://mths.be/punycode v1.4.1 by @mathias */\\n;(function(root) {\\n\\n\\t/** Detect free variables */\\n\\tvar freeExports = typeof exports == 'object' && exports &&\\n\\t\\t!exports.nodeType && exports;\\n\\tvar freeModule = typeof module == 'object' && module &&\\n\\t\\t!module.nodeType && module;\\n\\tvar freeGlobal = typeof global == 'object' && global;\\n\\tif (\\n\\t\\tfreeGlobal.global === freeGlobal ||\\n\\t\\tfreeGlobal.window === freeGlobal ||\\n\\t\\tfreeGlobal.self === freeGlobal\\n\\t) {\\n\\t\\troot = freeGlobal;\\n\\t}\\n\\n\\t/**\\n\\t * The `punycode` object.\\n\\t * @name punycode\\n\\t * @type Object\\n\\t */\\n\\tvar punycode,\\n\\n\\t/** Highest positive signed 32-bit float value */\\n\\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\\n\\n\\t/** Bootstring parameters */\\n\\tbase = 36,\\n\\ttMin = 1,\\n\\ttMax = 26,\\n\\tskew = 38,\\n\\tdamp = 700,\\n\\tinitialBias = 72,\\n\\tinitialN = 128, // 0x80\\n\\tdelimiter = '-', // '\\\\x2D'\\n\\n\\t/** Regular expressions */\\n\\tregexPunycode = /^xn--/,\\n\\tregexNonASCII = /[^\\\\x20-\\\\x7E]/, // unprintable ASCII chars + non-ASCII chars\\n\\tregexSeparators = /[\\\\x2E\\\\u3002\\\\uFF0E\\\\uFF61]/g, // RFC 3490 separators\\n\\n\\t/** Error messages */\\n\\terrors = {\\n\\t\\t'overflow': 'Overflow: input needs wider integers to process',\\n\\t\\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\\n\\t\\t'invalid-input': 'Invalid input'\\n\\t},\\n\\n\\t/** Convenience shortcuts */\\n\\tbaseMinusTMin = base - tMin,\\n\\tfloor = Math.floor,\\n\\tstringFromCharCode = String.fromCharCode,\\n\\n\\t/** Temporary variable */\\n\\tkey;\\n\\n\\t/*--------------------------------------------------------------------------*/\\n\\n\\t/**\\n\\t * A generic error utility function.\\n\\t * @private\\n\\t * @param {String} type The error type.\\n\\t * @returns {Error} Throws a `RangeError` with the applicable error message.\\n\\t */\\n\\tfunction error(type) {\\n\\t\\tthrow new RangeError(errors[type]);\\n\\t}\\n\\n\\t/**\\n\\t * A generic `Array#map` utility function.\\n\\t * @private\\n\\t * @param {Array} array The array to iterate over.\\n\\t * @param {Function} callback The function that gets called for every array\\n\\t * item.\\n\\t * @returns {Array} A new array of values returned by the callback function.\\n\\t */\\n\\tfunction map(array, fn) {\\n\\t\\tvar length = array.length;\\n\\t\\tvar result = [];\\n\\t\\twhile (length--) {\\n\\t\\t\\tresult[length] = fn(array[length]);\\n\\t\\t}\\n\\t\\treturn result;\\n\\t}\\n\\n\\t/**\\n\\t * A simple `Array#map`-like wrapper to work with domain name strings or email\\n\\t * addresses.\\n\\t * @private\\n\\t * @param {String} domain The domain name or email address.\\n\\t * @param {Function} callback The function that gets called for every\\n\\t * character.\\n\\t * @returns {Array} A new string of characters returned by the callback\\n\\t * function.\\n\\t */\\n\\tfunction mapDomain(string, fn) {\\n\\t\\tvar parts = string.split('@');\\n\\t\\tvar result = '';\\n\\t\\tif (parts.length > 1) {\\n\\t\\t\\t// In email addresses, only the domain name should be punycoded. Leave\\n\\t\\t\\t// the local part (i.e. everything up to `@`) intact.\\n\\t\\t\\tresult = parts[0] + '@';\\n\\t\\t\\tstring = parts[1];\\n\\t\\t}\\n\\t\\t// Avoid `split(regex)` for IE8 compatibility. See #17.\\n\\t\\tstring = string.replace(regexSeparators, '\\\\x2E');\\n\\t\\tvar labels = string.split('.');\\n\\t\\tvar encoded = map(labels, fn).join('.');\\n\\t\\treturn result + encoded;\\n\\t}\\n\\n\\t/**\\n\\t * Creates an array containing the numeric code points of each Unicode\\n\\t * character in the string. While JavaScript uses UCS-2 internally,\\n\\t * this function will convert a pair of surrogate halves (each of which\\n\\t * UCS-2 exposes as separate characters) into a single code point,\\n\\t * matching UTF-16.\\n\\t * @see `punycode.ucs2.encode`\\n\\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\\n\\t * @memberOf punycode.ucs2\\n\\t * @name decode\\n\\t * @param {String} string The Unicode input string (UCS-2).\\n\\t * @returns {Array} The new array of code points.\\n\\t */\\n\\tfunction ucs2decode(string) {\\n\\t\\tvar output = [],\\n\\t\\t    counter = 0,\\n\\t\\t    length = string.length,\\n\\t\\t    value,\\n\\t\\t    extra;\\n\\t\\twhile (counter < length) {\\n\\t\\t\\tvalue = string.charCodeAt(counter++);\\n\\t\\t\\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\\n\\t\\t\\t\\t// high surrogate, and there is a next character\\n\\t\\t\\t\\textra = string.charCodeAt(counter++);\\n\\t\\t\\t\\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\\n\\t\\t\\t\\t\\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t// unmatched surrogate; only append this code unit, in case the next\\n\\t\\t\\t\\t\\t// code unit is the high surrogate of a surrogate pair\\n\\t\\t\\t\\t\\toutput.push(value);\\n\\t\\t\\t\\t\\tcounter--;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\toutput.push(value);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn output;\\n\\t}\\n\\n\\t/**\\n\\t * Creates a string based on an array of numeric code points.\\n\\t * @see `punycode.ucs2.decode`\\n\\t * @memberOf punycode.ucs2\\n\\t * @name encode\\n\\t * @param {Array} codePoints The array of numeric code points.\\n\\t * @returns {String} The new Unicode string (UCS-2).\\n\\t */\\n\\tfunction ucs2encode(array) {\\n\\t\\treturn map(array, function(value) {\\n\\t\\t\\tvar output = '';\\n\\t\\t\\tif (value > 0xFFFF) {\\n\\t\\t\\t\\tvalue -= 0x10000;\\n\\t\\t\\t\\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\\n\\t\\t\\t\\tvalue = 0xDC00 | value & 0x3FF;\\n\\t\\t\\t}\\n\\t\\t\\toutput += stringFromCharCode(value);\\n\\t\\t\\treturn output;\\n\\t\\t}).join('');\\n\\t}\\n\\n\\t/**\\n\\t * Converts a basic code point into a digit/integer.\\n\\t * @see `digitToBasic()`\\n\\t * @private\\n\\t * @param {Number} codePoint The basic numeric code point value.\\n\\t * @returns {Number} The numeric value of a basic code point (for use in\\n\\t * representing integers) in the range `0` to `base - 1`, or `base` if\\n\\t * the code point does not represent a value.\\n\\t */\\n\\tfunction basicToDigit(codePoint) {\\n\\t\\tif (codePoint - 48 < 10) {\\n\\t\\t\\treturn codePoint - 22;\\n\\t\\t}\\n\\t\\tif (codePoint - 65 < 26) {\\n\\t\\t\\treturn codePoint - 65;\\n\\t\\t}\\n\\t\\tif (codePoint - 97 < 26) {\\n\\t\\t\\treturn codePoint - 97;\\n\\t\\t}\\n\\t\\treturn base;\\n\\t}\\n\\n\\t/**\\n\\t * Converts a digit/integer into a basic code point.\\n\\t * @see `basicToDigit()`\\n\\t * @private\\n\\t * @param {Number} digit The numeric value of a basic code point.\\n\\t * @returns {Number} The basic code point whose value (when used for\\n\\t * representing integers) is `digit`, which needs to be in the range\\n\\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\\n\\t * used; else, the lowercase form is used. The behavior is undefined\\n\\t * if `flag` is non-zero and `digit` has no uppercase form.\\n\\t */\\n\\tfunction digitToBasic(digit, flag) {\\n\\t\\t//  0..25 map to ASCII a..z or A..Z\\n\\t\\t// 26..35 map to ASCII 0..9\\n\\t\\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\\n\\t}\\n\\n\\t/**\\n\\t * Bias adaptation function as per section 3.4 of RFC 3492.\\n\\t * https://tools.ietf.org/html/rfc3492#section-3.4\\n\\t * @private\\n\\t */\\n\\tfunction adapt(delta, numPoints, firstTime) {\\n\\t\\tvar k = 0;\\n\\t\\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\\n\\t\\tdelta += floor(delta / numPoints);\\n\\t\\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\\n\\t\\t\\tdelta = floor(delta / baseMinusTMin);\\n\\t\\t}\\n\\t\\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\\n\\t}\\n\\n\\t/**\\n\\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\\n\\t * symbols.\\n\\t * @memberOf punycode\\n\\t * @param {String} input The Punycode string of ASCII-only symbols.\\n\\t * @returns {String} The resulting string of Unicode symbols.\\n\\t */\\n\\tfunction decode(input) {\\n\\t\\t// Don't use UCS-2\\n\\t\\tvar output = [],\\n\\t\\t    inputLength = input.length,\\n\\t\\t    out,\\n\\t\\t    i = 0,\\n\\t\\t    n = initialN,\\n\\t\\t    bias = initialBias,\\n\\t\\t    basic,\\n\\t\\t    j,\\n\\t\\t    index,\\n\\t\\t    oldi,\\n\\t\\t    w,\\n\\t\\t    k,\\n\\t\\t    digit,\\n\\t\\t    t,\\n\\t\\t    /** Cached calculation results */\\n\\t\\t    baseMinusT;\\n\\n\\t\\t// Handle the basic code points: let `basic` be the number of input code\\n\\t\\t// points before the last delimiter, or `0` if there is none, then copy\\n\\t\\t// the first basic code points to the output.\\n\\n\\t\\tbasic = input.lastIndexOf(delimiter);\\n\\t\\tif (basic < 0) {\\n\\t\\t\\tbasic = 0;\\n\\t\\t}\\n\\n\\t\\tfor (j = 0; j < basic; ++j) {\\n\\t\\t\\t// if it's not a basic code point\\n\\t\\t\\tif (input.charCodeAt(j) >= 0x80) {\\n\\t\\t\\t\\terror('not-basic');\\n\\t\\t\\t}\\n\\t\\t\\toutput.push(input.charCodeAt(j));\\n\\t\\t}\\n\\n\\t\\t// Main decoding loop: start just after the last delimiter if any basic code\\n\\t\\t// points were copied; start at the beginning otherwise.\\n\\n\\t\\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\\n\\n\\t\\t\\t// `index` is the index of the next character to be consumed.\\n\\t\\t\\t// Decode a generalized variable-length integer into `delta`,\\n\\t\\t\\t// which gets added to `i`. The overflow checking is easier\\n\\t\\t\\t// if we increase `i` as we go, then subtract off its starting\\n\\t\\t\\t// value at the end to obtain `delta`.\\n\\t\\t\\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\\n\\n\\t\\t\\t\\tif (index >= inputLength) {\\n\\t\\t\\t\\t\\terror('invalid-input');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdigit = basicToDigit(input.charCodeAt(index++));\\n\\n\\t\\t\\t\\tif (digit >= base || digit > floor((maxInt - i) / w)) {\\n\\t\\t\\t\\t\\terror('overflow');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\ti += digit * w;\\n\\t\\t\\t\\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\\n\\n\\t\\t\\t\\tif (digit < t) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tbaseMinusT = base - t;\\n\\t\\t\\t\\tif (w > floor(maxInt / baseMinusT)) {\\n\\t\\t\\t\\t\\terror('overflow');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tw *= baseMinusT;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tout = output.length + 1;\\n\\t\\t\\tbias = adapt(i - oldi, out, oldi == 0);\\n\\n\\t\\t\\t// `i` was supposed to wrap around from `out` to `0`,\\n\\t\\t\\t// incrementing `n` each time, so we'll fix that now:\\n\\t\\t\\tif (floor(i / out) > maxInt - n) {\\n\\t\\t\\t\\terror('overflow');\\n\\t\\t\\t}\\n\\n\\t\\t\\tn += floor(i / out);\\n\\t\\t\\ti %= out;\\n\\n\\t\\t\\t// Insert `n` at position `i` of the output\\n\\t\\t\\toutput.splice(i++, 0, n);\\n\\n\\t\\t}\\n\\n\\t\\treturn ucs2encode(output);\\n\\t}\\n\\n\\t/**\\n\\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\\n\\t * Punycode string of ASCII-only symbols.\\n\\t * @memberOf punycode\\n\\t * @param {String} input The string of Unicode symbols.\\n\\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\\n\\t */\\n\\tfunction encode(input) {\\n\\t\\tvar n,\\n\\t\\t    delta,\\n\\t\\t    handledCPCount,\\n\\t\\t    basicLength,\\n\\t\\t    bias,\\n\\t\\t    j,\\n\\t\\t    m,\\n\\t\\t    q,\\n\\t\\t    k,\\n\\t\\t    t,\\n\\t\\t    currentValue,\\n\\t\\t    output = [],\\n\\t\\t    /** `inputLength` will hold the number of code points in `input`. */\\n\\t\\t    inputLength,\\n\\t\\t    /** Cached calculation results */\\n\\t\\t    handledCPCountPlusOne,\\n\\t\\t    baseMinusT,\\n\\t\\t    qMinusT;\\n\\n\\t\\t// Convert the input in UCS-2 to Unicode\\n\\t\\tinput = ucs2decode(input);\\n\\n\\t\\t// Cache the length\\n\\t\\tinputLength = input.length;\\n\\n\\t\\t// Initialize the state\\n\\t\\tn = initialN;\\n\\t\\tdelta = 0;\\n\\t\\tbias = initialBias;\\n\\n\\t\\t// Handle the basic code points\\n\\t\\tfor (j = 0; j < inputLength; ++j) {\\n\\t\\t\\tcurrentValue = input[j];\\n\\t\\t\\tif (currentValue < 0x80) {\\n\\t\\t\\t\\toutput.push(stringFromCharCode(currentValue));\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\thandledCPCount = basicLength = output.length;\\n\\n\\t\\t// `handledCPCount` is the number of code points that have been handled;\\n\\t\\t// `basicLength` is the number of basic code points.\\n\\n\\t\\t// Finish the basic string - if it is not empty - with a delimiter\\n\\t\\tif (basicLength) {\\n\\t\\t\\toutput.push(delimiter);\\n\\t\\t}\\n\\n\\t\\t// Main encoding loop:\\n\\t\\twhile (handledCPCount < inputLength) {\\n\\n\\t\\t\\t// All non-basic code points < n have been handled already. Find the next\\n\\t\\t\\t// larger one:\\n\\t\\t\\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\\n\\t\\t\\t\\tcurrentValue = input[j];\\n\\t\\t\\t\\tif (currentValue >= n && currentValue < m) {\\n\\t\\t\\t\\t\\tm = currentValue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\\n\\t\\t\\t// but guard against overflow\\n\\t\\t\\thandledCPCountPlusOne = handledCPCount + 1;\\n\\t\\t\\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\\n\\t\\t\\t\\terror('overflow');\\n\\t\\t\\t}\\n\\n\\t\\t\\tdelta += (m - n) * handledCPCountPlusOne;\\n\\t\\t\\tn = m;\\n\\n\\t\\t\\tfor (j = 0; j < inputLength; ++j) {\\n\\t\\t\\t\\tcurrentValue = input[j];\\n\\n\\t\\t\\t\\tif (currentValue < n && ++delta > maxInt) {\\n\\t\\t\\t\\t\\terror('overflow');\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (currentValue == n) {\\n\\t\\t\\t\\t\\t// Represent delta as a generalized variable-length integer\\n\\t\\t\\t\\t\\tfor (q = delta, k = base; /* no condition */; k += base) {\\n\\t\\t\\t\\t\\t\\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\\n\\t\\t\\t\\t\\t\\tif (q < t) {\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tqMinusT = q - t;\\n\\t\\t\\t\\t\\t\\tbaseMinusT = base - t;\\n\\t\\t\\t\\t\\t\\toutput.push(\\n\\t\\t\\t\\t\\t\\t\\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\tq = floor(qMinusT / baseMinusT);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\\n\\t\\t\\t\\t\\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\\n\\t\\t\\t\\t\\tdelta = 0;\\n\\t\\t\\t\\t\\t++handledCPCount;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t++delta;\\n\\t\\t\\t++n;\\n\\n\\t\\t}\\n\\t\\treturn output.join('');\\n\\t}\\n\\n\\t/**\\n\\t * Converts a Punycode string representing a domain name or an email address\\n\\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\\n\\t * it doesn't matter if you call it on a string that has already been\\n\\t * converted to Unicode.\\n\\t * @memberOf punycode\\n\\t * @param {String} input The Punycoded domain name or email address to\\n\\t * convert to Unicode.\\n\\t * @returns {String} The Unicode representation of the given Punycode\\n\\t * string.\\n\\t */\\n\\tfunction toUnicode(input) {\\n\\t\\treturn mapDomain(input, function(string) {\\n\\t\\t\\treturn regexPunycode.test(string)\\n\\t\\t\\t\\t? decode(string.slice(4).toLowerCase())\\n\\t\\t\\t\\t: string;\\n\\t\\t});\\n\\t}\\n\\n\\t/**\\n\\t * Converts a Unicode string representing a domain name or an email address to\\n\\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\\n\\t * i.e. it doesn't matter if you call it with a domain that's already in\\n\\t * ASCII.\\n\\t * @memberOf punycode\\n\\t * @param {String} input The domain name or email address to convert, as a\\n\\t * Unicode string.\\n\\t * @returns {String} The Punycode representation of the given domain name or\\n\\t * email address.\\n\\t */\\n\\tfunction toASCII(input) {\\n\\t\\treturn mapDomain(input, function(string) {\\n\\t\\t\\treturn regexNonASCII.test(string)\\n\\t\\t\\t\\t? 'xn--' + encode(string)\\n\\t\\t\\t\\t: string;\\n\\t\\t});\\n\\t}\\n\\n\\t/*--------------------------------------------------------------------------*/\\n\\n\\t/** Define the public API */\\n\\tpunycode = {\\n\\t\\t/**\\n\\t\\t * A string representing the current Punycode.js version number.\\n\\t\\t * @memberOf punycode\\n\\t\\t * @type String\\n\\t\\t */\\n\\t\\t'version': '1.4.1',\\n\\t\\t/**\\n\\t\\t * An object of methods to convert from JavaScript's internal character\\n\\t\\t * representation (UCS-2) to Unicode code points, and back.\\n\\t\\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\\n\\t\\t * @memberOf punycode\\n\\t\\t * @type Object\\n\\t\\t */\\n\\t\\t'ucs2': {\\n\\t\\t\\t'decode': ucs2decode,\\n\\t\\t\\t'encode': ucs2encode\\n\\t\\t},\\n\\t\\t'decode': decode,\\n\\t\\t'encode': encode,\\n\\t\\t'toASCII': toASCII,\\n\\t\\t'toUnicode': toUnicode\\n\\t};\\n\\n\\t/** Expose `punycode` */\\n\\t// Some AMD build optimizers, like r.js, check for specific condition patterns\\n\\t// like the following:\\n\\tif (\\n\\t\\ttypeof define == 'function' &&\\n\\t\\ttypeof define.amd == 'object' &&\\n\\t\\tdefine.amd\\n\\t) {\\n\\t\\tdefine('punycode', function() {\\n\\t\\t\\treturn punycode;\\n\\t\\t});\\n\\t} else if (freeExports && freeModule) {\\n\\t\\tif (module.exports == freeExports) {\\n\\t\\t\\t// in Node.js, io.js, or RingoJS v0.8.0+\\n\\t\\t\\tfreeModule.exports = punycode;\\n\\t\\t} else {\\n\\t\\t\\t// in Narwhal or RingoJS v0.7.0-\\n\\t\\t\\tfor (key in punycode) {\\n\\t\\t\\t\\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} else {\\n\\t\\t// in Rhino or a web browser\\n\\t\\troot.punycode = punycode;\\n\\t}\\n\\n}(this));\\n\\n}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n},{}],10:[function(require,module,exports){\\nvar basex = require('base-x')\\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\\n\\nmodule.exports = basex(ALPHABET)\\n\\n},{\\\"base-x\\\":6}],11:[function(require,module,exports){\\n/* eslint quote-props: off */\\n'use strict'\\n\\nconst names = Object.freeze({\\n  'identity': 0x00,\\n  'sha1': 0x11,\\n  'sha2-256': 0x12,\\n  'sha2-512': 0x13,\\n  'sha3-512': 0x14,\\n  'sha3-384': 0x15,\\n  'sha3-256': 0x16,\\n  'sha3-224': 0x17,\\n  'shake-128': 0x18,\\n  'shake-256': 0x19,\\n  'keccak-224': 0x1a,\\n  'keccak-256': 0x1b,\\n  'keccak-384': 0x1c,\\n  'keccak-512': 0x1d,\\n  'blake3': 0x1e,\\n  'murmur3-128': 0x22,\\n  'murmur3-32': 0x23,\\n  'dbl-sha2-256': 0x56,\\n  'md4': 0xd4,\\n  'md5': 0xd5,\\n  'bmt': 0xd6,\\n  'sha2-256-trunc254-padded': 0x1012,\\n  'ripemd-128': 0x1052,\\n  'ripemd-160': 0x1053,\\n  'ripemd-256': 0x1054,\\n  'ripemd-320': 0x1055,\\n  'x11': 0x1100,\\n  'sm3-256': 0x534d,\\n  'blake2b-8': 0xb201,\\n  'blake2b-16': 0xb202,\\n  'blake2b-24': 0xb203,\\n  'blake2b-32': 0xb204,\\n  'blake2b-40': 0xb205,\\n  'blake2b-48': 0xb206,\\n  'blake2b-56': 0xb207,\\n  'blake2b-64': 0xb208,\\n  'blake2b-72': 0xb209,\\n  'blake2b-80': 0xb20a,\\n  'blake2b-88': 0xb20b,\\n  'blake2b-96': 0xb20c,\\n  'blake2b-104': 0xb20d,\\n  'blake2b-112': 0xb20e,\\n  'blake2b-120': 0xb20f,\\n  'blake2b-128': 0xb210,\\n  'blake2b-136': 0xb211,\\n  'blake2b-144': 0xb212,\\n  'blake2b-152': 0xb213,\\n  'blake2b-160': 0xb214,\\n  'blake2b-168': 0xb215,\\n  'blake2b-176': 0xb216,\\n  'blake2b-184': 0xb217,\\n  'blake2b-192': 0xb218,\\n  'blake2b-200': 0xb219,\\n  'blake2b-208': 0xb21a,\\n  'blake2b-216': 0xb21b,\\n  'blake2b-224': 0xb21c,\\n  'blake2b-232': 0xb21d,\\n  'blake2b-240': 0xb21e,\\n  'blake2b-248': 0xb21f,\\n  'blake2b-256': 0xb220,\\n  'blake2b-264': 0xb221,\\n  'blake2b-272': 0xb222,\\n  'blake2b-280': 0xb223,\\n  'blake2b-288': 0xb224,\\n  'blake2b-296': 0xb225,\\n  'blake2b-304': 0xb226,\\n  'blake2b-312': 0xb227,\\n  'blake2b-320': 0xb228,\\n  'blake2b-328': 0xb229,\\n  'blake2b-336': 0xb22a,\\n  'blake2b-344': 0xb22b,\\n  'blake2b-352': 0xb22c,\\n  'blake2b-360': 0xb22d,\\n  'blake2b-368': 0xb22e,\\n  'blake2b-376': 0xb22f,\\n  'blake2b-384': 0xb230,\\n  'blake2b-392': 0xb231,\\n  'blake2b-400': 0xb232,\\n  'blake2b-408': 0xb233,\\n  'blake2b-416': 0xb234,\\n  'blake2b-424': 0xb235,\\n  'blake2b-432': 0xb236,\\n  'blake2b-440': 0xb237,\\n  'blake2b-448': 0xb238,\\n  'blake2b-456': 0xb239,\\n  'blake2b-464': 0xb23a,\\n  'blake2b-472': 0xb23b,\\n  'blake2b-480': 0xb23c,\\n  'blake2b-488': 0xb23d,\\n  'blake2b-496': 0xb23e,\\n  'blake2b-504': 0xb23f,\\n  'blake2b-512': 0xb240,\\n  'blake2s-8': 0xb241,\\n  'blake2s-16': 0xb242,\\n  'blake2s-24': 0xb243,\\n  'blake2s-32': 0xb244,\\n  'blake2s-40': 0xb245,\\n  'blake2s-48': 0xb246,\\n  'blake2s-56': 0xb247,\\n  'blake2s-64': 0xb248,\\n  'blake2s-72': 0xb249,\\n  'blake2s-80': 0xb24a,\\n  'blake2s-88': 0xb24b,\\n  'blake2s-96': 0xb24c,\\n  'blake2s-104': 0xb24d,\\n  'blake2s-112': 0xb24e,\\n  'blake2s-120': 0xb24f,\\n  'blake2s-128': 0xb250,\\n  'blake2s-136': 0xb251,\\n  'blake2s-144': 0xb252,\\n  'blake2s-152': 0xb253,\\n  'blake2s-160': 0xb254,\\n  'blake2s-168': 0xb255,\\n  'blake2s-176': 0xb256,\\n  'blake2s-184': 0xb257,\\n  'blake2s-192': 0xb258,\\n  'blake2s-200': 0xb259,\\n  'blake2s-208': 0xb25a,\\n  'blake2s-216': 0xb25b,\\n  'blake2s-224': 0xb25c,\\n  'blake2s-232': 0xb25d,\\n  'blake2s-240': 0xb25e,\\n  'blake2s-248': 0xb25f,\\n  'blake2s-256': 0xb260,\\n  'skein256-8': 0xb301,\\n  'skein256-16': 0xb302,\\n  'skein256-24': 0xb303,\\n  'skein256-32': 0xb304,\\n  'skein256-40': 0xb305,\\n  'skein256-48': 0xb306,\\n  'skein256-56': 0xb307,\\n  'skein256-64': 0xb308,\\n  'skein256-72': 0xb309,\\n  'skein256-80': 0xb30a,\\n  'skein256-88': 0xb30b,\\n  'skein256-96': 0xb30c,\\n  'skein256-104': 0xb30d,\\n  'skein256-112': 0xb30e,\\n  'skein256-120': 0xb30f,\\n  'skein256-128': 0xb310,\\n  'skein256-136': 0xb311,\\n  'skein256-144': 0xb312,\\n  'skein256-152': 0xb313,\\n  'skein256-160': 0xb314,\\n  'skein256-168': 0xb315,\\n  'skein256-176': 0xb316,\\n  'skein256-184': 0xb317,\\n  'skein256-192': 0xb318,\\n  'skein256-200': 0xb319,\\n  'skein256-208': 0xb31a,\\n  'skein256-216': 0xb31b,\\n  'skein256-224': 0xb31c,\\n  'skein256-232': 0xb31d,\\n  'skein256-240': 0xb31e,\\n  'skein256-248': 0xb31f,\\n  'skein256-256': 0xb320,\\n  'skein512-8': 0xb321,\\n  'skein512-16': 0xb322,\\n  'skein512-24': 0xb323,\\n  'skein512-32': 0xb324,\\n  'skein512-40': 0xb325,\\n  'skein512-48': 0xb326,\\n  'skein512-56': 0xb327,\\n  'skein512-64': 0xb328,\\n  'skein512-72': 0xb329,\\n  'skein512-80': 0xb32a,\\n  'skein512-88': 0xb32b,\\n  'skein512-96': 0xb32c,\\n  'skein512-104': 0xb32d,\\n  'skein512-112': 0xb32e,\\n  'skein512-120': 0xb32f,\\n  'skein512-128': 0xb330,\\n  'skein512-136': 0xb331,\\n  'skein512-144': 0xb332,\\n  'skein512-152': 0xb333,\\n  'skein512-160': 0xb334,\\n  'skein512-168': 0xb335,\\n  'skein512-176': 0xb336,\\n  'skein512-184': 0xb337,\\n  'skein512-192': 0xb338,\\n  'skein512-200': 0xb339,\\n  'skein512-208': 0xb33a,\\n  'skein512-216': 0xb33b,\\n  'skein512-224': 0xb33c,\\n  'skein512-232': 0xb33d,\\n  'skein512-240': 0xb33e,\\n  'skein512-248': 0xb33f,\\n  'skein512-256': 0xb340,\\n  'skein512-264': 0xb341,\\n  'skein512-272': 0xb342,\\n  'skein512-280': 0xb343,\\n  'skein512-288': 0xb344,\\n  'skein512-296': 0xb345,\\n  'skein512-304': 0xb346,\\n  'skein512-312': 0xb347,\\n  'skein512-320': 0xb348,\\n  'skein512-328': 0xb349,\\n  'skein512-336': 0xb34a,\\n  'skein512-344': 0xb34b,\\n  'skein512-352': 0xb34c,\\n  'skein512-360': 0xb34d,\\n  'skein512-368': 0xb34e,\\n  'skein512-376': 0xb34f,\\n  'skein512-384': 0xb350,\\n  'skein512-392': 0xb351,\\n  'skein512-400': 0xb352,\\n  'skein512-408': 0xb353,\\n  'skein512-416': 0xb354,\\n  'skein512-424': 0xb355,\\n  'skein512-432': 0xb356,\\n  'skein512-440': 0xb357,\\n  'skein512-448': 0xb358,\\n  'skein512-456': 0xb359,\\n  'skein512-464': 0xb35a,\\n  'skein512-472': 0xb35b,\\n  'skein512-480': 0xb35c,\\n  'skein512-488': 0xb35d,\\n  'skein512-496': 0xb35e,\\n  'skein512-504': 0xb35f,\\n  'skein512-512': 0xb360,\\n  'skein1024-8': 0xb361,\\n  'skein1024-16': 0xb362,\\n  'skein1024-24': 0xb363,\\n  'skein1024-32': 0xb364,\\n  'skein1024-40': 0xb365,\\n  'skein1024-48': 0xb366,\\n  'skein1024-56': 0xb367,\\n  'skein1024-64': 0xb368,\\n  'skein1024-72': 0xb369,\\n  'skein1024-80': 0xb36a,\\n  'skein1024-88': 0xb36b,\\n  'skein1024-96': 0xb36c,\\n  'skein1024-104': 0xb36d,\\n  'skein1024-112': 0xb36e,\\n  'skein1024-120': 0xb36f,\\n  'skein1024-128': 0xb370,\\n  'skein1024-136': 0xb371,\\n  'skein1024-144': 0xb372,\\n  'skein1024-152': 0xb373,\\n  'skein1024-160': 0xb374,\\n  'skein1024-168': 0xb375,\\n  'skein1024-176': 0xb376,\\n  'skein1024-184': 0xb377,\\n  'skein1024-192': 0xb378,\\n  'skein1024-200': 0xb379,\\n  'skein1024-208': 0xb37a,\\n  'skein1024-216': 0xb37b,\\n  'skein1024-224': 0xb37c,\\n  'skein1024-232': 0xb37d,\\n  'skein1024-240': 0xb37e,\\n  'skein1024-248': 0xb37f,\\n  'skein1024-256': 0xb380,\\n  'skein1024-264': 0xb381,\\n  'skein1024-272': 0xb382,\\n  'skein1024-280': 0xb383,\\n  'skein1024-288': 0xb384,\\n  'skein1024-296': 0xb385,\\n  'skein1024-304': 0xb386,\\n  'skein1024-312': 0xb387,\\n  'skein1024-320': 0xb388,\\n  'skein1024-328': 0xb389,\\n  'skein1024-336': 0xb38a,\\n  'skein1024-344': 0xb38b,\\n  'skein1024-352': 0xb38c,\\n  'skein1024-360': 0xb38d,\\n  'skein1024-368': 0xb38e,\\n  'skein1024-376': 0xb38f,\\n  'skein1024-384': 0xb390,\\n  'skein1024-392': 0xb391,\\n  'skein1024-400': 0xb392,\\n  'skein1024-408': 0xb393,\\n  'skein1024-416': 0xb394,\\n  'skein1024-424': 0xb395,\\n  'skein1024-432': 0xb396,\\n  'skein1024-440': 0xb397,\\n  'skein1024-448': 0xb398,\\n  'skein1024-456': 0xb399,\\n  'skein1024-464': 0xb39a,\\n  'skein1024-472': 0xb39b,\\n  'skein1024-480': 0xb39c,\\n  'skein1024-488': 0xb39d,\\n  'skein1024-496': 0xb39e,\\n  'skein1024-504': 0xb39f,\\n  'skein1024-512': 0xb3a0,\\n  'skein1024-520': 0xb3a1,\\n  'skein1024-528': 0xb3a2,\\n  'skein1024-536': 0xb3a3,\\n  'skein1024-544': 0xb3a4,\\n  'skein1024-552': 0xb3a5,\\n  'skein1024-560': 0xb3a6,\\n  'skein1024-568': 0xb3a7,\\n  'skein1024-576': 0xb3a8,\\n  'skein1024-584': 0xb3a9,\\n  'skein1024-592': 0xb3aa,\\n  'skein1024-600': 0xb3ab,\\n  'skein1024-608': 0xb3ac,\\n  'skein1024-616': 0xb3ad,\\n  'skein1024-624': 0xb3ae,\\n  'skein1024-632': 0xb3af,\\n  'skein1024-640': 0xb3b0,\\n  'skein1024-648': 0xb3b1,\\n  'skein1024-656': 0xb3b2,\\n  'skein1024-664': 0xb3b3,\\n  'skein1024-672': 0xb3b4,\\n  'skein1024-680': 0xb3b5,\\n  'skein1024-688': 0xb3b6,\\n  'skein1024-696': 0xb3b7,\\n  'skein1024-704': 0xb3b8,\\n  'skein1024-712': 0xb3b9,\\n  'skein1024-720': 0xb3ba,\\n  'skein1024-728': 0xb3bb,\\n  'skein1024-736': 0xb3bc,\\n  'skein1024-744': 0xb3bd,\\n  'skein1024-752': 0xb3be,\\n  'skein1024-760': 0xb3bf,\\n  'skein1024-768': 0xb3c0,\\n  'skein1024-776': 0xb3c1,\\n  'skein1024-784': 0xb3c2,\\n  'skein1024-792': 0xb3c3,\\n  'skein1024-800': 0xb3c4,\\n  'skein1024-808': 0xb3c5,\\n  'skein1024-816': 0xb3c6,\\n  'skein1024-824': 0xb3c7,\\n  'skein1024-832': 0xb3c8,\\n  'skein1024-840': 0xb3c9,\\n  'skein1024-848': 0xb3ca,\\n  'skein1024-856': 0xb3cb,\\n  'skein1024-864': 0xb3cc,\\n  'skein1024-872': 0xb3cd,\\n  'skein1024-880': 0xb3ce,\\n  'skein1024-888': 0xb3cf,\\n  'skein1024-896': 0xb3d0,\\n  'skein1024-904': 0xb3d1,\\n  'skein1024-912': 0xb3d2,\\n  'skein1024-920': 0xb3d3,\\n  'skein1024-928': 0xb3d4,\\n  'skein1024-936': 0xb3d5,\\n  'skein1024-944': 0xb3d6,\\n  'skein1024-952': 0xb3d7,\\n  'skein1024-960': 0xb3d8,\\n  'skein1024-968': 0xb3d9,\\n  'skein1024-976': 0xb3da,\\n  'skein1024-984': 0xb3db,\\n  'skein1024-992': 0xb3dc,\\n  'skein1024-1000': 0xb3dd,\\n  'skein1024-1008': 0xb3de,\\n  'skein1024-1016': 0xb3df,\\n  'skein1024-1024': 0xb3e0,\\n  'poseidon-bls12_381-a2-fc1': 0xb401,\\n  'poseidon-bls12_381-a2-fc1-sc': 0xb402\\n})\\n\\nmodule.exports = { names }\\n\\n},{}],12:[function(require,module,exports){\\n/* eslint-disable guard-for-in */\\n/**\\n * Multihash implementation in JavaScript.\\n *\\n * @module multihash\\n */\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst multibase = require('multibase')\\nconst varint = require('varint')\\nconst { names } = require('./constants')\\n\\nconst codes = {}\\n\\nfor (const key in names) {\\n  codes[names[key]] = key\\n}\\nexports.names = names\\nexports.codes = Object.freeze(codes)\\n\\n/**\\n * Convert the given multihash to a hex encoded string.\\n *\\n * @param {Buffer} hash\\n * @returns {string}\\n */\\nexports.toHexString = function toHexString (hash) {\\n  if (!Buffer.isBuffer(hash)) {\\n    throw new Error('must be passed a buffer')\\n  }\\n\\n  return hash.toString('hex')\\n}\\n\\n/**\\n * Convert the given hex encoded string to a multihash.\\n *\\n * @param {string} hash\\n * @returns {Buffer}\\n */\\nexports.fromHexString = function fromHexString (hash) {\\n  return Buffer.from(hash, 'hex')\\n}\\n\\n/**\\n * Convert the given multihash to a base58 encoded string.\\n *\\n * @param {Buffer} hash\\n * @returns {string}\\n */\\nexports.toB58String = function toB58String (hash) {\\n  if (!Buffer.isBuffer(hash)) {\\n    throw new Error('must be passed a buffer')\\n  }\\n\\n  return multibase.encode('base58btc', hash).toString().slice(1)\\n}\\n\\n/**\\n * Convert the given base58 encoded string to a multihash.\\n *\\n * @param {string|Buffer} hash\\n * @returns {Buffer}\\n */\\nexports.fromB58String = function fromB58String (hash) {\\n  let encoded = hash\\n  if (Buffer.isBuffer(hash)) {\\n    encoded = hash.toString()\\n  }\\n\\n  return multibase.decode('z' + encoded)\\n}\\n\\n/**\\n * Decode a hash from the given multihash.\\n *\\n * @param {Buffer} buf\\n * @returns {{code: number, name: string, length: number, digest: Buffer}} result\\n */\\nexports.decode = function decode (buf) {\\n  if (!(Buffer.isBuffer(buf))) {\\n    throw new Error('multihash must be a Buffer')\\n  }\\n\\n  if (buf.length < 2) {\\n    throw new Error('multihash too short. must be > 2 bytes.')\\n  }\\n\\n  const code = varint.decode(buf)\\n  if (!exports.isValidCode(code)) {\\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\\n  }\\n  buf = buf.slice(varint.decode.bytes)\\n\\n  const len = varint.decode(buf)\\n  if (len < 0) {\\n    throw new Error(`multihash invalid length: ${len}`)\\n  }\\n  buf = buf.slice(varint.decode.bytes)\\n\\n  if (buf.length !== len) {\\n    throw new Error(`multihash length inconsistent: 0x${buf.toString('hex')}`)\\n  }\\n\\n  return {\\n    code,\\n    name: codes[code],\\n    length: len,\\n    digest: buf\\n  }\\n}\\n\\n/**\\n *  Encode a hash digest along with the specified function code.\\n *\\n * > **Note:** the length is derived from the length of the digest itself.\\n *\\n * @param {Buffer} digest\\n * @param {string|number} code\\n * @param {number} [length]\\n * @returns {Buffer}\\n */\\nexports.encode = function encode (digest, code, length) {\\n  if (!digest || code === undefined) {\\n    throw new Error('multihash encode requires at least two args: digest, code')\\n  }\\n\\n  // ensure it's a hashfunction code.\\n  const hashfn = exports.coerceCode(code)\\n\\n  if (!(Buffer.isBuffer(digest))) {\\n    throw new Error('digest should be a Buffer')\\n  }\\n\\n  if (length == null) {\\n    length = digest.length\\n  }\\n\\n  if (length && digest.length !== length) {\\n    throw new Error('digest length should be equal to specified length.')\\n  }\\n\\n  return Buffer.concat([\\n    Buffer.from(varint.encode(hashfn)),\\n    Buffer.from(varint.encode(length)),\\n    digest\\n  ])\\n}\\n\\n/**\\n * Converts a hash function name into the matching code.\\n * If passed a number it will return the number if it's a valid code.\\n * @param {string|number} name\\n * @returns {number}\\n */\\nexports.coerceCode = function coerceCode (name) {\\n  let code = name\\n\\n  if (typeof name === 'string') {\\n    if (names[name] === undefined) {\\n      throw new Error(`Unrecognized hash function named: ${name}`)\\n    }\\n    code = names[name]\\n  }\\n\\n  if (typeof code !== 'number') {\\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\\n  }\\n\\n  if (codes[code] === undefined && !exports.isAppCode(code)) {\\n    throw new Error(`Unrecognized function code: ${code}`)\\n  }\\n\\n  return code\\n}\\n\\n/**\\n * Checks wether a code is part of the app range\\n *\\n * @param {number} code\\n * @returns {boolean}\\n */\\nexports.isAppCode = function appCode (code) {\\n  return code > 0 && code < 0x10\\n}\\n\\n/**\\n * Checks whether a multihash code is valid.\\n *\\n * @param {number} code\\n * @returns {boolean}\\n */\\nexports.isValidCode = function validCode (code) {\\n  if (exports.isAppCode(code)) {\\n    return true\\n  }\\n\\n  if (codes[code]) {\\n    return true\\n  }\\n\\n  return false\\n}\\n\\n/**\\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\\n *\\n * @param {Buffer} multihash\\n * @returns {undefined}\\n * @throws {Error}\\n */\\nfunction validate (multihash) {\\n  exports.decode(multihash) // throws if bad.\\n}\\nexports.validate = validate\\n\\n/**\\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\\n *\\n * @param {Buffer} multihash\\n * @returns {undefined}\\n * @throws {Error}\\n */\\nexports.prefix = function prefix (multihash) {\\n  validate(multihash)\\n\\n  return multihash.slice(0, 2)\\n}\\n\\n},{\\\"./constants\\\":11,\\\"buffer\\\":8,\\\"multibase\\\":58,\\\"varint\\\":83}],13:[function(require,module,exports){\\n'use strict'\\n\\nconst mh = require('multihashes')\\nconst { Buffer } = require('buffer')\\nvar CIDUtil = {\\n  /**\\n   * Test if the given input is a valid CID object.\\n   * Returns an error message if it is not.\\n   * Returns undefined if it is a valid CID.\\n   *\\n   * @param {any} other\\n   * @returns {string}\\n   */\\n  checkCIDComponents: function (other) {\\n    if (other == null) {\\n      return 'null values are not valid CIDs'\\n    }\\n\\n    if (!(other.version === 0 || other.version === 1)) {\\n      return 'Invalid version, must be a number equal to 1 or 0'\\n    }\\n\\n    if (typeof other.codec !== 'string') {\\n      return 'codec must be string'\\n    }\\n\\n    if (other.version === 0) {\\n      if (other.codec !== 'dag-pb') {\\n        return \\\"codec must be 'dag-pb' for CIDv0\\\"\\n      }\\n      if (other.multibaseName !== 'base58btc') {\\n        return \\\"multibaseName must be 'base58btc' for CIDv0\\\"\\n      }\\n    }\\n\\n    if (!Buffer.isBuffer(other.multihash)) {\\n      return 'multihash must be a Buffer'\\n    }\\n\\n    try {\\n      mh.validate(other.multihash)\\n    } catch (err) {\\n      let errorMsg = err.message\\n      if (!errorMsg) { // Just in case mh.validate() throws an error with empty error message\\n        errorMsg = 'Multihash validation failed'\\n      }\\n      return errorMsg\\n    }\\n  }\\n}\\n\\nmodule.exports = CIDUtil\\n\\n},{\\\"buffer\\\":8,\\\"multihashes\\\":12}],14:[function(require,module,exports){\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst mh = require('multihashes')\\nconst multibase = require('multibase')\\nconst multicodec = require('multicodec')\\nconst codecs = require('multicodec/src/base-table.json')\\nconst CIDUtil = require('./cid-util')\\nconst withIs = require('class-is')\\n\\n/**\\n * @typedef {Object} SerializedCID\\n * @param {string} codec\\n * @param {number} version\\n * @param {Buffer} multihash\\n */\\n\\n/**\\n * Test if the given input is a CID.\\n * @function isCID\\n * @memberof CID\\n * @static\\n * @param {any} other\\n * @returns {bool}\\n */\\n\\n/**\\n * Class representing a CID `<mbase><version><mcodec><mhash>`\\n * , as defined in [ipld/cid](https://github.com/multiformats/cid).\\n * @class CID\\n */\\nclass CID {\\n  /**\\n   * Create a new CID.\\n   *\\n   * The algorithm for argument input is roughly:\\n   * ```\\n   * if (cid)\\n   *   -> create a copy\\n   * else if (str)\\n   *   if (1st char is on multibase table) -> CID String\\n   *   else -> bs58 encoded multihash\\n   * else if (Buffer)\\n   *   if (1st byte is 0 or 1) -> CID\\n   *   else -> multihash\\n   * else if (Number)\\n   *   -> construct CID by parts\\n   * ```\\n   *\\n   * @param {string|Buffer|CID} version\\n   * @param {string} [codec]\\n   * @param {Buffer} [multihash]\\n   * @param {string} [multibaseName]\\n   *\\n   * @example\\n   * new CID(<version>, <codec>, <multihash>, <multibaseName>)\\n   * new CID(<cidStr>)\\n   * new CID(<cid.buffer>)\\n   * new CID(<multihash>)\\n   * new CID(<bs58 encoded multihash>)\\n   * new CID(<cid>)\\n   */\\n  constructor (version, codec, multihash, multibaseName) {\\n    if (_CID.isCID(version)) {\\n      // version is an exising CID instance\\n      const cid = version\\n      this.version = cid.version\\n      this.codec = cid.codec\\n      this.multihash = Buffer.from(cid.multihash)\\n      // Default guard for when a CID < 0.7 is passed with no multibaseName\\n      this.multibaseName = cid.multibaseName || (cid.version === 0 ? 'base58btc' : 'base32')\\n      return\\n    }\\n\\n    if (typeof version === 'string') {\\n      // e.g. 'base32' or false\\n      const baseName = multibase.isEncoded(version)\\n      if (baseName) {\\n        // version is a CID String encoded with multibase, so v1\\n        const cid = multibase.decode(version)\\n        this.version = parseInt(cid.slice(0, 1).toString('hex'), 16)\\n        this.codec = multicodec.getCodec(cid.slice(1))\\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\\n        this.multibaseName = baseName\\n      } else {\\n        // version is a base58btc string multihash, so v0\\n        this.version = 0\\n        this.codec = 'dag-pb'\\n        this.multihash = mh.fromB58String(version)\\n        this.multibaseName = 'base58btc'\\n      }\\n      CID.validateCID(this)\\n      Object.defineProperty(this, 'string', { value: version })\\n      return\\n    }\\n\\n    if (Buffer.isBuffer(version)) {\\n      const firstByte = version.slice(0, 1)\\n      const v = parseInt(firstByte.toString('hex'), 16)\\n      if (v === 1) {\\n        // version is a CID buffer\\n        const cid = version\\n        this.version = v\\n        this.codec = multicodec.getCodec(cid.slice(1))\\n        this.multihash = multicodec.rmPrefix(cid.slice(1))\\n        this.multibaseName = 'base32'\\n      } else {\\n        // version is a raw multihash buffer, so v0\\n        this.version = 0\\n        this.codec = 'dag-pb'\\n        this.multihash = version\\n        this.multibaseName = 'base58btc'\\n      }\\n      CID.validateCID(this)\\n      return\\n    }\\n\\n    // otherwise, assemble the CID from the parameters\\n\\n    /**\\n     * @type {number}\\n     */\\n    this.version = version\\n\\n    /**\\n     * @type {string}\\n     */\\n    this.codec = codec\\n\\n    /**\\n     * @type {Buffer}\\n     */\\n    this.multihash = multihash\\n\\n    /**\\n     * @type {string}\\n     */\\n    this.multibaseName = multibaseName || (version === 0 ? 'base58btc' : 'base32')\\n\\n    CID.validateCID(this)\\n  }\\n\\n  /**\\n   * The CID as a `Buffer`\\n   *\\n   * @return {Buffer}\\n   * @readonly\\n   *\\n   * @memberOf CID\\n   */\\n  get buffer () {\\n    let buffer = this._buffer\\n\\n    if (!buffer) {\\n      if (this.version === 0) {\\n        buffer = this.multihash\\n      } else if (this.version === 1) {\\n        buffer = Buffer.concat([\\n          Buffer.from('01', 'hex'),\\n          multicodec.getCodeVarint(this.codec),\\n          this.multihash\\n        ])\\n      } else {\\n        throw new Error('unsupported version')\\n      }\\n\\n      // Cache this buffer so it doesn't have to be recreated\\n      Object.defineProperty(this, '_buffer', { value: buffer })\\n    }\\n\\n    return buffer\\n  }\\n\\n  /**\\n   * Get the prefix of the CID.\\n   *\\n   * @returns {Buffer}\\n   * @readonly\\n   */\\n  get prefix () {\\n    return Buffer.concat([\\n      Buffer.from(`0${this.version}`, 'hex'),\\n      multicodec.getCodeVarint(this.codec),\\n      mh.prefix(this.multihash)\\n    ])\\n  }\\n\\n  /**\\n   * Convert to a CID of version `0`.\\n   *\\n   * @returns {CID}\\n   */\\n  toV0 () {\\n    if (this.codec !== 'dag-pb') {\\n      throw new Error('Cannot convert a non dag-pb CID to CIDv0')\\n    }\\n\\n    const { name, length } = mh.decode(this.multihash)\\n\\n    if (name !== 'sha2-256') {\\n      throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\\n    }\\n\\n    if (length !== 32) {\\n      throw new Error('Cannot convert non 32 byte multihash CID to CIDv0')\\n    }\\n\\n    return new _CID(0, this.codec, this.multihash)\\n  }\\n\\n  /**\\n   * Convert to a CID of version `1`.\\n   *\\n   * @returns {CID}\\n   */\\n  toV1 () {\\n    return new _CID(1, this.codec, this.multihash)\\n  }\\n\\n  /**\\n   * Encode the CID into a string.\\n   *\\n   * @param {string} [base=this.multibaseName] - Base encoding to use.\\n   * @returns {string}\\n   */\\n  toBaseEncodedString (base = this.multibaseName) {\\n    if (this.string && base === this.multibaseName) {\\n      return this.string\\n    }\\n    let str = null\\n    if (this.version === 0) {\\n      if (base !== 'base58btc') {\\n        throw new Error('not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()')\\n      }\\n      str = mh.toB58String(this.multihash)\\n    } else if (this.version === 1) {\\n      str = multibase.encode(base, this.buffer).toString()\\n    } else {\\n      throw new Error('unsupported version')\\n    }\\n    if (base === this.multibaseName) {\\n      // cache the string value\\n      Object.defineProperty(this, 'string', { value: str })\\n    }\\n    return str\\n  }\\n\\n  /**\\n   * CID(QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n)\\n   *\\n   * @returns {String}\\n   */\\n  [Symbol.for('nodejs.util.inspect.custom')] () {\\n    return 'CID(' + this.toString() + ')'\\n  }\\n\\n  toString (base) {\\n    return this.toBaseEncodedString(base)\\n  }\\n\\n  /**\\n   * Serialize to a plain object.\\n   *\\n   * @returns {SerializedCID}\\n   */\\n  toJSON () {\\n    return {\\n      codec: this.codec,\\n      version: this.version,\\n      hash: this.multihash\\n    }\\n  }\\n\\n  /**\\n   * Compare equality with another CID.\\n   *\\n   * @param {CID} other\\n   * @returns {bool}\\n   */\\n  equals (other) {\\n    return this.codec === other.codec &&\\n      this.version === other.version &&\\n      this.multihash.equals(other.multihash)\\n  }\\n\\n  /**\\n   * Test if the given input is a valid CID object.\\n   * Throws if it is not.\\n   *\\n   * @param {any} other\\n   * @returns {void}\\n   */\\n  static validateCID (other) {\\n    const errorMsg = CIDUtil.checkCIDComponents(other)\\n    if (errorMsg) {\\n      throw new Error(errorMsg)\\n    }\\n  }\\n}\\n\\nconst _CID = withIs(CID, {\\n  className: 'CID',\\n  symbolName: '@ipld/js-cid/CID'\\n})\\n\\n_CID.codecs = codecs\\n\\nmodule.exports = _CID\\n\\n},{\\\"./cid-util\\\":13,\\\"buffer\\\":8,\\\"class-is\\\":15,\\\"multibase\\\":58,\\\"multicodec\\\":62,\\\"multicodec/src/base-table.json\\\":60,\\\"multihashes\\\":12}],15:[function(require,module,exports){\\n'use strict';\\n\\nfunction withIs(Class, { className, symbolName }) {\\n    const symbol = Symbol.for(symbolName);\\n\\n    const ClassIsWrapper = {\\n        // The code below assigns the class wrapper to an object to trick\\n        // JavaScript engines to show the name of the extended class when\\n        // logging an instances.\\n        // We are assigning an anonymous class (class wrapper) to the object\\n        // with key `className` to keep the correct name.\\n        // If this is not supported it falls back to logging `ClassIsWrapper`.\\n        [className]: class extends Class {\\n            constructor(...args) {\\n                super(...args);\\n                Object.defineProperty(this, symbol, { value: true });\\n            }\\n\\n            get [Symbol.toStringTag]() {\\n                return className;\\n            }\\n        },\\n    }[className];\\n\\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\\n\\n    return ClassIsWrapper;\\n}\\n\\nfunction withIsProto(Class, { className, symbolName, withoutNew }) {\\n    const symbol = Symbol.for(symbolName);\\n\\n    /* eslint-disable object-shorthand */\\n    const ClassIsWrapper = {\\n        [className]: function (...args) {\\n            if (withoutNew && !(this instanceof ClassIsWrapper)) {\\n                return new ClassIsWrapper(...args);\\n            }\\n\\n            const _this = Class.call(this, ...args) || this;\\n\\n            if (_this && !_this[symbol]) {\\n                Object.defineProperty(_this, symbol, { value: true });\\n            }\\n\\n            return _this;\\n        },\\n    }[className];\\n    /* eslint-enable object-shorthand */\\n\\n    ClassIsWrapper.prototype = Object.create(Class.prototype);\\n    ClassIsWrapper.prototype.constructor = ClassIsWrapper;\\n\\n    Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\\n        get() {\\n            return className;\\n        },\\n    });\\n\\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\\n\\n    return ClassIsWrapper;\\n}\\n\\nmodule.exports = withIs;\\nmodule.exports.proto = withIsProto;\\n\\n},{}],16:[function(require,module,exports){\\nmodule.exports={\\n  \\\"identity\\\": 0,\\n  \\\"ip4\\\": 4,\\n  \\\"tcp\\\": 6,\\n  \\\"sha1\\\": 17,\\n  \\\"sha2-256\\\": 18,\\n  \\\"sha2-512\\\": 19,\\n  \\\"sha3-512\\\": 20,\\n  \\\"sha3-384\\\": 21,\\n  \\\"sha3-256\\\": 22,\\n  \\\"sha3-224\\\": 23,\\n  \\\"shake-128\\\": 24,\\n  \\\"shake-256\\\": 25,\\n  \\\"keccak-224\\\": 26,\\n  \\\"keccak-256\\\": 27,\\n  \\\"keccak-384\\\": 28,\\n  \\\"keccak-512\\\": 29,\\n  \\\"blake3\\\": 30,\\n  \\\"dccp\\\": 33,\\n  \\\"murmur3-128\\\": 34,\\n  \\\"murmur3-32\\\": 35,\\n  \\\"ip6\\\": 41,\\n  \\\"ip6zone\\\": 42,\\n  \\\"path\\\": 47,\\n  \\\"multicodec\\\": 48,\\n  \\\"multihash\\\": 49,\\n  \\\"multiaddr\\\": 50,\\n  \\\"multibase\\\": 51,\\n  \\\"dns\\\": 53,\\n  \\\"dns4\\\": 54,\\n  \\\"dns6\\\": 55,\\n  \\\"dnsaddr\\\": 56,\\n  \\\"protobuf\\\": 80,\\n  \\\"cbor\\\": 81,\\n  \\\"raw\\\": 85,\\n  \\\"dbl-sha2-256\\\": 86,\\n  \\\"rlp\\\": 96,\\n  \\\"bencode\\\": 99,\\n  \\\"dag-pb\\\": 112,\\n  \\\"dag-cbor\\\": 113,\\n  \\\"libp2p-key\\\": 114,\\n  \\\"git-raw\\\": 120,\\n  \\\"torrent-info\\\": 123,\\n  \\\"torrent-file\\\": 124,\\n  \\\"leofcoin-block\\\": 129,\\n  \\\"leofcoin-tx\\\": 130,\\n  \\\"leofcoin-pr\\\": 131,\\n  \\\"sctp\\\": 132,\\n  \\\"dag-jose\\\": 133,\\n  \\\"dag-cose\\\": 134,\\n  \\\"eth-block\\\": 144,\\n  \\\"eth-block-list\\\": 145,\\n  \\\"eth-tx-trie\\\": 146,\\n  \\\"eth-tx\\\": 147,\\n  \\\"eth-tx-receipt-trie\\\": 148,\\n  \\\"eth-tx-receipt\\\": 149,\\n  \\\"eth-state-trie\\\": 150,\\n  \\\"eth-account-snapshot\\\": 151,\\n  \\\"eth-storage-trie\\\": 152,\\n  \\\"bitcoin-block\\\": 176,\\n  \\\"bitcoin-tx\\\": 177,\\n  \\\"bitcoin-witness-commitment\\\": 178,\\n  \\\"zcash-block\\\": 192,\\n  \\\"zcash-tx\\\": 193,\\n  \\\"stellar-block\\\": 208,\\n  \\\"stellar-tx\\\": 209,\\n  \\\"md4\\\": 212,\\n  \\\"md5\\\": 213,\\n  \\\"bmt\\\": 214,\\n  \\\"decred-block\\\": 224,\\n  \\\"decred-tx\\\": 225,\\n  \\\"ipld-ns\\\": 226,\\n  \\\"ipfs-ns\\\": 227,\\n  \\\"swarm-ns\\\": 228,\\n  \\\"ipns-ns\\\": 229,\\n  \\\"zeronet\\\": 230,\\n  \\\"secp256k1-pub\\\": 231,\\n  \\\"bls12_381-g1-pub\\\": 234,\\n  \\\"bls12_381-g2-pub\\\": 235,\\n  \\\"x25519-pub\\\": 236,\\n  \\\"ed25519-pub\\\": 237,\\n  \\\"dash-block\\\": 240,\\n  \\\"dash-tx\\\": 241,\\n  \\\"swarm-manifest\\\": 250,\\n  \\\"swarm-feed\\\": 251,\\n  \\\"udp\\\": 273,\\n  \\\"p2p-webrtc-star\\\": 275,\\n  \\\"p2p-webrtc-direct\\\": 276,\\n  \\\"p2p-stardust\\\": 277,\\n  \\\"p2p-circuit\\\": 290,\\n  \\\"dag-json\\\": 297,\\n  \\\"udt\\\": 301,\\n  \\\"utp\\\": 302,\\n  \\\"unix\\\": 400,\\n  \\\"p2p\\\": 421,\\n  \\\"ipfs\\\": 421,\\n  \\\"https\\\": 443,\\n  \\\"onion\\\": 444,\\n  \\\"onion3\\\": 445,\\n  \\\"garlic64\\\": 446,\\n  \\\"garlic32\\\": 447,\\n  \\\"tls\\\": 448,\\n  \\\"quic\\\": 460,\\n  \\\"ws\\\": 477,\\n  \\\"wss\\\": 478,\\n  \\\"p2p-websocket-star\\\": 479,\\n  \\\"http\\\": 480,\\n  \\\"json\\\": 512,\\n  \\\"messagepack\\\": 513,\\n  \\\"libp2p-peer-record\\\": 769,\\n  \\\"sha2-256-trunc254-padded\\\": 4114,\\n  \\\"ripemd-128\\\": 4178,\\n  \\\"ripemd-160\\\": 4179,\\n  \\\"ripemd-256\\\": 4180,\\n  \\\"ripemd-320\\\": 4181,\\n  \\\"x11\\\": 4352,\\n  \\\"sm3-256\\\": 21325,\\n  \\\"blake2b-8\\\": 45569,\\n  \\\"blake2b-16\\\": 45570,\\n  \\\"blake2b-24\\\": 45571,\\n  \\\"blake2b-32\\\": 45572,\\n  \\\"blake2b-40\\\": 45573,\\n  \\\"blake2b-48\\\": 45574,\\n  \\\"blake2b-56\\\": 45575,\\n  \\\"blake2b-64\\\": 45576,\\n  \\\"blake2b-72\\\": 45577,\\n  \\\"blake2b-80\\\": 45578,\\n  \\\"blake2b-88\\\": 45579,\\n  \\\"blake2b-96\\\": 45580,\\n  \\\"blake2b-104\\\": 45581,\\n  \\\"blake2b-112\\\": 45582,\\n  \\\"blake2b-120\\\": 45583,\\n  \\\"blake2b-128\\\": 45584,\\n  \\\"blake2b-136\\\": 45585,\\n  \\\"blake2b-144\\\": 45586,\\n  \\\"blake2b-152\\\": 45587,\\n  \\\"blake2b-160\\\": 45588,\\n  \\\"blake2b-168\\\": 45589,\\n  \\\"blake2b-176\\\": 45590,\\n  \\\"blake2b-184\\\": 45591,\\n  \\\"blake2b-192\\\": 45592,\\n  \\\"blake2b-200\\\": 45593,\\n  \\\"blake2b-208\\\": 45594,\\n  \\\"blake2b-216\\\": 45595,\\n  \\\"blake2b-224\\\": 45596,\\n  \\\"blake2b-232\\\": 45597,\\n  \\\"blake2b-240\\\": 45598,\\n  \\\"blake2b-248\\\": 45599,\\n  \\\"blake2b-256\\\": 45600,\\n  \\\"blake2b-264\\\": 45601,\\n  \\\"blake2b-272\\\": 45602,\\n  \\\"blake2b-280\\\": 45603,\\n  \\\"blake2b-288\\\": 45604,\\n  \\\"blake2b-296\\\": 45605,\\n  \\\"blake2b-304\\\": 45606,\\n  \\\"blake2b-312\\\": 45607,\\n  \\\"blake2b-320\\\": 45608,\\n  \\\"blake2b-328\\\": 45609,\\n  \\\"blake2b-336\\\": 45610,\\n  \\\"blake2b-344\\\": 45611,\\n  \\\"blake2b-352\\\": 45612,\\n  \\\"blake2b-360\\\": 45613,\\n  \\\"blake2b-368\\\": 45614,\\n  \\\"blake2b-376\\\": 45615,\\n  \\\"blake2b-384\\\": 45616,\\n  \\\"blake2b-392\\\": 45617,\\n  \\\"blake2b-400\\\": 45618,\\n  \\\"blake2b-408\\\": 45619,\\n  \\\"blake2b-416\\\": 45620,\\n  \\\"blake2b-424\\\": 45621,\\n  \\\"blake2b-432\\\": 45622,\\n  \\\"blake2b-440\\\": 45623,\\n  \\\"blake2b-448\\\": 45624,\\n  \\\"blake2b-456\\\": 45625,\\n  \\\"blake2b-464\\\": 45626,\\n  \\\"blake2b-472\\\": 45627,\\n  \\\"blake2b-480\\\": 45628,\\n  \\\"blake2b-488\\\": 45629,\\n  \\\"blake2b-496\\\": 45630,\\n  \\\"blake2b-504\\\": 45631,\\n  \\\"blake2b-512\\\": 45632,\\n  \\\"blake2s-8\\\": 45633,\\n  \\\"blake2s-16\\\": 45634,\\n  \\\"blake2s-24\\\": 45635,\\n  \\\"blake2s-32\\\": 45636,\\n  \\\"blake2s-40\\\": 45637,\\n  \\\"blake2s-48\\\": 45638,\\n  \\\"blake2s-56\\\": 45639,\\n  \\\"blake2s-64\\\": 45640,\\n  \\\"blake2s-72\\\": 45641,\\n  \\\"blake2s-80\\\": 45642,\\n  \\\"blake2s-88\\\": 45643,\\n  \\\"blake2s-96\\\": 45644,\\n  \\\"blake2s-104\\\": 45645,\\n  \\\"blake2s-112\\\": 45646,\\n  \\\"blake2s-120\\\": 45647,\\n  \\\"blake2s-128\\\": 45648,\\n  \\\"blake2s-136\\\": 45649,\\n  \\\"blake2s-144\\\": 45650,\\n  \\\"blake2s-152\\\": 45651,\\n  \\\"blake2s-160\\\": 45652,\\n  \\\"blake2s-168\\\": 45653,\\n  \\\"blake2s-176\\\": 45654,\\n  \\\"blake2s-184\\\": 45655,\\n  \\\"blake2s-192\\\": 45656,\\n  \\\"blake2s-200\\\": 45657,\\n  \\\"blake2s-208\\\": 45658,\\n  \\\"blake2s-216\\\": 45659,\\n  \\\"blake2s-224\\\": 45660,\\n  \\\"blake2s-232\\\": 45661,\\n  \\\"blake2s-240\\\": 45662,\\n  \\\"blake2s-248\\\": 45663,\\n  \\\"blake2s-256\\\": 45664,\\n  \\\"skein256-8\\\": 45825,\\n  \\\"skein256-16\\\": 45826,\\n  \\\"skein256-24\\\": 45827,\\n  \\\"skein256-32\\\": 45828,\\n  \\\"skein256-40\\\": 45829,\\n  \\\"skein256-48\\\": 45830,\\n  \\\"skein256-56\\\": 45831,\\n  \\\"skein256-64\\\": 45832,\\n  \\\"skein256-72\\\": 45833,\\n  \\\"skein256-80\\\": 45834,\\n  \\\"skein256-88\\\": 45835,\\n  \\\"skein256-96\\\": 45836,\\n  \\\"skein256-104\\\": 45837,\\n  \\\"skein256-112\\\": 45838,\\n  \\\"skein256-120\\\": 45839,\\n  \\\"skein256-128\\\": 45840,\\n  \\\"skein256-136\\\": 45841,\\n  \\\"skein256-144\\\": 45842,\\n  \\\"skein256-152\\\": 45843,\\n  \\\"skein256-160\\\": 45844,\\n  \\\"skein256-168\\\": 45845,\\n  \\\"skein256-176\\\": 45846,\\n  \\\"skein256-184\\\": 45847,\\n  \\\"skein256-192\\\": 45848,\\n  \\\"skein256-200\\\": 45849,\\n  \\\"skein256-208\\\": 45850,\\n  \\\"skein256-216\\\": 45851,\\n  \\\"skein256-224\\\": 45852,\\n  \\\"skein256-232\\\": 45853,\\n  \\\"skein256-240\\\": 45854,\\n  \\\"skein256-248\\\": 45855,\\n  \\\"skein256-256\\\": 45856,\\n  \\\"skein512-8\\\": 45857,\\n  \\\"skein512-16\\\": 45858,\\n  \\\"skein512-24\\\": 45859,\\n  \\\"skein512-32\\\": 45860,\\n  \\\"skein512-40\\\": 45861,\\n  \\\"skein512-48\\\": 45862,\\n  \\\"skein512-56\\\": 45863,\\n  \\\"skein512-64\\\": 45864,\\n  \\\"skein512-72\\\": 45865,\\n  \\\"skein512-80\\\": 45866,\\n  \\\"skein512-88\\\": 45867,\\n  \\\"skein512-96\\\": 45868,\\n  \\\"skein512-104\\\": 45869,\\n  \\\"skein512-112\\\": 45870,\\n  \\\"skein512-120\\\": 45871,\\n  \\\"skein512-128\\\": 45872,\\n  \\\"skein512-136\\\": 45873,\\n  \\\"skein512-144\\\": 45874,\\n  \\\"skein512-152\\\": 45875,\\n  \\\"skein512-160\\\": 45876,\\n  \\\"skein512-168\\\": 45877,\\n  \\\"skein512-176\\\": 45878,\\n  \\\"skein512-184\\\": 45879,\\n  \\\"skein512-192\\\": 45880,\\n  \\\"skein512-200\\\": 45881,\\n  \\\"skein512-208\\\": 45882,\\n  \\\"skein512-216\\\": 45883,\\n  \\\"skein512-224\\\": 45884,\\n  \\\"skein512-232\\\": 45885,\\n  \\\"skein512-240\\\": 45886,\\n  \\\"skein512-248\\\": 45887,\\n  \\\"skein512-256\\\": 45888,\\n  \\\"skein512-264\\\": 45889,\\n  \\\"skein512-272\\\": 45890,\\n  \\\"skein512-280\\\": 45891,\\n  \\\"skein512-288\\\": 45892,\\n  \\\"skein512-296\\\": 45893,\\n  \\\"skein512-304\\\": 45894,\\n  \\\"skein512-312\\\": 45895,\\n  \\\"skein512-320\\\": 45896,\\n  \\\"skein512-328\\\": 45897,\\n  \\\"skein512-336\\\": 45898,\\n  \\\"skein512-344\\\": 45899,\\n  \\\"skein512-352\\\": 45900,\\n  \\\"skein512-360\\\": 45901,\\n  \\\"skein512-368\\\": 45902,\\n  \\\"skein512-376\\\": 45903,\\n  \\\"skein512-384\\\": 45904,\\n  \\\"skein512-392\\\": 45905,\\n  \\\"skein512-400\\\": 45906,\\n  \\\"skein512-408\\\": 45907,\\n  \\\"skein512-416\\\": 45908,\\n  \\\"skein512-424\\\": 45909,\\n  \\\"skein512-432\\\": 45910,\\n  \\\"skein512-440\\\": 45911,\\n  \\\"skein512-448\\\": 45912,\\n  \\\"skein512-456\\\": 45913,\\n  \\\"skein512-464\\\": 45914,\\n  \\\"skein512-472\\\": 45915,\\n  \\\"skein512-480\\\": 45916,\\n  \\\"skein512-488\\\": 45917,\\n  \\\"skein512-496\\\": 45918,\\n  \\\"skein512-504\\\": 45919,\\n  \\\"skein512-512\\\": 45920,\\n  \\\"skein1024-8\\\": 45921,\\n  \\\"skein1024-16\\\": 45922,\\n  \\\"skein1024-24\\\": 45923,\\n  \\\"skein1024-32\\\": 45924,\\n  \\\"skein1024-40\\\": 45925,\\n  \\\"skein1024-48\\\": 45926,\\n  \\\"skein1024-56\\\": 45927,\\n  \\\"skein1024-64\\\": 45928,\\n  \\\"skein1024-72\\\": 45929,\\n  \\\"skein1024-80\\\": 45930,\\n  \\\"skein1024-88\\\": 45931,\\n  \\\"skein1024-96\\\": 45932,\\n  \\\"skein1024-104\\\": 45933,\\n  \\\"skein1024-112\\\": 45934,\\n  \\\"skein1024-120\\\": 45935,\\n  \\\"skein1024-128\\\": 45936,\\n  \\\"skein1024-136\\\": 45937,\\n  \\\"skein1024-144\\\": 45938,\\n  \\\"skein1024-152\\\": 45939,\\n  \\\"skein1024-160\\\": 45940,\\n  \\\"skein1024-168\\\": 45941,\\n  \\\"skein1024-176\\\": 45942,\\n  \\\"skein1024-184\\\": 45943,\\n  \\\"skein1024-192\\\": 45944,\\n  \\\"skein1024-200\\\": 45945,\\n  \\\"skein1024-208\\\": 45946,\\n  \\\"skein1024-216\\\": 45947,\\n  \\\"skein1024-224\\\": 45948,\\n  \\\"skein1024-232\\\": 45949,\\n  \\\"skein1024-240\\\": 45950,\\n  \\\"skein1024-248\\\": 45951,\\n  \\\"skein1024-256\\\": 45952,\\n  \\\"skein1024-264\\\": 45953,\\n  \\\"skein1024-272\\\": 45954,\\n  \\\"skein1024-280\\\": 45955,\\n  \\\"skein1024-288\\\": 45956,\\n  \\\"skein1024-296\\\": 45957,\\n  \\\"skein1024-304\\\": 45958,\\n  \\\"skein1024-312\\\": 45959,\\n  \\\"skein1024-320\\\": 45960,\\n  \\\"skein1024-328\\\": 45961,\\n  \\\"skein1024-336\\\": 45962,\\n  \\\"skein1024-344\\\": 45963,\\n  \\\"skein1024-352\\\": 45964,\\n  \\\"skein1024-360\\\": 45965,\\n  \\\"skein1024-368\\\": 45966,\\n  \\\"skein1024-376\\\": 45967,\\n  \\\"skein1024-384\\\": 45968,\\n  \\\"skein1024-392\\\": 45969,\\n  \\\"skein1024-400\\\": 45970,\\n  \\\"skein1024-408\\\": 45971,\\n  \\\"skein1024-416\\\": 45972,\\n  \\\"skein1024-424\\\": 45973,\\n  \\\"skein1024-432\\\": 45974,\\n  \\\"skein1024-440\\\": 45975,\\n  \\\"skein1024-448\\\": 45976,\\n  \\\"skein1024-456\\\": 45977,\\n  \\\"skein1024-464\\\": 45978,\\n  \\\"skein1024-472\\\": 45979,\\n  \\\"skein1024-480\\\": 45980,\\n  \\\"skein1024-488\\\": 45981,\\n  \\\"skein1024-496\\\": 45982,\\n  \\\"skein1024-504\\\": 45983,\\n  \\\"skein1024-512\\\": 45984,\\n  \\\"skein1024-520\\\": 45985,\\n  \\\"skein1024-528\\\": 45986,\\n  \\\"skein1024-536\\\": 45987,\\n  \\\"skein1024-544\\\": 45988,\\n  \\\"skein1024-552\\\": 45989,\\n  \\\"skein1024-560\\\": 45990,\\n  \\\"skein1024-568\\\": 45991,\\n  \\\"skein1024-576\\\": 45992,\\n  \\\"skein1024-584\\\": 45993,\\n  \\\"skein1024-592\\\": 45994,\\n  \\\"skein1024-600\\\": 45995,\\n  \\\"skein1024-608\\\": 45996,\\n  \\\"skein1024-616\\\": 45997,\\n  \\\"skein1024-624\\\": 45998,\\n  \\\"skein1024-632\\\": 45999,\\n  \\\"skein1024-640\\\": 46000,\\n  \\\"skein1024-648\\\": 46001,\\n  \\\"skein1024-656\\\": 46002,\\n  \\\"skein1024-664\\\": 46003,\\n  \\\"skein1024-672\\\": 46004,\\n  \\\"skein1024-680\\\": 46005,\\n  \\\"skein1024-688\\\": 46006,\\n  \\\"skein1024-696\\\": 46007,\\n  \\\"skein1024-704\\\": 46008,\\n  \\\"skein1024-712\\\": 46009,\\n  \\\"skein1024-720\\\": 46010,\\n  \\\"skein1024-728\\\": 46011,\\n  \\\"skein1024-736\\\": 46012,\\n  \\\"skein1024-744\\\": 46013,\\n  \\\"skein1024-752\\\": 46014,\\n  \\\"skein1024-760\\\": 46015,\\n  \\\"skein1024-768\\\": 46016,\\n  \\\"skein1024-776\\\": 46017,\\n  \\\"skein1024-784\\\": 46018,\\n  \\\"skein1024-792\\\": 46019,\\n  \\\"skein1024-800\\\": 46020,\\n  \\\"skein1024-808\\\": 46021,\\n  \\\"skein1024-816\\\": 46022,\\n  \\\"skein1024-824\\\": 46023,\\n  \\\"skein1024-832\\\": 46024,\\n  \\\"skein1024-840\\\": 46025,\\n  \\\"skein1024-848\\\": 46026,\\n  \\\"skein1024-856\\\": 46027,\\n  \\\"skein1024-864\\\": 46028,\\n  \\\"skein1024-872\\\": 46029,\\n  \\\"skein1024-880\\\": 46030,\\n  \\\"skein1024-888\\\": 46031,\\n  \\\"skein1024-896\\\": 46032,\\n  \\\"skein1024-904\\\": 46033,\\n  \\\"skein1024-912\\\": 46034,\\n  \\\"skein1024-920\\\": 46035,\\n  \\\"skein1024-928\\\": 46036,\\n  \\\"skein1024-936\\\": 46037,\\n  \\\"skein1024-944\\\": 46038,\\n  \\\"skein1024-952\\\": 46039,\\n  \\\"skein1024-960\\\": 46040,\\n  \\\"skein1024-968\\\": 46041,\\n  \\\"skein1024-976\\\": 46042,\\n  \\\"skein1024-984\\\": 46043,\\n  \\\"skein1024-992\\\": 46044,\\n  \\\"skein1024-1000\\\": 46045,\\n  \\\"skein1024-1008\\\": 46046,\\n  \\\"skein1024-1016\\\": 46047,\\n  \\\"skein1024-1024\\\": 46048,\\n  \\\"poseidon-bls12_381-a2-fc1\\\": 46081,\\n  \\\"poseidon-bls12_381-a2-fc1-sc\\\": 46082,\\n  \\\"zeroxcert-imprint-256\\\": 52753,\\n  \\\"fil-commitment-unsealed\\\": 61697,\\n  \\\"fil-commitment-sealed\\\": 61698,\\n  \\\"holochain-adr-v0\\\": 8417572,\\n  \\\"holochain-adr-v1\\\": 8483108,\\n  \\\"holochain-key-v0\\\": 9728292,\\n  \\\"holochain-key-v1\\\": 9793828,\\n  \\\"holochain-sig-v0\\\": 10645796,\\n  \\\"holochain-sig-v1\\\": 10711332\\n}\\n},{}],17:[function(require,module,exports){\\n'use strict'\\n\\nconst table = require('./base-table.json')\\n\\n// map for codecConstant -> code\\nconst constants = {}\\n\\nfor (const [name, code] of Object.entries(table)) {\\n  constants[name.toUpperCase().replace(/-/g, '_')] = code\\n}\\n\\nmodule.exports = Object.freeze(constants)\\n\\n},{\\\"./base-table.json\\\":16}],18:[function(require,module,exports){\\n/**\\n * Implementation of the multicodec specification.\\n *\\n * @module multicodec\\n * @example\\n * const multicodec = require('multicodec')\\n *\\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\\n * // prefixedProtobuf 0x50...\\n *\\n */\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst varint = require('varint')\\nconst intTable = require('./int-table')\\nconst codecNameToCodeVarint = require('./varint-table')\\nconst util = require('./util')\\n\\nexports = module.exports\\n\\n/**\\n * Prefix a buffer with a multicodec-packed.\\n *\\n * @param {string|number} multicodecStrOrCode\\n * @param {Buffer} data\\n * @returns {Buffer}\\n */\\nexports.addPrefix = (multicodecStrOrCode, data) => {\\n  let prefix\\n\\n  if (Buffer.isBuffer(multicodecStrOrCode)) {\\n    prefix = util.varintBufferEncode(multicodecStrOrCode)\\n  } else {\\n    if (codecNameToCodeVarint[multicodecStrOrCode]) {\\n      prefix = codecNameToCodeVarint[multicodecStrOrCode]\\n    } else {\\n      throw new Error('multicodec not recognized')\\n    }\\n  }\\n  return Buffer.concat([prefix, data])\\n}\\n\\n/**\\n * Decapsulate the multicodec-packed prefix from the data.\\n *\\n * @param {Buffer} data\\n * @returns {Buffer}\\n */\\nexports.rmPrefix = (data) => {\\n  varint.decode(data)\\n  return data.slice(varint.decode.bytes)\\n}\\n\\n/**\\n * Get the codec of the prefixed data.\\n * @param {Buffer} prefixedData\\n * @returns {string}\\n */\\nexports.getCodec = (prefixedData) => {\\n  const code = varint.decode(prefixedData)\\n  const codecName = intTable.get(code)\\n  if (codecName === undefined) {\\n    throw new Error(`Code ${code} not found`)\\n  }\\n  return codecName\\n}\\n\\n/**\\n * Get the name of the codec.\\n * @param {number} codec\\n * @returns {string}\\n */\\nexports.getName = (codec) => {\\n  return intTable.get(codec)\\n}\\n\\n/**\\n * Get the code of the codec\\n * @param {string} name\\n * @returns {number}\\n */\\nexports.getNumber = (name) => {\\n  const code = codecNameToCodeVarint[name]\\n  if (code === undefined) {\\n    throw new Error('Codec `' + name + '` not found')\\n  }\\n  return util.varintBufferDecode(code)[0]\\n}\\n\\n/**\\n * Get the code of the prefixed data.\\n * @param {Buffer} prefixedData\\n * @returns {number}\\n */\\nexports.getCode = (prefixedData) => {\\n  return varint.decode(prefixedData)\\n}\\n\\n/**\\n * Get the code as varint of a codec name.\\n * @param {string} codecName\\n * @returns {Buffer}\\n */\\nexports.getCodeVarint = (codecName) => {\\n  const code = codecNameToCodeVarint[codecName]\\n  if (code === undefined) {\\n    throw new Error('Codec `' + codecName + '` not found')\\n  }\\n  return code\\n}\\n\\n/**\\n * Get the varint of a code.\\n * @param {Number} code\\n * @returns {Array.<number>}\\n */\\nexports.getVarint = (code) => {\\n  return varint.encode(code)\\n}\\n\\n// Make the constants top-level constants\\nconst constants = require('./constants')\\nObject.assign(exports, constants)\\n\\n// Human friendly names for printing, e.g. in error messages\\nexports.print = require('./print')\\n\\n},{\\\"./constants\\\":17,\\\"./int-table\\\":19,\\\"./print\\\":20,\\\"./util\\\":21,\\\"./varint-table\\\":22,\\\"buffer\\\":8,\\\"varint\\\":83}],19:[function(require,module,exports){\\n'use strict'\\nconst baseTable = require('./base-table.json')\\n\\n// map for hexString -> codecName\\nconst nameTable = new Map()\\n\\nfor (const encodingName in baseTable) {\\n  const code = baseTable[encodingName]\\n  nameTable.set(code, encodingName)\\n}\\n\\nmodule.exports = Object.freeze(nameTable)\\n\\n},{\\\"./base-table.json\\\":16}],20:[function(require,module,exports){\\n'use strict'\\n\\nconst table = require('./base-table.json')\\n\\n// map for code -> print friendly name\\nconst tableByCode = {}\\n\\nfor (const [name, code] of Object.entries(table)) {\\n  if (tableByCode[code] === undefined) tableByCode[code] = name\\n}\\n\\nmodule.exports = Object.freeze(tableByCode)\\n\\n},{\\\"./base-table.json\\\":16}],21:[function(require,module,exports){\\n'use strict'\\nconst varint = require('varint')\\nconst { Buffer } = require('buffer')\\n\\nmodule.exports = {\\n  numberToBuffer,\\n  bufferToNumber,\\n  varintBufferEncode,\\n  varintBufferDecode,\\n  varintEncode\\n}\\n\\nfunction bufferToNumber (buf) {\\n  return parseInt(buf.toString('hex'), 16)\\n}\\n\\nfunction numberToBuffer (num) {\\n  let hexString = num.toString(16)\\n  if (hexString.length % 2 === 1) {\\n    hexString = '0' + hexString\\n  }\\n  return Buffer.from(hexString, 'hex')\\n}\\n\\nfunction varintBufferEncode (input) {\\n  return Buffer.from(varint.encode(bufferToNumber(input)))\\n}\\n\\nfunction varintBufferDecode (input) {\\n  return numberToBuffer(varint.decode(input))\\n}\\n\\nfunction varintEncode (num) {\\n  return Buffer.from(varint.encode(num))\\n}\\n\\n},{\\\"buffer\\\":8,\\\"varint\\\":83}],22:[function(require,module,exports){\\n'use strict'\\n\\nconst baseTable = require('./base-table.json')\\nconst varintEncode = require('./util').varintEncode\\n\\n// map for codecName -> codeVarintBuffer\\nconst varintTable = {}\\n\\nfor (const encodingName in baseTable) {\\n  const code = baseTable[encodingName]\\n  varintTable[encodingName] = varintEncode(code)\\n}\\n\\nmodule.exports = Object.freeze(varintTable)\\n\\n},{\\\"./base-table.json\\\":16,\\\"./util\\\":21}],23:[function(require,module,exports){\\narguments[4][13][0].apply(exports,arguments)\\n},{\\\"buffer\\\":8,\\\"dup\\\":13,\\\"multihashes\\\":74}],24:[function(require,module,exports){\\narguments[4][14][0].apply(exports,arguments)\\n},{\\\"./cid-util\\\":23,\\\"buffer\\\":8,\\\"class-is\\\":15,\\\"dup\\\":14,\\\"multibase\\\":30,\\\"multicodec\\\":18,\\\"multicodec/src/base-table.json\\\":16,\\\"multihashes\\\":74}],25:[function(require,module,exports){\\n'use strict'\\n\\nclass Base {\\n  constructor (name, code, implementation, alphabet) {\\n    this.name = name\\n    this.code = code\\n    this.alphabet = alphabet\\n    if (implementation && alphabet) {\\n      this.engine = implementation(alphabet)\\n    }\\n  }\\n\\n  encode (stringOrBuffer) {\\n    return this.engine.encode(stringOrBuffer)\\n  }\\n\\n  decode (stringOrBuffer) {\\n    return this.engine.decode(stringOrBuffer)\\n  }\\n\\n  isImplemented () {\\n    return this.engine\\n  }\\n}\\n\\nmodule.exports = Base\\n\\n},{}],26:[function(require,module,exports){\\n'use strict'\\nconst { Buffer } = require('buffer')\\n\\nmodule.exports = function base16 (alphabet) {\\n  return {\\n    encode (input) {\\n      if (typeof input === 'string') {\\n        return Buffer.from(input).toString('hex')\\n      }\\n      return input.toString('hex')\\n    },\\n    decode (input) {\\n      for (const char of input) {\\n        if (alphabet.indexOf(char) < 0) {\\n          throw new Error('invalid base16 character')\\n        }\\n      }\\n      return Buffer.from(input, 'hex')\\n    }\\n  }\\n}\\n\\n},{\\\"buffer\\\":8}],27:[function(require,module,exports){\\n'use strict'\\n\\nfunction decode (input, alphabet) {\\n  input = input.replace(new RegExp('=', 'g'), '')\\n  const length = input.length\\n\\n  let bits = 0\\n  let value = 0\\n\\n  let index = 0\\n  const output = new Uint8Array((length * 5 / 8) | 0)\\n\\n  for (let i = 0; i < length; i++) {\\n    value = (value << 5) | alphabet.indexOf(input[i])\\n    bits += 5\\n\\n    if (bits >= 8) {\\n      output[index++] = (value >>> (bits - 8)) & 255\\n      bits -= 8\\n    }\\n  }\\n\\n  return output.buffer\\n}\\n\\nfunction encode (buffer, alphabet) {\\n  const length = buffer.byteLength\\n  const view = new Uint8Array(buffer)\\n  const padding = alphabet.indexOf('=') === alphabet.length - 1\\n\\n  if (padding) {\\n    alphabet = alphabet.substring(0, alphabet.length - 1)\\n  }\\n\\n  let bits = 0\\n  let value = 0\\n  let output = ''\\n\\n  for (let i = 0; i < length; i++) {\\n    value = (value << 8) | view[i]\\n    bits += 8\\n\\n    while (bits >= 5) {\\n      output += alphabet[(value >>> (bits - 5)) & 31]\\n      bits -= 5\\n    }\\n  }\\n\\n  if (bits > 0) {\\n    output += alphabet[(value << (5 - bits)) & 31]\\n  }\\n\\n  if (padding) {\\n    while ((output.length % 8) !== 0) {\\n      output += '='\\n    }\\n  }\\n\\n  return output\\n}\\n\\nmodule.exports = function base32 (alphabet) {\\n  return {\\n    encode (input) {\\n      if (typeof input === 'string') {\\n        return encode(Uint8Array.from(input), alphabet)\\n      }\\n\\n      return encode(input, alphabet)\\n    },\\n    decode (input) {\\n      for (const char of input) {\\n        if (alphabet.indexOf(char) < 0) {\\n          throw new Error('invalid base32 character')\\n        }\\n      }\\n\\n      return decode(input, alphabet)\\n    }\\n  }\\n}\\n\\n},{}],28:[function(require,module,exports){\\n'use strict'\\nconst { Buffer } = require('buffer')\\n\\nmodule.exports = function base64 (alphabet) {\\n  // The alphabet is only used to know:\\n  //   1. If padding is enabled (must contain '=')\\n  //   2. If the output must be url-safe (must contain '-' and '_')\\n  //   3. If the input of the output function is valid\\n  // The alphabets from RFC 4648 are always used.\\n  const padding = alphabet.indexOf('=') > -1\\n  const url = alphabet.indexOf('-') > -1 && alphabet.indexOf('_') > -1\\n\\n  return {\\n    encode (input) {\\n      let output = ''\\n\\n      if (typeof input === 'string') {\\n        output = Buffer.from(input).toString('base64')\\n      } else {\\n        output = input.toString('base64')\\n      }\\n\\n      if (url) {\\n        output = output.replace(/\\\\+/g, '-').replace(/\\\\//g, '_')\\n      }\\n\\n      const pad = output.indexOf('=')\\n      if (pad > 0 && !padding) {\\n        output = output.substring(0, pad)\\n      }\\n\\n      return output\\n    },\\n    decode (input) {\\n      for (const char of input) {\\n        if (alphabet.indexOf(char) < 0) {\\n          throw new Error('invalid base64 character')\\n        }\\n      }\\n\\n      return Buffer.from(input, 'base64')\\n    }\\n  }\\n}\\n\\n},{\\\"buffer\\\":8}],29:[function(require,module,exports){\\n'use strict'\\n\\nconst Base = require('./base.js')\\nconst baseX = require('base-x')\\nconst base16 = require('./base16')\\nconst base32 = require('./base32')\\nconst base64 = require('./base64')\\n\\n// name, code, implementation, alphabet\\nconst constants = [\\n  ['base1', '1', '', '1'],\\n  ['base2', '0', baseX, '01'],\\n  ['base8', '7', baseX, '01234567'],\\n  ['base10', '9', baseX, '0123456789'],\\n  ['base16', 'f', base16, '0123456789abcdef'],\\n  ['base32', 'b', base32, 'abcdefghijklmnopqrstuvwxyz234567'],\\n  ['base32pad', 'c', base32, 'abcdefghijklmnopqrstuvwxyz234567='],\\n  ['base32hex', 'v', base32, '0123456789abcdefghijklmnopqrstuv'],\\n  ['base32hexpad', 't', base32, '0123456789abcdefghijklmnopqrstuv='],\\n  ['base32z', 'h', base32, 'ybndrfg8ejkmcpqxot1uwisza345h769'],\\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\\n  ['base64', 'm', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\\n  ['base64pad', 'M', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\\n  ['base64url', 'u', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\\n  ['base64urlpad', 'U', base64, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\\n]\\n\\nconst names = constants.reduce((prev, tupple) => {\\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\\n  return prev\\n}, {})\\n\\nconst codes = constants.reduce((prev, tupple) => {\\n  prev[tupple[1]] = names[tupple[0]]\\n  return prev\\n}, {})\\n\\nmodule.exports = {\\n  names: names,\\n  codes: codes\\n}\\n\\n},{\\\"./base.js\\\":25,\\\"./base16\\\":26,\\\"./base32\\\":27,\\\"./base64\\\":28,\\\"base-x\\\":6}],30:[function(require,module,exports){\\n/**\\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\\n * @module Multibase\\n */\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst constants = require('./constants')\\n\\nexports = module.exports = multibase\\nexports.encode = encode\\nexports.decode = decode\\nexports.isEncoded = isEncoded\\nexports.names = Object.freeze(Object.keys(constants.names))\\nexports.codes = Object.freeze(Object.keys(constants.codes))\\n\\nconst errNotSupported = new Error('Unsupported encoding')\\n\\n/**\\n * Create a new buffer with the multibase varint+code.\\n *\\n * @param {string|number} nameOrCode - The multibase name or code number.\\n * @param {Buffer} buf - The data to be prefixed with multibase.\\n * @memberof Multibase\\n * @returns {Buffer}\\n */\\nfunction multibase (nameOrCode, buf) {\\n  if (!buf) {\\n    throw new Error('requires an encoded buffer')\\n  }\\n  const base = getBase(nameOrCode)\\n  const codeBuf = Buffer.from(base.code)\\n\\n  const name = base.name\\n  validEncode(name, buf)\\n  return Buffer.concat([codeBuf, buf])\\n}\\n\\n/**\\n * Encode data with the specified base and add the multibase prefix.\\n *\\n * @param {string|number} nameOrCode - The multibase name or code number.\\n * @param {Buffer} buf - The data to be encoded.\\n * @returns {Buffer}\\n * @memberof Multibase\\n */\\nfunction encode (nameOrCode, buf) {\\n  const base = getBase(nameOrCode)\\n  const name = base.name\\n\\n  return multibase(name, Buffer.from(base.encode(buf)))\\n}\\n\\n/**\\n * Takes a buffer or string encoded with multibase header, decodes it and\\n * returns the decoded buffer\\n *\\n * @param {Buffer|string} bufOrString\\n * @returns {Buffer}\\n * @memberof Multibase\\n *\\n */\\nfunction decode (bufOrString) {\\n  if (Buffer.isBuffer(bufOrString)) {\\n    bufOrString = bufOrString.toString()\\n  }\\n\\n  const code = bufOrString.substring(0, 1)\\n  bufOrString = bufOrString.substring(1, bufOrString.length)\\n\\n  if (typeof bufOrString === 'string') {\\n    bufOrString = Buffer.from(bufOrString)\\n  }\\n\\n  const base = getBase(code)\\n  return Buffer.from(base.decode(bufOrString.toString()))\\n}\\n\\n/**\\n * Is the given data multibase encoded?\\n *\\n * @param {Buffer|string} bufOrString\\n * @returns {boolean}\\n * @memberof Multibase\\n */\\nfunction isEncoded (bufOrString) {\\n  if (Buffer.isBuffer(bufOrString)) {\\n    bufOrString = bufOrString.toString()\\n  }\\n\\n  // Ensure bufOrString is a string\\n  if (Object.prototype.toString.call(bufOrString) !== '[object String]') {\\n    return false\\n  }\\n\\n  const code = bufOrString.substring(0, 1)\\n  try {\\n    const base = getBase(code)\\n    return base.name\\n  } catch (err) {\\n    return false\\n  }\\n}\\n\\n/**\\n * @param {string} name\\n * @param {Buffer} buf\\n * @private\\n * @returns {undefined}\\n */\\nfunction validEncode (name, buf) {\\n  const base = getBase(name)\\n  base.decode(buf.toString())\\n}\\n\\nfunction getBase (nameOrCode) {\\n  let base\\n\\n  if (constants.names[nameOrCode]) {\\n    base = constants.names[nameOrCode]\\n  } else if (constants.codes[nameOrCode]) {\\n    base = constants.codes[nameOrCode]\\n  } else {\\n    throw errNotSupported\\n  }\\n\\n  if (!base.isImplemented()) {\\n    throw new Error('Base ' + nameOrCode + ' is not implemented yet')\\n  }\\n\\n  return base\\n}\\n\\n},{\\\"./constants\\\":29,\\\"buffer\\\":8}],31:[function(require,module,exports){\\nmodule.exports={\\n  \\\"identity\\\": 0,\\n  \\\"ip4\\\": 4,\\n  \\\"tcp\\\": 6,\\n  \\\"sha1\\\": 17,\\n  \\\"sha2-256\\\": 18,\\n  \\\"sha2-512\\\": 19,\\n  \\\"sha3-512\\\": 20,\\n  \\\"sha3-384\\\": 21,\\n  \\\"sha3-256\\\": 22,\\n  \\\"sha3-224\\\": 23,\\n  \\\"shake-128\\\": 24,\\n  \\\"shake-256\\\": 25,\\n  \\\"keccak-224\\\": 26,\\n  \\\"keccak-256\\\": 27,\\n  \\\"keccak-384\\\": 28,\\n  \\\"keccak-512\\\": 29,\\n  \\\"dccp\\\": 33,\\n  \\\"murmur3-128\\\": 34,\\n  \\\"murmur3-32\\\": 35,\\n  \\\"ip6\\\": 41,\\n  \\\"ip6zone\\\": 42,\\n  \\\"path\\\": 47,\\n  \\\"multicodec\\\": 48,\\n  \\\"multihash\\\": 49,\\n  \\\"multiaddr\\\": 50,\\n  \\\"multibase\\\": 51,\\n  \\\"dns\\\": 53,\\n  \\\"dns4\\\": 54,\\n  \\\"dns6\\\": 55,\\n  \\\"dnsaddr\\\": 56,\\n  \\\"protobuf\\\": 80,\\n  \\\"cbor\\\": 81,\\n  \\\"raw\\\": 85,\\n  \\\"dbl-sha2-256\\\": 86,\\n  \\\"rlp\\\": 96,\\n  \\\"bencode\\\": 99,\\n  \\\"dag-pb\\\": 112,\\n  \\\"dag-cbor\\\": 113,\\n  \\\"libp2p-key\\\": 114,\\n  \\\"git-raw\\\": 120,\\n  \\\"torrent-info\\\": 123,\\n  \\\"torrent-file\\\": 124,\\n  \\\"leofcoin-block\\\": 129,\\n  \\\"leofcoin-tx\\\": 130,\\n  \\\"leofcoin-pr\\\": 131,\\n  \\\"sctp\\\": 132,\\n  \\\"eth-block\\\": 144,\\n  \\\"eth-block-list\\\": 145,\\n  \\\"eth-tx-trie\\\": 146,\\n  \\\"eth-tx\\\": 147,\\n  \\\"eth-tx-receipt-trie\\\": 148,\\n  \\\"eth-tx-receipt\\\": 149,\\n  \\\"eth-state-trie\\\": 150,\\n  \\\"eth-account-snapshot\\\": 151,\\n  \\\"eth-storage-trie\\\": 152,\\n  \\\"bitcoin-block\\\": 176,\\n  \\\"bitcoin-tx\\\": 177,\\n  \\\"zcash-block\\\": 192,\\n  \\\"zcash-tx\\\": 193,\\n  \\\"stellar-block\\\": 208,\\n  \\\"stellar-tx\\\": 209,\\n  \\\"md4\\\": 212,\\n  \\\"md5\\\": 213,\\n  \\\"bmt\\\": 214,\\n  \\\"decred-block\\\": 224,\\n  \\\"decred-tx\\\": 225,\\n  \\\"ipld-ns\\\": 226,\\n  \\\"ipfs-ns\\\": 227,\\n  \\\"swarm-ns\\\": 228,\\n  \\\"ipns-ns\\\": 229,\\n  \\\"zeronet\\\": 230,\\n  \\\"ed25519-pub\\\": 237,\\n  \\\"dash-block\\\": 240,\\n  \\\"dash-tx\\\": 241,\\n  \\\"swarm-manifest\\\": 250,\\n  \\\"swarm-feed\\\": 251,\\n  \\\"udp\\\": 273,\\n  \\\"p2p-webrtc-star\\\": 275,\\n  \\\"p2p-webrtc-direct\\\": 276,\\n  \\\"p2p-stardust\\\": 277,\\n  \\\"p2p-circuit\\\": 290,\\n  \\\"dag-json\\\": 297,\\n  \\\"udt\\\": 301,\\n  \\\"utp\\\": 302,\\n  \\\"unix\\\": 400,\\n  \\\"p2p\\\": 421,\\n  \\\"ipfs\\\": 421,\\n  \\\"https\\\": 443,\\n  \\\"onion\\\": 444,\\n  \\\"onion3\\\": 445,\\n  \\\"garlic64\\\": 446,\\n  \\\"garlic32\\\": 447,\\n  \\\"tls\\\": 448,\\n  \\\"quic\\\": 460,\\n  \\\"ws\\\": 477,\\n  \\\"wss\\\": 478,\\n  \\\"p2p-websocket-star\\\": 479,\\n  \\\"http\\\": 480,\\n  \\\"json\\\": 512,\\n  \\\"messagepack\\\": 513,\\n  \\\"x11\\\": 4352,\\n  \\\"blake2b-8\\\": 45569,\\n  \\\"blake2b-16\\\": 45570,\\n  \\\"blake2b-24\\\": 45571,\\n  \\\"blake2b-32\\\": 45572,\\n  \\\"blake2b-40\\\": 45573,\\n  \\\"blake2b-48\\\": 45574,\\n  \\\"blake2b-56\\\": 45575,\\n  \\\"blake2b-64\\\": 45576,\\n  \\\"blake2b-72\\\": 45577,\\n  \\\"blake2b-80\\\": 45578,\\n  \\\"blake2b-88\\\": 45579,\\n  \\\"blake2b-96\\\": 45580,\\n  \\\"blake2b-104\\\": 45581,\\n  \\\"blake2b-112\\\": 45582,\\n  \\\"blake2b-120\\\": 45583,\\n  \\\"blake2b-128\\\": 45584,\\n  \\\"blake2b-136\\\": 45585,\\n  \\\"blake2b-144\\\": 45586,\\n  \\\"blake2b-152\\\": 45587,\\n  \\\"blake2b-160\\\": 45588,\\n  \\\"blake2b-168\\\": 45589,\\n  \\\"blake2b-176\\\": 45590,\\n  \\\"blake2b-184\\\": 45591,\\n  \\\"blake2b-192\\\": 45592,\\n  \\\"blake2b-200\\\": 45593,\\n  \\\"blake2b-208\\\": 45594,\\n  \\\"blake2b-216\\\": 45595,\\n  \\\"blake2b-224\\\": 45596,\\n  \\\"blake2b-232\\\": 45597,\\n  \\\"blake2b-240\\\": 45598,\\n  \\\"blake2b-248\\\": 45599,\\n  \\\"blake2b-256\\\": 45600,\\n  \\\"blake2b-264\\\": 45601,\\n  \\\"blake2b-272\\\": 45602,\\n  \\\"blake2b-280\\\": 45603,\\n  \\\"blake2b-288\\\": 45604,\\n  \\\"blake2b-296\\\": 45605,\\n  \\\"blake2b-304\\\": 45606,\\n  \\\"blake2b-312\\\": 45607,\\n  \\\"blake2b-320\\\": 45608,\\n  \\\"blake2b-328\\\": 45609,\\n  \\\"blake2b-336\\\": 45610,\\n  \\\"blake2b-344\\\": 45611,\\n  \\\"blake2b-352\\\": 45612,\\n  \\\"blake2b-360\\\": 45613,\\n  \\\"blake2b-368\\\": 45614,\\n  \\\"blake2b-376\\\": 45615,\\n  \\\"blake2b-384\\\": 45616,\\n  \\\"blake2b-392\\\": 45617,\\n  \\\"blake2b-400\\\": 45618,\\n  \\\"blake2b-408\\\": 45619,\\n  \\\"blake2b-416\\\": 45620,\\n  \\\"blake2b-424\\\": 45621,\\n  \\\"blake2b-432\\\": 45622,\\n  \\\"blake2b-440\\\": 45623,\\n  \\\"blake2b-448\\\": 45624,\\n  \\\"blake2b-456\\\": 45625,\\n  \\\"blake2b-464\\\": 45626,\\n  \\\"blake2b-472\\\": 45627,\\n  \\\"blake2b-480\\\": 45628,\\n  \\\"blake2b-488\\\": 45629,\\n  \\\"blake2b-496\\\": 45630,\\n  \\\"blake2b-504\\\": 45631,\\n  \\\"blake2b-512\\\": 45632,\\n  \\\"blake2s-8\\\": 45633,\\n  \\\"blake2s-16\\\": 45634,\\n  \\\"blake2s-24\\\": 45635,\\n  \\\"blake2s-32\\\": 45636,\\n  \\\"blake2s-40\\\": 45637,\\n  \\\"blake2s-48\\\": 45638,\\n  \\\"blake2s-56\\\": 45639,\\n  \\\"blake2s-64\\\": 45640,\\n  \\\"blake2s-72\\\": 45641,\\n  \\\"blake2s-80\\\": 45642,\\n  \\\"blake2s-88\\\": 45643,\\n  \\\"blake2s-96\\\": 45644,\\n  \\\"blake2s-104\\\": 45645,\\n  \\\"blake2s-112\\\": 45646,\\n  \\\"blake2s-120\\\": 45647,\\n  \\\"blake2s-128\\\": 45648,\\n  \\\"blake2s-136\\\": 45649,\\n  \\\"blake2s-144\\\": 45650,\\n  \\\"blake2s-152\\\": 45651,\\n  \\\"blake2s-160\\\": 45652,\\n  \\\"blake2s-168\\\": 45653,\\n  \\\"blake2s-176\\\": 45654,\\n  \\\"blake2s-184\\\": 45655,\\n  \\\"blake2s-192\\\": 45656,\\n  \\\"blake2s-200\\\": 45657,\\n  \\\"blake2s-208\\\": 45658,\\n  \\\"blake2s-216\\\": 45659,\\n  \\\"blake2s-224\\\": 45660,\\n  \\\"blake2s-232\\\": 45661,\\n  \\\"blake2s-240\\\": 45662,\\n  \\\"blake2s-248\\\": 45663,\\n  \\\"blake2s-256\\\": 45664,\\n  \\\"skein256-8\\\": 45825,\\n  \\\"skein256-16\\\": 45826,\\n  \\\"skein256-24\\\": 45827,\\n  \\\"skein256-32\\\": 45828,\\n  \\\"skein256-40\\\": 45829,\\n  \\\"skein256-48\\\": 45830,\\n  \\\"skein256-56\\\": 45831,\\n  \\\"skein256-64\\\": 45832,\\n  \\\"skein256-72\\\": 45833,\\n  \\\"skein256-80\\\": 45834,\\n  \\\"skein256-88\\\": 45835,\\n  \\\"skein256-96\\\": 45836,\\n  \\\"skein256-104\\\": 45837,\\n  \\\"skein256-112\\\": 45838,\\n  \\\"skein256-120\\\": 45839,\\n  \\\"skein256-128\\\": 45840,\\n  \\\"skein256-136\\\": 45841,\\n  \\\"skein256-144\\\": 45842,\\n  \\\"skein256-152\\\": 45843,\\n  \\\"skein256-160\\\": 45844,\\n  \\\"skein256-168\\\": 45845,\\n  \\\"skein256-176\\\": 45846,\\n  \\\"skein256-184\\\": 45847,\\n  \\\"skein256-192\\\": 45848,\\n  \\\"skein256-200\\\": 45849,\\n  \\\"skein256-208\\\": 45850,\\n  \\\"skein256-216\\\": 45851,\\n  \\\"skein256-224\\\": 45852,\\n  \\\"skein256-232\\\": 45853,\\n  \\\"skein256-240\\\": 45854,\\n  \\\"skein256-248\\\": 45855,\\n  \\\"skein256-256\\\": 45856,\\n  \\\"skein512-8\\\": 45857,\\n  \\\"skein512-16\\\": 45858,\\n  \\\"skein512-24\\\": 45859,\\n  \\\"skein512-32\\\": 45860,\\n  \\\"skein512-40\\\": 45861,\\n  \\\"skein512-48\\\": 45862,\\n  \\\"skein512-56\\\": 45863,\\n  \\\"skein512-64\\\": 45864,\\n  \\\"skein512-72\\\": 45865,\\n  \\\"skein512-80\\\": 45866,\\n  \\\"skein512-88\\\": 45867,\\n  \\\"skein512-96\\\": 45868,\\n  \\\"skein512-104\\\": 45869,\\n  \\\"skein512-112\\\": 45870,\\n  \\\"skein512-120\\\": 45871,\\n  \\\"skein512-128\\\": 45872,\\n  \\\"skein512-136\\\": 45873,\\n  \\\"skein512-144\\\": 45874,\\n  \\\"skein512-152\\\": 45875,\\n  \\\"skein512-160\\\": 45876,\\n  \\\"skein512-168\\\": 45877,\\n  \\\"skein512-176\\\": 45878,\\n  \\\"skein512-184\\\": 45879,\\n  \\\"skein512-192\\\": 45880,\\n  \\\"skein512-200\\\": 45881,\\n  \\\"skein512-208\\\": 45882,\\n  \\\"skein512-216\\\": 45883,\\n  \\\"skein512-224\\\": 45884,\\n  \\\"skein512-232\\\": 45885,\\n  \\\"skein512-240\\\": 45886,\\n  \\\"skein512-248\\\": 45887,\\n  \\\"skein512-256\\\": 45888,\\n  \\\"skein512-264\\\": 45889,\\n  \\\"skein512-272\\\": 45890,\\n  \\\"skein512-280\\\": 45891,\\n  \\\"skein512-288\\\": 45892,\\n  \\\"skein512-296\\\": 45893,\\n  \\\"skein512-304\\\": 45894,\\n  \\\"skein512-312\\\": 45895,\\n  \\\"skein512-320\\\": 45896,\\n  \\\"skein512-328\\\": 45897,\\n  \\\"skein512-336\\\": 45898,\\n  \\\"skein512-344\\\": 45899,\\n  \\\"skein512-352\\\": 45900,\\n  \\\"skein512-360\\\": 45901,\\n  \\\"skein512-368\\\": 45902,\\n  \\\"skein512-376\\\": 45903,\\n  \\\"skein512-384\\\": 45904,\\n  \\\"skein512-392\\\": 45905,\\n  \\\"skein512-400\\\": 45906,\\n  \\\"skein512-408\\\": 45907,\\n  \\\"skein512-416\\\": 45908,\\n  \\\"skein512-424\\\": 45909,\\n  \\\"skein512-432\\\": 45910,\\n  \\\"skein512-440\\\": 45911,\\n  \\\"skein512-448\\\": 45912,\\n  \\\"skein512-456\\\": 45913,\\n  \\\"skein512-464\\\": 45914,\\n  \\\"skein512-472\\\": 45915,\\n  \\\"skein512-480\\\": 45916,\\n  \\\"skein512-488\\\": 45917,\\n  \\\"skein512-496\\\": 45918,\\n  \\\"skein512-504\\\": 45919,\\n  \\\"skein512-512\\\": 45920,\\n  \\\"skein1024-8\\\": 45921,\\n  \\\"skein1024-16\\\": 45922,\\n  \\\"skein1024-24\\\": 45923,\\n  \\\"skein1024-32\\\": 45924,\\n  \\\"skein1024-40\\\": 45925,\\n  \\\"skein1024-48\\\": 45926,\\n  \\\"skein1024-56\\\": 45927,\\n  \\\"skein1024-64\\\": 45928,\\n  \\\"skein1024-72\\\": 45929,\\n  \\\"skein1024-80\\\": 45930,\\n  \\\"skein1024-88\\\": 45931,\\n  \\\"skein1024-96\\\": 45932,\\n  \\\"skein1024-104\\\": 45933,\\n  \\\"skein1024-112\\\": 45934,\\n  \\\"skein1024-120\\\": 45935,\\n  \\\"skein1024-128\\\": 45936,\\n  \\\"skein1024-136\\\": 45937,\\n  \\\"skein1024-144\\\": 45938,\\n  \\\"skein1024-152\\\": 45939,\\n  \\\"skein1024-160\\\": 45940,\\n  \\\"skein1024-168\\\": 45941,\\n  \\\"skein1024-176\\\": 45942,\\n  \\\"skein1024-184\\\": 45943,\\n  \\\"skein1024-192\\\": 45944,\\n  \\\"skein1024-200\\\": 45945,\\n  \\\"skein1024-208\\\": 45946,\\n  \\\"skein1024-216\\\": 45947,\\n  \\\"skein1024-224\\\": 45948,\\n  \\\"skein1024-232\\\": 45949,\\n  \\\"skein1024-240\\\": 45950,\\n  \\\"skein1024-248\\\": 45951,\\n  \\\"skein1024-256\\\": 45952,\\n  \\\"skein1024-264\\\": 45953,\\n  \\\"skein1024-272\\\": 45954,\\n  \\\"skein1024-280\\\": 45955,\\n  \\\"skein1024-288\\\": 45956,\\n  \\\"skein1024-296\\\": 45957,\\n  \\\"skein1024-304\\\": 45958,\\n  \\\"skein1024-312\\\": 45959,\\n  \\\"skein1024-320\\\": 45960,\\n  \\\"skein1024-328\\\": 45961,\\n  \\\"skein1024-336\\\": 45962,\\n  \\\"skein1024-344\\\": 45963,\\n  \\\"skein1024-352\\\": 45964,\\n  \\\"skein1024-360\\\": 45965,\\n  \\\"skein1024-368\\\": 45966,\\n  \\\"skein1024-376\\\": 45967,\\n  \\\"skein1024-384\\\": 45968,\\n  \\\"skein1024-392\\\": 45969,\\n  \\\"skein1024-400\\\": 45970,\\n  \\\"skein1024-408\\\": 45971,\\n  \\\"skein1024-416\\\": 45972,\\n  \\\"skein1024-424\\\": 45973,\\n  \\\"skein1024-432\\\": 45974,\\n  \\\"skein1024-440\\\": 45975,\\n  \\\"skein1024-448\\\": 45976,\\n  \\\"skein1024-456\\\": 45977,\\n  \\\"skein1024-464\\\": 45978,\\n  \\\"skein1024-472\\\": 45979,\\n  \\\"skein1024-480\\\": 45980,\\n  \\\"skein1024-488\\\": 45981,\\n  \\\"skein1024-496\\\": 45982,\\n  \\\"skein1024-504\\\": 45983,\\n  \\\"skein1024-512\\\": 45984,\\n  \\\"skein1024-520\\\": 45985,\\n  \\\"skein1024-528\\\": 45986,\\n  \\\"skein1024-536\\\": 45987,\\n  \\\"skein1024-544\\\": 45988,\\n  \\\"skein1024-552\\\": 45989,\\n  \\\"skein1024-560\\\": 45990,\\n  \\\"skein1024-568\\\": 45991,\\n  \\\"skein1024-576\\\": 45992,\\n  \\\"skein1024-584\\\": 45993,\\n  \\\"skein1024-592\\\": 45994,\\n  \\\"skein1024-600\\\": 45995,\\n  \\\"skein1024-608\\\": 45996,\\n  \\\"skein1024-616\\\": 45997,\\n  \\\"skein1024-624\\\": 45998,\\n  \\\"skein1024-632\\\": 45999,\\n  \\\"skein1024-640\\\": 46000,\\n  \\\"skein1024-648\\\": 46001,\\n  \\\"skein1024-656\\\": 46002,\\n  \\\"skein1024-664\\\": 46003,\\n  \\\"skein1024-672\\\": 46004,\\n  \\\"skein1024-680\\\": 46005,\\n  \\\"skein1024-688\\\": 46006,\\n  \\\"skein1024-696\\\": 46007,\\n  \\\"skein1024-704\\\": 46008,\\n  \\\"skein1024-712\\\": 46009,\\n  \\\"skein1024-720\\\": 46010,\\n  \\\"skein1024-728\\\": 46011,\\n  \\\"skein1024-736\\\": 46012,\\n  \\\"skein1024-744\\\": 46013,\\n  \\\"skein1024-752\\\": 46014,\\n  \\\"skein1024-760\\\": 46015,\\n  \\\"skein1024-768\\\": 46016,\\n  \\\"skein1024-776\\\": 46017,\\n  \\\"skein1024-784\\\": 46018,\\n  \\\"skein1024-792\\\": 46019,\\n  \\\"skein1024-800\\\": 46020,\\n  \\\"skein1024-808\\\": 46021,\\n  \\\"skein1024-816\\\": 46022,\\n  \\\"skein1024-824\\\": 46023,\\n  \\\"skein1024-832\\\": 46024,\\n  \\\"skein1024-840\\\": 46025,\\n  \\\"skein1024-848\\\": 46026,\\n  \\\"skein1024-856\\\": 46027,\\n  \\\"skein1024-864\\\": 46028,\\n  \\\"skein1024-872\\\": 46029,\\n  \\\"skein1024-880\\\": 46030,\\n  \\\"skein1024-888\\\": 46031,\\n  \\\"skein1024-896\\\": 46032,\\n  \\\"skein1024-904\\\": 46033,\\n  \\\"skein1024-912\\\": 46034,\\n  \\\"skein1024-920\\\": 46035,\\n  \\\"skein1024-928\\\": 46036,\\n  \\\"skein1024-936\\\": 46037,\\n  \\\"skein1024-944\\\": 46038,\\n  \\\"skein1024-952\\\": 46039,\\n  \\\"skein1024-960\\\": 46040,\\n  \\\"skein1024-968\\\": 46041,\\n  \\\"skein1024-976\\\": 46042,\\n  \\\"skein1024-984\\\": 46043,\\n  \\\"skein1024-992\\\": 46044,\\n  \\\"skein1024-1000\\\": 46045,\\n  \\\"skein1024-1008\\\": 46046,\\n  \\\"skein1024-1016\\\": 46047,\\n  \\\"skein1024-1024\\\": 46048,\\n  \\\"holochain-adr-v0\\\": 8417572,\\n  \\\"holochain-adr-v1\\\": 8483108,\\n  \\\"holochain-key-v0\\\": 9728292,\\n  \\\"holochain-key-v1\\\": 9793828,\\n  \\\"holochain-sig-v0\\\": 10645796,\\n  \\\"holochain-sig-v1\\\": 10711332\\n}\\n},{}],32:[function(require,module,exports){\\narguments[4][17][0].apply(exports,arguments)\\n},{\\\"./base-table.json\\\":31,\\\"dup\\\":17}],33:[function(require,module,exports){\\n(function (Buffer){\\n/**\\n * Implementation of the multicodec specification.\\n *\\n * @module multicodec\\n * @example\\n * const multicodec = require('multicodec')\\n *\\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\\n * // prefixedProtobuf 0x50...\\n *\\n */\\n'use strict'\\n\\nconst varint = require('varint')\\nconst intTable = require('./int-table')\\nconst codecNameToCodeVarint = require('./varint-table')\\nconst util = require('./util')\\n\\nexports = module.exports\\n\\n/**\\n * Prefix a buffer with a multicodec-packed.\\n *\\n * @param {string|number} multicodecStrOrCode\\n * @param {Buffer} data\\n * @returns {Buffer}\\n */\\nexports.addPrefix = (multicodecStrOrCode, data) => {\\n  let prefix\\n\\n  if (Buffer.isBuffer(multicodecStrOrCode)) {\\n    prefix = util.varintBufferEncode(multicodecStrOrCode)\\n  } else {\\n    if (codecNameToCodeVarint[multicodecStrOrCode]) {\\n      prefix = codecNameToCodeVarint[multicodecStrOrCode]\\n    } else {\\n      throw new Error('multicodec not recognized')\\n    }\\n  }\\n  return Buffer.concat([prefix, data])\\n}\\n\\n/**\\n * Decapsulate the multicodec-packed prefix from the data.\\n *\\n * @param {Buffer} data\\n * @returns {Buffer}\\n */\\nexports.rmPrefix = (data) => {\\n  varint.decode(data)\\n  return data.slice(varint.decode.bytes)\\n}\\n\\n/**\\n * Get the codec of the prefixed data.\\n * @param {Buffer} prefixedData\\n * @returns {string}\\n */\\nexports.getCodec = (prefixedData) => {\\n  const code = varint.decode(prefixedData)\\n  const codecName = intTable.get(code)\\n  if (codecName === undefined) {\\n    throw new Error(`Code ${code} not found`)\\n  }\\n  return codecName\\n}\\n\\n/**\\n * Get the name of the codec.\\n * @param {number} codec\\n * @returns {string}\\n */\\nexports.getName = (codec) => {\\n  return intTable.get(codec)\\n}\\n\\n/**\\n * Get the code of the codec\\n * @param {string} name\\n * @returns {number}\\n */\\nexports.getNumber = (name) => {\\n  const code = codecNameToCodeVarint[name]\\n  if (code === undefined) {\\n    throw new Error('Codec `' + name + '` not found')\\n  }\\n  return util.varintBufferDecode(code)[0]\\n}\\n\\n/**\\n * Get the code of the prefixed data.\\n * @param {Buffer} prefixedData\\n * @returns {number}\\n */\\nexports.getCode = (prefixedData) => {\\n  return varint.decode(prefixedData)\\n}\\n\\n/**\\n * Get the code as varint of a codec name.\\n * @param {string} codecName\\n * @returns {Buffer}\\n */\\nexports.getCodeVarint = (codecName) => {\\n  const code = codecNameToCodeVarint[codecName]\\n  if (code === undefined) {\\n    throw new Error('Codec `' + codecName + '` not found')\\n  }\\n  return code\\n}\\n\\n/**\\n * Get the varint of a code.\\n * @param {Number} code\\n * @returns {Array.<number>}\\n */\\nexports.getVarint = (code) => {\\n  return varint.encode(code)\\n}\\n\\n// Make the constants top-level constants\\nconst constants = require('./constants')\\nObject.assign(exports, constants)\\n\\n// Human friendly names for printing, e.g. in error messages\\nexports.print = require('./print')\\n\\n}).call(this,require(\\\"buffer\\\").Buffer)\\n},{\\\"./constants\\\":32,\\\"./int-table\\\":34,\\\"./print\\\":35,\\\"./util\\\":36,\\\"./varint-table\\\":37,\\\"buffer\\\":8,\\\"varint\\\":83}],34:[function(require,module,exports){\\narguments[4][19][0].apply(exports,arguments)\\n},{\\\"./base-table.json\\\":31,\\\"dup\\\":19}],35:[function(require,module,exports){\\narguments[4][20][0].apply(exports,arguments)\\n},{\\\"./base-table.json\\\":31,\\\"dup\\\":20}],36:[function(require,module,exports){\\n(function (Buffer){\\n'use strict'\\nconst varint = require('varint')\\n\\nmodule.exports = {\\n  numberToBuffer,\\n  bufferToNumber,\\n  varintBufferEncode,\\n  varintBufferDecode,\\n  varintEncode\\n}\\n\\nfunction bufferToNumber (buf) {\\n  return parseInt(buf.toString('hex'), 16)\\n}\\n\\nfunction numberToBuffer (num) {\\n  let hexString = num.toString(16)\\n  if (hexString.length % 2 === 1) {\\n    hexString = '0' + hexString\\n  }\\n  return Buffer.from(hexString, 'hex')\\n}\\n\\nfunction varintBufferEncode (input) {\\n  return Buffer.from(varint.encode(bufferToNumber(input)))\\n}\\n\\nfunction varintBufferDecode (input) {\\n  return numberToBuffer(varint.decode(input))\\n}\\n\\nfunction varintEncode (num) {\\n  return Buffer.from(varint.encode(num))\\n}\\n\\n}).call(this,require(\\\"buffer\\\").Buffer)\\n},{\\\"buffer\\\":8,\\\"varint\\\":83}],37:[function(require,module,exports){\\narguments[4][22][0].apply(exports,arguments)\\n},{\\\"./base-table.json\\\":31,\\\"./util\\\":36,\\\"dup\\\":22}],38:[function(require,module,exports){\\n/*\\r\\n\\tISC License\\r\\n\\r\\n\\tCopyright (c) 2019, Pierre-Louis Despaigne\\r\\n\\r\\n\\tPermission to use, copy, modify, and/or distribute this software for any\\r\\n\\tpurpose with or without fee is hereby granted, provided that the above\\r\\n\\tcopyright notice and this permission notice appear in all copies.\\r\\n\\r\\n\\tTHE SOFTWARE IS PROVIDED \\\"AS IS\\\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\\r\\n\\tWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\\r\\n\\tMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\\r\\n\\tANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\\r\\n\\tWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\\r\\n\\tACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\\r\\n\\tOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\\r\\n*/\\r\\n\\r\\nconst CID = require('cids');\\r\\n\\r\\n/**\\r\\n * Take any ipfsHash and convert it to a CID v1 encoded in base32.\\r\\n * @param {string} ipfsHash a regular ipfs hash either a cid v0 or v1 (v1 will remain unchanged)\\r\\n * @return {string} the resulting ipfs hash as a cid v1\\r\\n */\\r\\nconst cidV0ToV1Base32 = (ipfsHash) => {\\r\\n\\tlet cid = new CID(ipfsHash);\\r\\n\\tif (cid.version === 0) {\\r\\n\\t\\tcid = cid.toV1();\\r\\n\\t}\\r\\n\\treturn cid.toString('base32');\\r\\n}\\r\\n\\r\\nexports.cidV0ToV1Base32 = cidV0ToV1Base32;\\r\\n\\n},{\\\"cids\\\":24}],39:[function(require,module,exports){\\n/*\\r\\n\\tISC License\\r\\n\\r\\n\\tCopyright (c) 2019, Pierre-Louis Despaigne\\r\\n\\r\\n\\tPermission to use, copy, modify, and/or distribute this software for any\\r\\n\\tpurpose with or without fee is hereby granted, provided that the above\\r\\n\\tcopyright notice and this permission notice appear in all copies.\\r\\n\\r\\n\\tTHE SOFTWARE IS PROVIDED \\\"AS IS\\\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\\r\\n\\tWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\\r\\n\\tMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\\r\\n\\tANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\\r\\n\\tWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\\r\\n\\tACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\\r\\n\\tOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\\r\\n*/\\r\\n\\r\\nconst multiC = require('multicodec');\\r\\n\\r\\nconst { hexStringToBuffer, profiles } = require('./profiles');\\r\\nconst { cidV0ToV1Base32 } = require('./helpers');\\r\\n\\r\\nmodule.exports = {\\r\\n\\r\\n\\t//export some helpers functions\\r\\n\\thelpers: {\\r\\n\\t\\tcidV0ToV1Base32,\\r\\n\\t},\\r\\n\\r\\n\\t/**\\r\\n\\t* Decode a Content Hash.\\r\\n\\t* @param {string} hash an hex string containing a content hash\\r\\n\\t* @return {string} the decoded content\\r\\n\\t*/\\r\\n\\tdecode: function (contentHash) {\\r\\n\\t\\tconst buffer = hexStringToBuffer(contentHash);\\r\\n\\t\\tconst codec = multiC.getCodec(buffer);\\r\\n\\t\\tconst value = multiC.rmPrefix(buffer);\\r\\n\\t\\tlet profile = profiles[codec];\\r\\n\\t\\tif (!profile) profile = profiles['default'];\\r\\n\\t\\treturn profile.decode(value);\\r\\n\\t},\\r\\n\\r\\n\\t/**\\r\\n\\t* Encode an IPFS address into a content hash\\r\\n\\t* @param {string} ipfsHash string containing an IPFS address\\r\\n\\t* @return {string} the resulting content hash\\r\\n\\t*/\\r\\n\\tfromIpfs: function (ipfsHash) {\\r\\n\\t\\treturn this.encode('ipfs-ns', ipfsHash);\\r\\n\\t},\\r\\n\\r\\n\\t/**\\r\\n\\t* Encode a Swarm address into a content hash\\r\\n\\t* @param {string} swarmHash string containing a Swarm address\\r\\n\\t* @return {string} the resulting content hash\\r\\n\\t*/\\r\\n\\tfromSwarm: function (swarmHash) {\\r\\n\\t\\treturn this.encode('swarm-ns', swarmHash);\\r\\n\\t},\\r\\n\\r\\n\\t/**\\r\\n\\t* General purpose encoding function\\r\\n  * @param {string} codec \\r\\n  * @param {string} value \\r\\n  */\\r\\n\\tencode: function (codec, value) {\\r\\n\\t\\tlet profile = profiles[codec];\\r\\n\\t\\tif (!profile) profile = profiles['default'];\\r\\n\\t\\tconst encodedValue = profile.encode(value);\\r\\n\\t\\treturn multiC.addPrefix(codec, encodedValue).toString('hex');\\r\\n\\t},\\r\\n\\r\\n\\t/**\\r\\n\\t* Extract the codec of a content hash\\r\\n\\t* @param {string} hash hex string containing a content hash\\r\\n\\t* @return {string} the extracted codec\\r\\n\\t*/\\r\\n\\tgetCodec: function (hash) {\\r\\n\\t\\tlet buffer = hexStringToBuffer(hash);\\r\\n\\t\\treturn multiC.getCodec(buffer);\\r\\n\\t},\\r\\n}\\r\\n\\n},{\\\"./helpers\\\":38,\\\"./profiles\\\":40,\\\"multicodec\\\":33}],40:[function(require,module,exports){\\n(function (Buffer){\\n/*\\r\\n\\tISC License\\r\\n\\r\\n\\tCopyright (c) 2019, Pierre-Louis Despaigne\\r\\n\\r\\n\\tPermission to use, copy, modify, and/or distribute this software for any\\r\\n\\tpurpose with or without fee is hereby granted, provided that the above\\r\\n\\tcopyright notice and this permission notice appear in all copies.\\r\\n\\r\\n\\tTHE SOFTWARE IS PROVIDED \\\"AS IS\\\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\\r\\n\\tWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\\r\\n\\tMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\\r\\n\\tANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\\r\\n\\tWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\\r\\n\\tACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\\r\\n\\tOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\\r\\n*/\\r\\n\\r\\nconst CID = require('cids');\\r\\nconst multiH = require('multihashes');\\r\\n\\r\\n/**\\r\\n * Convert an hexadecimal string to a Buffer, the string can start with or without '0x'\\r\\n * @param {string} hex an hexadecimal value\\r\\n * @return {Buffer} the resulting Buffer\\r\\n */\\r\\nconst hexStringToBuffer = (hex) => {\\r\\n\\tlet prefix = hex.slice(0, 2);\\r\\n\\tlet value = hex.slice(2);\\r\\n\\tlet res = '';\\r\\n\\tif (prefix === '0x') res = value;\\r\\n\\telse res = hex;\\r\\n\\treturn multiH.fromHexString(res);\\r\\n}\\r\\n\\r\\n/**\\r\\n* list of known encoding,\\r\\n* encoding should be a function that takes a `string` input,\\r\\n* and return a `Buffer` result\\r\\n*/\\r\\nconst encodes = {\\r\\n  /**\\r\\n  * @param {string} value\\r\\n  * @return {Buffer}\\r\\n  */\\r\\n  swarm: (value) => {\\r\\n    const multihash = multiH.encode(hexStringToBuffer(value), 'keccak-256');\\r\\n\\t\\treturn new CID(1, 'swarm-manifest', multihash).buffer;\\r\\n  },\\r\\n  /**\\r\\n  * @param {string} value\\r\\n  * @return {Buffer}\\r\\n  */\\r\\n  ipfs: (value) => {\\r\\n    const multihash = multiH.fromB58String(value);\\r\\n    return new CID(1, 'dag-pb', multihash).buffer;\\r\\n  },\\r\\n  /**\\r\\n  * @param {string} value\\r\\n  * @return {Buffer}\\r\\n  */\\r\\n  utf8: (value) => {\\r\\n    return Buffer.from(value, 'utf8');\\r\\n  },\\r\\n};\\r\\n\\r\\n/** \\r\\n* list of known decoding,\\r\\n* decoding should be a function that takes a `Buffer` input,\\r\\n* and return a `string` result\\r\\n*/\\r\\nconst decodes = {\\r\\n  /**\\r\\n  * @param {Buffer} value \\r\\n  */\\r\\n  hexMultiHash: (value) => {\\r\\n    const cid = new CID(value);\\r\\n    return multiH.decode(cid.multihash).digest.toString('hex');\\r\\n  },\\r\\n  /**\\r\\n  * @param {Buffer} value \\r\\n  */\\r\\n  b58MultiHash: (value) => {\\r\\n    const cid = new CID(value);\\r\\n    return multiH.toB58String(cid.multihash);\\r\\n  },\\r\\n  /**\\r\\n  * @param {Buffer} value \\r\\n  */\\r\\n  utf8: (value) => {\\r\\n    return value.toString('utf8');\\r\\n  },\\r\\n};\\r\\n\\r\\n/**\\r\\n* list of known encoding/decoding for a given codec,\\r\\n* `encode` should be chosen among the `encodes` functions\\r\\n* `decode` should be chosen among the `decodes` functions\\r\\n*/\\r\\nconst profiles = {\\r\\n  'swarm-ns': {\\r\\n    encode: encodes.swarm,\\r\\n    decode: decodes.hexMultiHash,\\r\\n  },\\r\\n  'ipfs-ns': {\\r\\n    encode: encodes.ipfs,\\r\\n    decode: decodes.b58MultiHash,\\r\\n  },\\r\\n  'ipns-ns': {\\r\\n    encode: encodes.ipfs,\\r\\n    decode: decodes.b58MultiHash,\\r\\n  },\\r\\n  'default': {\\r\\n    encode: encodes.utf8,\\r\\n    decode: decodes.utf8,\\r\\n  },\\r\\n};\\r\\n\\r\\nexports.hexStringToBuffer = hexStringToBuffer;\\r\\nexports.profiles = profiles;\\n}).call(this,require(\\\"buffer\\\").Buffer)\\n},{\\\"buffer\\\":8,\\\"cids\\\":24,\\\"multihashes\\\":74}],41:[function(require,module,exports){\\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\\n  var e, m\\n  var eLen = (nBytes * 8) - mLen - 1\\n  var eMax = (1 << eLen) - 1\\n  var eBias = eMax >> 1\\n  var nBits = -7\\n  var i = isLE ? (nBytes - 1) : 0\\n  var d = isLE ? -1 : 1\\n  var s = buffer[offset + i]\\n\\n  i += d\\n\\n  e = s & ((1 << (-nBits)) - 1)\\n  s >>= (-nBits)\\n  nBits += eLen\\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\\n\\n  m = e & ((1 << (-nBits)) - 1)\\n  e >>= (-nBits)\\n  nBits += mLen\\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\\n\\n  if (e === 0) {\\n    e = 1 - eBias\\n  } else if (e === eMax) {\\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\\n  } else {\\n    m = m + Math.pow(2, mLen)\\n    e = e - eBias\\n  }\\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\\n}\\n\\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\\n  var e, m, c\\n  var eLen = (nBytes * 8) - mLen - 1\\n  var eMax = (1 << eLen) - 1\\n  var eBias = eMax >> 1\\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\\n  var i = isLE ? 0 : (nBytes - 1)\\n  var d = isLE ? 1 : -1\\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\\n\\n  value = Math.abs(value)\\n\\n  if (isNaN(value) || value === Infinity) {\\n    m = isNaN(value) ? 1 : 0\\n    e = eMax\\n  } else {\\n    e = Math.floor(Math.log(value) / Math.LN2)\\n    if (value * (c = Math.pow(2, -e)) < 1) {\\n      e--\\n      c *= 2\\n    }\\n    if (e + eBias >= 1) {\\n      value += rt / c\\n    } else {\\n      value += rt * Math.pow(2, 1 - eBias)\\n    }\\n    if (value * c >= 2) {\\n      e++\\n      c /= 2\\n    }\\n\\n    if (e + eBias >= eMax) {\\n      m = 0\\n      e = eMax\\n    } else if (e + eBias >= 1) {\\n      m = ((value * c) - 1) * Math.pow(2, mLen)\\n      e = e + eBias\\n    } else {\\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\\n      e = 0\\n    }\\n  }\\n\\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\\n\\n  e = (e << mLen) | m\\n  eLen += mLen\\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\\n\\n  buffer[offset + i - d] |= s * 128\\n}\\n\\n},{}],42:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = {\\n  DEFAULT_HTTP_API: '/ip4/127.0.0.1/tcp/5001'\\n}\\n\\n},{}],43:[function(require,module,exports){\\n'use strict'\\n\\nmodule.exports = {\\n  httpClient: 'httpClient',\\n  windowIpfs: 'windowIpfs',\\n  jsIpfs: 'jsIpfs',\\n  webExt: 'webExt'\\n}\\n\\n},{}],44:[function(require,module,exports){\\n(function (global){\\n'use strict'\\n/* global self */\\n\\n// Establish the root object, `window` in the browser, `self` in Service Worker. or `global` on the server.\\n// Credit: https://github.com/megawac/underscore/commit/365311c9a440438531ca1c6bfd49e3c7c5f46079\\nmodule.exports = (typeof self === 'object' && self.self === self && self) ||\\n  (typeof global === 'object' && global.global === global && global) ||\\n  this\\n\\n}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n},{}],45:[function(require,module,exports){\\n'use strict'\\n\\nconst root = require('./constants/root')\\nconst mergeOptions = require('merge-options')\\nconst tryWebExt = require('./providers/webext')\\nconst tryWindow = require('./providers/window-ipfs')\\nconst tryHttpClient = require('./providers/http-client')\\nconst tryJsIpfs = require('./providers/js-ipfs')\\n\\nconst defaultGlobalOpts = {\\n  connectionTest: async (ipfs) => {\\n    // ipfs connection is working if we can fetch data via async iterator API\\n    const cid = 'QmUNLLsPACCz1vLxQVkXqqLX5R1X345qqfHbsf67hvA3Nn'\\n    for await (const file of ipfs.get(cid)) {\\n      return file.type === 'dir' && file.name === cid\\n    }\\n  }\\n}\\n\\nconst makeProvider = (fn, defaults = {}) => {\\n  return (options = {}) => {\\n    return (globalOpts) => {\\n      options = mergeOptions(defaultGlobalOpts, defaults, globalOpts, options)\\n      return fn(options)\\n    }\\n  }\\n}\\n\\nconst providers = {\\n  httpClient: makeProvider((options) => {\\n    return tryHttpClient({ root, ...options })\\n  }),\\n  windowIpfs: makeProvider(options => {\\n    return tryWindow({ root, ...options })\\n  }),\\n  jsIpfs: makeProvider(options => {\\n    return tryJsIpfs(options)\\n  }),\\n  webExt: makeProvider(options => {\\n    return tryWebExt({ root, ...options })\\n  })\\n}\\n\\nconst defaultProviders = [\\n  providers.windowIpfs(),\\n  providers.httpClient()\\n]\\n\\nasync function getIpfs ({ providers = defaultProviders, ...options } = {}) {\\n  for (const provider of providers) {\\n    try {\\n      const res = await provider(options)\\n      if (res) return res\\n    } catch (err) {\\n      // provider failed unexpectedly, log error and move to the next one\\n      console.error('[ipfs-provider]', err) // eslint-disable-line no-console\\n    }\\n  }\\n}\\n\\nmodule.exports = {\\n  getIpfs,\\n  providers,\\n  makeProvider\\n}\\n\\n},{\\\"./constants/root\\\":44,\\\"./providers/http-client\\\":46,\\\"./providers/js-ipfs\\\":47,\\\"./providers/webext\\\":48,\\\"./providers/window-ipfs\\\":49,\\\"merge-options\\\":55}],46:[function(require,module,exports){\\n'use strict'\\n\\nconst { URL } = require('iso-url')\\nconst PROVIDERS = require('../constants/providers')\\nconst { DEFAULT_HTTP_API } = require('../constants/defaults')\\n\\n/*\\n * This provider lazy-loads https://github.com/ipfs/js-ipfs-http-client\\n * so it is not included as a dependency if not used.\\n *\\n * HTTP Client init fallback:\\n * 1. Use constructor returned by loadHttpClientModule function\\n * 2. Fallback to window.IpfsHttpClient\\n *\\n * API URL fallback order:\\n * 1. Try user specified API address\\n * 2. Try current origin\\n * 3. Try DEFAULT_HTTP_API\\n*/\\nasync function tryHttpClient ({ loadHttpClientModule, apiAddress, root, connectionTest }) {\\n  // Find HTTP client\\n  let httpClient\\n  if (loadHttpClientModule) httpClient = await loadHttpClientModule()\\n\\n  // Final fallback to window.IpfsHttpClient or error\\n  if (!httpClient) {\\n    if (root.IpfsHttpClient) {\\n      httpClient = root.IpfsHttpClient\\n    } else {\\n      throw new Error('ipfs-provider could not initialize js-ipfs-http-client: make sure its constructor is returned by loadHttpClientModule function or exposed at window.IpfsHttpClient')\\n    }\\n  }\\n\\n  // Allow the use of `import` or `require` on `loadHttpClientModule` fn\\n  httpClient = httpClient.default || httpClient // TODO: create 'import' demo in examples/\\n\\n  // Explicit custom apiAddress provided. Only try that.\\n  if (apiAddress) {\\n    return maybeApi({ apiAddress, connectionTest, httpClient })\\n  }\\n\\n  // Current origin is not localhost:5001 so try with current origin info\\n  const { location } = root\\n  if (location && !(location.port === '5001' && location.hostname.match(/^127.0.0.1$|^localhost$/))) {\\n    const origin = new URL(location.origin)\\n    origin.pathname = '/'\\n    const res = await maybeApi({\\n      apiAddress: origin.toString(),\\n      connectionTest,\\n      httpClient\\n    })\\n    if (res) return res\\n  }\\n\\n  // ...otherwise try /ip4/127.0.0.1/tcp/5001\\n  return maybeApi({ apiAddress: DEFAULT_HTTP_API, connectionTest, httpClient })\\n}\\n\\n// Init and test an api client against provded API address.\\n// Returns js-ipfs-http-client instance or null\\nasync function maybeApi ({ apiAddress, connectionTest, httpClient }) {\\n  try {\\n    const ipfs = httpClient(apiAddress)\\n    await connectionTest(ipfs)\\n    return { ipfs, provider: PROVIDERS.httpClient, apiAddress }\\n  } catch (error) {\\n    // Failed to connect to ipfs-api in `apiAddress`\\n    // console.error('[ipfs-provider:httpClient]', error)\\n    return null\\n  }\\n}\\n\\nmodule.exports = tryHttpClient\\n\\n},{\\\"../constants/defaults\\\":42,\\\"../constants/providers\\\":43,\\\"iso-url\\\":51}],47:[function(require,module,exports){\\n'use strict'\\n\\nconst PROVIDERS = require('../constants/providers')\\n\\nfunction createIpfs (ipfsModule, opts) {\\n  // Allow the use of `import` or `require` on `getJsIpfs` fn\\n  ipfsModule = ipfsModule.default || ipfsModule\\n  return ipfsModule.create(opts)\\n}\\n\\nasync function tryJsIpfs ({ connectionTest, loadJsIpfsModule, options, init = createIpfs }) {\\n  const ipfsModule = await loadJsIpfsModule()\\n  const ipfs = await init(ipfsModule, options)\\n  await connectionTest(ipfs)\\n  return { ipfs, provider: PROVIDERS.jsIpfs }\\n}\\n\\nmodule.exports = tryJsIpfs\\n\\n},{\\\"../constants/providers\\\":43}],48:[function(require,module,exports){\\n'use strict'\\n\\nconst PROVIDERS = require('../constants/providers')\\n\\nasync function tryWebExt ({ root, connectionTest }) {\\n  // Opportunistic optimizations when running inside of web extension (eg. ipfs-companion)\\n  if (typeof root.chrome === 'object' && root.chrome.extension && root.chrome.extension.getBackgroundPage) {\\n    // Note: under some vendors getBackgroundPage() will return null if window is in incognito mode\\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1329304\\n    let bg = null\\n    try {\\n      bg = root.chrome.extension.getBackgroundPage()\\n    } catch (err) {\\n      // not in browser extension\\n      return null\\n    }\\n    // If extension is exposing IPFS API as `ipfs` on the background page\\n    // it can be used directly for the best performance\\n    if (bg && bg.ipfs) {\\n      const { ipfs } = bg\\n      await connectionTest(ipfs)\\n      return { ipfs, provider: PROVIDERS.webExt }\\n    }\\n    /*  Other endpoints can be added here in the future.\\n        For example, Companion could provide API for other browser extensions:\\n        https://github.com/ipfs-shipyard/ipfs-companion/issues/307 */\\n  }\\n}\\n\\nmodule.exports = tryWebExt\\n\\n},{\\\"../constants/providers\\\":43}],49:[function(require,module,exports){\\n'use strict'\\n\\nconst PROVIDERS = require('../constants/providers')\\n\\nasync function tryWindow ({ root, permissions, connectionTest }) {\\n  if (root.ipfs) {\\n    // files.get is required for testing if API works, ensure we request it\\n    if (!(permissions && permissions.commands && permissions.commands.includes('files.get'))) {\\n      permissions = permissions || {}\\n      permissions = JSON.parse(JSON.stringify(permissions)) // deep copy to work with freezed objects\\n      permissions.commands = permissions.commands || []\\n      permissions.commands.push('files.get')\\n    }\\n    // try window.ipfs.enable first: https://github.com/ipfs-shipyard/ipfs-companion/issues/589\\n    const ipfs = typeof root.ipfs.enable === 'function'\\n      ? await root.ipfs.enable(permissions)\\n      : root.ipfs\\n    await connectionTest(ipfs)\\n    return { ipfs, provider: PROVIDERS.windowIpfs }\\n  }\\n}\\n\\nmodule.exports = tryWindow\\n\\n},{\\\"../constants/providers\\\":43}],50:[function(require,module,exports){\\n'use strict';\\n\\nmodule.exports = value => {\\n\\tif (Object.prototype.toString.call(value) !== '[object Object]') {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tconst prototype = Object.getPrototypeOf(value);\\n\\treturn prototype === null || prototype === Object.prototype;\\n};\\n\\n},{}],51:[function(require,module,exports){\\n'use strict';\\n\\nconst {\\n    URLWithLegacySupport,\\n    format,\\n    URLSearchParams,\\n    defaultBase\\n} = require('./src/url');\\nconst relative = require('./src/relative');\\n\\nmodule.exports = {\\n    URL: URLWithLegacySupport,\\n    URLSearchParams,\\n    format,\\n    relative,\\n    defaultBase\\n};\\n\\n},{\\\"./src/relative\\\":52,\\\"./src/url\\\":53}],52:[function(require,module,exports){\\n'use strict';\\n\\nconst { URLWithLegacySupport, format } = require('./url');\\n\\nmodule.exports = (url, location = {}, protocolMap = {}, defaultProtocol) => {\\n    let protocol = location.protocol ?\\n        location.protocol.replace(':', '') :\\n        'http';\\n\\n    // Check protocol map\\n    protocol = (protocolMap[protocol] || defaultProtocol || protocol) + ':';\\n    let urlParsed;\\n\\n    try {\\n        urlParsed = new URLWithLegacySupport(url);\\n    } catch (err) {\\n        urlParsed = {};\\n    }\\n\\n    const base = Object.assign({}, location, {\\n        protocol: protocol || urlParsed.protocol,\\n        host: location.host || urlParsed.host\\n    });\\n\\n    return new URLWithLegacySupport(url, format(base)).toString();\\n};\\n\\n},{\\\"./url\\\":53}],53:[function(require,module,exports){\\n'use strict';\\n\\nconst defaultBase = self.location ?\\n    self.location.protocol + '//' + self.location.host :\\n    '';\\nconst URL = self.URL;\\n\\nclass URLWithLegacySupport {\\n    constructor(url = '', base = defaultBase) {\\n        this.super = new URL(url, base);\\n        this.path = this.pathname + this.search;\\n        this.auth =\\n            this.username && this.password ?\\n                this.username + ':' + this.password :\\n                null;\\n\\n        this.query =\\n            this.search && this.search.startsWith('?') ?\\n                this.search.slice(1) :\\n                null;\\n    }\\n\\n    get hash() {\\n        return this.super.hash;\\n    }\\n    get host() {\\n        return this.super.host;\\n    }\\n    get hostname() {\\n        return this.super.hostname;\\n    }\\n    get href() {\\n        return this.super.href;\\n    }\\n    get origin() {\\n        return this.super.origin;\\n    }\\n    get password() {\\n        return this.super.password;\\n    }\\n    get pathname() {\\n        return this.super.pathname;\\n    }\\n    get port() {\\n        return this.super.port;\\n    }\\n    get protocol() {\\n        return this.super.protocol;\\n    }\\n    get search() {\\n        return this.super.search;\\n    }\\n    get searchParams() {\\n        return this.super.searchParams;\\n    }\\n    get username() {\\n        return this.super.username;\\n    }\\n\\n    set hash(hash) {\\n        this.super.hash = hash;\\n    }\\n    set host(host) {\\n        this.super.host = host;\\n    }\\n    set hostname(hostname) {\\n        this.super.hostname = hostname;\\n    }\\n    set href(href) {\\n        this.super.href = href;\\n    }\\n    set origin(origin) {\\n        this.super.origin = origin;\\n    }\\n    set password(password) {\\n        this.super.password = password;\\n    }\\n    set pathname(pathname) {\\n        this.super.pathname = pathname;\\n    }\\n    set port(port) {\\n        this.super.port = port;\\n    }\\n    set protocol(protocol) {\\n        this.super.protocol = protocol;\\n    }\\n    set search(search) {\\n        this.super.search = search;\\n    }\\n    set searchParams(searchParams) {\\n        this.super.searchParams = searchParams;\\n    }\\n    set username(username) {\\n        this.super.username = username;\\n    }\\n\\n    createObjectURL(o) {\\n        return this.super.createObjectURL(o);\\n    }\\n    revokeObjectURL(o) {\\n        this.super.revokeObjectURL(o);\\n    }\\n    toJSON() {\\n        return this.super.toJSON();\\n    }\\n    toString() {\\n        return this.super.toString();\\n    }\\n    format() {\\n        return this.toString();\\n    }\\n}\\n\\nfunction format(obj) {\\n    if (typeof obj === 'string') {\\n        const url = new URL(obj);\\n\\n        return url.toString();\\n    }\\n\\n    if (!(obj instanceof URL)) {\\n        const userPass =\\n            obj.username && obj.password ?\\n                `${obj.username}:${obj.password}@` :\\n                '';\\n        const auth = obj.auth ? obj.auth + '@' : '';\\n        const port = obj.port ? ':' + obj.port : '';\\n        const protocol = obj.protocol ? obj.protocol + '//' : '';\\n        const host = obj.host || '';\\n        const hostname = obj.hostname || '';\\n        const search = obj.search || (obj.query ? '?' + obj.query : '');\\n        const hash = obj.hash || '';\\n        const pathname = obj.pathname || '';\\n        const path = obj.path || pathname + search;\\n\\n        return `${protocol}${userPass || auth}${host ||\\n            hostname + port}${path}${hash}`;\\n    }\\n}\\n\\nmodule.exports = {\\n    URLWithLegacySupport,\\n    URLSearchParams: self.URLSearchParams,\\n    defaultBase,\\n    format\\n};\\n\\n},{}],54:[function(require,module,exports){\\n(function (global){\\n/**\\n * lodash (Custom Build) <https://lodash.com/>\\n * Build: `lodash modularize exports=\\\"npm\\\" -o ./`\\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\\n * Released under MIT license <https://lodash.com/license>\\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\\n */\\n\\n/** Used as the size to enable large array optimizations. */\\nvar LARGE_ARRAY_SIZE = 200;\\n\\n/** Used as the `TypeError` message for \\\"Functions\\\" methods. */\\nvar FUNC_ERROR_TEXT = 'Expected a function';\\n\\n/** Used to stand-in for `undefined` hash values. */\\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\\n\\n/** Used to compose bitmasks for comparison styles. */\\nvar UNORDERED_COMPARE_FLAG = 1,\\n    PARTIAL_COMPARE_FLAG = 2;\\n\\n/** Used as references for various `Number` constants. */\\nvar INFINITY = 1 / 0,\\n    MAX_SAFE_INTEGER = 9007199254740991;\\n\\n/** `Object#toString` result references. */\\nvar argsTag = '[object Arguments]',\\n    arrayTag = '[object Array]',\\n    boolTag = '[object Boolean]',\\n    dateTag = '[object Date]',\\n    errorTag = '[object Error]',\\n    funcTag = '[object Function]',\\n    genTag = '[object GeneratorFunction]',\\n    mapTag = '[object Map]',\\n    numberTag = '[object Number]',\\n    objectTag = '[object Object]',\\n    promiseTag = '[object Promise]',\\n    regexpTag = '[object RegExp]',\\n    setTag = '[object Set]',\\n    stringTag = '[object String]',\\n    symbolTag = '[object Symbol]',\\n    weakMapTag = '[object WeakMap]';\\n\\nvar arrayBufferTag = '[object ArrayBuffer]',\\n    dataViewTag = '[object DataView]',\\n    float32Tag = '[object Float32Array]',\\n    float64Tag = '[object Float64Array]',\\n    int8Tag = '[object Int8Array]',\\n    int16Tag = '[object Int16Array]',\\n    int32Tag = '[object Int32Array]',\\n    uint8Tag = '[object Uint8Array]',\\n    uint8ClampedTag = '[object Uint8ClampedArray]',\\n    uint16Tag = '[object Uint16Array]',\\n    uint32Tag = '[object Uint32Array]';\\n\\n/** Used to match property names within property paths. */\\nvar reIsDeepProp = /\\\\.|\\\\[(?:[^[\\\\]]*|([\\\"'])(?:(?!\\\\1)[^\\\\\\\\]|\\\\\\\\.)*?\\\\1)\\\\]/,\\n    reIsPlainProp = /^\\\\w*$/,\\n    reLeadingDot = /^\\\\./,\\n    rePropName = /[^.[\\\\]]+|\\\\[(?:(-?\\\\d+(?:\\\\.\\\\d+)?)|([\\\"'])((?:(?!\\\\2)[^\\\\\\\\]|\\\\\\\\.)*?)\\\\2)\\\\]|(?=(?:\\\\.|\\\\[\\\\])(?:\\\\.|\\\\[\\\\]|$))/g;\\n\\n/**\\n * Used to match `RegExp`\\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\\n */\\nvar reRegExpChar = /[\\\\\\\\^$.*+?()[\\\\]{}|]/g;\\n\\n/** Used to match backslashes in property paths. */\\nvar reEscapeChar = /\\\\\\\\(\\\\\\\\)?/g;\\n\\n/** Used to detect host constructors (Safari). */\\nvar reIsHostCtor = /^\\\\[object .+?Constructor\\\\]$/;\\n\\n/** Used to detect unsigned integer values. */\\nvar reIsUint = /^(?:0|[1-9]\\\\d*)$/;\\n\\n/** Used to identify `toStringTag` values of typed arrays. */\\nvar typedArrayTags = {};\\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\\ntypedArrayTags[uint32Tag] = true;\\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\\ntypedArrayTags[weakMapTag] = false;\\n\\n/** Detect free variable `global` from Node.js. */\\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\\n\\n/** Detect free variable `self`. */\\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\\n\\n/** Used as a reference to the global object. */\\nvar root = freeGlobal || freeSelf || Function('return this')();\\n\\n/** Detect free variable `exports`. */\\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\\n\\n/** Detect free variable `module`. */\\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\\n\\n/** Detect the popular CommonJS extension `module.exports`. */\\nvar moduleExports = freeModule && freeModule.exports === freeExports;\\n\\n/** Detect free variable `process` from Node.js. */\\nvar freeProcess = moduleExports && freeGlobal.process;\\n\\n/** Used to access faster Node.js helpers. */\\nvar nodeUtil = (function() {\\n  try {\\n    return freeProcess && freeProcess.binding('util');\\n  } catch (e) {}\\n}());\\n\\n/* Node.js helper references. */\\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\\n\\n/**\\n * A faster alternative to `Function#apply`, this function invokes `func`\\n * with the `this` binding of `thisArg` and the arguments of `args`.\\n *\\n * @private\\n * @param {Function} func The function to invoke.\\n * @param {*} thisArg The `this` binding of `func`.\\n * @param {Array} args The arguments to invoke `func` with.\\n * @returns {*} Returns the result of `func`.\\n */\\nfunction apply(func, thisArg, args) {\\n  switch (args.length) {\\n    case 0: return func.call(thisArg);\\n    case 1: return func.call(thisArg, args[0]);\\n    case 2: return func.call(thisArg, args[0], args[1]);\\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\\n  }\\n  return func.apply(thisArg, args);\\n}\\n\\n/**\\n * A specialized version of `_.map` for arrays without support for iteratee\\n * shorthands.\\n *\\n * @private\\n * @param {Array} [array] The array to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Array} Returns the new mapped array.\\n */\\nfunction arrayMap(array, iteratee) {\\n  var index = -1,\\n      length = array ? array.length : 0,\\n      result = Array(length);\\n\\n  while (++index < length) {\\n    result[index] = iteratee(array[index], index, array);\\n  }\\n  return result;\\n}\\n\\n/**\\n * Appends the elements of `values` to `array`.\\n *\\n * @private\\n * @param {Array} array The array to modify.\\n * @param {Array} values The values to append.\\n * @returns {Array} Returns `array`.\\n */\\nfunction arrayPush(array, values) {\\n  var index = -1,\\n      length = values.length,\\n      offset = array.length;\\n\\n  while (++index < length) {\\n    array[offset + index] = values[index];\\n  }\\n  return array;\\n}\\n\\n/**\\n * A specialized version of `_.some` for arrays without support for iteratee\\n * shorthands.\\n *\\n * @private\\n * @param {Array} [array] The array to iterate over.\\n * @param {Function} predicate The function invoked per iteration.\\n * @returns {boolean} Returns `true` if any element passes the predicate check,\\n *  else `false`.\\n */\\nfunction arraySome(array, predicate) {\\n  var index = -1,\\n      length = array ? array.length : 0;\\n\\n  while (++index < length) {\\n    if (predicate(array[index], index, array)) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\n\\n/**\\n * The base implementation of `_.property` without support for deep paths.\\n *\\n * @private\\n * @param {string} key The key of the property to get.\\n * @returns {Function} Returns the new accessor function.\\n */\\nfunction baseProperty(key) {\\n  return function(object) {\\n    return object == null ? undefined : object[key];\\n  };\\n}\\n\\n/**\\n * The base implementation of `_.sortBy` which uses `comparer` to define the\\n * sort order of `array` and replaces criteria objects with their corresponding\\n * values.\\n *\\n * @private\\n * @param {Array} array The array to sort.\\n * @param {Function} comparer The function to define sort order.\\n * @returns {Array} Returns `array`.\\n */\\nfunction baseSortBy(array, comparer) {\\n  var length = array.length;\\n\\n  array.sort(comparer);\\n  while (length--) {\\n    array[length] = array[length].value;\\n  }\\n  return array;\\n}\\n\\n/**\\n * The base implementation of `_.times` without support for iteratee shorthands\\n * or max array length checks.\\n *\\n * @private\\n * @param {number} n The number of times to invoke `iteratee`.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Array} Returns the array of results.\\n */\\nfunction baseTimes(n, iteratee) {\\n  var index = -1,\\n      result = Array(n);\\n\\n  while (++index < n) {\\n    result[index] = iteratee(index);\\n  }\\n  return result;\\n}\\n\\n/**\\n * The base implementation of `_.unary` without support for storing metadata.\\n *\\n * @private\\n * @param {Function} func The function to cap arguments for.\\n * @returns {Function} Returns the new capped function.\\n */\\nfunction baseUnary(func) {\\n  return function(value) {\\n    return func(value);\\n  };\\n}\\n\\n/**\\n * Gets the value at `key` of `object`.\\n *\\n * @private\\n * @param {Object} [object] The object to query.\\n * @param {string} key The key of the property to get.\\n * @returns {*} Returns the property value.\\n */\\nfunction getValue(object, key) {\\n  return object == null ? undefined : object[key];\\n}\\n\\n/**\\n * Checks if `value` is a host object in IE < 9.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\\n */\\nfunction isHostObject(value) {\\n  // Many host objects are `Object` objects that can coerce to strings\\n  // despite having improperly defined `toString` methods.\\n  var result = false;\\n  if (value != null && typeof value.toString != 'function') {\\n    try {\\n      result = !!(value + '');\\n    } catch (e) {}\\n  }\\n  return result;\\n}\\n\\n/**\\n * Converts `map` to its key-value pairs.\\n *\\n * @private\\n * @param {Object} map The map to convert.\\n * @returns {Array} Returns the key-value pairs.\\n */\\nfunction mapToArray(map) {\\n  var index = -1,\\n      result = Array(map.size);\\n\\n  map.forEach(function(value, key) {\\n    result[++index] = [key, value];\\n  });\\n  return result;\\n}\\n\\n/**\\n * Creates a unary function that invokes `func` with its argument transformed.\\n *\\n * @private\\n * @param {Function} func The function to wrap.\\n * @param {Function} transform The argument transform.\\n * @returns {Function} Returns the new function.\\n */\\nfunction overArg(func, transform) {\\n  return function(arg) {\\n    return func(transform(arg));\\n  };\\n}\\n\\n/**\\n * Converts `set` to an array of its values.\\n *\\n * @private\\n * @param {Object} set The set to convert.\\n * @returns {Array} Returns the values.\\n */\\nfunction setToArray(set) {\\n  var index = -1,\\n      result = Array(set.size);\\n\\n  set.forEach(function(value) {\\n    result[++index] = value;\\n  });\\n  return result;\\n}\\n\\n/** Used for built-in method references. */\\nvar arrayProto = Array.prototype,\\n    funcProto = Function.prototype,\\n    objectProto = Object.prototype;\\n\\n/** Used to detect overreaching core-js shims. */\\nvar coreJsData = root['__core-js_shared__'];\\n\\n/** Used to detect methods masquerading as native. */\\nvar maskSrcKey = (function() {\\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\\n  return uid ? ('Symbol(src)_1.' + uid) : '';\\n}());\\n\\n/** Used to resolve the decompiled source of functions. */\\nvar funcToString = funcProto.toString;\\n\\n/** Used to check objects for own properties. */\\nvar hasOwnProperty = objectProto.hasOwnProperty;\\n\\n/**\\n * Used to resolve the\\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\\n * of values.\\n */\\nvar objectToString = objectProto.toString;\\n\\n/** Used to detect if a method is native. */\\nvar reIsNative = RegExp('^' +\\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\\\\\$&')\\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\\\\\\\()| for .+?(?=\\\\\\\\\\\\])/g, '$1.*?') + '$'\\n);\\n\\n/** Built-in value references. */\\nvar Symbol = root.Symbol,\\n    Uint8Array = root.Uint8Array,\\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\\n    splice = arrayProto.splice,\\n    spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\\n\\n/* Built-in method references for those with the same name as other `lodash` methods. */\\nvar nativeKeys = overArg(Object.keys, Object),\\n    nativeMax = Math.max;\\n\\n/* Built-in method references that are verified to be native. */\\nvar DataView = getNative(root, 'DataView'),\\n    Map = getNative(root, 'Map'),\\n    Promise = getNative(root, 'Promise'),\\n    Set = getNative(root, 'Set'),\\n    WeakMap = getNative(root, 'WeakMap'),\\n    nativeCreate = getNative(Object, 'create');\\n\\n/** Used to detect maps, sets, and weakmaps. */\\nvar dataViewCtorString = toSource(DataView),\\n    mapCtorString = toSource(Map),\\n    promiseCtorString = toSource(Promise),\\n    setCtorString = toSource(Set),\\n    weakMapCtorString = toSource(WeakMap);\\n\\n/** Used to convert symbols to primitives and strings. */\\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\\n\\n/**\\n * Creates a hash object.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction Hash(entries) {\\n  var index = -1,\\n      length = entries ? entries.length : 0;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the hash.\\n *\\n * @private\\n * @name clear\\n * @memberOf Hash\\n */\\nfunction hashClear() {\\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\\n}\\n\\n/**\\n * Removes `key` and its value from the hash.\\n *\\n * @private\\n * @name delete\\n * @memberOf Hash\\n * @param {Object} hash The hash to modify.\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction hashDelete(key) {\\n  return this.has(key) && delete this.__data__[key];\\n}\\n\\n/**\\n * Gets the hash value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf Hash\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction hashGet(key) {\\n  var data = this.__data__;\\n  if (nativeCreate) {\\n    var result = data[key];\\n    return result === HASH_UNDEFINED ? undefined : result;\\n  }\\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\\n}\\n\\n/**\\n * Checks if a hash value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf Hash\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction hashHas(key) {\\n  var data = this.__data__;\\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\\n}\\n\\n/**\\n * Sets the hash `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf Hash\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the hash instance.\\n */\\nfunction hashSet(key, value) {\\n  var data = this.__data__;\\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\\n  return this;\\n}\\n\\n// Add methods to `Hash`.\\nHash.prototype.clear = hashClear;\\nHash.prototype['delete'] = hashDelete;\\nHash.prototype.get = hashGet;\\nHash.prototype.has = hashHas;\\nHash.prototype.set = hashSet;\\n\\n/**\\n * Creates an list cache object.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction ListCache(entries) {\\n  var index = -1,\\n      length = entries ? entries.length : 0;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the list cache.\\n *\\n * @private\\n * @name clear\\n * @memberOf ListCache\\n */\\nfunction listCacheClear() {\\n  this.__data__ = [];\\n}\\n\\n/**\\n * Removes `key` and its value from the list cache.\\n *\\n * @private\\n * @name delete\\n * @memberOf ListCache\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction listCacheDelete(key) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  if (index < 0) {\\n    return false;\\n  }\\n  var lastIndex = data.length - 1;\\n  if (index == lastIndex) {\\n    data.pop();\\n  } else {\\n    splice.call(data, index, 1);\\n  }\\n  return true;\\n}\\n\\n/**\\n * Gets the list cache value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf ListCache\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction listCacheGet(key) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  return index < 0 ? undefined : data[index][1];\\n}\\n\\n/**\\n * Checks if a list cache value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf ListCache\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction listCacheHas(key) {\\n  return assocIndexOf(this.__data__, key) > -1;\\n}\\n\\n/**\\n * Sets the list cache `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf ListCache\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the list cache instance.\\n */\\nfunction listCacheSet(key, value) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  if (index < 0) {\\n    data.push([key, value]);\\n  } else {\\n    data[index][1] = value;\\n  }\\n  return this;\\n}\\n\\n// Add methods to `ListCache`.\\nListCache.prototype.clear = listCacheClear;\\nListCache.prototype['delete'] = listCacheDelete;\\nListCache.prototype.get = listCacheGet;\\nListCache.prototype.has = listCacheHas;\\nListCache.prototype.set = listCacheSet;\\n\\n/**\\n * Creates a map cache object to store key-value pairs.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction MapCache(entries) {\\n  var index = -1,\\n      length = entries ? entries.length : 0;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the map.\\n *\\n * @private\\n * @name clear\\n * @memberOf MapCache\\n */\\nfunction mapCacheClear() {\\n  this.__data__ = {\\n    'hash': new Hash,\\n    'map': new (Map || ListCache),\\n    'string': new Hash\\n  };\\n}\\n\\n/**\\n * Removes `key` and its value from the map.\\n *\\n * @private\\n * @name delete\\n * @memberOf MapCache\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction mapCacheDelete(key) {\\n  return getMapData(this, key)['delete'](key);\\n}\\n\\n/**\\n * Gets the map value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf MapCache\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction mapCacheGet(key) {\\n  return getMapData(this, key).get(key);\\n}\\n\\n/**\\n * Checks if a map value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf MapCache\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction mapCacheHas(key) {\\n  return getMapData(this, key).has(key);\\n}\\n\\n/**\\n * Sets the map `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf MapCache\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the map cache instance.\\n */\\nfunction mapCacheSet(key, value) {\\n  getMapData(this, key).set(key, value);\\n  return this;\\n}\\n\\n// Add methods to `MapCache`.\\nMapCache.prototype.clear = mapCacheClear;\\nMapCache.prototype['delete'] = mapCacheDelete;\\nMapCache.prototype.get = mapCacheGet;\\nMapCache.prototype.has = mapCacheHas;\\nMapCache.prototype.set = mapCacheSet;\\n\\n/**\\n *\\n * Creates an array cache object to store unique values.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [values] The values to cache.\\n */\\nfunction SetCache(values) {\\n  var index = -1,\\n      length = values ? values.length : 0;\\n\\n  this.__data__ = new MapCache;\\n  while (++index < length) {\\n    this.add(values[index]);\\n  }\\n}\\n\\n/**\\n * Adds `value` to the array cache.\\n *\\n * @private\\n * @name add\\n * @memberOf SetCache\\n * @alias push\\n * @param {*} value The value to cache.\\n * @returns {Object} Returns the cache instance.\\n */\\nfunction setCacheAdd(value) {\\n  this.__data__.set(value, HASH_UNDEFINED);\\n  return this;\\n}\\n\\n/**\\n * Checks if `value` is in the array cache.\\n *\\n * @private\\n * @name has\\n * @memberOf SetCache\\n * @param {*} value The value to search for.\\n * @returns {number} Returns `true` if `value` is found, else `false`.\\n */\\nfunction setCacheHas(value) {\\n  return this.__data__.has(value);\\n}\\n\\n// Add methods to `SetCache`.\\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\\nSetCache.prototype.has = setCacheHas;\\n\\n/**\\n * Creates a stack cache object to store key-value pairs.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction Stack(entries) {\\n  this.__data__ = new ListCache(entries);\\n}\\n\\n/**\\n * Removes all key-value entries from the stack.\\n *\\n * @private\\n * @name clear\\n * @memberOf Stack\\n */\\nfunction stackClear() {\\n  this.__data__ = new ListCache;\\n}\\n\\n/**\\n * Removes `key` and its value from the stack.\\n *\\n * @private\\n * @name delete\\n * @memberOf Stack\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction stackDelete(key) {\\n  return this.__data__['delete'](key);\\n}\\n\\n/**\\n * Gets the stack value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf Stack\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction stackGet(key) {\\n  return this.__data__.get(key);\\n}\\n\\n/**\\n * Checks if a stack value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf Stack\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction stackHas(key) {\\n  return this.__data__.has(key);\\n}\\n\\n/**\\n * Sets the stack `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf Stack\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the stack cache instance.\\n */\\nfunction stackSet(key, value) {\\n  var cache = this.__data__;\\n  if (cache instanceof ListCache) {\\n    var pairs = cache.__data__;\\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\\n      pairs.push([key, value]);\\n      return this;\\n    }\\n    cache = this.__data__ = new MapCache(pairs);\\n  }\\n  cache.set(key, value);\\n  return this;\\n}\\n\\n// Add methods to `Stack`.\\nStack.prototype.clear = stackClear;\\nStack.prototype['delete'] = stackDelete;\\nStack.prototype.get = stackGet;\\nStack.prototype.has = stackHas;\\nStack.prototype.set = stackSet;\\n\\n/**\\n * Creates an array of the enumerable property names of the array-like `value`.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @param {boolean} inherited Specify returning inherited property names.\\n * @returns {Array} Returns the array of property names.\\n */\\nfunction arrayLikeKeys(value, inherited) {\\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\\n  var result = (isArray(value) || isArguments(value))\\n    ? baseTimes(value.length, String)\\n    : [];\\n\\n  var length = result.length,\\n      skipIndexes = !!length;\\n\\n  for (var key in value) {\\n    if ((inherited || hasOwnProperty.call(value, key)) &&\\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\\n      result.push(key);\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * Gets the index at which the `key` is found in `array` of key-value pairs.\\n *\\n * @private\\n * @param {Array} array The array to inspect.\\n * @param {*} key The key to search for.\\n * @returns {number} Returns the index of the matched value, else `-1`.\\n */\\nfunction assocIndexOf(array, key) {\\n  var length = array.length;\\n  while (length--) {\\n    if (eq(array[length][0], key)) {\\n      return length;\\n    }\\n  }\\n  return -1;\\n}\\n\\n/**\\n * The base implementation of `_.forEach` without support for iteratee shorthands.\\n *\\n * @private\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Array|Object} Returns `collection`.\\n */\\nvar baseEach = createBaseEach(baseForOwn);\\n\\n/**\\n * The base implementation of `_.flatten` with support for restricting flattening.\\n *\\n * @private\\n * @param {Array} array The array to flatten.\\n * @param {number} depth The maximum recursion depth.\\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\\n * @param {Array} [result=[]] The initial result value.\\n * @returns {Array} Returns the new flattened array.\\n */\\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\\n  var index = -1,\\n      length = array.length;\\n\\n  predicate || (predicate = isFlattenable);\\n  result || (result = []);\\n\\n  while (++index < length) {\\n    var value = array[index];\\n    if (depth > 0 && predicate(value)) {\\n      if (depth > 1) {\\n        // Recursively flatten arrays (susceptible to call stack limits).\\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\\n      } else {\\n        arrayPush(result, value);\\n      }\\n    } else if (!isStrict) {\\n      result[result.length] = value;\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * The base implementation of `baseForOwn` which iterates over `object`\\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\\n * Iteratee functions may exit iteration early by explicitly returning `false`.\\n *\\n * @private\\n * @param {Object} object The object to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @param {Function} keysFunc The function to get the keys of `object`.\\n * @returns {Object} Returns `object`.\\n */\\nvar baseFor = createBaseFor();\\n\\n/**\\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\\n *\\n * @private\\n * @param {Object} object The object to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Object} Returns `object`.\\n */\\nfunction baseForOwn(object, iteratee) {\\n  return object && baseFor(object, iteratee, keys);\\n}\\n\\n/**\\n * The base implementation of `_.get` without support for default values.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {Array|string} path The path of the property to get.\\n * @returns {*} Returns the resolved value.\\n */\\nfunction baseGet(object, path) {\\n  path = isKey(path, object) ? [path] : castPath(path);\\n\\n  var index = 0,\\n      length = path.length;\\n\\n  while (object != null && index < length) {\\n    object = object[toKey(path[index++])];\\n  }\\n  return (index && index == length) ? object : undefined;\\n}\\n\\n/**\\n * The base implementation of `getTag`.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the `toStringTag`.\\n */\\nfunction baseGetTag(value) {\\n  return objectToString.call(value);\\n}\\n\\n/**\\n * The base implementation of `_.hasIn` without support for deep paths.\\n *\\n * @private\\n * @param {Object} [object] The object to query.\\n * @param {Array|string} key The key to check.\\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\\n */\\nfunction baseHasIn(object, key) {\\n  return object != null && key in Object(object);\\n}\\n\\n/**\\n * The base implementation of `_.isEqual` which supports partial comparisons\\n * and tracks traversed objects.\\n *\\n * @private\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @param {Function} [customizer] The function to customize comparisons.\\n * @param {boolean} [bitmask] The bitmask of comparison flags.\\n *  The bitmask may be composed of the following flags:\\n *     1 - Unordered comparison\\n *     2 - Partial comparison\\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n */\\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\\n  if (value === other) {\\n    return true;\\n  }\\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\\n    return value !== value && other !== other;\\n  }\\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\\n}\\n\\n/**\\n * A specialized version of `baseIsEqual` for arrays and objects which performs\\n * deep comparisons and tracks traversed objects enabling objects with circular\\n * references to be compared.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Function} [customizer] The function to customize comparisons.\\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\\n *  for more details.\\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\\n  var objIsArr = isArray(object),\\n      othIsArr = isArray(other),\\n      objTag = arrayTag,\\n      othTag = arrayTag;\\n\\n  if (!objIsArr) {\\n    objTag = getTag(object);\\n    objTag = objTag == argsTag ? objectTag : objTag;\\n  }\\n  if (!othIsArr) {\\n    othTag = getTag(other);\\n    othTag = othTag == argsTag ? objectTag : othTag;\\n  }\\n  var objIsObj = objTag == objectTag && !isHostObject(object),\\n      othIsObj = othTag == objectTag && !isHostObject(other),\\n      isSameTag = objTag == othTag;\\n\\n  if (isSameTag && !objIsObj) {\\n    stack || (stack = new Stack);\\n    return (objIsArr || isTypedArray(object))\\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\\n  }\\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\\n\\n    if (objIsWrapped || othIsWrapped) {\\n      var objUnwrapped = objIsWrapped ? object.value() : object,\\n          othUnwrapped = othIsWrapped ? other.value() : other;\\n\\n      stack || (stack = new Stack);\\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\\n    }\\n  }\\n  if (!isSameTag) {\\n    return false;\\n  }\\n  stack || (stack = new Stack);\\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\\n}\\n\\n/**\\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\\n *\\n * @private\\n * @param {Object} object The object to inspect.\\n * @param {Object} source The object of property values to match.\\n * @param {Array} matchData The property names, values, and compare flags to match.\\n * @param {Function} [customizer] The function to customize comparisons.\\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\\n */\\nfunction baseIsMatch(object, source, matchData, customizer) {\\n  var index = matchData.length,\\n      length = index,\\n      noCustomizer = !customizer;\\n\\n  if (object == null) {\\n    return !length;\\n  }\\n  object = Object(object);\\n  while (index--) {\\n    var data = matchData[index];\\n    if ((noCustomizer && data[2])\\n          ? data[1] !== object[data[0]]\\n          : !(data[0] in object)\\n        ) {\\n      return false;\\n    }\\n  }\\n  while (++index < length) {\\n    data = matchData[index];\\n    var key = data[0],\\n        objValue = object[key],\\n        srcValue = data[1];\\n\\n    if (noCustomizer && data[2]) {\\n      if (objValue === undefined && !(key in object)) {\\n        return false;\\n      }\\n    } else {\\n      var stack = new Stack;\\n      if (customizer) {\\n        var result = customizer(objValue, srcValue, key, object, source, stack);\\n      }\\n      if (!(result === undefined\\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\\n            : result\\n          )) {\\n        return false;\\n      }\\n    }\\n  }\\n  return true;\\n}\\n\\n/**\\n * The base implementation of `_.isNative` without bad shim checks.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a native function,\\n *  else `false`.\\n */\\nfunction baseIsNative(value) {\\n  if (!isObject(value) || isMasked(value)) {\\n    return false;\\n  }\\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\\n  return pattern.test(toSource(value));\\n}\\n\\n/**\\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\n */\\nfunction baseIsTypedArray(value) {\\n  return isObjectLike(value) &&\\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\\n}\\n\\n/**\\n * The base implementation of `_.iteratee`.\\n *\\n * @private\\n * @param {*} [value=_.identity] The value to convert to an iteratee.\\n * @returns {Function} Returns the iteratee.\\n */\\nfunction baseIteratee(value) {\\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\\n  if (typeof value == 'function') {\\n    return value;\\n  }\\n  if (value == null) {\\n    return identity;\\n  }\\n  if (typeof value == 'object') {\\n    return isArray(value)\\n      ? baseMatchesProperty(value[0], value[1])\\n      : baseMatches(value);\\n  }\\n  return property(value);\\n}\\n\\n/**\\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names.\\n */\\nfunction baseKeys(object) {\\n  if (!isPrototype(object)) {\\n    return nativeKeys(object);\\n  }\\n  var result = [];\\n  for (var key in Object(object)) {\\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\\n      result.push(key);\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * The base implementation of `_.map` without support for iteratee shorthands.\\n *\\n * @private\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Array} Returns the new mapped array.\\n */\\nfunction baseMap(collection, iteratee) {\\n  var index = -1,\\n      result = isArrayLike(collection) ? Array(collection.length) : [];\\n\\n  baseEach(collection, function(value, key, collection) {\\n    result[++index] = iteratee(value, key, collection);\\n  });\\n  return result;\\n}\\n\\n/**\\n * The base implementation of `_.matches` which doesn't clone `source`.\\n *\\n * @private\\n * @param {Object} source The object of property values to match.\\n * @returns {Function} Returns the new spec function.\\n */\\nfunction baseMatches(source) {\\n  var matchData = getMatchData(source);\\n  if (matchData.length == 1 && matchData[0][2]) {\\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\\n  }\\n  return function(object) {\\n    return object === source || baseIsMatch(object, source, matchData);\\n  };\\n}\\n\\n/**\\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\\n *\\n * @private\\n * @param {string} path The path of the property to get.\\n * @param {*} srcValue The value to match.\\n * @returns {Function} Returns the new spec function.\\n */\\nfunction baseMatchesProperty(path, srcValue) {\\n  if (isKey(path) && isStrictComparable(srcValue)) {\\n    return matchesStrictComparable(toKey(path), srcValue);\\n  }\\n  return function(object) {\\n    var objValue = get(object, path);\\n    return (objValue === undefined && objValue === srcValue)\\n      ? hasIn(object, path)\\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\\n  };\\n}\\n\\n/**\\n * The base implementation of `_.orderBy` without param guards.\\n *\\n * @private\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\\n * @param {string[]} orders The sort orders of `iteratees`.\\n * @returns {Array} Returns the new sorted array.\\n */\\nfunction baseOrderBy(collection, iteratees, orders) {\\n  var index = -1;\\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\\n\\n  var result = baseMap(collection, function(value, key, collection) {\\n    var criteria = arrayMap(iteratees, function(iteratee) {\\n      return iteratee(value);\\n    });\\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\\n  });\\n\\n  return baseSortBy(result, function(object, other) {\\n    return compareMultiple(object, other, orders);\\n  });\\n}\\n\\n/**\\n * A specialized version of `baseProperty` which supports deep paths.\\n *\\n * @private\\n * @param {Array|string} path The path of the property to get.\\n * @returns {Function} Returns the new accessor function.\\n */\\nfunction basePropertyDeep(path) {\\n  return function(object) {\\n    return baseGet(object, path);\\n  };\\n}\\n\\n/**\\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\\n *\\n * @private\\n * @param {Function} func The function to apply a rest parameter to.\\n * @param {number} [start=func.length-1] The start position of the rest parameter.\\n * @returns {Function} Returns the new function.\\n */\\nfunction baseRest(func, start) {\\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\\n  return function() {\\n    var args = arguments,\\n        index = -1,\\n        length = nativeMax(args.length - start, 0),\\n        array = Array(length);\\n\\n    while (++index < length) {\\n      array[index] = args[start + index];\\n    }\\n    index = -1;\\n    var otherArgs = Array(start + 1);\\n    while (++index < start) {\\n      otherArgs[index] = args[index];\\n    }\\n    otherArgs[start] = array;\\n    return apply(func, this, otherArgs);\\n  };\\n}\\n\\n/**\\n * The base implementation of `_.toString` which doesn't convert nullish\\n * values to empty strings.\\n *\\n * @private\\n * @param {*} value The value to process.\\n * @returns {string} Returns the string.\\n */\\nfunction baseToString(value) {\\n  // Exit early for strings to avoid a performance hit in some environments.\\n  if (typeof value == 'string') {\\n    return value;\\n  }\\n  if (isSymbol(value)) {\\n    return symbolToString ? symbolToString.call(value) : '';\\n  }\\n  var result = (value + '');\\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\\n}\\n\\n/**\\n * Casts `value` to a path array if it's not one.\\n *\\n * @private\\n * @param {*} value The value to inspect.\\n * @returns {Array} Returns the cast property path array.\\n */\\nfunction castPath(value) {\\n  return isArray(value) ? value : stringToPath(value);\\n}\\n\\n/**\\n * Compares values to sort them in ascending order.\\n *\\n * @private\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @returns {number} Returns the sort order indicator for `value`.\\n */\\nfunction compareAscending(value, other) {\\n  if (value !== other) {\\n    var valIsDefined = value !== undefined,\\n        valIsNull = value === null,\\n        valIsReflexive = value === value,\\n        valIsSymbol = isSymbol(value);\\n\\n    var othIsDefined = other !== undefined,\\n        othIsNull = other === null,\\n        othIsReflexive = other === other,\\n        othIsSymbol = isSymbol(other);\\n\\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\\n        (valIsNull && othIsDefined && othIsReflexive) ||\\n        (!valIsDefined && othIsReflexive) ||\\n        !valIsReflexive) {\\n      return 1;\\n    }\\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\\n        (othIsNull && valIsDefined && valIsReflexive) ||\\n        (!othIsDefined && valIsReflexive) ||\\n        !othIsReflexive) {\\n      return -1;\\n    }\\n  }\\n  return 0;\\n}\\n\\n/**\\n * Used by `_.orderBy` to compare multiple properties of a value to another\\n * and stable sort them.\\n *\\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\\n * specify an order of \\\"desc\\\" for descending or \\\"asc\\\" for ascending sort order\\n * of corresponding values.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {boolean[]|string[]} orders The order to sort by for each property.\\n * @returns {number} Returns the sort order indicator for `object`.\\n */\\nfunction compareMultiple(object, other, orders) {\\n  var index = -1,\\n      objCriteria = object.criteria,\\n      othCriteria = other.criteria,\\n      length = objCriteria.length,\\n      ordersLength = orders.length;\\n\\n  while (++index < length) {\\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\\n    if (result) {\\n      if (index >= ordersLength) {\\n        return result;\\n      }\\n      var order = orders[index];\\n      return result * (order == 'desc' ? -1 : 1);\\n    }\\n  }\\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\\n  // that causes it, under certain circumstances, to provide the same value for\\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\\n  // for more details.\\n  //\\n  // This also ensures a stable sort in V8 and other engines.\\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\\n  return object.index - other.index;\\n}\\n\\n/**\\n * Creates a `baseEach` or `baseEachRight` function.\\n *\\n * @private\\n * @param {Function} eachFunc The function to iterate over a collection.\\n * @param {boolean} [fromRight] Specify iterating from right to left.\\n * @returns {Function} Returns the new base function.\\n */\\nfunction createBaseEach(eachFunc, fromRight) {\\n  return function(collection, iteratee) {\\n    if (collection == null) {\\n      return collection;\\n    }\\n    if (!isArrayLike(collection)) {\\n      return eachFunc(collection, iteratee);\\n    }\\n    var length = collection.length,\\n        index = fromRight ? length : -1,\\n        iterable = Object(collection);\\n\\n    while ((fromRight ? index-- : ++index < length)) {\\n      if (iteratee(iterable[index], index, iterable) === false) {\\n        break;\\n      }\\n    }\\n    return collection;\\n  };\\n}\\n\\n/**\\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\\n *\\n * @private\\n * @param {boolean} [fromRight] Specify iterating from right to left.\\n * @returns {Function} Returns the new base function.\\n */\\nfunction createBaseFor(fromRight) {\\n  return function(object, iteratee, keysFunc) {\\n    var index = -1,\\n        iterable = Object(object),\\n        props = keysFunc(object),\\n        length = props.length;\\n\\n    while (length--) {\\n      var key = props[fromRight ? length : ++index];\\n      if (iteratee(iterable[key], key, iterable) === false) {\\n        break;\\n      }\\n    }\\n    return object;\\n  };\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for arrays with support for\\n * partial deep comparisons.\\n *\\n * @private\\n * @param {Array} array The array to compare.\\n * @param {Array} other The other array to compare.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\\n *  for more details.\\n * @param {Object} stack Tracks traversed `array` and `other` objects.\\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\\n */\\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\\n      arrLength = array.length,\\n      othLength = other.length;\\n\\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\\n    return false;\\n  }\\n  // Assume cyclic values are equal.\\n  var stacked = stack.get(array);\\n  if (stacked && stack.get(other)) {\\n    return stacked == other;\\n  }\\n  var index = -1,\\n      result = true,\\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\\n\\n  stack.set(array, other);\\n  stack.set(other, array);\\n\\n  // Ignore non-index properties.\\n  while (++index < arrLength) {\\n    var arrValue = array[index],\\n        othValue = other[index];\\n\\n    if (customizer) {\\n      var compared = isPartial\\n        ? customizer(othValue, arrValue, index, other, array, stack)\\n        : customizer(arrValue, othValue, index, array, other, stack);\\n    }\\n    if (compared !== undefined) {\\n      if (compared) {\\n        continue;\\n      }\\n      result = false;\\n      break;\\n    }\\n    // Recursively compare arrays (susceptible to call stack limits).\\n    if (seen) {\\n      if (!arraySome(other, function(othValue, othIndex) {\\n            if (!seen.has(othIndex) &&\\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\\n              return seen.add(othIndex);\\n            }\\n          })) {\\n        result = false;\\n        break;\\n      }\\n    } else if (!(\\n          arrValue === othValue ||\\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\\n        )) {\\n      result = false;\\n      break;\\n    }\\n  }\\n  stack['delete'](array);\\n  stack['delete'](other);\\n  return result;\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for comparing objects of\\n * the same `toStringTag`.\\n *\\n * **Note:** This function only supports comparing values with tags of\\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {string} tag The `toStringTag` of the objects to compare.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\\n *  for more details.\\n * @param {Object} stack Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\\n  switch (tag) {\\n    case dataViewTag:\\n      if ((object.byteLength != other.byteLength) ||\\n          (object.byteOffset != other.byteOffset)) {\\n        return false;\\n      }\\n      object = object.buffer;\\n      other = other.buffer;\\n\\n    case arrayBufferTag:\\n      if ((object.byteLength != other.byteLength) ||\\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\\n        return false;\\n      }\\n      return true;\\n\\n    case boolTag:\\n    case dateTag:\\n    case numberTag:\\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\\n      // Invalid dates are coerced to `NaN`.\\n      return eq(+object, +other);\\n\\n    case errorTag:\\n      return object.name == other.name && object.message == other.message;\\n\\n    case regexpTag:\\n    case stringTag:\\n      // Coerce regexes to strings and treat strings, primitives and objects,\\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\\n      // for more details.\\n      return object == (other + '');\\n\\n    case mapTag:\\n      var convert = mapToArray;\\n\\n    case setTag:\\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\\n      convert || (convert = setToArray);\\n\\n      if (object.size != other.size && !isPartial) {\\n        return false;\\n      }\\n      // Assume cyclic values are equal.\\n      var stacked = stack.get(object);\\n      if (stacked) {\\n        return stacked == other;\\n      }\\n      bitmask |= UNORDERED_COMPARE_FLAG;\\n\\n      // Recursively compare objects (susceptible to call stack limits).\\n      stack.set(object, other);\\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\\n      stack['delete'](object);\\n      return result;\\n\\n    case symbolTag:\\n      if (symbolValueOf) {\\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\\n      }\\n  }\\n  return false;\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for objects with support for\\n * partial deep comparisons.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\\n *  for more details.\\n * @param {Object} stack Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\\n      objProps = keys(object),\\n      objLength = objProps.length,\\n      othProps = keys(other),\\n      othLength = othProps.length;\\n\\n  if (objLength != othLength && !isPartial) {\\n    return false;\\n  }\\n  var index = objLength;\\n  while (index--) {\\n    var key = objProps[index];\\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\\n      return false;\\n    }\\n  }\\n  // Assume cyclic values are equal.\\n  var stacked = stack.get(object);\\n  if (stacked && stack.get(other)) {\\n    return stacked == other;\\n  }\\n  var result = true;\\n  stack.set(object, other);\\n  stack.set(other, object);\\n\\n  var skipCtor = isPartial;\\n  while (++index < objLength) {\\n    key = objProps[index];\\n    var objValue = object[key],\\n        othValue = other[key];\\n\\n    if (customizer) {\\n      var compared = isPartial\\n        ? customizer(othValue, objValue, key, other, object, stack)\\n        : customizer(objValue, othValue, key, object, other, stack);\\n    }\\n    // Recursively compare objects (susceptible to call stack limits).\\n    if (!(compared === undefined\\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\\n          : compared\\n        )) {\\n      result = false;\\n      break;\\n    }\\n    skipCtor || (skipCtor = key == 'constructor');\\n  }\\n  if (result && !skipCtor) {\\n    var objCtor = object.constructor,\\n        othCtor = other.constructor;\\n\\n    // Non `Object` object instances with different constructors are not equal.\\n    if (objCtor != othCtor &&\\n        ('constructor' in object && 'constructor' in other) &&\\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\\n      result = false;\\n    }\\n  }\\n  stack['delete'](object);\\n  stack['delete'](other);\\n  return result;\\n}\\n\\n/**\\n * Gets the data for `map`.\\n *\\n * @private\\n * @param {Object} map The map to query.\\n * @param {string} key The reference key.\\n * @returns {*} Returns the map data.\\n */\\nfunction getMapData(map, key) {\\n  var data = map.__data__;\\n  return isKeyable(key)\\n    ? data[typeof key == 'string' ? 'string' : 'hash']\\n    : data.map;\\n}\\n\\n/**\\n * Gets the property names, values, and compare flags of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the match data of `object`.\\n */\\nfunction getMatchData(object) {\\n  var result = keys(object),\\n      length = result.length;\\n\\n  while (length--) {\\n    var key = result[length],\\n        value = object[key];\\n\\n    result[length] = [key, value, isStrictComparable(value)];\\n  }\\n  return result;\\n}\\n\\n/**\\n * Gets the native function at `key` of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {string} key The key of the method to get.\\n * @returns {*} Returns the function if it's native, else `undefined`.\\n */\\nfunction getNative(object, key) {\\n  var value = getValue(object, key);\\n  return baseIsNative(value) ? value : undefined;\\n}\\n\\n/**\\n * Gets the `toStringTag` of `value`.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the `toStringTag`.\\n */\\nvar getTag = baseGetTag;\\n\\n// Fallback for data views, maps, sets, and weak maps in IE 11,\\n// for data views in Edge < 14, and promises in Node.js.\\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\\n    (Map && getTag(new Map) != mapTag) ||\\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\\n    (Set && getTag(new Set) != setTag) ||\\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\\n  getTag = function(value) {\\n    var result = objectToString.call(value),\\n        Ctor = result == objectTag ? value.constructor : undefined,\\n        ctorString = Ctor ? toSource(Ctor) : undefined;\\n\\n    if (ctorString) {\\n      switch (ctorString) {\\n        case dataViewCtorString: return dataViewTag;\\n        case mapCtorString: return mapTag;\\n        case promiseCtorString: return promiseTag;\\n        case setCtorString: return setTag;\\n        case weakMapCtorString: return weakMapTag;\\n      }\\n    }\\n    return result;\\n  };\\n}\\n\\n/**\\n * Checks if `path` exists on `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {Array|string} path The path to check.\\n * @param {Function} hasFunc The function to check properties.\\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\\n */\\nfunction hasPath(object, path, hasFunc) {\\n  path = isKey(path, object) ? [path] : castPath(path);\\n\\n  var result,\\n      index = -1,\\n      length = path.length;\\n\\n  while (++index < length) {\\n    var key = toKey(path[index]);\\n    if (!(result = object != null && hasFunc(object, key))) {\\n      break;\\n    }\\n    object = object[key];\\n  }\\n  if (result) {\\n    return result;\\n  }\\n  var length = object ? object.length : 0;\\n  return !!length && isLength(length) && isIndex(key, length) &&\\n    (isArray(object) || isArguments(object));\\n}\\n\\n/**\\n * Checks if `value` is a flattenable `arguments` object or array.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\\n */\\nfunction isFlattenable(value) {\\n  return isArray(value) || isArguments(value) ||\\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\\n}\\n\\n/**\\n * Checks if `value` is a valid array-like index.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\\n */\\nfunction isIndex(value, length) {\\n  length = length == null ? MAX_SAFE_INTEGER : length;\\n  return !!length &&\\n    (typeof value == 'number' || reIsUint.test(value)) &&\\n    (value > -1 && value % 1 == 0 && value < length);\\n}\\n\\n/**\\n * Checks if the given arguments are from an iteratee call.\\n *\\n * @private\\n * @param {*} value The potential iteratee value argument.\\n * @param {*} index The potential iteratee index or key argument.\\n * @param {*} object The potential iteratee object argument.\\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\\n *  else `false`.\\n */\\nfunction isIterateeCall(value, index, object) {\\n  if (!isObject(object)) {\\n    return false;\\n  }\\n  var type = typeof index;\\n  if (type == 'number'\\n        ? (isArrayLike(object) && isIndex(index, object.length))\\n        : (type == 'string' && index in object)\\n      ) {\\n    return eq(object[index], value);\\n  }\\n  return false;\\n}\\n\\n/**\\n * Checks if `value` is a property name and not a property path.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @param {Object} [object] The object to query keys on.\\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\\n */\\nfunction isKey(value, object) {\\n  if (isArray(value)) {\\n    return false;\\n  }\\n  var type = typeof value;\\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\\n      value == null || isSymbol(value)) {\\n    return true;\\n  }\\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\\n    (object != null && value in Object(object));\\n}\\n\\n/**\\n * Checks if `value` is suitable for use as unique object key.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\\n */\\nfunction isKeyable(value) {\\n  var type = typeof value;\\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\\n    ? (value !== '__proto__')\\n    : (value === null);\\n}\\n\\n/**\\n * Checks if `func` has its source masked.\\n *\\n * @private\\n * @param {Function} func The function to check.\\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\\n */\\nfunction isMasked(func) {\\n  return !!maskSrcKey && (maskSrcKey in func);\\n}\\n\\n/**\\n * Checks if `value` is likely a prototype object.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\\n */\\nfunction isPrototype(value) {\\n  var Ctor = value && value.constructor,\\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\\n\\n  return value === proto;\\n}\\n\\n/**\\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` if suitable for strict\\n *  equality comparisons, else `false`.\\n */\\nfunction isStrictComparable(value) {\\n  return value === value && !isObject(value);\\n}\\n\\n/**\\n * A specialized version of `matchesProperty` for source values suitable\\n * for strict equality comparisons, i.e. `===`.\\n *\\n * @private\\n * @param {string} key The key of the property to get.\\n * @param {*} srcValue The value to match.\\n * @returns {Function} Returns the new spec function.\\n */\\nfunction matchesStrictComparable(key, srcValue) {\\n  return function(object) {\\n    if (object == null) {\\n      return false;\\n    }\\n    return object[key] === srcValue &&\\n      (srcValue !== undefined || (key in Object(object)));\\n  };\\n}\\n\\n/**\\n * Converts `string` to a property path array.\\n *\\n * @private\\n * @param {string} string The string to convert.\\n * @returns {Array} Returns the property path array.\\n */\\nvar stringToPath = memoize(function(string) {\\n  string = toString(string);\\n\\n  var result = [];\\n  if (reLeadingDot.test(string)) {\\n    result.push('');\\n  }\\n  string.replace(rePropName, function(match, number, quote, string) {\\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\\n  });\\n  return result;\\n});\\n\\n/**\\n * Converts `value` to a string key if it's not a string or symbol.\\n *\\n * @private\\n * @param {*} value The value to inspect.\\n * @returns {string|symbol} Returns the key.\\n */\\nfunction toKey(value) {\\n  if (typeof value == 'string' || isSymbol(value)) {\\n    return value;\\n  }\\n  var result = (value + '');\\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\\n}\\n\\n/**\\n * Converts `func` to its source code.\\n *\\n * @private\\n * @param {Function} func The function to process.\\n * @returns {string} Returns the source code.\\n */\\nfunction toSource(func) {\\n  if (func != null) {\\n    try {\\n      return funcToString.call(func);\\n    } catch (e) {}\\n    try {\\n      return (func + '');\\n    } catch (e) {}\\n  }\\n  return '';\\n}\\n\\n/**\\n * Creates an array of elements, sorted in ascending order by the results of\\n * running each element in a collection thru each iteratee. This method\\n * performs a stable sort, that is, it preserves the original sort order of\\n * equal elements. The iteratees are invoked with one argument: (value).\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Collection\\n * @param {Array|Object} collection The collection to iterate over.\\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\\n *  The iteratees to sort by.\\n * @returns {Array} Returns the new sorted array.\\n * @example\\n *\\n * var users = [\\n *   { 'user': 'fred',   'age': 48 },\\n *   { 'user': 'barney', 'age': 36 },\\n *   { 'user': 'fred',   'age': 40 },\\n *   { 'user': 'barney', 'age': 34 }\\n * ];\\n *\\n * _.sortBy(users, function(o) { return o.user; });\\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\\n *\\n * _.sortBy(users, ['user', 'age']);\\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\\n *\\n * _.sortBy(users, 'user', function(o) {\\n *   return Math.floor(o.age / 10);\\n * });\\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\\n */\\nvar sortBy = baseRest(function(collection, iteratees) {\\n  if (collection == null) {\\n    return [];\\n  }\\n  var length = iteratees.length;\\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\\n    iteratees = [];\\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\\n    iteratees = [iteratees[0]];\\n  }\\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\\n});\\n\\n/**\\n * Creates a function that memoizes the result of `func`. If `resolver` is\\n * provided, it determines the cache key for storing the result based on the\\n * arguments provided to the memoized function. By default, the first argument\\n * provided to the memoized function is used as the map cache key. The `func`\\n * is invoked with the `this` binding of the memoized function.\\n *\\n * **Note:** The cache is exposed as the `cache` property on the memoized\\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\\n * constructor with one whose instances implement the\\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\\n * method interface of `delete`, `get`, `has`, and `set`.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Function\\n * @param {Function} func The function to have its output memoized.\\n * @param {Function} [resolver] The function to resolve the cache key.\\n * @returns {Function} Returns the new memoized function.\\n * @example\\n *\\n * var object = { 'a': 1, 'b': 2 };\\n * var other = { 'c': 3, 'd': 4 };\\n *\\n * var values = _.memoize(_.values);\\n * values(object);\\n * // => [1, 2]\\n *\\n * values(other);\\n * // => [3, 4]\\n *\\n * object.a = 2;\\n * values(object);\\n * // => [1, 2]\\n *\\n * // Modify the result cache.\\n * values.cache.set(object, ['a', 'b']);\\n * values(object);\\n * // => ['a', 'b']\\n *\\n * // Replace `_.memoize.Cache`.\\n * _.memoize.Cache = WeakMap;\\n */\\nfunction memoize(func, resolver) {\\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\\n    throw new TypeError(FUNC_ERROR_TEXT);\\n  }\\n  var memoized = function() {\\n    var args = arguments,\\n        key = resolver ? resolver.apply(this, args) : args[0],\\n        cache = memoized.cache;\\n\\n    if (cache.has(key)) {\\n      return cache.get(key);\\n    }\\n    var result = func.apply(this, args);\\n    memoized.cache = cache.set(key, result);\\n    return result;\\n  };\\n  memoized.cache = new (memoize.Cache || MapCache);\\n  return memoized;\\n}\\n\\n// Assign cache to `_.memoize`.\\nmemoize.Cache = MapCache;\\n\\n/**\\n * Performs a\\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n * comparison between two values to determine if they are equivalent.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n * @example\\n *\\n * var object = { 'a': 1 };\\n * var other = { 'a': 1 };\\n *\\n * _.eq(object, object);\\n * // => true\\n *\\n * _.eq(object, other);\\n * // => false\\n *\\n * _.eq('a', 'a');\\n * // => true\\n *\\n * _.eq('a', Object('a'));\\n * // => false\\n *\\n * _.eq(NaN, NaN);\\n * // => true\\n */\\nfunction eq(value, other) {\\n  return value === other || (value !== value && other !== other);\\n}\\n\\n/**\\n * Checks if `value` is likely an `arguments` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\\n *  else `false`.\\n * @example\\n *\\n * _.isArguments(function() { return arguments; }());\\n * // => true\\n *\\n * _.isArguments([1, 2, 3]);\\n * // => false\\n */\\nfunction isArguments(value) {\\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\\n}\\n\\n/**\\n * Checks if `value` is classified as an `Array` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\\n * @example\\n *\\n * _.isArray([1, 2, 3]);\\n * // => true\\n *\\n * _.isArray(document.body.children);\\n * // => false\\n *\\n * _.isArray('abc');\\n * // => false\\n *\\n * _.isArray(_.noop);\\n * // => false\\n */\\nvar isArray = Array.isArray;\\n\\n/**\\n * Checks if `value` is array-like. A value is considered array-like if it's\\n * not a function and has a `value.length` that's an integer greater than or\\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\\n * @example\\n *\\n * _.isArrayLike([1, 2, 3]);\\n * // => true\\n *\\n * _.isArrayLike(document.body.children);\\n * // => true\\n *\\n * _.isArrayLike('abc');\\n * // => true\\n *\\n * _.isArrayLike(_.noop);\\n * // => false\\n */\\nfunction isArrayLike(value) {\\n  return value != null && isLength(value.length) && !isFunction(value);\\n}\\n\\n/**\\n * This method is like `_.isArrayLike` except that it also checks if `value`\\n * is an object.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an array-like object,\\n *  else `false`.\\n * @example\\n *\\n * _.isArrayLikeObject([1, 2, 3]);\\n * // => true\\n *\\n * _.isArrayLikeObject(document.body.children);\\n * // => true\\n *\\n * _.isArrayLikeObject('abc');\\n * // => false\\n *\\n * _.isArrayLikeObject(_.noop);\\n * // => false\\n */\\nfunction isArrayLikeObject(value) {\\n  return isObjectLike(value) && isArrayLike(value);\\n}\\n\\n/**\\n * Checks if `value` is classified as a `Function` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\\n * @example\\n *\\n * _.isFunction(_);\\n * // => true\\n *\\n * _.isFunction(/abc/);\\n * // => false\\n */\\nfunction isFunction(value) {\\n  // The use of `Object#toString` avoids issues with the `typeof` operator\\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\\n  var tag = isObject(value) ? objectToString.call(value) : '';\\n  return tag == funcTag || tag == genTag;\\n}\\n\\n/**\\n * Checks if `value` is a valid array-like length.\\n *\\n * **Note:** This method is loosely based on\\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\\n * @example\\n *\\n * _.isLength(3);\\n * // => true\\n *\\n * _.isLength(Number.MIN_VALUE);\\n * // => false\\n *\\n * _.isLength(Infinity);\\n * // => false\\n *\\n * _.isLength('3');\\n * // => false\\n */\\nfunction isLength(value) {\\n  return typeof value == 'number' &&\\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\\n}\\n\\n/**\\n * Checks if `value` is the\\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\\n * @example\\n *\\n * _.isObject({});\\n * // => true\\n *\\n * _.isObject([1, 2, 3]);\\n * // => true\\n *\\n * _.isObject(_.noop);\\n * // => true\\n *\\n * _.isObject(null);\\n * // => false\\n */\\nfunction isObject(value) {\\n  var type = typeof value;\\n  return !!value && (type == 'object' || type == 'function');\\n}\\n\\n/**\\n * Checks if `value` is object-like. A value is object-like if it's not `null`\\n * and has a `typeof` result of \\\"object\\\".\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\\n * @example\\n *\\n * _.isObjectLike({});\\n * // => true\\n *\\n * _.isObjectLike([1, 2, 3]);\\n * // => true\\n *\\n * _.isObjectLike(_.noop);\\n * // => false\\n *\\n * _.isObjectLike(null);\\n * // => false\\n */\\nfunction isObjectLike(value) {\\n  return !!value && typeof value == 'object';\\n}\\n\\n/**\\n * Checks if `value` is classified as a `Symbol` primitive or object.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\\n * @example\\n *\\n * _.isSymbol(Symbol.iterator);\\n * // => true\\n *\\n * _.isSymbol('abc');\\n * // => false\\n */\\nfunction isSymbol(value) {\\n  return typeof value == 'symbol' ||\\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\\n}\\n\\n/**\\n * Checks if `value` is classified as a typed array.\\n *\\n * @static\\n * @memberOf _\\n * @since 3.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\n * @example\\n *\\n * _.isTypedArray(new Uint8Array);\\n * // => true\\n *\\n * _.isTypedArray([]);\\n * // => false\\n */\\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\\n\\n/**\\n * Converts `value` to a string. An empty string is returned for `null`\\n * and `undefined` values. The sign of `-0` is preserved.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to process.\\n * @returns {string} Returns the string.\\n * @example\\n *\\n * _.toString(null);\\n * // => ''\\n *\\n * _.toString(-0);\\n * // => '-0'\\n *\\n * _.toString([1, 2, 3]);\\n * // => '1,2,3'\\n */\\nfunction toString(value) {\\n  return value == null ? '' : baseToString(value);\\n}\\n\\n/**\\n * Gets the value at `path` of `object`. If the resolved value is\\n * `undefined`, the `defaultValue` is returned in its place.\\n *\\n * @static\\n * @memberOf _\\n * @since 3.7.0\\n * @category Object\\n * @param {Object} object The object to query.\\n * @param {Array|string} path The path of the property to get.\\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\\n * @returns {*} Returns the resolved value.\\n * @example\\n *\\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\\n *\\n * _.get(object, 'a[0].b.c');\\n * // => 3\\n *\\n * _.get(object, ['a', '0', 'b', 'c']);\\n * // => 3\\n *\\n * _.get(object, 'a.b.c', 'default');\\n * // => 'default'\\n */\\nfunction get(object, path, defaultValue) {\\n  var result = object == null ? undefined : baseGet(object, path);\\n  return result === undefined ? defaultValue : result;\\n}\\n\\n/**\\n * Checks if `path` is a direct or inherited property of `object`.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Object\\n * @param {Object} object The object to query.\\n * @param {Array|string} path The path to check.\\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\\n * @example\\n *\\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\\n *\\n * _.hasIn(object, 'a');\\n * // => true\\n *\\n * _.hasIn(object, 'a.b');\\n * // => true\\n *\\n * _.hasIn(object, ['a', 'b']);\\n * // => true\\n *\\n * _.hasIn(object, 'b');\\n * // => false\\n */\\nfunction hasIn(object, path) {\\n  return object != null && hasPath(object, path, baseHasIn);\\n}\\n\\n/**\\n * Creates an array of the own enumerable property names of `object`.\\n *\\n * **Note:** Non-object values are coerced to objects. See the\\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\\n * for more details.\\n *\\n * @static\\n * @since 0.1.0\\n * @memberOf _\\n * @category Object\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names.\\n * @example\\n *\\n * function Foo() {\\n *   this.a = 1;\\n *   this.b = 2;\\n * }\\n *\\n * Foo.prototype.c = 3;\\n *\\n * _.keys(new Foo);\\n * // => ['a', 'b'] (iteration order is not guaranteed)\\n *\\n * _.keys('hi');\\n * // => ['0', '1']\\n */\\nfunction keys(object) {\\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\\n}\\n\\n/**\\n * This method returns the first argument it receives.\\n *\\n * @static\\n * @since 0.1.0\\n * @memberOf _\\n * @category Util\\n * @param {*} value Any value.\\n * @returns {*} Returns `value`.\\n * @example\\n *\\n * var object = { 'a': 1 };\\n *\\n * console.log(_.identity(object) === object);\\n * // => true\\n */\\nfunction identity(value) {\\n  return value;\\n}\\n\\n/**\\n * Creates a function that returns the value at `path` of a given object.\\n *\\n * @static\\n * @memberOf _\\n * @since 2.4.0\\n * @category Util\\n * @param {Array|string} path The path of the property to get.\\n * @returns {Function} Returns the new accessor function.\\n * @example\\n *\\n * var objects = [\\n *   { 'a': { 'b': 2 } },\\n *   { 'a': { 'b': 1 } }\\n * ];\\n *\\n * _.map(objects, _.property('a.b'));\\n * // => [2, 1]\\n *\\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\\n * // => [1, 2]\\n */\\nfunction property(path) {\\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\\n}\\n\\nmodule.exports = sortBy;\\n\\n}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n},{}],55:[function(require,module,exports){\\n'use strict';\\nconst isOptionObject = require('is-plain-obj');\\n\\nconst {hasOwnProperty} = Object.prototype;\\nconst {propertyIsEnumerable} = Object;\\nconst defineProperty = (obj, name, value) => Object.defineProperty(obj, name, {\\n\\tvalue,\\n\\twritable: true,\\n\\tenumerable: true,\\n\\tconfigurable: true\\n});\\n\\nconst globalThis = this;\\nconst defaultMergeOpts = {\\n\\tconcatArrays: false,\\n\\tignoreUndefined: false\\n};\\n\\nconst getEnumerableOwnPropertyKeys = value => {\\n\\tconst keys = [];\\n\\n\\tfor (const key in value) {\\n\\t\\tif (hasOwnProperty.call(value, key)) {\\n\\t\\t\\tkeys.push(key);\\n\\t\\t}\\n\\t}\\n\\n\\t/* istanbul ignore else  */\\n\\tif (Object.getOwnPropertySymbols) {\\n\\t\\tconst symbols = Object.getOwnPropertySymbols(value);\\n\\n\\t\\tfor (const symbol of symbols) {\\n\\t\\t\\tif (propertyIsEnumerable.call(value, symbol)) {\\n\\t\\t\\t\\tkeys.push(symbol);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn keys;\\n};\\n\\nfunction clone(value) {\\n\\tif (Array.isArray(value)) {\\n\\t\\treturn cloneArray(value);\\n\\t}\\n\\n\\tif (isOptionObject(value)) {\\n\\t\\treturn cloneOptionObject(value);\\n\\t}\\n\\n\\treturn value;\\n}\\n\\nfunction cloneArray(array) {\\n\\tconst result = array.slice(0, 0);\\n\\n\\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\\n\\t\\tdefineProperty(result, key, clone(array[key]));\\n\\t});\\n\\n\\treturn result;\\n}\\n\\nfunction cloneOptionObject(obj) {\\n\\tconst result = Object.getPrototypeOf(obj) === null ? Object.create(null) : {};\\n\\n\\tgetEnumerableOwnPropertyKeys(obj).forEach(key => {\\n\\t\\tdefineProperty(result, key, clone(obj[key]));\\n\\t});\\n\\n\\treturn result;\\n}\\n\\n/**\\n * @param {*} merged already cloned\\n * @param {*} source something to merge\\n * @param {string[]} keys keys to merge\\n * @param {Object} config Config Object\\n * @returns {*} cloned Object\\n */\\nconst mergeKeys = (merged, source, keys, config) => {\\n\\tkeys.forEach(key => {\\n\\t\\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Do not recurse into prototype chain of merged\\n\\t\\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\\n\\t\\t\\tdefineProperty(merged, key, merge(merged[key], source[key], config));\\n\\t\\t} else {\\n\\t\\t\\tdefineProperty(merged, key, clone(source[key]));\\n\\t\\t}\\n\\t});\\n\\n\\treturn merged;\\n};\\n\\n/**\\n * @param {*} merged already cloned\\n * @param {*} source something to merge\\n * @param {Object} config Config Object\\n * @returns {*} cloned Object\\n *\\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\\n */\\nconst concatArrays = (merged, source, config) => {\\n\\tlet result = merged.slice(0, 0);\\n\\tlet resultIndex = 0;\\n\\n\\t[merged, source].forEach(array => {\\n\\t\\tconst indices = [];\\n\\n\\t\\t// `result.concat(array)` with cloning\\n\\t\\tfor (let k = 0; k < array.length; k++) {\\n\\t\\t\\tif (!hasOwnProperty.call(array, k)) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tindices.push(String(k));\\n\\n\\t\\t\\tif (array === merged) {\\n\\t\\t\\t\\t// Already cloned\\n\\t\\t\\t\\tdefineProperty(result, resultIndex++, array[k]);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdefineProperty(result, resultIndex++, clone(array[k]));\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Merge non-index keys\\n\\t\\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\\n\\t});\\n\\n\\treturn result;\\n};\\n\\n/**\\n * @param {*} merged already cloned\\n * @param {*} source something to merge\\n * @param {Object} config Config Object\\n * @returns {*} cloned Object\\n */\\nfunction merge(merged, source, config) {\\n\\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\\n\\t\\treturn concatArrays(merged, source, config);\\n\\t}\\n\\n\\tif (!isOptionObject(source) || !isOptionObject(merged)) {\\n\\t\\treturn clone(source);\\n\\t}\\n\\n\\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\\n}\\n\\nmodule.exports = function (...options) {\\n\\tconst config = merge(clone(defaultMergeOpts), (this !== globalThis && this) || {}, defaultMergeOpts);\\n\\tlet merged = {_: {}};\\n\\n\\tfor (const option of options) {\\n\\t\\tif (option === undefined) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tif (!isOptionObject(option)) {\\n\\t\\t\\tthrow new TypeError('`' + option + '` is not an Option Object');\\n\\t\\t}\\n\\n\\t\\tmerged = merge(merged, {_: option}, config);\\n\\t}\\n\\n\\treturn merged._;\\n};\\n\\n},{\\\"is-plain-obj\\\":50}],56:[function(require,module,exports){\\n'use strict'\\nconst { Buffer } = require('buffer')\\n\\nclass Base {\\n  constructor (name, code, implementation, alphabet) {\\n    this.name = name\\n    this.code = code\\n    this.codeBuf = Buffer.from(this.code)\\n    this.alphabet = alphabet\\n    this.engine = implementation(alphabet)\\n  }\\n\\n  encode (buf) {\\n    return this.engine.encode(buf)\\n  }\\n\\n  decode (string) {\\n    for (const char of string) {\\n      if (this.alphabet && this.alphabet.indexOf(char) < 0) {\\n        throw new Error(`invalid character '${char}' in '${string}'`)\\n      }\\n    }\\n    return this.engine.decode(string)\\n  }\\n}\\n\\nmodule.exports = Base\\n\\n},{\\\"buffer\\\":8}],57:[function(require,module,exports){\\n'use strict'\\n\\nconst baseX = require('base-x')\\nconst { Buffer } = require('buffer')\\nconst Base = require('./base.js')\\nconst rfc4648 = require('./rfc4648')\\n\\nconst identity = () => {\\n  return {\\n    encode: (data) => Buffer.from(data).toString(),\\n    decode: (string) => Buffer.from(string)\\n  }\\n}\\n\\n// name, code, implementation, alphabet\\nconst constants = [\\n  ['identity', '\\\\x00', identity, ''],\\n  ['base2', '0', rfc4648(1), '01'],\\n  ['base8', '7', rfc4648(3), '01234567'],\\n  ['base10', '9', baseX, '0123456789'],\\n  ['base16', 'f', rfc4648(4), '0123456789abcdef'],\\n  ['base16upper', 'F', rfc4648(4), '0123456789ABCDEF'],\\n  ['base32hex', 'v', rfc4648(5), '0123456789abcdefghijklmnopqrstuv'],\\n  ['base32hexupper', 'V', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV'],\\n  ['base32hexpad', 't', rfc4648(5), '0123456789abcdefghijklmnopqrstuv='],\\n  ['base32hexpadupper', 'T', rfc4648(5), '0123456789ABCDEFGHIJKLMNOPQRSTUV='],\\n  ['base32', 'b', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567'],\\n  ['base32upper', 'B', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'],\\n  ['base32pad', 'c', rfc4648(5), 'abcdefghijklmnopqrstuvwxyz234567='],\\n  ['base32padupper', 'C', rfc4648(5), 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567='],\\n  ['base32z', 'h', rfc4648(5), 'ybndrfg8ejkmcpqxot1uwisza345h769'],\\n  ['base36', 'k', baseX, '0123456789abcdefghijklmnopqrstuvwxyz'],\\n  ['base36upper', 'K', baseX, '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\\n  ['base58btc', 'z', baseX, '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'],\\n  ['base58flickr', 'Z', baseX, '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'],\\n  ['base64', 'm', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'],\\n  ['base64pad', 'M', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='],\\n  ['base64url', 'u', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'],\\n  ['base64urlpad', 'U', rfc4648(6), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=']\\n]\\n\\nconst names = constants.reduce((prev, tupple) => {\\n  prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3])\\n  return prev\\n}, {})\\n\\nconst codes = constants.reduce((prev, tupple) => {\\n  prev[tupple[1]] = names[tupple[0]]\\n  return prev\\n}, {})\\n\\nmodule.exports = {\\n  names,\\n  codes\\n}\\n\\n},{\\\"./base.js\\\":56,\\\"./rfc4648\\\":59,\\\"base-x\\\":6,\\\"buffer\\\":8}],58:[function(require,module,exports){\\n/**\\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\\n *\\n * @module Multibase\\n */\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst constants = require('./constants')\\n\\n/** @typedef {import(\\\"./base\\\")} Base */\\n\\n/**\\n * Create a new buffer with the multibase varint+code.\\n *\\n * @param {string|number} nameOrCode - The multibase name or code number.\\n * @param {Buffer} buf - The data to be prefixed with multibase.\\n * @returns {Buffer}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction multibase (nameOrCode, buf) {\\n  if (!buf) {\\n    throw new Error('requires an encoded buffer')\\n  }\\n  const enc = encoding(nameOrCode)\\n  validEncode(enc.name, buf)\\n  return Buffer.concat([enc.codeBuf, buf])\\n}\\n\\n/**\\n * Encode data with the specified base and add the multibase prefix.\\n *\\n * @param {string|number} nameOrCode - The multibase name or code number.\\n * @param {Buffer} buf - The data to be encoded.\\n * @returns {Buffer}\\n * @throws {Error} Will throw if the encoding is not supported\\n *\\n */\\nfunction encode (nameOrCode, buf) {\\n  const enc = encoding(nameOrCode)\\n\\n  return Buffer.concat([enc.codeBuf, Buffer.from(enc.encode(buf))])\\n}\\n\\n/**\\n * Takes a buffer or string encoded with multibase header, decodes it and\\n * returns the decoded buffer\\n *\\n * @param {Buffer|string} data\\n * @returns {Buffer}\\n * @throws {Error} Will throw if the encoding is not supported\\n *\\n */\\nfunction decode (data) {\\n  if (Buffer.isBuffer(data)) {\\n    data = data.toString()\\n  }\\n  const prefix = data[0]\\n\\n  // Make all encodings case-insensitive except the ones that include upper and lower chars in the alphabet\\n  if (['f', 'F', 'v', 'V', 't', 'T', 'b', 'B', 'c', 'C', 'h', 'k', 'K'].includes(prefix)) {\\n    data = data.toLowerCase()\\n  }\\n  const enc = encoding(data[0])\\n  return Buffer.from(enc.decode(data.substring(1)))\\n}\\n\\n/**\\n * Is the given data multibase encoded?\\n *\\n * @param {Buffer|string} data\\n * @returns {boolean}\\n */\\nfunction isEncoded (data) {\\n  if (Buffer.isBuffer(data)) {\\n    data = data.toString()\\n  }\\n\\n  // Ensure bufOrString is a string\\n  if (Object.prototype.toString.call(data) !== '[object String]') {\\n    return false\\n  }\\n\\n  try {\\n    const enc = encoding(data[0])\\n    return enc.name\\n  } catch (err) {\\n    return false\\n  }\\n}\\n\\n/**\\n * Validate encoded data\\n *\\n * @param {string} name\\n * @param {Buffer} buf\\n * @returns {undefined}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction validEncode (name, buf) {\\n  const enc = encoding(name)\\n  enc.decode(buf.toString())\\n}\\n\\n/**\\n * Get the encoding by name or code\\n *\\n * @param {string} nameOrCode\\n * @returns {Base}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction encoding (nameOrCode) {\\n  if (constants.names[nameOrCode]) {\\n    return constants.names[nameOrCode]\\n  } else if (constants.codes[nameOrCode]) {\\n    return constants.codes[nameOrCode]\\n  } else {\\n    throw new Error(`Unsupported encoding: ${nameOrCode}`)\\n  }\\n}\\n\\n/**\\n * Get encoding from data\\n *\\n * @param {string|Buffer} data\\n * @returns {Base}\\n * @throws {Error} Will throw if the encoding is not supported\\n */\\nfunction encodingFromData (data) {\\n  if (Buffer.isBuffer(data)) {\\n    data = data.toString()\\n  }\\n\\n  return encoding(data[0])\\n}\\n\\nexports = module.exports = multibase\\nexports.encode = encode\\nexports.decode = decode\\nexports.isEncoded = isEncoded\\nexports.encoding = encoding\\nexports.encodingFromData = encodingFromData\\nexports.names = Object.freeze(constants.names)\\nexports.codes = Object.freeze(constants.codes)\\n\\n},{\\\"./constants\\\":57,\\\"buffer\\\":8}],59:[function(require,module,exports){\\n'use strict'\\n\\nconst decode = (string, alphabet, bitsPerChar) => {\\n  // Build the character lookup table:\\n  const codes = {}\\n  for (let i = 0; i < alphabet.length; ++i) {\\n    codes[alphabet[i]] = i\\n  }\\n\\n  // Count the padding bytes:\\n  let end = string.length\\n  while (string[end - 1] === '=') {\\n    --end\\n  }\\n\\n  // Allocate the output:\\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\\n\\n  // Parse the data:\\n  let bits = 0 // Number of bits currently in the buffer\\n  let buffer = 0 // Bits waiting to be written out, MSB first\\n  let written = 0 // Next byte to write\\n  for (let i = 0; i < end; ++i) {\\n    // Read one character from the string:\\n    const value = codes[string[i]]\\n    if (value === undefined) {\\n      throw new SyntaxError('Invalid character ' + string[i])\\n    }\\n\\n    // Append the bits to the buffer:\\n    buffer = (buffer << bitsPerChar) | value\\n    bits += bitsPerChar\\n\\n    // Write out some bits if the buffer has a byte's worth:\\n    if (bits >= 8) {\\n      bits -= 8\\n      out[written++] = 0xff & (buffer >> bits)\\n    }\\n  }\\n\\n  // Verify that we have received just enough bits:\\n  if (bits >= bitsPerChar || 0xff & (buffer << (8 - bits))) {\\n    throw new SyntaxError('Unexpected end of data')\\n  }\\n\\n  return out\\n}\\n\\nconst encode = (data, alphabet, bitsPerChar) => {\\n  const pad = alphabet[alphabet.length - 1] === '='\\n  const mask = (1 << bitsPerChar) - 1\\n  let out = ''\\n\\n  let bits = 0 // Number of bits currently in the buffer\\n  let buffer = 0 // Bits waiting to be written out, MSB first\\n  for (let i = 0; i < data.length; ++i) {\\n    // Slurp data into the buffer:\\n    buffer = (buffer << 8) | data[i]\\n    bits += 8\\n\\n    // Write out as much as we can:\\n    while (bits > bitsPerChar) {\\n      bits -= bitsPerChar\\n      out += alphabet[mask & (buffer >> bits)]\\n    }\\n  }\\n\\n  // Partial character:\\n  if (bits) {\\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\\n  }\\n\\n  // Add padding characters until we hit a byte boundary:\\n  if (pad) {\\n    while ((out.length * bitsPerChar) & 7) {\\n      out += '='\\n    }\\n  }\\n\\n  return out\\n}\\n\\nmodule.exports = (bitsPerChar) => (alphabet) => {\\n  return {\\n    encode (input) {\\n      return encode(input, alphabet, bitsPerChar)\\n    },\\n    decode (input) {\\n      return decode(input, alphabet, bitsPerChar)\\n    }\\n  }\\n}\\n\\n},{}],60:[function(require,module,exports){\\narguments[4][16][0].apply(exports,arguments)\\n},{\\\"dup\\\":16}],61:[function(require,module,exports){\\narguments[4][17][0].apply(exports,arguments)\\n},{\\\"./base-table.json\\\":60,\\\"dup\\\":17}],62:[function(require,module,exports){\\narguments[4][18][0].apply(exports,arguments)\\n},{\\\"./constants\\\":61,\\\"./int-table\\\":63,\\\"./print\\\":64,\\\"./util\\\":65,\\\"./varint-table\\\":66,\\\"buffer\\\":8,\\\"dup\\\":18,\\\"varint\\\":83}],63:[function(require,module,exports){\\narguments[4][19][0].apply(exports,arguments)\\n},{\\\"./base-table.json\\\":60,\\\"dup\\\":19}],64:[function(require,module,exports){\\narguments[4][20][0].apply(exports,arguments)\\n},{\\\"./base-table.json\\\":60,\\\"dup\\\":20}],65:[function(require,module,exports){\\narguments[4][21][0].apply(exports,arguments)\\n},{\\\"buffer\\\":8,\\\"dup\\\":21,\\\"varint\\\":83}],66:[function(require,module,exports){\\narguments[4][22][0].apply(exports,arguments)\\n},{\\\"./base-table.json\\\":60,\\\"./util\\\":65,\\\"dup\\\":22}],67:[function(require,module,exports){\\narguments[4][25][0].apply(exports,arguments)\\n},{\\\"dup\\\":25}],68:[function(require,module,exports){\\narguments[4][26][0].apply(exports,arguments)\\n},{\\\"buffer\\\":8,\\\"dup\\\":26}],69:[function(require,module,exports){\\narguments[4][27][0].apply(exports,arguments)\\n},{\\\"dup\\\":27}],70:[function(require,module,exports){\\narguments[4][28][0].apply(exports,arguments)\\n},{\\\"buffer\\\":8,\\\"dup\\\":28}],71:[function(require,module,exports){\\narguments[4][29][0].apply(exports,arguments)\\n},{\\\"./base.js\\\":67,\\\"./base16\\\":68,\\\"./base32\\\":69,\\\"./base64\\\":70,\\\"base-x\\\":6,\\\"dup\\\":29}],72:[function(require,module,exports){\\n/**\\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\\n * @module Multibase\\n */\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst constants = require('./constants')\\n\\nexports = module.exports = multibase\\nexports.encode = encode\\nexports.decode = decode\\nexports.isEncoded = isEncoded\\nexports.names = Object.freeze(Object.keys(constants.names))\\nexports.codes = Object.freeze(Object.keys(constants.codes))\\n\\n/**\\n * Create a new buffer with the multibase varint+code.\\n *\\n * @param {string|number} nameOrCode - The multibase name or code number.\\n * @param {Buffer} buf - The data to be prefixed with multibase.\\n * @memberof Multibase\\n * @returns {Buffer}\\n */\\nfunction multibase (nameOrCode, buf) {\\n  if (!buf) {\\n    throw new Error('requires an encoded buffer')\\n  }\\n  const base = getBase(nameOrCode)\\n  const codeBuf = Buffer.from(base.code)\\n\\n  const name = base.name\\n  validEncode(name, buf)\\n  return Buffer.concat([codeBuf, buf])\\n}\\n\\n/**\\n * Encode data with the specified base and add the multibase prefix.\\n *\\n * @param {string|number} nameOrCode - The multibase name or code number.\\n * @param {Buffer} buf - The data to be encoded.\\n * @returns {Buffer}\\n * @memberof Multibase\\n */\\nfunction encode (nameOrCode, buf) {\\n  const base = getBase(nameOrCode)\\n  const name = base.name\\n\\n  return multibase(name, Buffer.from(base.encode(buf)))\\n}\\n\\n/**\\n * Takes a buffer or string encoded with multibase header, decodes it and\\n * returns the decoded buffer\\n *\\n * @param {Buffer|string} bufOrString\\n * @returns {Buffer}\\n * @memberof Multibase\\n *\\n */\\nfunction decode (bufOrString) {\\n  if (Buffer.isBuffer(bufOrString)) {\\n    bufOrString = bufOrString.toString()\\n  }\\n\\n  const code = bufOrString.substring(0, 1)\\n  bufOrString = bufOrString.substring(1, bufOrString.length)\\n\\n  if (typeof bufOrString === 'string') {\\n    bufOrString = Buffer.from(bufOrString)\\n  }\\n\\n  const base = getBase(code)\\n  return Buffer.from(base.decode(bufOrString.toString()))\\n}\\n\\n/**\\n * Is the given data multibase encoded?\\n *\\n * @param {Buffer|string} bufOrString\\n * @returns {boolean}\\n * @memberof Multibase\\n */\\nfunction isEncoded (bufOrString) {\\n  if (Buffer.isBuffer(bufOrString)) {\\n    bufOrString = bufOrString.toString()\\n  }\\n\\n  // Ensure bufOrString is a string\\n  if (Object.prototype.toString.call(bufOrString) !== '[object String]') {\\n    return false\\n  }\\n\\n  const code = bufOrString.substring(0, 1)\\n  try {\\n    const base = getBase(code)\\n    return base.name\\n  } catch (err) {\\n    return false\\n  }\\n}\\n\\n/**\\n * @param {string} name\\n * @param {Buffer} buf\\n * @private\\n * @returns {undefined}\\n */\\nfunction validEncode (name, buf) {\\n  const base = getBase(name)\\n  base.decode(buf.toString())\\n}\\n\\nfunction getBase (nameOrCode) {\\n  let base\\n\\n  if (constants.names[nameOrCode]) {\\n    base = constants.names[nameOrCode]\\n  } else if (constants.codes[nameOrCode]) {\\n    base = constants.codes[nameOrCode]\\n  } else {\\n    throw new Error('Unsupported encoding')\\n  }\\n\\n  if (!base.isImplemented()) {\\n    throw new Error('Base ' + nameOrCode + ' is not implemented yet')\\n  }\\n\\n  return base\\n}\\n\\n},{\\\"./constants\\\":71,\\\"buffer\\\":8}],73:[function(require,module,exports){\\n/* eslint quote-props: off */\\n/* eslint key-spacing: off */\\n'use strict'\\n\\nexports.names = Object.freeze({\\n  'identity':   0x0,\\n  'sha1':       0x11,\\n  'sha2-256':   0x12,\\n  'sha2-512':   0x13,\\n  'dbl-sha2-256': 0x56,\\n  'sha3-224':   0x17,\\n  'sha3-256':   0x16,\\n  'sha3-384':   0x15,\\n  'sha3-512':   0x14,\\n  'shake-128':  0x18,\\n  'shake-256':  0x19,\\n  'keccak-224': 0x1A,\\n  'keccak-256': 0x1B,\\n  'keccak-384': 0x1C,\\n  'keccak-512': 0x1D,\\n  'murmur3-128': 0x22,\\n  'murmur3-32':  0x23,\\n  'md4':         0xd4,\\n  'md5':         0xd5,\\n  'blake2b-8':   0xb201,\\n  'blake2b-16':  0xb202,\\n  'blake2b-24':  0xb203,\\n  'blake2b-32':  0xb204,\\n  'blake2b-40':  0xb205,\\n  'blake2b-48':  0xb206,\\n  'blake2b-56':  0xb207,\\n  'blake2b-64':  0xb208,\\n  'blake2b-72':  0xb209,\\n  'blake2b-80':  0xb20a,\\n  'blake2b-88':  0xb20b,\\n  'blake2b-96':  0xb20c,\\n  'blake2b-104': 0xb20d,\\n  'blake2b-112': 0xb20e,\\n  'blake2b-120': 0xb20f,\\n  'blake2b-128': 0xb210,\\n  'blake2b-136': 0xb211,\\n  'blake2b-144': 0xb212,\\n  'blake2b-152': 0xb213,\\n  'blake2b-160': 0xb214,\\n  'blake2b-168': 0xb215,\\n  'blake2b-176': 0xb216,\\n  'blake2b-184': 0xb217,\\n  'blake2b-192': 0xb218,\\n  'blake2b-200': 0xb219,\\n  'blake2b-208': 0xb21a,\\n  'blake2b-216': 0xb21b,\\n  'blake2b-224': 0xb21c,\\n  'blake2b-232': 0xb21d,\\n  'blake2b-240': 0xb21e,\\n  'blake2b-248': 0xb21f,\\n  'blake2b-256': 0xb220,\\n  'blake2b-264': 0xb221,\\n  'blake2b-272': 0xb222,\\n  'blake2b-280': 0xb223,\\n  'blake2b-288': 0xb224,\\n  'blake2b-296': 0xb225,\\n  'blake2b-304': 0xb226,\\n  'blake2b-312': 0xb227,\\n  'blake2b-320': 0xb228,\\n  'blake2b-328': 0xb229,\\n  'blake2b-336': 0xb22a,\\n  'blake2b-344': 0xb22b,\\n  'blake2b-352': 0xb22c,\\n  'blake2b-360': 0xb22d,\\n  'blake2b-368': 0xb22e,\\n  'blake2b-376': 0xb22f,\\n  'blake2b-384': 0xb230,\\n  'blake2b-392': 0xb231,\\n  'blake2b-400': 0xb232,\\n  'blake2b-408': 0xb233,\\n  'blake2b-416': 0xb234,\\n  'blake2b-424': 0xb235,\\n  'blake2b-432': 0xb236,\\n  'blake2b-440': 0xb237,\\n  'blake2b-448': 0xb238,\\n  'blake2b-456': 0xb239,\\n  'blake2b-464': 0xb23a,\\n  'blake2b-472': 0xb23b,\\n  'blake2b-480': 0xb23c,\\n  'blake2b-488': 0xb23d,\\n  'blake2b-496': 0xb23e,\\n  'blake2b-504': 0xb23f,\\n  'blake2b-512': 0xb240,\\n  'blake2s-8':   0xb241,\\n  'blake2s-16':  0xb242,\\n  'blake2s-24':  0xb243,\\n  'blake2s-32':  0xb244,\\n  'blake2s-40':  0xb245,\\n  'blake2s-48':  0xb246,\\n  'blake2s-56':  0xb247,\\n  'blake2s-64':  0xb248,\\n  'blake2s-72':  0xb249,\\n  'blake2s-80':  0xb24a,\\n  'blake2s-88':  0xb24b,\\n  'blake2s-96':  0xb24c,\\n  'blake2s-104': 0xb24d,\\n  'blake2s-112': 0xb24e,\\n  'blake2s-120': 0xb24f,\\n  'blake2s-128': 0xb250,\\n  'blake2s-136': 0xb251,\\n  'blake2s-144': 0xb252,\\n  'blake2s-152': 0xb253,\\n  'blake2s-160': 0xb254,\\n  'blake2s-168': 0xb255,\\n  'blake2s-176': 0xb256,\\n  'blake2s-184': 0xb257,\\n  'blake2s-192': 0xb258,\\n  'blake2s-200': 0xb259,\\n  'blake2s-208': 0xb25a,\\n  'blake2s-216': 0xb25b,\\n  'blake2s-224': 0xb25c,\\n  'blake2s-232': 0xb25d,\\n  'blake2s-240': 0xb25e,\\n  'blake2s-248': 0xb25f,\\n  'blake2s-256': 0xb260,\\n  'Skein256-8': 0xb301,\\n  'Skein256-16': 0xb302,\\n  'Skein256-24': 0xb303,\\n  'Skein256-32': 0xb304,\\n  'Skein256-40': 0xb305,\\n  'Skein256-48': 0xb306,\\n  'Skein256-56': 0xb307,\\n  'Skein256-64': 0xb308,\\n  'Skein256-72': 0xb309,\\n  'Skein256-80': 0xb30a,\\n  'Skein256-88': 0xb30b,\\n  'Skein256-96': 0xb30c,\\n  'Skein256-104': 0xb30d,\\n  'Skein256-112': 0xb30e,\\n  'Skein256-120': 0xb30f,\\n  'Skein256-128': 0xb310,\\n  'Skein256-136': 0xb311,\\n  'Skein256-144': 0xb312,\\n  'Skein256-152': 0xb313,\\n  'Skein256-160': 0xb314,\\n  'Skein256-168': 0xb315,\\n  'Skein256-176': 0xb316,\\n  'Skein256-184': 0xb317,\\n  'Skein256-192': 0xb318,\\n  'Skein256-200': 0xb319,\\n  'Skein256-208': 0xb31a,\\n  'Skein256-216': 0xb31b,\\n  'Skein256-224': 0xb31c,\\n  'Skein256-232': 0xb31d,\\n  'Skein256-240': 0xb31e,\\n  'Skein256-248': 0xb31f,\\n  'Skein256-256': 0xb320,\\n  'Skein512-8': 0xb321,\\n  'Skein512-16': 0xb322,\\n  'Skein512-24': 0xb323,\\n  'Skein512-32': 0xb324,\\n  'Skein512-40': 0xb325,\\n  'Skein512-48': 0xb326,\\n  'Skein512-56': 0xb327,\\n  'Skein512-64': 0xb328,\\n  'Skein512-72': 0xb329,\\n  'Skein512-80': 0xb32a,\\n  'Skein512-88': 0xb32b,\\n  'Skein512-96': 0xb32c,\\n  'Skein512-104': 0xb32d,\\n  'Skein512-112': 0xb32e,\\n  'Skein512-120': 0xb32f,\\n  'Skein512-128': 0xb330,\\n  'Skein512-136': 0xb331,\\n  'Skein512-144': 0xb332,\\n  'Skein512-152': 0xb333,\\n  'Skein512-160': 0xb334,\\n  'Skein512-168': 0xb335,\\n  'Skein512-176': 0xb336,\\n  'Skein512-184': 0xb337,\\n  'Skein512-192': 0xb338,\\n  'Skein512-200': 0xb339,\\n  'Skein512-208': 0xb33a,\\n  'Skein512-216': 0xb33b,\\n  'Skein512-224': 0xb33c,\\n  'Skein512-232': 0xb33d,\\n  'Skein512-240': 0xb33e,\\n  'Skein512-248': 0xb33f,\\n  'Skein512-256': 0xb340,\\n  'Skein512-264': 0xb341,\\n  'Skein512-272': 0xb342,\\n  'Skein512-280': 0xb343,\\n  'Skein512-288': 0xb344,\\n  'Skein512-296': 0xb345,\\n  'Skein512-304': 0xb346,\\n  'Skein512-312': 0xb347,\\n  'Skein512-320': 0xb348,\\n  'Skein512-328': 0xb349,\\n  'Skein512-336': 0xb34a,\\n  'Skein512-344': 0xb34b,\\n  'Skein512-352': 0xb34c,\\n  'Skein512-360': 0xb34d,\\n  'Skein512-368': 0xb34e,\\n  'Skein512-376': 0xb34f,\\n  'Skein512-384': 0xb350,\\n  'Skein512-392': 0xb351,\\n  'Skein512-400': 0xb352,\\n  'Skein512-408': 0xb353,\\n  'Skein512-416': 0xb354,\\n  'Skein512-424': 0xb355,\\n  'Skein512-432': 0xb356,\\n  'Skein512-440': 0xb357,\\n  'Skein512-448': 0xb358,\\n  'Skein512-456': 0xb359,\\n  'Skein512-464': 0xb35a,\\n  'Skein512-472': 0xb35b,\\n  'Skein512-480': 0xb35c,\\n  'Skein512-488': 0xb35d,\\n  'Skein512-496': 0xb35e,\\n  'Skein512-504': 0xb35f,\\n  'Skein512-512': 0xb360,\\n  'Skein1024-8': 0xb361,\\n  'Skein1024-16': 0xb362,\\n  'Skein1024-24': 0xb363,\\n  'Skein1024-32': 0xb364,\\n  'Skein1024-40': 0xb365,\\n  'Skein1024-48': 0xb366,\\n  'Skein1024-56': 0xb367,\\n  'Skein1024-64': 0xb368,\\n  'Skein1024-72': 0xb369,\\n  'Skein1024-80': 0xb36a,\\n  'Skein1024-88': 0xb36b,\\n  'Skein1024-96': 0xb36c,\\n  'Skein1024-104': 0xb36d,\\n  'Skein1024-112': 0xb36e,\\n  'Skein1024-120': 0xb36f,\\n  'Skein1024-128': 0xb370,\\n  'Skein1024-136': 0xb371,\\n  'Skein1024-144': 0xb372,\\n  'Skein1024-152': 0xb373,\\n  'Skein1024-160': 0xb374,\\n  'Skein1024-168': 0xb375,\\n  'Skein1024-176': 0xb376,\\n  'Skein1024-184': 0xb377,\\n  'Skein1024-192': 0xb378,\\n  'Skein1024-200': 0xb379,\\n  'Skein1024-208': 0xb37a,\\n  'Skein1024-216': 0xb37b,\\n  'Skein1024-224': 0xb37c,\\n  'Skein1024-232': 0xb37d,\\n  'Skein1024-240': 0xb37e,\\n  'Skein1024-248': 0xb37f,\\n  'Skein1024-256': 0xb380,\\n  'Skein1024-264': 0xb381,\\n  'Skein1024-272': 0xb382,\\n  'Skein1024-280': 0xb383,\\n  'Skein1024-288': 0xb384,\\n  'Skein1024-296': 0xb385,\\n  'Skein1024-304': 0xb386,\\n  'Skein1024-312': 0xb387,\\n  'Skein1024-320': 0xb388,\\n  'Skein1024-328': 0xb389,\\n  'Skein1024-336': 0xb38a,\\n  'Skein1024-344': 0xb38b,\\n  'Skein1024-352': 0xb38c,\\n  'Skein1024-360': 0xb38d,\\n  'Skein1024-368': 0xb38e,\\n  'Skein1024-376': 0xb38f,\\n  'Skein1024-384': 0xb390,\\n  'Skein1024-392': 0xb391,\\n  'Skein1024-400': 0xb392,\\n  'Skein1024-408': 0xb393,\\n  'Skein1024-416': 0xb394,\\n  'Skein1024-424': 0xb395,\\n  'Skein1024-432': 0xb396,\\n  'Skein1024-440': 0xb397,\\n  'Skein1024-448': 0xb398,\\n  'Skein1024-456': 0xb399,\\n  'Skein1024-464': 0xb39a,\\n  'Skein1024-472': 0xb39b,\\n  'Skein1024-480': 0xb39c,\\n  'Skein1024-488': 0xb39d,\\n  'Skein1024-496': 0xb39e,\\n  'Skein1024-504': 0xb39f,\\n  'Skein1024-512': 0xb3a0,\\n  'Skein1024-520': 0xb3a1,\\n  'Skein1024-528': 0xb3a2,\\n  'Skein1024-536': 0xb3a3,\\n  'Skein1024-544': 0xb3a4,\\n  'Skein1024-552': 0xb3a5,\\n  'Skein1024-560': 0xb3a6,\\n  'Skein1024-568': 0xb3a7,\\n  'Skein1024-576': 0xb3a8,\\n  'Skein1024-584': 0xb3a9,\\n  'Skein1024-592': 0xb3aa,\\n  'Skein1024-600': 0xb3ab,\\n  'Skein1024-608': 0xb3ac,\\n  'Skein1024-616': 0xb3ad,\\n  'Skein1024-624': 0xb3ae,\\n  'Skein1024-632': 0xb3af,\\n  'Skein1024-640': 0xb3b0,\\n  'Skein1024-648': 0xb3b1,\\n  'Skein1024-656': 0xb3b2,\\n  'Skein1024-664': 0xb3b3,\\n  'Skein1024-672': 0xb3b4,\\n  'Skein1024-680': 0xb3b5,\\n  'Skein1024-688': 0xb3b6,\\n  'Skein1024-696': 0xb3b7,\\n  'Skein1024-704': 0xb3b8,\\n  'Skein1024-712': 0xb3b9,\\n  'Skein1024-720': 0xb3ba,\\n  'Skein1024-728': 0xb3bb,\\n  'Skein1024-736': 0xb3bc,\\n  'Skein1024-744': 0xb3bd,\\n  'Skein1024-752': 0xb3be,\\n  'Skein1024-760': 0xb3bf,\\n  'Skein1024-768': 0xb3c0,\\n  'Skein1024-776': 0xb3c1,\\n  'Skein1024-784': 0xb3c2,\\n  'Skein1024-792': 0xb3c3,\\n  'Skein1024-800': 0xb3c4,\\n  'Skein1024-808': 0xb3c5,\\n  'Skein1024-816': 0xb3c6,\\n  'Skein1024-824': 0xb3c7,\\n  'Skein1024-832': 0xb3c8,\\n  'Skein1024-840': 0xb3c9,\\n  'Skein1024-848': 0xb3ca,\\n  'Skein1024-856': 0xb3cb,\\n  'Skein1024-864': 0xb3cc,\\n  'Skein1024-872': 0xb3cd,\\n  'Skein1024-880': 0xb3ce,\\n  'Skein1024-888': 0xb3cf,\\n  'Skein1024-896': 0xb3d0,\\n  'Skein1024-904': 0xb3d1,\\n  'Skein1024-912': 0xb3d2,\\n  'Skein1024-920': 0xb3d3,\\n  'Skein1024-928': 0xb3d4,\\n  'Skein1024-936': 0xb3d5,\\n  'Skein1024-944': 0xb3d6,\\n  'Skein1024-952': 0xb3d7,\\n  'Skein1024-960': 0xb3d8,\\n  'Skein1024-968': 0xb3d9,\\n  'Skein1024-976': 0xb3da,\\n  'Skein1024-984': 0xb3db,\\n  'Skein1024-992': 0xb3dc,\\n  'Skein1024-1000': 0xb3dd,\\n  'Skein1024-1008': 0xb3de,\\n  'Skein1024-1016': 0xb3df,\\n  'Skein1024-1024': 0xb3e0\\n})\\n\\nexports.codes = Object.freeze({\\n  0x0: 'identity',\\n\\n  // sha family\\n  0x11: 'sha1',\\n  0x12: 'sha2-256',\\n  0x13: 'sha2-512',\\n  0x56: 'dbl-sha2-256',\\n  0x17: 'sha3-224',\\n  0x16: 'sha3-256',\\n  0x15: 'sha3-384',\\n  0x14: 'sha3-512',\\n  0x18: 'shake-128',\\n  0x19: 'shake-256',\\n  0x1A: 'keccak-224',\\n  0x1B: 'keccak-256',\\n  0x1C: 'keccak-384',\\n  0x1D: 'keccak-512',\\n\\n  0x22: 'murmur3-128',\\n  0x23: 'murmur3-32',\\n\\n  0xd4: 'md4',\\n  0xd5: 'md5',\\n\\n  // blake2\\n  0xb201: 'blake2b-8',\\n  0xb202: 'blake2b-16',\\n  0xb203: 'blake2b-24',\\n  0xb204: 'blake2b-32',\\n  0xb205: 'blake2b-40',\\n  0xb206: 'blake2b-48',\\n  0xb207: 'blake2b-56',\\n  0xb208: 'blake2b-64',\\n  0xb209: 'blake2b-72',\\n  0xb20a: 'blake2b-80',\\n  0xb20b: 'blake2b-88',\\n  0xb20c: 'blake2b-96',\\n  0xb20d: 'blake2b-104',\\n  0xb20e: 'blake2b-112',\\n  0xb20f: 'blake2b-120',\\n  0xb210: 'blake2b-128',\\n  0xb211: 'blake2b-136',\\n  0xb212: 'blake2b-144',\\n  0xb213: 'blake2b-152',\\n  0xb214: 'blake2b-160',\\n  0xb215: 'blake2b-168',\\n  0xb216: 'blake2b-176',\\n  0xb217: 'blake2b-184',\\n  0xb218: 'blake2b-192',\\n  0xb219: 'blake2b-200',\\n  0xb21a: 'blake2b-208',\\n  0xb21b: 'blake2b-216',\\n  0xb21c: 'blake2b-224',\\n  0xb21d: 'blake2b-232',\\n  0xb21e: 'blake2b-240',\\n  0xb21f: 'blake2b-248',\\n  0xb220: 'blake2b-256',\\n  0xb221: 'blake2b-264',\\n  0xb222: 'blake2b-272',\\n  0xb223: 'blake2b-280',\\n  0xb224: 'blake2b-288',\\n  0xb225: 'blake2b-296',\\n  0xb226: 'blake2b-304',\\n  0xb227: 'blake2b-312',\\n  0xb228: 'blake2b-320',\\n  0xb229: 'blake2b-328',\\n  0xb22a: 'blake2b-336',\\n  0xb22b: 'blake2b-344',\\n  0xb22c: 'blake2b-352',\\n  0xb22d: 'blake2b-360',\\n  0xb22e: 'blake2b-368',\\n  0xb22f: 'blake2b-376',\\n  0xb230: 'blake2b-384',\\n  0xb231: 'blake2b-392',\\n  0xb232: 'blake2b-400',\\n  0xb233: 'blake2b-408',\\n  0xb234: 'blake2b-416',\\n  0xb235: 'blake2b-424',\\n  0xb236: 'blake2b-432',\\n  0xb237: 'blake2b-440',\\n  0xb238: 'blake2b-448',\\n  0xb239: 'blake2b-456',\\n  0xb23a: 'blake2b-464',\\n  0xb23b: 'blake2b-472',\\n  0xb23c: 'blake2b-480',\\n  0xb23d: 'blake2b-488',\\n  0xb23e: 'blake2b-496',\\n  0xb23f: 'blake2b-504',\\n  0xb240: 'blake2b-512',\\n  0xb241: 'blake2s-8',\\n  0xb242: 'blake2s-16',\\n  0xb243: 'blake2s-24',\\n  0xb244: 'blake2s-32',\\n  0xb245: 'blake2s-40',\\n  0xb246: 'blake2s-48',\\n  0xb247: 'blake2s-56',\\n  0xb248: 'blake2s-64',\\n  0xb249: 'blake2s-72',\\n  0xb24a: 'blake2s-80',\\n  0xb24b: 'blake2s-88',\\n  0xb24c: 'blake2s-96',\\n  0xb24d: 'blake2s-104',\\n  0xb24e: 'blake2s-112',\\n  0xb24f: 'blake2s-120',\\n  0xb250: 'blake2s-128',\\n  0xb251: 'blake2s-136',\\n  0xb252: 'blake2s-144',\\n  0xb253: 'blake2s-152',\\n  0xb254: 'blake2s-160',\\n  0xb255: 'blake2s-168',\\n  0xb256: 'blake2s-176',\\n  0xb257: 'blake2s-184',\\n  0xb258: 'blake2s-192',\\n  0xb259: 'blake2s-200',\\n  0xb25a: 'blake2s-208',\\n  0xb25b: 'blake2s-216',\\n  0xb25c: 'blake2s-224',\\n  0xb25d: 'blake2s-232',\\n  0xb25e: 'blake2s-240',\\n  0xb25f: 'blake2s-248',\\n  0xb260: 'blake2s-256',\\n\\n  // skein\\n  0xb301: 'Skein256-8',\\n  0xb302: 'Skein256-16',\\n  0xb303: 'Skein256-24',\\n  0xb304: 'Skein256-32',\\n  0xb305: 'Skein256-40',\\n  0xb306: 'Skein256-48',\\n  0xb307: 'Skein256-56',\\n  0xb308: 'Skein256-64',\\n  0xb309: 'Skein256-72',\\n  0xb30a: 'Skein256-80',\\n  0xb30b: 'Skein256-88',\\n  0xb30c: 'Skein256-96',\\n  0xb30d: 'Skein256-104',\\n  0xb30e: 'Skein256-112',\\n  0xb30f: 'Skein256-120',\\n  0xb310: 'Skein256-128',\\n  0xb311: 'Skein256-136',\\n  0xb312: 'Skein256-144',\\n  0xb313: 'Skein256-152',\\n  0xb314: 'Skein256-160',\\n  0xb315: 'Skein256-168',\\n  0xb316: 'Skein256-176',\\n  0xb317: 'Skein256-184',\\n  0xb318: 'Skein256-192',\\n  0xb319: 'Skein256-200',\\n  0xb31a: 'Skein256-208',\\n  0xb31b: 'Skein256-216',\\n  0xb31c: 'Skein256-224',\\n  0xb31d: 'Skein256-232',\\n  0xb31e: 'Skein256-240',\\n  0xb31f: 'Skein256-248',\\n  0xb320: 'Skein256-256',\\n  0xb321: 'Skein512-8',\\n  0xb322: 'Skein512-16',\\n  0xb323: 'Skein512-24',\\n  0xb324: 'Skein512-32',\\n  0xb325: 'Skein512-40',\\n  0xb326: 'Skein512-48',\\n  0xb327: 'Skein512-56',\\n  0xb328: 'Skein512-64',\\n  0xb329: 'Skein512-72',\\n  0xb32a: 'Skein512-80',\\n  0xb32b: 'Skein512-88',\\n  0xb32c: 'Skein512-96',\\n  0xb32d: 'Skein512-104',\\n  0xb32e: 'Skein512-112',\\n  0xb32f: 'Skein512-120',\\n  0xb330: 'Skein512-128',\\n  0xb331: 'Skein512-136',\\n  0xb332: 'Skein512-144',\\n  0xb333: 'Skein512-152',\\n  0xb334: 'Skein512-160',\\n  0xb335: 'Skein512-168',\\n  0xb336: 'Skein512-176',\\n  0xb337: 'Skein512-184',\\n  0xb338: 'Skein512-192',\\n  0xb339: 'Skein512-200',\\n  0xb33a: 'Skein512-208',\\n  0xb33b: 'Skein512-216',\\n  0xb33c: 'Skein512-224',\\n  0xb33d: 'Skein512-232',\\n  0xb33e: 'Skein512-240',\\n  0xb33f: 'Skein512-248',\\n  0xb340: 'Skein512-256',\\n  0xb341: 'Skein512-264',\\n  0xb342: 'Skein512-272',\\n  0xb343: 'Skein512-280',\\n  0xb344: 'Skein512-288',\\n  0xb345: 'Skein512-296',\\n  0xb346: 'Skein512-304',\\n  0xb347: 'Skein512-312',\\n  0xb348: 'Skein512-320',\\n  0xb349: 'Skein512-328',\\n  0xb34a: 'Skein512-336',\\n  0xb34b: 'Skein512-344',\\n  0xb34c: 'Skein512-352',\\n  0xb34d: 'Skein512-360',\\n  0xb34e: 'Skein512-368',\\n  0xb34f: 'Skein512-376',\\n  0xb350: 'Skein512-384',\\n  0xb351: 'Skein512-392',\\n  0xb352: 'Skein512-400',\\n  0xb353: 'Skein512-408',\\n  0xb354: 'Skein512-416',\\n  0xb355: 'Skein512-424',\\n  0xb356: 'Skein512-432',\\n  0xb357: 'Skein512-440',\\n  0xb358: 'Skein512-448',\\n  0xb359: 'Skein512-456',\\n  0xb35a: 'Skein512-464',\\n  0xb35b: 'Skein512-472',\\n  0xb35c: 'Skein512-480',\\n  0xb35d: 'Skein512-488',\\n  0xb35e: 'Skein512-496',\\n  0xb35f: 'Skein512-504',\\n  0xb360: 'Skein512-512',\\n  0xb361: 'Skein1024-8',\\n  0xb362: 'Skein1024-16',\\n  0xb363: 'Skein1024-24',\\n  0xb364: 'Skein1024-32',\\n  0xb365: 'Skein1024-40',\\n  0xb366: 'Skein1024-48',\\n  0xb367: 'Skein1024-56',\\n  0xb368: 'Skein1024-64',\\n  0xb369: 'Skein1024-72',\\n  0xb36a: 'Skein1024-80',\\n  0xb36b: 'Skein1024-88',\\n  0xb36c: 'Skein1024-96',\\n  0xb36d: 'Skein1024-104',\\n  0xb36e: 'Skein1024-112',\\n  0xb36f: 'Skein1024-120',\\n  0xb370: 'Skein1024-128',\\n  0xb371: 'Skein1024-136',\\n  0xb372: 'Skein1024-144',\\n  0xb373: 'Skein1024-152',\\n  0xb374: 'Skein1024-160',\\n  0xb375: 'Skein1024-168',\\n  0xb376: 'Skein1024-176',\\n  0xb377: 'Skein1024-184',\\n  0xb378: 'Skein1024-192',\\n  0xb379: 'Skein1024-200',\\n  0xb37a: 'Skein1024-208',\\n  0xb37b: 'Skein1024-216',\\n  0xb37c: 'Skein1024-224',\\n  0xb37d: 'Skein1024-232',\\n  0xb37e: 'Skein1024-240',\\n  0xb37f: 'Skein1024-248',\\n  0xb380: 'Skein1024-256',\\n  0xb381: 'Skein1024-264',\\n  0xb382: 'Skein1024-272',\\n  0xb383: 'Skein1024-280',\\n  0xb384: 'Skein1024-288',\\n  0xb385: 'Skein1024-296',\\n  0xb386: 'Skein1024-304',\\n  0xb387: 'Skein1024-312',\\n  0xb388: 'Skein1024-320',\\n  0xb389: 'Skein1024-328',\\n  0xb38a: 'Skein1024-336',\\n  0xb38b: 'Skein1024-344',\\n  0xb38c: 'Skein1024-352',\\n  0xb38d: 'Skein1024-360',\\n  0xb38e: 'Skein1024-368',\\n  0xb38f: 'Skein1024-376',\\n  0xb390: 'Skein1024-384',\\n  0xb391: 'Skein1024-392',\\n  0xb392: 'Skein1024-400',\\n  0xb393: 'Skein1024-408',\\n  0xb394: 'Skein1024-416',\\n  0xb395: 'Skein1024-424',\\n  0xb396: 'Skein1024-432',\\n  0xb397: 'Skein1024-440',\\n  0xb398: 'Skein1024-448',\\n  0xb399: 'Skein1024-456',\\n  0xb39a: 'Skein1024-464',\\n  0xb39b: 'Skein1024-472',\\n  0xb39c: 'Skein1024-480',\\n  0xb39d: 'Skein1024-488',\\n  0xb39e: 'Skein1024-496',\\n  0xb39f: 'Skein1024-504',\\n  0xb3a0: 'Skein1024-512',\\n  0xb3a1: 'Skein1024-520',\\n  0xb3a2: 'Skein1024-528',\\n  0xb3a3: 'Skein1024-536',\\n  0xb3a4: 'Skein1024-544',\\n  0xb3a5: 'Skein1024-552',\\n  0xb3a6: 'Skein1024-560',\\n  0xb3a7: 'Skein1024-568',\\n  0xb3a8: 'Skein1024-576',\\n  0xb3a9: 'Skein1024-584',\\n  0xb3aa: 'Skein1024-592',\\n  0xb3ab: 'Skein1024-600',\\n  0xb3ac: 'Skein1024-608',\\n  0xb3ad: 'Skein1024-616',\\n  0xb3ae: 'Skein1024-624',\\n  0xb3af: 'Skein1024-632',\\n  0xb3b0: 'Skein1024-640',\\n  0xb3b1: 'Skein1024-648',\\n  0xb3b2: 'Skein1024-656',\\n  0xb3b3: 'Skein1024-664',\\n  0xb3b4: 'Skein1024-672',\\n  0xb3b5: 'Skein1024-680',\\n  0xb3b6: 'Skein1024-688',\\n  0xb3b7: 'Skein1024-696',\\n  0xb3b8: 'Skein1024-704',\\n  0xb3b9: 'Skein1024-712',\\n  0xb3ba: 'Skein1024-720',\\n  0xb3bb: 'Skein1024-728',\\n  0xb3bc: 'Skein1024-736',\\n  0xb3bd: 'Skein1024-744',\\n  0xb3be: 'Skein1024-752',\\n  0xb3bf: 'Skein1024-760',\\n  0xb3c0: 'Skein1024-768',\\n  0xb3c1: 'Skein1024-776',\\n  0xb3c2: 'Skein1024-784',\\n  0xb3c3: 'Skein1024-792',\\n  0xb3c4: 'Skein1024-800',\\n  0xb3c5: 'Skein1024-808',\\n  0xb3c6: 'Skein1024-816',\\n  0xb3c7: 'Skein1024-824',\\n  0xb3c8: 'Skein1024-832',\\n  0xb3c9: 'Skein1024-840',\\n  0xb3ca: 'Skein1024-848',\\n  0xb3cb: 'Skein1024-856',\\n  0xb3cc: 'Skein1024-864',\\n  0xb3cd: 'Skein1024-872',\\n  0xb3ce: 'Skein1024-880',\\n  0xb3cf: 'Skein1024-888',\\n  0xb3d0: 'Skein1024-896',\\n  0xb3d1: 'Skein1024-904',\\n  0xb3d2: 'Skein1024-912',\\n  0xb3d3: 'Skein1024-920',\\n  0xb3d4: 'Skein1024-928',\\n  0xb3d5: 'Skein1024-936',\\n  0xb3d6: 'Skein1024-944',\\n  0xb3d7: 'Skein1024-952',\\n  0xb3d8: 'Skein1024-960',\\n  0xb3d9: 'Skein1024-968',\\n  0xb3da: 'Skein1024-976',\\n  0xb3db: 'Skein1024-984',\\n  0xb3dc: 'Skein1024-992',\\n  0xb3dd: 'Skein1024-1000',\\n  0xb3de: 'Skein1024-1008',\\n  0xb3df: 'Skein1024-1016',\\n  0xb3e0: 'Skein1024-1024'\\n})\\n\\nexports.defaultLengths = Object.freeze({\\n  0x11: 20,\\n  0x12: 32,\\n  0x13: 64,\\n  0x56: 32,\\n  0x17: 28,\\n  0x16: 32,\\n  0x15: 48,\\n  0x14: 64,\\n  0x18: 32,\\n  0x19: 64,\\n  0x1A: 28,\\n  0x1B: 32,\\n  0x1C: 48,\\n  0x1D: 64,\\n  0x22: 32,\\n\\n  0xb201: 0x01,\\n  0xb202: 0x02,\\n  0xb203: 0x03,\\n  0xb204: 0x04,\\n  0xb205: 0x05,\\n  0xb206: 0x06,\\n  0xb207: 0x07,\\n  0xb208: 0x08,\\n  0xb209: 0x09,\\n  0xb20a: 0x0a,\\n  0xb20b: 0x0b,\\n  0xb20c: 0x0c,\\n  0xb20d: 0x0d,\\n  0xb20e: 0x0e,\\n  0xb20f: 0x0f,\\n  0xb210: 0x10,\\n  0xb211: 0x11,\\n  0xb212: 0x12,\\n  0xb213: 0x13,\\n  0xb214: 0x14,\\n  0xb215: 0x15,\\n  0xb216: 0x16,\\n  0xb217: 0x17,\\n  0xb218: 0x18,\\n  0xb219: 0x19,\\n  0xb21a: 0x1a,\\n  0xb21b: 0x1b,\\n  0xb21c: 0x1c,\\n  0xb21d: 0x1d,\\n  0xb21e: 0x1e,\\n  0xb21f: 0x1f,\\n  0xb220: 0x20,\\n  0xb221: 0x21,\\n  0xb222: 0x22,\\n  0xb223: 0x23,\\n  0xb224: 0x24,\\n  0xb225: 0x25,\\n  0xb226: 0x26,\\n  0xb227: 0x27,\\n  0xb228: 0x28,\\n  0xb229: 0x29,\\n  0xb22a: 0x2a,\\n  0xb22b: 0x2b,\\n  0xb22c: 0x2c,\\n  0xb22d: 0x2d,\\n  0xb22e: 0x2e,\\n  0xb22f: 0x2f,\\n  0xb230: 0x30,\\n  0xb231: 0x31,\\n  0xb232: 0x32,\\n  0xb233: 0x33,\\n  0xb234: 0x34,\\n  0xb235: 0x35,\\n  0xb236: 0x36,\\n  0xb237: 0x37,\\n  0xb238: 0x38,\\n  0xb239: 0x39,\\n  0xb23a: 0x3a,\\n  0xb23b: 0x3b,\\n  0xb23c: 0x3c,\\n  0xb23d: 0x3d,\\n  0xb23e: 0x3e,\\n  0xb23f: 0x3f,\\n  0xb240: 0x40,\\n  0xb241: 0x01,\\n  0xb242: 0x02,\\n  0xb243: 0x03,\\n  0xb244: 0x04,\\n  0xb245: 0x05,\\n  0xb246: 0x06,\\n  0xb247: 0x07,\\n  0xb248: 0x08,\\n  0xb249: 0x09,\\n  0xb24a: 0x0a,\\n  0xb24b: 0x0b,\\n  0xb24c: 0x0c,\\n  0xb24d: 0x0d,\\n  0xb24e: 0x0e,\\n  0xb24f: 0x0f,\\n  0xb250: 0x10,\\n  0xb251: 0x11,\\n  0xb252: 0x12,\\n  0xb253: 0x13,\\n  0xb254: 0x14,\\n  0xb255: 0x15,\\n  0xb256: 0x16,\\n  0xb257: 0x17,\\n  0xb258: 0x18,\\n  0xb259: 0x19,\\n  0xb25a: 0x1a,\\n  0xb25b: 0x1b,\\n  0xb25c: 0x1c,\\n  0xb25d: 0x1d,\\n  0xb25e: 0x1e,\\n  0xb25f: 0x1f,\\n  0xb260: 0x20,\\n  0xb301: 0x01,\\n  0xb302: 0x02,\\n  0xb303: 0x03,\\n  0xb304: 0x04,\\n  0xb305: 0x05,\\n  0xb306: 0x06,\\n  0xb307: 0x07,\\n  0xb308: 0x08,\\n  0xb309: 0x09,\\n  0xb30a: 0x0a,\\n  0xb30b: 0x0b,\\n  0xb30c: 0x0c,\\n  0xb30d: 0x0d,\\n  0xb30e: 0x0e,\\n  0xb30f: 0x0f,\\n  0xb310: 0x10,\\n  0xb311: 0x11,\\n  0xb312: 0x12,\\n  0xb313: 0x13,\\n  0xb314: 0x14,\\n  0xb315: 0x15,\\n  0xb316: 0x16,\\n  0xb317: 0x17,\\n  0xb318: 0x18,\\n  0xb319: 0x19,\\n  0xb31a: 0x1a,\\n  0xb31b: 0x1b,\\n  0xb31c: 0x1c,\\n  0xb31d: 0x1d,\\n  0xb31e: 0x1e,\\n  0xb31f: 0x1f,\\n  0xb320: 0x20,\\n  0xb321: 0x01,\\n  0xb322: 0x02,\\n  0xb323: 0x03,\\n  0xb324: 0x04,\\n  0xb325: 0x05,\\n  0xb326: 0x06,\\n  0xb327: 0x07,\\n  0xb328: 0x08,\\n  0xb329: 0x09,\\n  0xb32a: 0x0a,\\n  0xb32b: 0x0b,\\n  0xb32c: 0x0c,\\n  0xb32d: 0x0d,\\n  0xb32e: 0x0e,\\n  0xb32f: 0x0f,\\n  0xb330: 0x10,\\n  0xb331: 0x11,\\n  0xb332: 0x12,\\n  0xb333: 0x13,\\n  0xb334: 0x14,\\n  0xb335: 0x15,\\n  0xb336: 0x16,\\n  0xb337: 0x17,\\n  0xb338: 0x18,\\n  0xb339: 0x19,\\n  0xb33a: 0x1a,\\n  0xb33b: 0x1b,\\n  0xb33c: 0x1c,\\n  0xb33d: 0x1d,\\n  0xb33e: 0x1e,\\n  0xb33f: 0x1f,\\n  0xb340: 0x20,\\n  0xb341: 0x21,\\n  0xb342: 0x22,\\n  0xb343: 0x23,\\n  0xb344: 0x24,\\n  0xb345: 0x25,\\n  0xb346: 0x26,\\n  0xb347: 0x27,\\n  0xb348: 0x28,\\n  0xb349: 0x29,\\n  0xb34a: 0x2a,\\n  0xb34b: 0x2b,\\n  0xb34c: 0x2c,\\n  0xb34d: 0x2d,\\n  0xb34e: 0x2e,\\n  0xb34f: 0x2f,\\n  0xb350: 0x30,\\n  0xb351: 0x31,\\n  0xb352: 0x32,\\n  0xb353: 0x33,\\n  0xb354: 0x34,\\n  0xb355: 0x35,\\n  0xb356: 0x36,\\n  0xb357: 0x37,\\n  0xb358: 0x38,\\n  0xb359: 0x39,\\n  0xb35a: 0x3a,\\n  0xb35b: 0x3b,\\n  0xb35c: 0x3c,\\n  0xb35d: 0x3d,\\n  0xb35e: 0x3e,\\n  0xb35f: 0x3f,\\n  0xb360: 0x40,\\n  0xb361: 0x01,\\n  0xb362: 0x02,\\n  0xb363: 0x03,\\n  0xb364: 0x04,\\n  0xb365: 0x05,\\n  0xb366: 0x06,\\n  0xb367: 0x07,\\n  0xb368: 0x08,\\n  0xb369: 0x09,\\n  0xb36a: 0x0a,\\n  0xb36b: 0x0b,\\n  0xb36c: 0x0c,\\n  0xb36d: 0x0d,\\n  0xb36e: 0x0e,\\n  0xb36f: 0x0f,\\n  0xb370: 0x10,\\n  0xb371: 0x11,\\n  0xb372: 0x12,\\n  0xb373: 0x13,\\n  0xb374: 0x14,\\n  0xb375: 0x15,\\n  0xb376: 0x16,\\n  0xb377: 0x17,\\n  0xb378: 0x18,\\n  0xb379: 0x19,\\n  0xb37a: 0x1a,\\n  0xb37b: 0x1b,\\n  0xb37c: 0x1c,\\n  0xb37d: 0x1d,\\n  0xb37e: 0x1e,\\n  0xb37f: 0x1f,\\n  0xb380: 0x20,\\n  0xb381: 0x21,\\n  0xb382: 0x22,\\n  0xb383: 0x23,\\n  0xb384: 0x24,\\n  0xb385: 0x25,\\n  0xb386: 0x26,\\n  0xb387: 0x27,\\n  0xb388: 0x28,\\n  0xb389: 0x29,\\n  0xb38a: 0x2a,\\n  0xb38b: 0x2b,\\n  0xb38c: 0x2c,\\n  0xb38d: 0x2d,\\n  0xb38e: 0x2e,\\n  0xb38f: 0x2f,\\n  0xb390: 0x30,\\n  0xb391: 0x31,\\n  0xb392: 0x32,\\n  0xb393: 0x33,\\n  0xb394: 0x34,\\n  0xb395: 0x35,\\n  0xb396: 0x36,\\n  0xb397: 0x37,\\n  0xb398: 0x38,\\n  0xb399: 0x39,\\n  0xb39a: 0x3a,\\n  0xb39b: 0x3b,\\n  0xb39c: 0x3c,\\n  0xb39d: 0x3d,\\n  0xb39e: 0x3e,\\n  0xb39f: 0x3f,\\n  0xb3a0: 0x40,\\n  0xb3a1: 0x41,\\n  0xb3a2: 0x42,\\n  0xb3a3: 0x43,\\n  0xb3a4: 0x44,\\n  0xb3a5: 0x45,\\n  0xb3a6: 0x46,\\n  0xb3a7: 0x47,\\n  0xb3a8: 0x48,\\n  0xb3a9: 0x49,\\n  0xb3aa: 0x4a,\\n  0xb3ab: 0x4b,\\n  0xb3ac: 0x4c,\\n  0xb3ad: 0x4d,\\n  0xb3ae: 0x4e,\\n  0xb3af: 0x4f,\\n  0xb3b0: 0x50,\\n  0xb3b1: 0x51,\\n  0xb3b2: 0x52,\\n  0xb3b3: 0x53,\\n  0xb3b4: 0x54,\\n  0xb3b5: 0x55,\\n  0xb3b6: 0x56,\\n  0xb3b7: 0x57,\\n  0xb3b8: 0x58,\\n  0xb3b9: 0x59,\\n  0xb3ba: 0x5a,\\n  0xb3bb: 0x5b,\\n  0xb3bc: 0x5c,\\n  0xb3bd: 0x5d,\\n  0xb3be: 0x5e,\\n  0xb3bf: 0x5f,\\n  0xb3c0: 0x60,\\n  0xb3c1: 0x61,\\n  0xb3c2: 0x62,\\n  0xb3c3: 0x63,\\n  0xb3c4: 0x64,\\n  0xb3c5: 0x65,\\n  0xb3c6: 0x66,\\n  0xb3c7: 0x67,\\n  0xb3c8: 0x68,\\n  0xb3c9: 0x69,\\n  0xb3ca: 0x6a,\\n  0xb3cb: 0x6b,\\n  0xb3cc: 0x6c,\\n  0xb3cd: 0x6d,\\n  0xb3ce: 0x6e,\\n  0xb3cf: 0x6f,\\n  0xb3d0: 0x70,\\n  0xb3d1: 0x71,\\n  0xb3d2: 0x72,\\n  0xb3d3: 0x73,\\n  0xb3d4: 0x74,\\n  0xb3d5: 0x75,\\n  0xb3d6: 0x76,\\n  0xb3d7: 0x77,\\n  0xb3d8: 0x78,\\n  0xb3d9: 0x79,\\n  0xb3da: 0x7a,\\n  0xb3db: 0x7b,\\n  0xb3dc: 0x7c,\\n  0xb3dd: 0x7d,\\n  0xb3de: 0x7e,\\n  0xb3df: 0x7f,\\n  0xb3e0: 0x80\\n})\\n\\n},{}],74:[function(require,module,exports){\\n/**\\n * Multihash implementation in JavaScript.\\n *\\n * @module multihash\\n */\\n'use strict'\\n\\nconst { Buffer } = require('buffer')\\nconst multibase = require('multibase')\\nconst varint = require('varint')\\nconst cs = require('./constants')\\n\\nexports.names = cs.names\\nexports.codes = cs.codes\\nexports.defaultLengths = cs.defaultLengths\\n\\n/**\\n * Convert the given multihash to a hex encoded string.\\n *\\n * @param {Buffer} hash\\n * @returns {string}\\n */\\nexports.toHexString = function toHexString (hash) {\\n  if (!Buffer.isBuffer(hash)) {\\n    throw new Error('must be passed a buffer')\\n  }\\n\\n  return hash.toString('hex')\\n}\\n\\n/**\\n * Convert the given hex encoded string to a multihash.\\n *\\n * @param {string} hash\\n * @returns {Buffer}\\n */\\nexports.fromHexString = function fromHexString (hash) {\\n  return Buffer.from(hash, 'hex')\\n}\\n\\n/**\\n * Convert the given multihash to a base58 encoded string.\\n *\\n * @param {Buffer} hash\\n * @returns {string}\\n */\\nexports.toB58String = function toB58String (hash) {\\n  if (!Buffer.isBuffer(hash)) {\\n    throw new Error('must be passed a buffer')\\n  }\\n\\n  return multibase.encode('base58btc', hash).toString().slice(1)\\n}\\n\\n/**\\n * Convert the given base58 encoded string to a multihash.\\n *\\n * @param {string|Buffer} hash\\n * @returns {Buffer}\\n */\\nexports.fromB58String = function fromB58String (hash) {\\n  let encoded = hash\\n  if (Buffer.isBuffer(hash)) {\\n    encoded = hash.toString()\\n  }\\n\\n  return multibase.decode('z' + encoded)\\n}\\n\\n/**\\n * Decode a hash from the given multihash.\\n *\\n * @param {Buffer} buf\\n * @returns {{code: number, name: string, length: number, digest: Buffer}} result\\n */\\nexports.decode = function decode (buf) {\\n  if (!(Buffer.isBuffer(buf))) {\\n    throw new Error('multihash must be a Buffer')\\n  }\\n\\n  if (buf.length < 2) {\\n    throw new Error('multihash too short. must be > 2 bytes.')\\n  }\\n\\n  const code = varint.decode(buf)\\n  if (!exports.isValidCode(code)) {\\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\\n  }\\n  buf = buf.slice(varint.decode.bytes)\\n\\n  const len = varint.decode(buf)\\n  if (len < 0) {\\n    throw new Error(`multihash invalid length: ${len}`)\\n  }\\n  buf = buf.slice(varint.decode.bytes)\\n\\n  if (buf.length !== len) {\\n    throw new Error(`multihash length inconsistent: 0x${buf.toString('hex')}`)\\n  }\\n\\n  return {\\n    code: code,\\n    name: cs.codes[code],\\n    length: len,\\n    digest: buf\\n  }\\n}\\n\\n/**\\n *  Encode a hash digest along with the specified function code.\\n *\\n * > **Note:** the length is derived from the length of the digest itself.\\n *\\n * @param {Buffer} digest\\n * @param {string|number} code\\n * @param {number} [length]\\n * @returns {Buffer}\\n */\\nexports.encode = function encode (digest, code, length) {\\n  if (!digest || code === undefined) {\\n    throw new Error('multihash encode requires at least two args: digest, code')\\n  }\\n\\n  // ensure it's a hashfunction code.\\n  const hashfn = exports.coerceCode(code)\\n\\n  if (!(Buffer.isBuffer(digest))) {\\n    throw new Error('digest should be a Buffer')\\n  }\\n\\n  if (length == null) {\\n    length = digest.length\\n  }\\n\\n  if (length && digest.length !== length) {\\n    throw new Error('digest length should be equal to specified length.')\\n  }\\n\\n  return Buffer.concat([\\n    Buffer.from(varint.encode(hashfn)),\\n    Buffer.from(varint.encode(length)),\\n    digest\\n  ])\\n}\\n\\n/**\\n * Converts a hash function name into the matching code.\\n * If passed a number it will return the number if it's a valid code.\\n * @param {string|number} name\\n * @returns {number}\\n */\\nexports.coerceCode = function coerceCode (name) {\\n  let code = name\\n\\n  if (typeof name === 'string') {\\n    if (cs.names[name] === undefined) {\\n      throw new Error(`Unrecognized hash function named: ${name}`)\\n    }\\n    code = cs.names[name]\\n  }\\n\\n  if (typeof code !== 'number') {\\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\\n  }\\n\\n  if (cs.codes[code] === undefined && !exports.isAppCode(code)) {\\n    throw new Error(`Unrecognized function code: ${code}`)\\n  }\\n\\n  return code\\n}\\n\\n/**\\n * Checks wether a code is part of the app range\\n *\\n * @param {number} code\\n * @returns {boolean}\\n */\\nexports.isAppCode = function appCode (code) {\\n  return code > 0 && code < 0x10\\n}\\n\\n/**\\n * Checks whether a multihash code is valid.\\n *\\n * @param {number} code\\n * @returns {boolean}\\n */\\nexports.isValidCode = function validCode (code) {\\n  if (exports.isAppCode(code)) {\\n    return true\\n  }\\n\\n  if (cs.codes[code]) {\\n    return true\\n  }\\n\\n  return false\\n}\\n\\n/**\\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\\n *\\n * @param {Buffer} multihash\\n * @returns {undefined}\\n * @throws {Error}\\n */\\nfunction validate (multihash) {\\n  exports.decode(multihash) // throws if bad.\\n}\\nexports.validate = validate\\n\\n/**\\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\\n *\\n * @param {Buffer} multihash\\n * @returns {undefined}\\n * @throws {Error}\\n */\\nexports.prefix = function prefix (multihash) {\\n  validate(multihash)\\n\\n  return multihash.slice(0, 2)\\n}\\n\\n},{\\\"./constants\\\":73,\\\"buffer\\\":8,\\\"multibase\\\":72,\\\"varint\\\":83}],75:[function(require,module,exports){\\n/**\\n * Copyright (c) 2014-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nvar runtime = (function (exports) {\\n  \\\"use strict\\\";\\n\\n  var Op = Object.prototype;\\n  var hasOwn = Op.hasOwnProperty;\\n  var undefined; // More compressible than void 0.\\n  var $Symbol = typeof Symbol === \\\"function\\\" ? Symbol : {};\\n  var iteratorSymbol = $Symbol.iterator || \\\"@@iterator\\\";\\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \\\"@@asyncIterator\\\";\\n  var toStringTagSymbol = $Symbol.toStringTag || \\\"@@toStringTag\\\";\\n\\n  function define(obj, key, value) {\\n    Object.defineProperty(obj, key, {\\n      value: value,\\n      enumerable: true,\\n      configurable: true,\\n      writable: true\\n    });\\n    return obj[key];\\n  }\\n  try {\\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\\n    define({}, \\\"\\\");\\n  } catch (err) {\\n    define = function(obj, key, value) {\\n      return obj[key] = value;\\n    };\\n  }\\n\\n  function wrap(innerFn, outerFn, self, tryLocsList) {\\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\\n    var generator = Object.create(protoGenerator.prototype);\\n    var context = new Context(tryLocsList || []);\\n\\n    // The ._invoke method unifies the implementations of the .next,\\n    // .throw, and .return methods.\\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\\n\\n    return generator;\\n  }\\n  exports.wrap = wrap;\\n\\n  // Try/catch helper to minimize deoptimizations. Returns a completion\\n  // record like context.tryEntries[i].completion. This interface could\\n  // have been (and was previously) designed to take a closure to be\\n  // invoked without arguments, but in all the cases we care about we\\n  // already have an existing method we want to call, so there's no need\\n  // to create a new function object. We can even get away with assuming\\n  // the method takes exactly one argument, since that happens to be true\\n  // in every case, so we don't have to touch the arguments object. The\\n  // only additional allocation required is the completion record, which\\n  // has a stable shape and so hopefully should be cheap to allocate.\\n  function tryCatch(fn, obj, arg) {\\n    try {\\n      return { type: \\\"normal\\\", arg: fn.call(obj, arg) };\\n    } catch (err) {\\n      return { type: \\\"throw\\\", arg: err };\\n    }\\n  }\\n\\n  var GenStateSuspendedStart = \\\"suspendedStart\\\";\\n  var GenStateSuspendedYield = \\\"suspendedYield\\\";\\n  var GenStateExecuting = \\\"executing\\\";\\n  var GenStateCompleted = \\\"completed\\\";\\n\\n  // Returning this object from the innerFn has the same effect as\\n  // breaking out of the dispatch switch statement.\\n  var ContinueSentinel = {};\\n\\n  // Dummy constructor functions that we use as the .constructor and\\n  // .constructor.prototype properties for functions that return Generator\\n  // objects. For full spec compliance, you may wish to configure your\\n  // minifier not to mangle the names of these two functions.\\n  function Generator() {}\\n  function GeneratorFunction() {}\\n  function GeneratorFunctionPrototype() {}\\n\\n  // This is a polyfill for %IteratorPrototype% for environments that\\n  // don't natively support it.\\n  var IteratorPrototype = {};\\n  IteratorPrototype[iteratorSymbol] = function () {\\n    return this;\\n  };\\n\\n  var getProto = Object.getPrototypeOf;\\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\\n  if (NativeIteratorPrototype &&\\n      NativeIteratorPrototype !== Op &&\\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\\n    // This environment has a native %IteratorPrototype%; use it instead\\n    // of the polyfill.\\n    IteratorPrototype = NativeIteratorPrototype;\\n  }\\n\\n  var Gp = GeneratorFunctionPrototype.prototype =\\n    Generator.prototype = Object.create(IteratorPrototype);\\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\\n  GeneratorFunction.displayName = define(\\n    GeneratorFunctionPrototype,\\n    toStringTagSymbol,\\n    \\\"GeneratorFunction\\\"\\n  );\\n\\n  // Helper for defining the .next, .throw, and .return methods of the\\n  // Iterator interface in terms of a single ._invoke method.\\n  function defineIteratorMethods(prototype) {\\n    [\\\"next\\\", \\\"throw\\\", \\\"return\\\"].forEach(function(method) {\\n      define(prototype, method, function(arg) {\\n        return this._invoke(method, arg);\\n      });\\n    });\\n  }\\n\\n  exports.isGeneratorFunction = function(genFun) {\\n    var ctor = typeof genFun === \\\"function\\\" && genFun.constructor;\\n    return ctor\\n      ? ctor === GeneratorFunction ||\\n        // For the native GeneratorFunction constructor, the best we can\\n        // do is to check its .name property.\\n        (ctor.displayName || ctor.name) === \\\"GeneratorFunction\\\"\\n      : false;\\n  };\\n\\n  exports.mark = function(genFun) {\\n    if (Object.setPrototypeOf) {\\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\\n    } else {\\n      genFun.__proto__ = GeneratorFunctionPrototype;\\n      define(genFun, toStringTagSymbol, \\\"GeneratorFunction\\\");\\n    }\\n    genFun.prototype = Object.create(Gp);\\n    return genFun;\\n  };\\n\\n  // Within the body of any async function, `await x` is transformed to\\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\\n  // `hasOwn.call(value, \\\"__await\\\")` to determine if the yielded value is\\n  // meant to be awaited.\\n  exports.awrap = function(arg) {\\n    return { __await: arg };\\n  };\\n\\n  function AsyncIterator(generator, PromiseImpl) {\\n    function invoke(method, arg, resolve, reject) {\\n      var record = tryCatch(generator[method], generator, arg);\\n      if (record.type === \\\"throw\\\") {\\n        reject(record.arg);\\n      } else {\\n        var result = record.arg;\\n        var value = result.value;\\n        if (value &&\\n            typeof value === \\\"object\\\" &&\\n            hasOwn.call(value, \\\"__await\\\")) {\\n          return PromiseImpl.resolve(value.__await).then(function(value) {\\n            invoke(\\\"next\\\", value, resolve, reject);\\n          }, function(err) {\\n            invoke(\\\"throw\\\", err, resolve, reject);\\n          });\\n        }\\n\\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\\n          // When a yielded Promise is resolved, its final value becomes\\n          // the .value of the Promise<{value,done}> result for the\\n          // current iteration.\\n          result.value = unwrapped;\\n          resolve(result);\\n        }, function(error) {\\n          // If a rejected Promise was yielded, throw the rejection back\\n          // into the async generator function so it can be handled there.\\n          return invoke(\\\"throw\\\", error, resolve, reject);\\n        });\\n      }\\n    }\\n\\n    var previousPromise;\\n\\n    function enqueue(method, arg) {\\n      function callInvokeWithMethodAndArg() {\\n        return new PromiseImpl(function(resolve, reject) {\\n          invoke(method, arg, resolve, reject);\\n        });\\n      }\\n\\n      return previousPromise =\\n        // If enqueue has been called before, then we want to wait until\\n        // all previous Promises have been resolved before calling invoke,\\n        // so that results are always delivered in the correct order. If\\n        // enqueue has not been called before, then it is important to\\n        // call invoke immediately, without waiting on a callback to fire,\\n        // so that the async generator function has the opportunity to do\\n        // any necessary setup in a predictable way. This predictability\\n        // is why the Promise constructor synchronously invokes its\\n        // executor callback, and why async functions synchronously\\n        // execute code before the first await. Since we implement simple\\n        // async functions in terms of async generators, it is especially\\n        // important to get this right, even though it requires care.\\n        previousPromise ? previousPromise.then(\\n          callInvokeWithMethodAndArg,\\n          // Avoid propagating failures to Promises returned by later\\n          // invocations of the iterator.\\n          callInvokeWithMethodAndArg\\n        ) : callInvokeWithMethodAndArg();\\n    }\\n\\n    // Define the unified helper method that is used to implement .next,\\n    // .throw, and .return (see defineIteratorMethods).\\n    this._invoke = enqueue;\\n  }\\n\\n  defineIteratorMethods(AsyncIterator.prototype);\\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\\n    return this;\\n  };\\n  exports.AsyncIterator = AsyncIterator;\\n\\n  // Note that simple async functions are implemented on top of\\n  // AsyncIterator objects; they just return a Promise for the value of\\n  // the final result produced by the iterator.\\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\\n\\n    var iter = new AsyncIterator(\\n      wrap(innerFn, outerFn, self, tryLocsList),\\n      PromiseImpl\\n    );\\n\\n    return exports.isGeneratorFunction(outerFn)\\n      ? iter // If outerFn is a generator, return the full iterator.\\n      : iter.next().then(function(result) {\\n          return result.done ? result.value : iter.next();\\n        });\\n  };\\n\\n  function makeInvokeMethod(innerFn, self, context) {\\n    var state = GenStateSuspendedStart;\\n\\n    return function invoke(method, arg) {\\n      if (state === GenStateExecuting) {\\n        throw new Error(\\\"Generator is already running\\\");\\n      }\\n\\n      if (state === GenStateCompleted) {\\n        if (method === \\\"throw\\\") {\\n          throw arg;\\n        }\\n\\n        // Be forgiving, per 25.3.3.3.3 of the spec:\\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\\n        return doneResult();\\n      }\\n\\n      context.method = method;\\n      context.arg = arg;\\n\\n      while (true) {\\n        var delegate = context.delegate;\\n        if (delegate) {\\n          var delegateResult = maybeInvokeDelegate(delegate, context);\\n          if (delegateResult) {\\n            if (delegateResult === ContinueSentinel) continue;\\n            return delegateResult;\\n          }\\n        }\\n\\n        if (context.method === \\\"next\\\") {\\n          // Setting context._sent for legacy support of Babel's\\n          // function.sent implementation.\\n          context.sent = context._sent = context.arg;\\n\\n        } else if (context.method === \\\"throw\\\") {\\n          if (state === GenStateSuspendedStart) {\\n            state = GenStateCompleted;\\n            throw context.arg;\\n          }\\n\\n          context.dispatchException(context.arg);\\n\\n        } else if (context.method === \\\"return\\\") {\\n          context.abrupt(\\\"return\\\", context.arg);\\n        }\\n\\n        state = GenStateExecuting;\\n\\n        var record = tryCatch(innerFn, self, context);\\n        if (record.type === \\\"normal\\\") {\\n          // If an exception is thrown from innerFn, we leave state ===\\n          // GenStateExecuting and loop back for another invocation.\\n          state = context.done\\n            ? GenStateCompleted\\n            : GenStateSuspendedYield;\\n\\n          if (record.arg === ContinueSentinel) {\\n            continue;\\n          }\\n\\n          return {\\n            value: record.arg,\\n            done: context.done\\n          };\\n\\n        } else if (record.type === \\\"throw\\\") {\\n          state = GenStateCompleted;\\n          // Dispatch the exception by looping back around to the\\n          // context.dispatchException(context.arg) call above.\\n          context.method = \\\"throw\\\";\\n          context.arg = record.arg;\\n        }\\n      }\\n    };\\n  }\\n\\n  // Call delegate.iterator[context.method](context.arg) and handle the\\n  // result, either by returning a { value, done } result from the\\n  // delegate iterator, or by modifying context.method and context.arg,\\n  // setting context.delegate to null, and returning the ContinueSentinel.\\n  function maybeInvokeDelegate(delegate, context) {\\n    var method = delegate.iterator[context.method];\\n    if (method === undefined) {\\n      // A .throw or .return when the delegate iterator has no .throw\\n      // method always terminates the yield* loop.\\n      context.delegate = null;\\n\\n      if (context.method === \\\"throw\\\") {\\n        // Note: [\\\"return\\\"] must be used for ES3 parsing compatibility.\\n        if (delegate.iterator[\\\"return\\\"]) {\\n          // If the delegate iterator has a return method, give it a\\n          // chance to clean up.\\n          context.method = \\\"return\\\";\\n          context.arg = undefined;\\n          maybeInvokeDelegate(delegate, context);\\n\\n          if (context.method === \\\"throw\\\") {\\n            // If maybeInvokeDelegate(context) changed context.method from\\n            // \\\"return\\\" to \\\"throw\\\", let that override the TypeError below.\\n            return ContinueSentinel;\\n          }\\n        }\\n\\n        context.method = \\\"throw\\\";\\n        context.arg = new TypeError(\\n          \\\"The iterator does not provide a 'throw' method\\\");\\n      }\\n\\n      return ContinueSentinel;\\n    }\\n\\n    var record = tryCatch(method, delegate.iterator, context.arg);\\n\\n    if (record.type === \\\"throw\\\") {\\n      context.method = \\\"throw\\\";\\n      context.arg = record.arg;\\n      context.delegate = null;\\n      return ContinueSentinel;\\n    }\\n\\n    var info = record.arg;\\n\\n    if (! info) {\\n      context.method = \\\"throw\\\";\\n      context.arg = new TypeError(\\\"iterator result is not an object\\\");\\n      context.delegate = null;\\n      return ContinueSentinel;\\n    }\\n\\n    if (info.done) {\\n      // Assign the result of the finished delegate to the temporary\\n      // variable specified by delegate.resultName (see delegateYield).\\n      context[delegate.resultName] = info.value;\\n\\n      // Resume execution at the desired location (see delegateYield).\\n      context.next = delegate.nextLoc;\\n\\n      // If context.method was \\\"throw\\\" but the delegate handled the\\n      // exception, let the outer generator proceed normally. If\\n      // context.method was \\\"next\\\", forget context.arg since it has been\\n      // \\\"consumed\\\" by the delegate iterator. If context.method was\\n      // \\\"return\\\", allow the original .return call to continue in the\\n      // outer generator.\\n      if (context.method !== \\\"return\\\") {\\n        context.method = \\\"next\\\";\\n        context.arg = undefined;\\n      }\\n\\n    } else {\\n      // Re-yield the result returned by the delegate method.\\n      return info;\\n    }\\n\\n    // The delegate iterator is finished, so forget it and continue with\\n    // the outer generator.\\n    context.delegate = null;\\n    return ContinueSentinel;\\n  }\\n\\n  // Define Generator.prototype.{next,throw,return} in terms of the\\n  // unified ._invoke helper method.\\n  defineIteratorMethods(Gp);\\n\\n  define(Gp, toStringTagSymbol, \\\"Generator\\\");\\n\\n  // A Generator should always return itself as the iterator object when the\\n  // @@iterator function is called on it. Some browsers' implementations of the\\n  // iterator prototype chain incorrectly implement this, causing the Generator\\n  // object to not be returned from this call. This ensures that doesn't happen.\\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\\n  Gp[iteratorSymbol] = function() {\\n    return this;\\n  };\\n\\n  Gp.toString = function() {\\n    return \\\"[object Generator]\\\";\\n  };\\n\\n  function pushTryEntry(locs) {\\n    var entry = { tryLoc: locs[0] };\\n\\n    if (1 in locs) {\\n      entry.catchLoc = locs[1];\\n    }\\n\\n    if (2 in locs) {\\n      entry.finallyLoc = locs[2];\\n      entry.afterLoc = locs[3];\\n    }\\n\\n    this.tryEntries.push(entry);\\n  }\\n\\n  function resetTryEntry(entry) {\\n    var record = entry.completion || {};\\n    record.type = \\\"normal\\\";\\n    delete record.arg;\\n    entry.completion = record;\\n  }\\n\\n  function Context(tryLocsList) {\\n    // The root entry object (effectively a try statement without a catch\\n    // or a finally block) gives us a place to store values thrown from\\n    // locations where there is no enclosing try statement.\\n    this.tryEntries = [{ tryLoc: \\\"root\\\" }];\\n    tryLocsList.forEach(pushTryEntry, this);\\n    this.reset(true);\\n  }\\n\\n  exports.keys = function(object) {\\n    var keys = [];\\n    for (var key in object) {\\n      keys.push(key);\\n    }\\n    keys.reverse();\\n\\n    // Rather than returning an object with a next method, we keep\\n    // things simple and return the next function itself.\\n    return function next() {\\n      while (keys.length) {\\n        var key = keys.pop();\\n        if (key in object) {\\n          next.value = key;\\n          next.done = false;\\n          return next;\\n        }\\n      }\\n\\n      // To avoid creating an additional object, we just hang the .value\\n      // and .done properties off the next function object itself. This\\n      // also ensures that the minifier will not anonymize the function.\\n      next.done = true;\\n      return next;\\n    };\\n  };\\n\\n  function values(iterable) {\\n    if (iterable) {\\n      var iteratorMethod = iterable[iteratorSymbol];\\n      if (iteratorMethod) {\\n        return iteratorMethod.call(iterable);\\n      }\\n\\n      if (typeof iterable.next === \\\"function\\\") {\\n        return iterable;\\n      }\\n\\n      if (!isNaN(iterable.length)) {\\n        var i = -1, next = function next() {\\n          while (++i < iterable.length) {\\n            if (hasOwn.call(iterable, i)) {\\n              next.value = iterable[i];\\n              next.done = false;\\n              return next;\\n            }\\n          }\\n\\n          next.value = undefined;\\n          next.done = true;\\n\\n          return next;\\n        };\\n\\n        return next.next = next;\\n      }\\n    }\\n\\n    // Return an iterator with no values.\\n    return { next: doneResult };\\n  }\\n  exports.values = values;\\n\\n  function doneResult() {\\n    return { value: undefined, done: true };\\n  }\\n\\n  Context.prototype = {\\n    constructor: Context,\\n\\n    reset: function(skipTempReset) {\\n      this.prev = 0;\\n      this.next = 0;\\n      // Resetting context._sent for legacy support of Babel's\\n      // function.sent implementation.\\n      this.sent = this._sent = undefined;\\n      this.done = false;\\n      this.delegate = null;\\n\\n      this.method = \\\"next\\\";\\n      this.arg = undefined;\\n\\n      this.tryEntries.forEach(resetTryEntry);\\n\\n      if (!skipTempReset) {\\n        for (var name in this) {\\n          // Not sure about the optimal order of these conditions:\\n          if (name.charAt(0) === \\\"t\\\" &&\\n              hasOwn.call(this, name) &&\\n              !isNaN(+name.slice(1))) {\\n            this[name] = undefined;\\n          }\\n        }\\n      }\\n    },\\n\\n    stop: function() {\\n      this.done = true;\\n\\n      var rootEntry = this.tryEntries[0];\\n      var rootRecord = rootEntry.completion;\\n      if (rootRecord.type === \\\"throw\\\") {\\n        throw rootRecord.arg;\\n      }\\n\\n      return this.rval;\\n    },\\n\\n    dispatchException: function(exception) {\\n      if (this.done) {\\n        throw exception;\\n      }\\n\\n      var context = this;\\n      function handle(loc, caught) {\\n        record.type = \\\"throw\\\";\\n        record.arg = exception;\\n        context.next = loc;\\n\\n        if (caught) {\\n          // If the dispatched exception was caught by a catch block,\\n          // then let that catch block handle the exception normally.\\n          context.method = \\\"next\\\";\\n          context.arg = undefined;\\n        }\\n\\n        return !! caught;\\n      }\\n\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        var record = entry.completion;\\n\\n        if (entry.tryLoc === \\\"root\\\") {\\n          // Exception thrown outside of any try block that could handle\\n          // it, so set the completion value of the entire function to\\n          // throw the exception.\\n          return handle(\\\"end\\\");\\n        }\\n\\n        if (entry.tryLoc <= this.prev) {\\n          var hasCatch = hasOwn.call(entry, \\\"catchLoc\\\");\\n          var hasFinally = hasOwn.call(entry, \\\"finallyLoc\\\");\\n\\n          if (hasCatch && hasFinally) {\\n            if (this.prev < entry.catchLoc) {\\n              return handle(entry.catchLoc, true);\\n            } else if (this.prev < entry.finallyLoc) {\\n              return handle(entry.finallyLoc);\\n            }\\n\\n          } else if (hasCatch) {\\n            if (this.prev < entry.catchLoc) {\\n              return handle(entry.catchLoc, true);\\n            }\\n\\n          } else if (hasFinally) {\\n            if (this.prev < entry.finallyLoc) {\\n              return handle(entry.finallyLoc);\\n            }\\n\\n          } else {\\n            throw new Error(\\\"try statement without catch or finally\\\");\\n          }\\n        }\\n      }\\n    },\\n\\n    abrupt: function(type, arg) {\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        if (entry.tryLoc <= this.prev &&\\n            hasOwn.call(entry, \\\"finallyLoc\\\") &&\\n            this.prev < entry.finallyLoc) {\\n          var finallyEntry = entry;\\n          break;\\n        }\\n      }\\n\\n      if (finallyEntry &&\\n          (type === \\\"break\\\" ||\\n           type === \\\"continue\\\") &&\\n          finallyEntry.tryLoc <= arg &&\\n          arg <= finallyEntry.finallyLoc) {\\n        // Ignore the finally entry if control is not jumping to a\\n        // location outside the try/catch block.\\n        finallyEntry = null;\\n      }\\n\\n      var record = finallyEntry ? finallyEntry.completion : {};\\n      record.type = type;\\n      record.arg = arg;\\n\\n      if (finallyEntry) {\\n        this.method = \\\"next\\\";\\n        this.next = finallyEntry.finallyLoc;\\n        return ContinueSentinel;\\n      }\\n\\n      return this.complete(record);\\n    },\\n\\n    complete: function(record, afterLoc) {\\n      if (record.type === \\\"throw\\\") {\\n        throw record.arg;\\n      }\\n\\n      if (record.type === \\\"break\\\" ||\\n          record.type === \\\"continue\\\") {\\n        this.next = record.arg;\\n      } else if (record.type === \\\"return\\\") {\\n        this.rval = this.arg = record.arg;\\n        this.method = \\\"return\\\";\\n        this.next = \\\"end\\\";\\n      } else if (record.type === \\\"normal\\\" && afterLoc) {\\n        this.next = afterLoc;\\n      }\\n\\n      return ContinueSentinel;\\n    },\\n\\n    finish: function(finallyLoc) {\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        if (entry.finallyLoc === finallyLoc) {\\n          this.complete(entry.completion, entry.afterLoc);\\n          resetTryEntry(entry);\\n          return ContinueSentinel;\\n        }\\n      }\\n    },\\n\\n    \\\"catch\\\": function(tryLoc) {\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        if (entry.tryLoc === tryLoc) {\\n          var record = entry.completion;\\n          if (record.type === \\\"throw\\\") {\\n            var thrown = record.arg;\\n            resetTryEntry(entry);\\n          }\\n          return thrown;\\n        }\\n      }\\n\\n      // The context.catch method must only be called with a location\\n      // argument that corresponds to a known catch block.\\n      throw new Error(\\\"illegal catch attempt\\\");\\n    },\\n\\n    delegateYield: function(iterable, resultName, nextLoc) {\\n      this.delegate = {\\n        iterator: values(iterable),\\n        resultName: resultName,\\n        nextLoc: nextLoc\\n      };\\n\\n      if (this.method === \\\"next\\\") {\\n        // Deliberately forget the last sent value so that we don't\\n        // accidentally pass it on to the delegate.\\n        this.arg = undefined;\\n      }\\n\\n      return ContinueSentinel;\\n    }\\n  };\\n\\n  // Regardless of whether this script is executing as a CommonJS module\\n  // or not, return the runtime object so that we can declare the variable\\n  // regeneratorRuntime in the outer scope, which allows this module to be\\n  // injected easily by `bin/regenerator --include-runtime script.js`.\\n  return exports;\\n\\n}(\\n  // If this script is executing as a CommonJS module, use module.exports\\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\\n  // object. Either way, the resulting object will be used to initialize\\n  // the regeneratorRuntime variable at the top of this file.\\n  typeof module === \\\"object\\\" ? module.exports : {}\\n));\\n\\ntry {\\n  regeneratorRuntime = runtime;\\n} catch (accidentalStrictMode) {\\n  // This module should not be running in strict mode, so the above\\n  // assignment should always work unless something is misconfigured. Just\\n  // in case runtime.js accidentally runs in strict mode, we can escape\\n  // strict mode using a global Function call. This could conceivably fail\\n  // if a Content Security Policy forbids using Function, but in that case\\n  // the proper solution is to fix the accidental strict mode problem. If\\n  // you've misconfigured your bundler to force strict mode and applied a\\n  // CSP to forbid Function, and you're not willing to fix either of those\\n  // problems, please detail your unique predicament in a GitHub issue.\\n  Function(\\\"r\\\", \\\"regeneratorRuntime = r\\\")(runtime);\\n}\\n\\n},{}],76:[function(require,module,exports){\\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\\n/* eslint-disable node/no-deprecated-api */\\nvar buffer = require('buffer')\\nvar Buffer = buffer.Buffer\\n\\n// alternative to using Object.keys for old browsers\\nfunction copyProps (src, dst) {\\n  for (var key in src) {\\n    dst[key] = src[key]\\n  }\\n}\\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\\n  module.exports = buffer\\n} else {\\n  // Copy properties from require('buffer')\\n  copyProps(buffer, exports)\\n  exports.Buffer = SafeBuffer\\n}\\n\\nfunction SafeBuffer (arg, encodingOrOffset, length) {\\n  return Buffer(arg, encodingOrOffset, length)\\n}\\n\\nSafeBuffer.prototype = Object.create(Buffer.prototype)\\n\\n// Copy static methods from Buffer\\ncopyProps(Buffer, SafeBuffer)\\n\\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\\n  if (typeof arg === 'number') {\\n    throw new TypeError('Argument must not be a number')\\n  }\\n  return Buffer(arg, encodingOrOffset, length)\\n}\\n\\nSafeBuffer.alloc = function (size, fill, encoding) {\\n  if (typeof size !== 'number') {\\n    throw new TypeError('Argument must be a number')\\n  }\\n  var buf = Buffer(size)\\n  if (fill !== undefined) {\\n    if (typeof encoding === 'string') {\\n      buf.fill(fill, encoding)\\n    } else {\\n      buf.fill(fill)\\n    }\\n  } else {\\n    buf.fill(0)\\n  }\\n  return buf\\n}\\n\\nSafeBuffer.allocUnsafe = function (size) {\\n  if (typeof size !== 'number') {\\n    throw new TypeError('Argument must be a number')\\n  }\\n  return Buffer(size)\\n}\\n\\nSafeBuffer.allocUnsafeSlow = function (size) {\\n  if (typeof size !== 'number') {\\n    throw new TypeError('Argument must be a number')\\n  }\\n  return buffer.SlowBuffer(size)\\n}\\n\\n},{\\\"buffer\\\":8}],77:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nconst punycode = require(\\\"punycode\\\");\\nconst regexes = require(\\\"./lib/regexes.js\\\");\\nconst mappingTable = require(\\\"./lib/mappingTable.json\\\");\\nconst { STATUS_MAPPING } = require(\\\"./lib/statusMapping.js\\\");\\n\\nfunction containsNonASCII(str) {\\n  return /[^\\\\x00-\\\\x7F]/.test(str);\\n}\\n\\nfunction findStatus(val, { useSTD3ASCIIRules }) {\\n  let start = 0;\\n  let end = mappingTable.length - 1;\\n\\n  while (start <= end) {\\n    const mid = Math.floor((start + end) / 2);\\n\\n    const target = mappingTable[mid];\\n    const min = Array.isArray(target[0]) ? target[0][0] : target[0];\\n    const max = Array.isArray(target[0]) ? target[0][1] : target[0];\\n\\n    if (min <= val && max >= val) {\\n      if (useSTD3ASCIIRules &&\\n          (target[1] === STATUS_MAPPING.disallowed_STD3_valid || target[1] === STATUS_MAPPING.disallowed_STD3_mapped)) {\\n        return [STATUS_MAPPING.disallowed, ...target.slice(2)];\\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_valid) {\\n        return [STATUS_MAPPING.valid, ...target.slice(2)];\\n      } else if (target[1] === STATUS_MAPPING.disallowed_STD3_mapped) {\\n        return [STATUS_MAPPING.mapped, ...target.slice(2)];\\n      }\\n\\n      return target.slice(1);\\n    } else if (min > val) {\\n      end = mid - 1;\\n    } else {\\n      start = mid + 1;\\n    }\\n  }\\n\\n  return null;\\n}\\n\\nfunction mapChars(domainName, { useSTD3ASCIIRules, processingOption }) {\\n  let hasError = false;\\n  let processed = \\\"\\\";\\n\\n  for (const ch of domainName) {\\n    const [status, mapping] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\\n\\n    switch (status) {\\n      case STATUS_MAPPING.disallowed:\\n        hasError = true;\\n        processed += ch;\\n        break;\\n      case STATUS_MAPPING.ignored:\\n        break;\\n      case STATUS_MAPPING.mapped:\\n        processed += mapping;\\n        break;\\n      case STATUS_MAPPING.deviation:\\n        if (processingOption === \\\"transitional\\\") {\\n          processed += mapping;\\n        } else {\\n          processed += ch;\\n        }\\n        break;\\n      case STATUS_MAPPING.valid:\\n        processed += ch;\\n        break;\\n    }\\n  }\\n\\n  return {\\n    string: processed,\\n    error: hasError\\n  };\\n}\\n\\nfunction validateLabel(label, { checkHyphens, checkBidi, checkJoiners, processingOption, useSTD3ASCIIRules }) {\\n  if (label.normalize(\\\"NFC\\\") !== label) {\\n    return false;\\n  }\\n\\n  const codePoints = Array.from(label);\\n\\n  if (checkHyphens) {\\n    if ((codePoints[2] === \\\"-\\\" && codePoints[3] === \\\"-\\\") ||\\n        (label.startsWith(\\\"-\\\") || label.endsWith(\\\"-\\\"))) {\\n      return false;\\n    }\\n  }\\n\\n  if (label.includes(\\\".\\\") ||\\n      (codePoints.length > 0 && regexes.combiningMarks.test(codePoints[0]))) {\\n    return false;\\n  }\\n\\n  for (const ch of codePoints) {\\n    const [status] = findStatus(ch.codePointAt(0), { useSTD3ASCIIRules });\\n    if ((processingOption === \\\"transitional\\\" && status !== STATUS_MAPPING.valid) ||\\n        (processingOption === \\\"nontransitional\\\" &&\\n         status !== STATUS_MAPPING.valid && status !== STATUS_MAPPING.deviation)) {\\n      return false;\\n    }\\n  }\\n\\n  // https://tools.ietf.org/html/rfc5892#appendix-A\\n  if (checkJoiners) {\\n    let last = 0;\\n    for (const [i, ch] of codePoints.entries()) {\\n      if (ch === \\\"\\\\u200C\\\" || ch === \\\"\\\\u200D\\\") {\\n        if (i > 0) {\\n          if (regexes.combiningClassVirama.test(codePoints[i - 1])) {\\n            continue;\\n          }\\n          if (ch === \\\"\\\\u200C\\\") {\\n            // TODO: make this more efficient\\n            const next = codePoints.indexOf(\\\"\\\\u200C\\\", i + 1);\\n            const test = next < 0 ? codePoints.slice(last) : codePoints.slice(last, next);\\n            if (regexes.validZWNJ.test(test.join(\\\"\\\"))) {\\n              last = i + 1;\\n              continue;\\n            }\\n          }\\n        }\\n        return false;\\n      }\\n    }\\n  }\\n\\n  // https://tools.ietf.org/html/rfc5893#section-2\\n  if (checkBidi) {\\n    let rtl;\\n\\n    // 1\\n    if (regexes.bidiS1LTR.test(codePoints[0])) {\\n      rtl = false;\\n    } else if (regexes.bidiS1RTL.test(codePoints[0])) {\\n      rtl = true;\\n    } else {\\n      return false;\\n    }\\n\\n    if (rtl) {\\n      // 2-4\\n      if (!regexes.bidiS2.test(label) ||\\n          !regexes.bidiS3.test(label) ||\\n          (regexes.bidiS4EN.test(label) && regexes.bidiS4AN.test(label))) {\\n        return false;\\n      }\\n    } else if (!regexes.bidiS5.test(label) ||\\n               !regexes.bidiS6.test(label)) { // 5-6\\n      return false;\\n    }\\n  }\\n\\n  return true;\\n}\\n\\nfunction isBidiDomain(labels) {\\n  const domain = labels.map(label => {\\n    if (label.startsWith(\\\"xn--\\\")) {\\n      try {\\n        return punycode.decode(label.substring(4));\\n      } catch (err) {\\n        return \\\"\\\";\\n      }\\n    }\\n    return label;\\n  }).join(\\\".\\\");\\n  return regexes.bidiDomain.test(domain);\\n}\\n\\nfunction processing(domainName, options) {\\n  const { processingOption } = options;\\n\\n  // 1. Map.\\n  let { string, error } = mapChars(domainName, options);\\n\\n  // 2. Normalize.\\n  string = string.normalize(\\\"NFC\\\");\\n\\n  // 3. Break.\\n  const labels = string.split(\\\".\\\");\\n  const isBidi = isBidiDomain(labels);\\n\\n  // 4. Convert/Validate.\\n  for (const [i, origLabel] of labels.entries()) {\\n    let label = origLabel;\\n    let curProcessing = processingOption;\\n    if (label.startsWith(\\\"xn--\\\")) {\\n      try {\\n        label = punycode.decode(label.substring(4));\\n        labels[i] = label;\\n      } catch (err) {\\n        error = true;\\n        continue;\\n      }\\n      curProcessing = \\\"nontransitional\\\";\\n    }\\n\\n    // No need to validate if we already know there is an error.\\n    if (error) {\\n      continue;\\n    }\\n    const validation = validateLabel(label, Object.assign({}, options, {\\n      processingOption: curProcessing,\\n      checkBidi: options.checkBidi && isBidi\\n    }));\\n    if (!validation) {\\n      error = true;\\n    }\\n  }\\n\\n  return {\\n    string: labels.join(\\\".\\\"),\\n    error\\n  };\\n}\\n\\nfunction toASCII(domainName, {\\n  checkHyphens = false,\\n  checkBidi = false,\\n  checkJoiners = false,\\n  useSTD3ASCIIRules = false,\\n  processingOption = \\\"nontransitional\\\",\\n  verifyDNSLength = false\\n} = {}) {\\n  if (processingOption !== \\\"transitional\\\" && processingOption !== \\\"nontransitional\\\") {\\n    throw new RangeError(\\\"processingOption must be either transitional or nontransitional\\\");\\n  }\\n\\n  const result = processing(domainName, {\\n    processingOption,\\n    checkHyphens,\\n    checkBidi,\\n    checkJoiners,\\n    useSTD3ASCIIRules\\n  });\\n  let labels = result.string.split(\\\".\\\");\\n  labels = labels.map(l => {\\n    if (containsNonASCII(l)) {\\n      try {\\n        return \\\"xn--\\\" + punycode.encode(l);\\n      } catch (e) {\\n        result.error = true;\\n      }\\n    }\\n    return l;\\n  });\\n\\n  if (verifyDNSLength) {\\n    const total = labels.join(\\\".\\\").length;\\n    if (total > 253 || total === 0) {\\n      result.error = true;\\n    }\\n\\n    for (let i = 0; i < labels.length; ++i) {\\n      if (labels[i].length > 63 || labels[i].length === 0) {\\n        result.error = true;\\n        break;\\n      }\\n    }\\n  }\\n\\n  if (result.error) {\\n    return null;\\n  }\\n  return labels.join(\\\".\\\");\\n}\\n\\nfunction toUnicode(domainName, {\\n  checkHyphens = false,\\n  checkBidi = false,\\n  checkJoiners = false,\\n  useSTD3ASCIIRules = false,\\n  processingOption = \\\"nontransitional\\\"\\n} = {}) {\\n  const result = processing(domainName, {\\n    processingOption,\\n    checkHyphens,\\n    checkBidi,\\n    checkJoiners,\\n    useSTD3ASCIIRules\\n  });\\n\\n  return {\\n    domain: result.string,\\n    error: result.error\\n  };\\n}\\n\\nmodule.exports = {\\n  toASCII,\\n  toUnicode\\n};\\n\\n},{\\\"./lib/mappingTable.json\\\":78,\\\"./lib/regexes.js\\\":79,\\\"./lib/statusMapping.js\\\":80,\\\"punycode\\\":9}],78:[function(require,module,exports){\\nmodule.exports=[[[0,44],4],[[45,46],2],[47,4],[[48,57],2],[[58,64],4],[65,1,\\\"a\\\"],[66,1,\\\"b\\\"],[67,1,\\\"c\\\"],[68,1,\\\"d\\\"],[69,1,\\\"e\\\"],[70,1,\\\"f\\\"],[71,1,\\\"g\\\"],[72,1,\\\"h\\\"],[73,1,\\\"i\\\"],[74,1,\\\"j\\\"],[75,1,\\\"k\\\"],[76,1,\\\"l\\\"],[77,1,\\\"m\\\"],[78,1,\\\"n\\\"],[79,1,\\\"o\\\"],[80,1,\\\"p\\\"],[81,1,\\\"q\\\"],[82,1,\\\"r\\\"],[83,1,\\\"s\\\"],[84,1,\\\"t\\\"],[85,1,\\\"u\\\"],[86,1,\\\"v\\\"],[87,1,\\\"w\\\"],[88,1,\\\"x\\\"],[89,1,\\\"y\\\"],[90,1,\\\"z\\\"],[[91,96],4],[[97,122],2],[[123,127],4],[[128,159],3],[160,5,\\\" \\\"],[[161,167],2],[168,5,\\\" ̈\\\"],[169,2],[170,1,\\\"a\\\"],[[171,172],2],[173,7],[174,2],[175,5,\\\" ̄\\\"],[[176,177],2],[178,1,\\\"2\\\"],[179,1,\\\"3\\\"],[180,5,\\\" ́\\\"],[181,1,\\\"μ\\\"],[182,2],[183,2],[184,5,\\\" ̧\\\"],[185,1,\\\"1\\\"],[186,1,\\\"o\\\"],[187,2],[188,1,\\\"1⁄4\\\"],[189,1,\\\"1⁄2\\\"],[190,1,\\\"3⁄4\\\"],[191,2],[192,1,\\\"à\\\"],[193,1,\\\"á\\\"],[194,1,\\\"â\\\"],[195,1,\\\"ã\\\"],[196,1,\\\"ä\\\"],[197,1,\\\"å\\\"],[198,1,\\\"æ\\\"],[199,1,\\\"ç\\\"],[200,1,\\\"è\\\"],[201,1,\\\"é\\\"],[202,1,\\\"ê\\\"],[203,1,\\\"ë\\\"],[204,1,\\\"ì\\\"],[205,1,\\\"í\\\"],[206,1,\\\"î\\\"],[207,1,\\\"ï\\\"],[208,1,\\\"ð\\\"],[209,1,\\\"ñ\\\"],[210,1,\\\"ò\\\"],[211,1,\\\"ó\\\"],[212,1,\\\"ô\\\"],[213,1,\\\"õ\\\"],[214,1,\\\"ö\\\"],[215,2],[216,1,\\\"ø\\\"],[217,1,\\\"ù\\\"],[218,1,\\\"ú\\\"],[219,1,\\\"û\\\"],[220,1,\\\"ü\\\"],[221,1,\\\"ý\\\"],[222,1,\\\"þ\\\"],[223,6,\\\"ss\\\"],[[224,246],2],[247,2],[[248,255],2],[256,1,\\\"ā\\\"],[257,2],[258,1,\\\"ă\\\"],[259,2],[260,1,\\\"ą\\\"],[261,2],[262,1,\\\"ć\\\"],[263,2],[264,1,\\\"ĉ\\\"],[265,2],[266,1,\\\"ċ\\\"],[267,2],[268,1,\\\"č\\\"],[269,2],[270,1,\\\"ď\\\"],[271,2],[272,1,\\\"đ\\\"],[273,2],[274,1,\\\"ē\\\"],[275,2],[276,1,\\\"ĕ\\\"],[277,2],[278,1,\\\"ė\\\"],[279,2],[280,1,\\\"ę\\\"],[281,2],[282,1,\\\"ě\\\"],[283,2],[284,1,\\\"ĝ\\\"],[285,2],[286,1,\\\"ğ\\\"],[287,2],[288,1,\\\"ġ\\\"],[289,2],[290,1,\\\"ģ\\\"],[291,2],[292,1,\\\"ĥ\\\"],[293,2],[294,1,\\\"ħ\\\"],[295,2],[296,1,\\\"ĩ\\\"],[297,2],[298,1,\\\"ī\\\"],[299,2],[300,1,\\\"ĭ\\\"],[301,2],[302,1,\\\"į\\\"],[303,2],[304,1,\\\"i̇\\\"],[305,2],[[306,307],1,\\\"ij\\\"],[308,1,\\\"ĵ\\\"],[309,2],[310,1,\\\"ķ\\\"],[[311,312],2],[313,1,\\\"ĺ\\\"],[314,2],[315,1,\\\"ļ\\\"],[316,2],[317,1,\\\"ľ\\\"],[318,2],[[319,320],1,\\\"l·\\\"],[321,1,\\\"ł\\\"],[322,2],[323,1,\\\"ń\\\"],[324,2],[325,1,\\\"ņ\\\"],[326,2],[327,1,\\\"ň\\\"],[328,2],[329,1,\\\"ʼn\\\"],[330,1,\\\"ŋ\\\"],[331,2],[332,1,\\\"ō\\\"],[333,2],[334,1,\\\"ŏ\\\"],[335,2],[336,1,\\\"ő\\\"],[337,2],[338,1,\\\"œ\\\"],[339,2],[340,1,\\\"ŕ\\\"],[341,2],[342,1,\\\"ŗ\\\"],[343,2],[344,1,\\\"ř\\\"],[345,2],[346,1,\\\"ś\\\"],[347,2],[348,1,\\\"ŝ\\\"],[349,2],[350,1,\\\"ş\\\"],[351,2],[352,1,\\\"š\\\"],[353,2],[354,1,\\\"ţ\\\"],[355,2],[356,1,\\\"ť\\\"],[357,2],[358,1,\\\"ŧ\\\"],[359,2],[360,1,\\\"ũ\\\"],[361,2],[362,1,\\\"ū\\\"],[363,2],[364,1,\\\"ŭ\\\"],[365,2],[366,1,\\\"ů\\\"],[367,2],[368,1,\\\"ű\\\"],[369,2],[370,1,\\\"ų\\\"],[371,2],[372,1,\\\"ŵ\\\"],[373,2],[374,1,\\\"ŷ\\\"],[375,2],[376,1,\\\"ÿ\\\"],[377,1,\\\"ź\\\"],[378,2],[379,1,\\\"ż\\\"],[380,2],[381,1,\\\"ž\\\"],[382,2],[383,1,\\\"s\\\"],[384,2],[385,1,\\\"ɓ\\\"],[386,1,\\\"ƃ\\\"],[387,2],[388,1,\\\"ƅ\\\"],[389,2],[390,1,\\\"ɔ\\\"],[391,1,\\\"ƈ\\\"],[392,2],[393,1,\\\"ɖ\\\"],[394,1,\\\"ɗ\\\"],[395,1,\\\"ƌ\\\"],[[396,397],2],[398,1,\\\"ǝ\\\"],[399,1,\\\"ə\\\"],[400,1,\\\"ɛ\\\"],[401,1,\\\"ƒ\\\"],[402,2],[403,1,\\\"ɠ\\\"],[404,1,\\\"ɣ\\\"],[405,2],[406,1,\\\"ɩ\\\"],[407,1,\\\"ɨ\\\"],[408,1,\\\"ƙ\\\"],[[409,411],2],[412,1,\\\"ɯ\\\"],[413,1,\\\"ɲ\\\"],[414,2],[415,1,\\\"ɵ\\\"],[416,1,\\\"ơ\\\"],[417,2],[418,1,\\\"ƣ\\\"],[419,2],[420,1,\\\"ƥ\\\"],[421,2],[422,1,\\\"ʀ\\\"],[423,1,\\\"ƨ\\\"],[424,2],[425,1,\\\"ʃ\\\"],[[426,427],2],[428,1,\\\"ƭ\\\"],[429,2],[430,1,\\\"ʈ\\\"],[431,1,\\\"ư\\\"],[432,2],[433,1,\\\"ʊ\\\"],[434,1,\\\"ʋ\\\"],[435,1,\\\"ƴ\\\"],[436,2],[437,1,\\\"ƶ\\\"],[438,2],[439,1,\\\"ʒ\\\"],[440,1,\\\"ƹ\\\"],[[441,443],2],[444,1,\\\"ƽ\\\"],[[445,451],2],[[452,454],1,\\\"dž\\\"],[[455,457],1,\\\"lj\\\"],[[458,460],1,\\\"nj\\\"],[461,1,\\\"ǎ\\\"],[462,2],[463,1,\\\"ǐ\\\"],[464,2],[465,1,\\\"ǒ\\\"],[466,2],[467,1,\\\"ǔ\\\"],[468,2],[469,1,\\\"ǖ\\\"],[470,2],[471,1,\\\"ǘ\\\"],[472,2],[473,1,\\\"ǚ\\\"],[474,2],[475,1,\\\"ǜ\\\"],[[476,477],2],[478,1,\\\"ǟ\\\"],[479,2],[480,1,\\\"ǡ\\\"],[481,2],[482,1,\\\"ǣ\\\"],[483,2],[484,1,\\\"ǥ\\\"],[485,2],[486,1,\\\"ǧ\\\"],[487,2],[488,1,\\\"ǩ\\\"],[489,2],[490,1,\\\"ǫ\\\"],[491,2],[492,1,\\\"ǭ\\\"],[493,2],[494,1,\\\"ǯ\\\"],[[495,496],2],[[497,499],1,\\\"dz\\\"],[500,1,\\\"ǵ\\\"],[501,2],[502,1,\\\"ƕ\\\"],[503,1,\\\"ƿ\\\"],[504,1,\\\"ǹ\\\"],[505,2],[506,1,\\\"ǻ\\\"],[507,2],[508,1,\\\"ǽ\\\"],[509,2],[510,1,\\\"ǿ\\\"],[511,2],[512,1,\\\"ȁ\\\"],[513,2],[514,1,\\\"ȃ\\\"],[515,2],[516,1,\\\"ȅ\\\"],[517,2],[518,1,\\\"ȇ\\\"],[519,2],[520,1,\\\"ȉ\\\"],[521,2],[522,1,\\\"ȋ\\\"],[523,2],[524,1,\\\"ȍ\\\"],[525,2],[526,1,\\\"ȏ\\\"],[527,2],[528,1,\\\"ȑ\\\"],[529,2],[530,1,\\\"ȓ\\\"],[531,2],[532,1,\\\"ȕ\\\"],[533,2],[534,1,\\\"ȗ\\\"],[535,2],[536,1,\\\"ș\\\"],[537,2],[538,1,\\\"ț\\\"],[539,2],[540,1,\\\"ȝ\\\"],[541,2],[542,1,\\\"ȟ\\\"],[543,2],[544,1,\\\"ƞ\\\"],[545,2],[546,1,\\\"ȣ\\\"],[547,2],[548,1,\\\"ȥ\\\"],[549,2],[550,1,\\\"ȧ\\\"],[551,2],[552,1,\\\"ȩ\\\"],[553,2],[554,1,\\\"ȫ\\\"],[555,2],[556,1,\\\"ȭ\\\"],[557,2],[558,1,\\\"ȯ\\\"],[559,2],[560,1,\\\"ȱ\\\"],[561,2],[562,1,\\\"ȳ\\\"],[563,2],[[564,566],2],[[567,569],2],[570,1,\\\"ⱥ\\\"],[571,1,\\\"ȼ\\\"],[572,2],[573,1,\\\"ƚ\\\"],[574,1,\\\"ⱦ\\\"],[[575,576],2],[577,1,\\\"ɂ\\\"],[578,2],[579,1,\\\"ƀ\\\"],[580,1,\\\"ʉ\\\"],[581,1,\\\"ʌ\\\"],[582,1,\\\"ɇ\\\"],[583,2],[584,1,\\\"ɉ\\\"],[585,2],[586,1,\\\"ɋ\\\"],[587,2],[588,1,\\\"ɍ\\\"],[589,2],[590,1,\\\"ɏ\\\"],[591,2],[[592,680],2],[[681,685],2],[[686,687],2],[688,1,\\\"h\\\"],[689,1,\\\"ɦ\\\"],[690,1,\\\"j\\\"],[691,1,\\\"r\\\"],[692,1,\\\"ɹ\\\"],[693,1,\\\"ɻ\\\"],[694,1,\\\"ʁ\\\"],[695,1,\\\"w\\\"],[696,1,\\\"y\\\"],[[697,705],2],[[706,709],2],[[710,721],2],[[722,727],2],[728,5,\\\" ̆\\\"],[729,5,\\\" ̇\\\"],[730,5,\\\" ̊\\\"],[731,5,\\\" ̨\\\"],[732,5,\\\" ̃\\\"],[733,5,\\\" ̋\\\"],[734,2],[735,2],[736,1,\\\"ɣ\\\"],[737,1,\\\"l\\\"],[738,1,\\\"s\\\"],[739,1,\\\"x\\\"],[740,1,\\\"ʕ\\\"],[[741,745],2],[[746,747],2],[748,2],[749,2],[750,2],[[751,767],2],[[768,831],2],[832,1,\\\"̀\\\"],[833,1,\\\"́\\\"],[834,2],[835,1,\\\"̓\\\"],[836,1,\\\"̈́\\\"],[837,1,\\\"ι\\\"],[[838,846],2],[847,7],[[848,855],2],[[856,860],2],[[861,863],2],[[864,865],2],[866,2],[[867,879],2],[880,1,\\\"ͱ\\\"],[881,2],[882,1,\\\"ͳ\\\"],[883,2],[884,1,\\\"ʹ\\\"],[885,2],[886,1,\\\"ͷ\\\"],[887,2],[[888,889],3],[890,5,\\\" ι\\\"],[[891,893],2],[894,5,\\\";\\\"],[895,1,\\\"ϳ\\\"],[[896,899],3],[900,5,\\\" ́\\\"],[901,5,\\\" ̈́\\\"],[902,1,\\\"ά\\\"],[903,1,\\\"·\\\"],[904,1,\\\"έ\\\"],[905,1,\\\"ή\\\"],[906,1,\\\"ί\\\"],[907,3],[908,1,\\\"ό\\\"],[909,3],[910,1,\\\"ύ\\\"],[911,1,\\\"ώ\\\"],[912,2],[913,1,\\\"α\\\"],[914,1,\\\"β\\\"],[915,1,\\\"γ\\\"],[916,1,\\\"δ\\\"],[917,1,\\\"ε\\\"],[918,1,\\\"ζ\\\"],[919,1,\\\"η\\\"],[920,1,\\\"θ\\\"],[921,1,\\\"ι\\\"],[922,1,\\\"κ\\\"],[923,1,\\\"λ\\\"],[924,1,\\\"μ\\\"],[925,1,\\\"ν\\\"],[926,1,\\\"ξ\\\"],[927,1,\\\"ο\\\"],[928,1,\\\"π\\\"],[929,1,\\\"ρ\\\"],[930,3],[931,1,\\\"σ\\\"],[932,1,\\\"τ\\\"],[933,1,\\\"υ\\\"],[934,1,\\\"φ\\\"],[935,1,\\\"χ\\\"],[936,1,\\\"ψ\\\"],[937,1,\\\"ω\\\"],[938,1,\\\"ϊ\\\"],[939,1,\\\"ϋ\\\"],[[940,961],2],[962,6,\\\"σ\\\"],[[963,974],2],[975,1,\\\"ϗ\\\"],[976,1,\\\"β\\\"],[977,1,\\\"θ\\\"],[978,1,\\\"υ\\\"],[979,1,\\\"ύ\\\"],[980,1,\\\"ϋ\\\"],[981,1,\\\"φ\\\"],[982,1,\\\"π\\\"],[983,2],[984,1,\\\"ϙ\\\"],[985,2],[986,1,\\\"ϛ\\\"],[987,2],[988,1,\\\"ϝ\\\"],[989,2],[990,1,\\\"ϟ\\\"],[991,2],[992,1,\\\"ϡ\\\"],[993,2],[994,1,\\\"ϣ\\\"],[995,2],[996,1,\\\"ϥ\\\"],[997,2],[998,1,\\\"ϧ\\\"],[999,2],[1000,1,\\\"ϩ\\\"],[1001,2],[1002,1,\\\"ϫ\\\"],[1003,2],[1004,1,\\\"ϭ\\\"],[1005,2],[1006,1,\\\"ϯ\\\"],[1007,2],[1008,1,\\\"κ\\\"],[1009,1,\\\"ρ\\\"],[1010,1,\\\"σ\\\"],[1011,2],[1012,1,\\\"θ\\\"],[1013,1,\\\"ε\\\"],[1014,2],[1015,1,\\\"ϸ\\\"],[1016,2],[1017,1,\\\"σ\\\"],[1018,1,\\\"ϻ\\\"],[1019,2],[1020,2],[1021,1,\\\"ͻ\\\"],[1022,1,\\\"ͼ\\\"],[1023,1,\\\"ͽ\\\"],[1024,1,\\\"ѐ\\\"],[1025,1,\\\"ё\\\"],[1026,1,\\\"ђ\\\"],[1027,1,\\\"ѓ\\\"],[1028,1,\\\"є\\\"],[1029,1,\\\"ѕ\\\"],[1030,1,\\\"і\\\"],[1031,1,\\\"ї\\\"],[1032,1,\\\"ј\\\"],[1033,1,\\\"љ\\\"],[1034,1,\\\"њ\\\"],[1035,1,\\\"ћ\\\"],[1036,1,\\\"ќ\\\"],[1037,1,\\\"ѝ\\\"],[1038,1,\\\"ў\\\"],[1039,1,\\\"џ\\\"],[1040,1,\\\"а\\\"],[1041,1,\\\"б\\\"],[1042,1,\\\"в\\\"],[1043,1,\\\"г\\\"],[1044,1,\\\"д\\\"],[1045,1,\\\"е\\\"],[1046,1,\\\"ж\\\"],[1047,1,\\\"з\\\"],[1048,1,\\\"и\\\"],[1049,1,\\\"й\\\"],[1050,1,\\\"к\\\"],[1051,1,\\\"л\\\"],[1052,1,\\\"м\\\"],[1053,1,\\\"н\\\"],[1054,1,\\\"о\\\"],[1055,1,\\\"п\\\"],[1056,1,\\\"р\\\"],[1057,1,\\\"с\\\"],[1058,1,\\\"т\\\"],[1059,1,\\\"у\\\"],[1060,1,\\\"ф\\\"],[1061,1,\\\"х\\\"],[1062,1,\\\"ц\\\"],[1063,1,\\\"ч\\\"],[1064,1,\\\"ш\\\"],[1065,1,\\\"щ\\\"],[1066,1,\\\"ъ\\\"],[1067,1,\\\"ы\\\"],[1068,1,\\\"ь\\\"],[1069,1,\\\"э\\\"],[1070,1,\\\"ю\\\"],[1071,1,\\\"я\\\"],[[1072,1103],2],[1104,2],[[1105,1116],2],[1117,2],[[1118,1119],2],[1120,1,\\\"ѡ\\\"],[1121,2],[1122,1,\\\"ѣ\\\"],[1123,2],[1124,1,\\\"ѥ\\\"],[1125,2],[1126,1,\\\"ѧ\\\"],[1127,2],[1128,1,\\\"ѩ\\\"],[1129,2],[1130,1,\\\"ѫ\\\"],[1131,2],[1132,1,\\\"ѭ\\\"],[1133,2],[1134,1,\\\"ѯ\\\"],[1135,2],[1136,1,\\\"ѱ\\\"],[1137,2],[1138,1,\\\"ѳ\\\"],[1139,2],[1140,1,\\\"ѵ\\\"],[1141,2],[1142,1,\\\"ѷ\\\"],[1143,2],[1144,1,\\\"ѹ\\\"],[1145,2],[1146,1,\\\"ѻ\\\"],[1147,2],[1148,1,\\\"ѽ\\\"],[1149,2],[1150,1,\\\"ѿ\\\"],[1151,2],[1152,1,\\\"ҁ\\\"],[1153,2],[1154,2],[[1155,1158],2],[1159,2],[[1160,1161],2],[1162,1,\\\"ҋ\\\"],[1163,2],[1164,1,\\\"ҍ\\\"],[1165,2],[1166,1,\\\"ҏ\\\"],[1167,2],[1168,1,\\\"ґ\\\"],[1169,2],[1170,1,\\\"ғ\\\"],[1171,2],[1172,1,\\\"ҕ\\\"],[1173,2],[1174,1,\\\"җ\\\"],[1175,2],[1176,1,\\\"ҙ\\\"],[1177,2],[1178,1,\\\"қ\\\"],[1179,2],[1180,1,\\\"ҝ\\\"],[1181,2],[1182,1,\\\"ҟ\\\"],[1183,2],[1184,1,\\\"ҡ\\\"],[1185,2],[1186,1,\\\"ң\\\"],[1187,2],[1188,1,\\\"ҥ\\\"],[1189,2],[1190,1,\\\"ҧ\\\"],[1191,2],[1192,1,\\\"ҩ\\\"],[1193,2],[1194,1,\\\"ҫ\\\"],[1195,2],[1196,1,\\\"ҭ\\\"],[1197,2],[1198,1,\\\"ү\\\"],[1199,2],[1200,1,\\\"ұ\\\"],[1201,2],[1202,1,\\\"ҳ\\\"],[1203,2],[1204,1,\\\"ҵ\\\"],[1205,2],[1206,1,\\\"ҷ\\\"],[1207,2],[1208,1,\\\"ҹ\\\"],[1209,2],[1210,1,\\\"һ\\\"],[1211,2],[1212,1,\\\"ҽ\\\"],[1213,2],[1214,1,\\\"ҿ\\\"],[1215,2],[1216,3],[1217,1,\\\"ӂ\\\"],[1218,2],[1219,1,\\\"ӄ\\\"],[1220,2],[1221,1,\\\"ӆ\\\"],[1222,2],[1223,1,\\\"ӈ\\\"],[1224,2],[1225,1,\\\"ӊ\\\"],[1226,2],[1227,1,\\\"ӌ\\\"],[1228,2],[1229,1,\\\"ӎ\\\"],[1230,2],[1231,2],[1232,1,\\\"ӑ\\\"],[1233,2],[1234,1,\\\"ӓ\\\"],[1235,2],[1236,1,\\\"ӕ\\\"],[1237,2],[1238,1,\\\"ӗ\\\"],[1239,2],[1240,1,\\\"ә\\\"],[1241,2],[1242,1,\\\"ӛ\\\"],[1243,2],[1244,1,\\\"ӝ\\\"],[1245,2],[1246,1,\\\"ӟ\\\"],[1247,2],[1248,1,\\\"ӡ\\\"],[1249,2],[1250,1,\\\"ӣ\\\"],[1251,2],[1252,1,\\\"ӥ\\\"],[1253,2],[1254,1,\\\"ӧ\\\"],[1255,2],[1256,1,\\\"ө\\\"],[1257,2],[1258,1,\\\"ӫ\\\"],[1259,2],[1260,1,\\\"ӭ\\\"],[1261,2],[1262,1,\\\"ӯ\\\"],[1263,2],[1264,1,\\\"ӱ\\\"],[1265,2],[1266,1,\\\"ӳ\\\"],[1267,2],[1268,1,\\\"ӵ\\\"],[1269,2],[1270,1,\\\"ӷ\\\"],[1271,2],[1272,1,\\\"ӹ\\\"],[1273,2],[1274,1,\\\"ӻ\\\"],[1275,2],[1276,1,\\\"ӽ\\\"],[1277,2],[1278,1,\\\"ӿ\\\"],[1279,2],[1280,1,\\\"ԁ\\\"],[1281,2],[1282,1,\\\"ԃ\\\"],[1283,2],[1284,1,\\\"ԅ\\\"],[1285,2],[1286,1,\\\"ԇ\\\"],[1287,2],[1288,1,\\\"ԉ\\\"],[1289,2],[1290,1,\\\"ԋ\\\"],[1291,2],[1292,1,\\\"ԍ\\\"],[1293,2],[1294,1,\\\"ԏ\\\"],[1295,2],[1296,1,\\\"ԑ\\\"],[1297,2],[1298,1,\\\"ԓ\\\"],[1299,2],[1300,1,\\\"ԕ\\\"],[1301,2],[1302,1,\\\"ԗ\\\"],[1303,2],[1304,1,\\\"ԙ\\\"],[1305,2],[1306,1,\\\"ԛ\\\"],[1307,2],[1308,1,\\\"ԝ\\\"],[1309,2],[1310,1,\\\"ԟ\\\"],[1311,2],[1312,1,\\\"ԡ\\\"],[1313,2],[1314,1,\\\"ԣ\\\"],[1315,2],[1316,1,\\\"ԥ\\\"],[1317,2],[1318,1,\\\"ԧ\\\"],[1319,2],[1320,1,\\\"ԩ\\\"],[1321,2],[1322,1,\\\"ԫ\\\"],[1323,2],[1324,1,\\\"ԭ\\\"],[1325,2],[1326,1,\\\"ԯ\\\"],[1327,2],[1328,3],[1329,1,\\\"ա\\\"],[1330,1,\\\"բ\\\"],[1331,1,\\\"գ\\\"],[1332,1,\\\"դ\\\"],[1333,1,\\\"ե\\\"],[1334,1,\\\"զ\\\"],[1335,1,\\\"է\\\"],[1336,1,\\\"ը\\\"],[1337,1,\\\"թ\\\"],[1338,1,\\\"ժ\\\"],[1339,1,\\\"ի\\\"],[1340,1,\\\"լ\\\"],[1341,1,\\\"խ\\\"],[1342,1,\\\"ծ\\\"],[1343,1,\\\"կ\\\"],[1344,1,\\\"հ\\\"],[1345,1,\\\"ձ\\\"],[1346,1,\\\"ղ\\\"],[1347,1,\\\"ճ\\\"],[1348,1,\\\"մ\\\"],[1349,1,\\\"յ\\\"],[1350,1,\\\"ն\\\"],[1351,1,\\\"շ\\\"],[1352,1,\\\"ո\\\"],[1353,1,\\\"չ\\\"],[1354,1,\\\"պ\\\"],[1355,1,\\\"ջ\\\"],[1356,1,\\\"ռ\\\"],[1357,1,\\\"ս\\\"],[1358,1,\\\"վ\\\"],[1359,1,\\\"տ\\\"],[1360,1,\\\"ր\\\"],[1361,1,\\\"ց\\\"],[1362,1,\\\"ւ\\\"],[1363,1,\\\"փ\\\"],[1364,1,\\\"ք\\\"],[1365,1,\\\"օ\\\"],[1366,1,\\\"ֆ\\\"],[[1367,1368],3],[1369,2],[[1370,1375],2],[1376,2],[[1377,1414],2],[1415,1,\\\"եւ\\\"],[1416,2],[1417,2],[1418,2],[[1419,1420],3],[[1421,1422],2],[1423,2],[1424,3],[[1425,1441],2],[1442,2],[[1443,1455],2],[[1456,1465],2],[1466,2],[[1467,1469],2],[1470,2],[1471,2],[1472,2],[[1473,1474],2],[1475,2],[1476,2],[1477,2],[1478,2],[1479,2],[[1480,1487],3],[[1488,1514],2],[[1515,1518],3],[1519,2],[[1520,1524],2],[[1525,1535],3],[[1536,1539],3],[1540,3],[1541,3],[[1542,1546],2],[1547,2],[1548,2],[[1549,1551],2],[[1552,1557],2],[[1558,1562],2],[1563,2],[1564,3],[1565,3],[1566,2],[1567,2],[1568,2],[[1569,1594],2],[[1595,1599],2],[1600,2],[[1601,1618],2],[[1619,1621],2],[[1622,1624],2],[[1625,1630],2],[1631,2],[[1632,1641],2],[[1642,1645],2],[[1646,1647],2],[[1648,1652],2],[1653,1,\\\"اٴ\\\"],[1654,1,\\\"وٴ\\\"],[1655,1,\\\"ۇٴ\\\"],[1656,1,\\\"يٴ\\\"],[[1657,1719],2],[[1720,1721],2],[[1722,1726],2],[1727,2],[[1728,1742],2],[1743,2],[[1744,1747],2],[1748,2],[[1749,1756],2],[1757,3],[1758,2],[[1759,1768],2],[1769,2],[[1770,1773],2],[[1774,1775],2],[[1776,1785],2],[[1786,1790],2],[1791,2],[[1792,1805],2],[1806,3],[1807,3],[[1808,1836],2],[[1837,1839],2],[[1840,1866],2],[[1867,1868],3],[[1869,1871],2],[[1872,1901],2],[[1902,1919],2],[[1920,1968],2],[1969,2],[[1970,1983],3],[[1984,2037],2],[[2038,2042],2],[[2043,2044],3],[2045,2],[[2046,2047],2],[[2048,2093],2],[[2094,2095],3],[[2096,2110],2],[2111,3],[[2112,2139],2],[[2140,2141],3],[2142,2],[2143,3],[[2144,2154],2],[[2155,2207],3],[2208,2],[2209,2],[[2210,2220],2],[[2221,2226],2],[[2227,2228],2],[2229,3],[[2230,2237],2],[[2238,2258],3],[2259,2],[[2260,2273],2],[2274,3],[2275,2],[[2276,2302],2],[2303,2],[2304,2],[[2305,2307],2],[2308,2],[[2309,2361],2],[[2362,2363],2],[[2364,2381],2],[2382,2],[2383,2],[[2384,2388],2],[2389,2],[[2390,2391],2],[2392,1,\\\"क़\\\"],[2393,1,\\\"ख़\\\"],[2394,1,\\\"ग़\\\"],[2395,1,\\\"ज़\\\"],[2396,1,\\\"ड़\\\"],[2397,1,\\\"ढ़\\\"],[2398,1,\\\"फ़\\\"],[2399,1,\\\"य़\\\"],[[2400,2403],2],[[2404,2405],2],[[2406,2415],2],[2416,2],[[2417,2418],2],[[2419,2423],2],[2424,2],[[2425,2426],2],[[2427,2428],2],[2429,2],[[2430,2431],2],[2432,2],[[2433,2435],2],[2436,3],[[2437,2444],2],[[2445,2446],3],[[2447,2448],2],[[2449,2450],3],[[2451,2472],2],[2473,3],[[2474,2480],2],[2481,3],[2482,2],[[2483,2485],3],[[2486,2489],2],[[2490,2491],3],[2492,2],[2493,2],[[2494,2500],2],[[2501,2502],3],[[2503,2504],2],[[2505,2506],3],[[2507,2509],2],[2510,2],[[2511,2518],3],[2519,2],[[2520,2523],3],[2524,1,\\\"ড়\\\"],[2525,1,\\\"ঢ়\\\"],[2526,3],[2527,1,\\\"য়\\\"],[[2528,2531],2],[[2532,2533],3],[[2534,2545],2],[[2546,2554],2],[2555,2],[2556,2],[2557,2],[2558,2],[[2559,2560],3],[2561,2],[2562,2],[2563,2],[2564,3],[[2565,2570],2],[[2571,2574],3],[[2575,2576],2],[[2577,2578],3],[[2579,2600],2],[2601,3],[[2602,2608],2],[2609,3],[2610,2],[2611,1,\\\"ਲ਼\\\"],[2612,3],[2613,2],[2614,1,\\\"ਸ਼\\\"],[2615,3],[[2616,2617],2],[[2618,2619],3],[2620,2],[2621,3],[[2622,2626],2],[[2627,2630],3],[[2631,2632],2],[[2633,2634],3],[[2635,2637],2],[[2638,2640],3],[2641,2],[[2642,2648],3],[2649,1,\\\"ਖ਼\\\"],[2650,1,\\\"ਗ਼\\\"],[2651,1,\\\"ਜ਼\\\"],[2652,2],[2653,3],[2654,1,\\\"ਫ਼\\\"],[[2655,2661],3],[[2662,2676],2],[2677,2],[2678,2],[[2679,2688],3],[[2689,2691],2],[2692,3],[[2693,2699],2],[2700,2],[2701,2],[2702,3],[[2703,2705],2],[2706,3],[[2707,2728],2],[2729,3],[[2730,2736],2],[2737,3],[[2738,2739],2],[2740,3],[[2741,2745],2],[[2746,2747],3],[[2748,2757],2],[2758,3],[[2759,2761],2],[2762,3],[[2763,2765],2],[[2766,2767],3],[2768,2],[[2769,2783],3],[2784,2],[[2785,2787],2],[[2788,2789],3],[[2790,2799],2],[2800,2],[2801,2],[[2802,2808],3],[2809,2],[[2810,2815],2],[2816,3],[[2817,2819],2],[2820,3],[[2821,2828],2],[[2829,2830],3],[[2831,2832],2],[[2833,2834],3],[[2835,2856],2],[2857,3],[[2858,2864],2],[2865,3],[[2866,2867],2],[2868,3],[2869,2],[[2870,2873],2],[[2874,2875],3],[[2876,2883],2],[2884,2],[[2885,2886],3],[[2887,2888],2],[[2889,2890],3],[[2891,2893],2],[[2894,2901],3],[[2902,2903],2],[[2904,2907],3],[2908,1,\\\"ଡ଼\\\"],[2909,1,\\\"ଢ଼\\\"],[2910,3],[[2911,2913],2],[[2914,2915],2],[[2916,2917],3],[[2918,2927],2],[2928,2],[2929,2],[[2930,2935],2],[[2936,2945],3],[[2946,2947],2],[2948,3],[[2949,2954],2],[[2955,2957],3],[[2958,2960],2],[2961,3],[[2962,2965],2],[[2966,2968],3],[[2969,2970],2],[2971,3],[2972,2],[2973,3],[[2974,2975],2],[[2976,2978],3],[[2979,2980],2],[[2981,2983],3],[[2984,2986],2],[[2987,2989],3],[[2990,2997],2],[2998,2],[[2999,3001],2],[[3002,3005],3],[[3006,3010],2],[[3011,3013],3],[[3014,3016],2],[3017,3],[[3018,3021],2],[[3022,3023],3],[3024,2],[[3025,3030],3],[3031,2],[[3032,3045],3],[3046,2],[[3047,3055],2],[[3056,3058],2],[[3059,3066],2],[[3067,3071],3],[3072,2],[[3073,3075],2],[3076,2],[[3077,3084],2],[3085,3],[[3086,3088],2],[3089,3],[[3090,3112],2],[3113,3],[[3114,3123],2],[3124,2],[[3125,3129],2],[[3130,3132],3],[3133,2],[[3134,3140],2],[3141,3],[[3142,3144],2],[3145,3],[[3146,3149],2],[[3150,3156],3],[[3157,3158],2],[3159,3],[[3160,3161],2],[3162,2],[[3163,3167],3],[[3168,3169],2],[[3170,3171],2],[[3172,3173],3],[[3174,3183],2],[[3184,3190],3],[3191,2],[[3192,3199],2],[3200,2],[3201,2],[[3202,3203],2],[3204,2],[[3205,3212],2],[3213,3],[[3214,3216],2],[3217,3],[[3218,3240],2],[3241,3],[[3242,3251],2],[3252,3],[[3253,3257],2],[[3258,3259],3],[[3260,3261],2],[[3262,3268],2],[3269,3],[[3270,3272],2],[3273,3],[[3274,3277],2],[[3278,3284],3],[[3285,3286],2],[[3287,3293],3],[3294,2],[3295,3],[[3296,3297],2],[[3298,3299],2],[[3300,3301],3],[[3302,3311],2],[3312,3],[[3313,3314],2],[[3315,3327],3],[3328,2],[3329,2],[[3330,3331],2],[3332,3],[[3333,3340],2],[3341,3],[[3342,3344],2],[3345,3],[[3346,3368],2],[3369,2],[[3370,3385],2],[3386,2],[[3387,3388],2],[3389,2],[[3390,3395],2],[3396,2],[3397,3],[[3398,3400],2],[3401,3],[[3402,3405],2],[3406,2],[3407,2],[[3408,3411],3],[[3412,3414],2],[3415,2],[[3416,3422],2],[3423,2],[[3424,3425],2],[[3426,3427],2],[[3428,3429],3],[[3430,3439],2],[[3440,3445],2],[[3446,3448],2],[3449,2],[[3450,3455],2],[[3456,3457],3],[[3458,3459],2],[3460,3],[[3461,3478],2],[[3479,3481],3],[[3482,3505],2],[3506,3],[[3507,3515],2],[3516,3],[3517,2],[[3518,3519],3],[[3520,3526],2],[[3527,3529],3],[3530,2],[[3531,3534],3],[[3535,3540],2],[3541,3],[3542,2],[3543,3],[[3544,3551],2],[[3552,3557],3],[[3558,3567],2],[[3568,3569],3],[[3570,3571],2],[3572,2],[[3573,3584],3],[[3585,3634],2],[3635,1,\\\"ํา\\\"],[[3636,3642],2],[[3643,3646],3],[3647,2],[[3648,3662],2],[3663,2],[[3664,3673],2],[[3674,3675],2],[[3676,3712],3],[[3713,3714],2],[3715,3],[3716,2],[3717,3],[3718,2],[[3719,3720],2],[3721,2],[3722,2],[3723,3],[3724,2],[3725,2],[[3726,3731],2],[[3732,3735],2],[3736,2],[[3737,3743],2],[3744,2],[[3745,3747],2],[3748,3],[3749,2],[3750,3],[3751,2],[[3752,3753],2],[[3754,3755],2],[3756,2],[[3757,3762],2],[3763,1,\\\"ໍາ\\\"],[[3764,3769],2],[3770,2],[[3771,3773],2],[[3774,3775],3],[[3776,3780],2],[3781,3],[3782,2],[3783,3],[[3784,3789],2],[[3790,3791],3],[[3792,3801],2],[[3802,3803],3],[3804,1,\\\"ຫນ\\\"],[3805,1,\\\"ຫມ\\\"],[[3806,3807],2],[[3808,3839],3],[3840,2],[[3841,3850],2],[3851,2],[3852,1,\\\"་\\\"],[[3853,3863],2],[[3864,3865],2],[[3866,3871],2],[[3872,3881],2],[[3882,3892],2],[3893,2],[3894,2],[3895,2],[3896,2],[3897,2],[[3898,3901],2],[[3902,3906],2],[3907,1,\\\"གྷ\\\"],[[3908,3911],2],[3912,3],[[3913,3916],2],[3917,1,\\\"ཌྷ\\\"],[[3918,3921],2],[3922,1,\\\"དྷ\\\"],[[3923,3926],2],[3927,1,\\\"བྷ\\\"],[[3928,3931],2],[3932,1,\\\"ཛྷ\\\"],[[3933,3944],2],[3945,1,\\\"ཀྵ\\\"],[3946,2],[[3947,3948],2],[[3949,3952],3],[[3953,3954],2],[3955,1,\\\"ཱི\\\"],[3956,2],[3957,1,\\\"ཱུ\\\"],[3958,1,\\\"ྲྀ\\\"],[3959,1,\\\"ྲཱྀ\\\"],[3960,1,\\\"ླྀ\\\"],[3961,1,\\\"ླཱྀ\\\"],[[3962,3968],2],[3969,1,\\\"ཱྀ\\\"],[[3970,3972],2],[3973,2],[[3974,3979],2],[[3980,3983],2],[[3984,3986],2],[3987,1,\\\"ྒྷ\\\"],[[3988,3989],2],[3990,2],[3991,2],[3992,3],[[3993,3996],2],[3997,1,\\\"ྜྷ\\\"],[[3998,4001],2],[4002,1,\\\"ྡྷ\\\"],[[4003,4006],2],[4007,1,\\\"ྦྷ\\\"],[[4008,4011],2],[4012,1,\\\"ྫྷ\\\"],[4013,2],[[4014,4016],2],[[4017,4023],2],[4024,2],[4025,1,\\\"ྐྵ\\\"],[[4026,4028],2],[4029,3],[[4030,4037],2],[4038,2],[[4039,4044],2],[4045,3],[4046,2],[4047,2],[[4048,4049],2],[[4050,4052],2],[[4053,4056],2],[[4057,4058],2],[[4059,4095],3],[[4096,4129],2],[4130,2],[[4131,4135],2],[4136,2],[[4137,4138],2],[4139,2],[[4140,4146],2],[[4147,4149],2],[[4150,4153],2],[[4154,4159],2],[[4160,4169],2],[[4170,4175],2],[[4176,4185],2],[[4186,4249],2],[[4250,4253],2],[[4254,4255],2],[[4256,4293],3],[4294,3],[4295,1,\\\"ⴧ\\\"],[[4296,4300],3],[4301,1,\\\"ⴭ\\\"],[[4302,4303],3],[[4304,4342],2],[[4343,4344],2],[[4345,4346],2],[4347,2],[4348,1,\\\"ნ\\\"],[[4349,4351],2],[[4352,4441],2],[[4442,4446],2],[[4447,4448],3],[[4449,4514],2],[[4515,4519],2],[[4520,4601],2],[[4602,4607],2],[[4608,4614],2],[4615,2],[[4616,4678],2],[4679,2],[4680,2],[4681,3],[[4682,4685],2],[[4686,4687],3],[[4688,4694],2],[4695,3],[4696,2],[4697,3],[[4698,4701],2],[[4702,4703],3],[[4704,4742],2],[4743,2],[4744,2],[4745,3],[[4746,4749],2],[[4750,4751],3],[[4752,4782],2],[4783,2],[4784,2],[4785,3],[[4786,4789],2],[[4790,4791],3],[[4792,4798],2],[4799,3],[4800,2],[4801,3],[[4802,4805],2],[[4806,4807],3],[[4808,4814],2],[4815,2],[[4816,4822],2],[4823,3],[[4824,4846],2],[4847,2],[[4848,4878],2],[4879,2],[4880,2],[4881,3],[[4882,4885],2],[[4886,4887],3],[[4888,4894],2],[4895,2],[[4896,4934],2],[4935,2],[[4936,4954],2],[[4955,4956],3],[[4957,4958],2],[4959,2],[4960,2],[[4961,4988],2],[[4989,4991],3],[[4992,5007],2],[[5008,5017],2],[[5018,5023],3],[[5024,5108],2],[5109,2],[[5110,5111],3],[5112,1,\\\"Ᏸ\\\"],[5113,1,\\\"Ᏹ\\\"],[5114,1,\\\"Ᏺ\\\"],[5115,1,\\\"Ᏻ\\\"],[5116,1,\\\"Ᏼ\\\"],[5117,1,\\\"Ᏽ\\\"],[[5118,5119],3],[5120,2],[[5121,5740],2],[[5741,5742],2],[[5743,5750],2],[[5751,5759],2],[5760,3],[[5761,5786],2],[[5787,5788],2],[[5789,5791],3],[[5792,5866],2],[[5867,5872],2],[[5873,5880],2],[[5881,5887],3],[[5888,5900],2],[5901,3],[[5902,5908],2],[[5909,5919],3],[[5920,5940],2],[[5941,5942],2],[[5943,5951],3],[[5952,5971],2],[[5972,5983],3],[[5984,5996],2],[5997,3],[[5998,6000],2],[6001,3],[[6002,6003],2],[[6004,6015],3],[[6016,6067],2],[[6068,6069],3],[[6070,6099],2],[[6100,6102],2],[6103,2],[[6104,6107],2],[6108,2],[6109,2],[[6110,6111],3],[[6112,6121],2],[[6122,6127],3],[[6128,6137],2],[[6138,6143],3],[[6144,6149],2],[6150,3],[[6151,6154],2],[[6155,6157],7],[6158,3],[6159,3],[[6160,6169],2],[[6170,6175],3],[[6176,6263],2],[6264,2],[[6265,6271],3],[[6272,6313],2],[6314,2],[[6315,6319],3],[[6320,6389],2],[[6390,6399],3],[[6400,6428],2],[[6429,6430],2],[6431,3],[[6432,6443],2],[[6444,6447],3],[[6448,6459],2],[[6460,6463],3],[6464,2],[[6465,6467],3],[[6468,6469],2],[[6470,6509],2],[[6510,6511],3],[[6512,6516],2],[[6517,6527],3],[[6528,6569],2],[[6570,6571],2],[[6572,6575],3],[[6576,6601],2],[[6602,6607],3],[[6608,6617],2],[6618,2],[[6619,6621],3],[[6622,6623],2],[[6624,6655],2],[[6656,6683],2],[[6684,6685],3],[[6686,6687],2],[[6688,6750],2],[6751,3],[[6752,6780],2],[[6781,6782],3],[[6783,6793],2],[[6794,6799],3],[[6800,6809],2],[[6810,6815],3],[[6816,6822],2],[6823,2],[[6824,6829],2],[[6830,6831],3],[[6832,6845],2],[6846,2],[[6847,6911],3],[[6912,6987],2],[[6988,6991],3],[[6992,7001],2],[[7002,7018],2],[[7019,7027],2],[[7028,7036],2],[[7037,7039],3],[[7040,7082],2],[[7083,7085],2],[[7086,7097],2],[[7098,7103],2],[[7104,7155],2],[[7156,7163],3],[[7164,7167],2],[[7168,7223],2],[[7224,7226],3],[[7227,7231],2],[[7232,7241],2],[[7242,7244],3],[[7245,7293],2],[[7294,7295],2],[7296,1,\\\"в\\\"],[7297,1,\\\"д\\\"],[7298,1,\\\"о\\\"],[7299,1,\\\"с\\\"],[[7300,7301],1,\\\"т\\\"],[7302,1,\\\"ъ\\\"],[7303,1,\\\"ѣ\\\"],[7304,1,\\\"ꙋ\\\"],[[7305,7311],3],[7312,1,\\\"ა\\\"],[7313,1,\\\"ბ\\\"],[7314,1,\\\"გ\\\"],[7315,1,\\\"დ\\\"],[7316,1,\\\"ე\\\"],[7317,1,\\\"ვ\\\"],[7318,1,\\\"ზ\\\"],[7319,1,\\\"თ\\\"],[7320,1,\\\"ი\\\"],[7321,1,\\\"კ\\\"],[7322,1,\\\"ლ\\\"],[7323,1,\\\"მ\\\"],[7324,1,\\\"ნ\\\"],[7325,1,\\\"ო\\\"],[7326,1,\\\"პ\\\"],[7327,1,\\\"ჟ\\\"],[7328,1,\\\"რ\\\"],[7329,1,\\\"ს\\\"],[7330,1,\\\"ტ\\\"],[7331,1,\\\"უ\\\"],[7332,1,\\\"ფ\\\"],[7333,1,\\\"ქ\\\"],[7334,1,\\\"ღ\\\"],[7335,1,\\\"ყ\\\"],[7336,1,\\\"შ\\\"],[7337,1,\\\"ჩ\\\"],[7338,1,\\\"ც\\\"],[7339,1,\\\"ძ\\\"],[7340,1,\\\"წ\\\"],[7341,1,\\\"ჭ\\\"],[7342,1,\\\"ხ\\\"],[7343,1,\\\"ჯ\\\"],[7344,1,\\\"ჰ\\\"],[7345,1,\\\"ჱ\\\"],[7346,1,\\\"ჲ\\\"],[7347,1,\\\"ჳ\\\"],[7348,1,\\\"ჴ\\\"],[7349,1,\\\"ჵ\\\"],[7350,1,\\\"ჶ\\\"],[7351,1,\\\"ჷ\\\"],[7352,1,\\\"ჸ\\\"],[7353,1,\\\"ჹ\\\"],[7354,1,\\\"ჺ\\\"],[[7355,7356],3],[7357,1,\\\"ჽ\\\"],[7358,1,\\\"ჾ\\\"],[7359,1,\\\"ჿ\\\"],[[7360,7367],2],[[7368,7375],3],[[7376,7378],2],[7379,2],[[7380,7410],2],[[7411,7414],2],[7415,2],[[7416,7417],2],[7418,2],[[7419,7423],3],[[7424,7467],2],[7468,1,\\\"a\\\"],[7469,1,\\\"æ\\\"],[7470,1,\\\"b\\\"],[7471,2],[7472,1,\\\"d\\\"],[7473,1,\\\"e\\\"],[7474,1,\\\"ǝ\\\"],[7475,1,\\\"g\\\"],[7476,1,\\\"h\\\"],[7477,1,\\\"i\\\"],[7478,1,\\\"j\\\"],[7479,1,\\\"k\\\"],[7480,1,\\\"l\\\"],[7481,1,\\\"m\\\"],[7482,1,\\\"n\\\"],[7483,2],[7484,1,\\\"o\\\"],[7485,1,\\\"ȣ\\\"],[7486,1,\\\"p\\\"],[7487,1,\\\"r\\\"],[7488,1,\\\"t\\\"],[7489,1,\\\"u\\\"],[7490,1,\\\"w\\\"],[7491,1,\\\"a\\\"],[7492,1,\\\"ɐ\\\"],[7493,1,\\\"ɑ\\\"],[7494,1,\\\"ᴂ\\\"],[7495,1,\\\"b\\\"],[7496,1,\\\"d\\\"],[7497,1,\\\"e\\\"],[7498,1,\\\"ə\\\"],[7499,1,\\\"ɛ\\\"],[7500,1,\\\"ɜ\\\"],[7501,1,\\\"g\\\"],[7502,2],[7503,1,\\\"k\\\"],[7504,1,\\\"m\\\"],[7505,1,\\\"ŋ\\\"],[7506,1,\\\"o\\\"],[7507,1,\\\"ɔ\\\"],[7508,1,\\\"ᴖ\\\"],[7509,1,\\\"ᴗ\\\"],[7510,1,\\\"p\\\"],[7511,1,\\\"t\\\"],[7512,1,\\\"u\\\"],[7513,1,\\\"ᴝ\\\"],[7514,1,\\\"ɯ\\\"],[7515,1,\\\"v\\\"],[7516,1,\\\"ᴥ\\\"],[7517,1,\\\"β\\\"],[7518,1,\\\"γ\\\"],[7519,1,\\\"δ\\\"],[7520,1,\\\"φ\\\"],[7521,1,\\\"χ\\\"],[7522,1,\\\"i\\\"],[7523,1,\\\"r\\\"],[7524,1,\\\"u\\\"],[7525,1,\\\"v\\\"],[7526,1,\\\"β\\\"],[7527,1,\\\"γ\\\"],[7528,1,\\\"ρ\\\"],[7529,1,\\\"φ\\\"],[7530,1,\\\"χ\\\"],[7531,2],[[7532,7543],2],[7544,1,\\\"н\\\"],[[7545,7578],2],[7579,1,\\\"ɒ\\\"],[7580,1,\\\"c\\\"],[7581,1,\\\"ɕ\\\"],[7582,1,\\\"ð\\\"],[7583,1,\\\"ɜ\\\"],[7584,1,\\\"f\\\"],[7585,1,\\\"ɟ\\\"],[7586,1,\\\"ɡ\\\"],[7587,1,\\\"ɥ\\\"],[7588,1,\\\"ɨ\\\"],[7589,1,\\\"ɩ\\\"],[7590,1,\\\"ɪ\\\"],[7591,1,\\\"ᵻ\\\"],[7592,1,\\\"ʝ\\\"],[7593,1,\\\"ɭ\\\"],[7594,1,\\\"ᶅ\\\"],[7595,1,\\\"ʟ\\\"],[7596,1,\\\"ɱ\\\"],[7597,1,\\\"ɰ\\\"],[7598,1,\\\"ɲ\\\"],[7599,1,\\\"ɳ\\\"],[7600,1,\\\"ɴ\\\"],[7601,1,\\\"ɵ\\\"],[7602,1,\\\"ɸ\\\"],[7603,1,\\\"ʂ\\\"],[7604,1,\\\"ʃ\\\"],[7605,1,\\\"ƫ\\\"],[7606,1,\\\"ʉ\\\"],[7607,1,\\\"ʊ\\\"],[7608,1,\\\"ᴜ\\\"],[7609,1,\\\"ʋ\\\"],[7610,1,\\\"ʌ\\\"],[7611,1,\\\"z\\\"],[7612,1,\\\"ʐ\\\"],[7613,1,\\\"ʑ\\\"],[7614,1,\\\"ʒ\\\"],[7615,1,\\\"θ\\\"],[[7616,7619],2],[[7620,7626],2],[[7627,7654],2],[[7655,7669],2],[[7670,7673],2],[7674,3],[7675,2],[7676,2],[7677,2],[[7678,7679],2],[7680,1,\\\"ḁ\\\"],[7681,2],[7682,1,\\\"ḃ\\\"],[7683,2],[7684,1,\\\"ḅ\\\"],[7685,2],[7686,1,\\\"ḇ\\\"],[7687,2],[7688,1,\\\"ḉ\\\"],[7689,2],[7690,1,\\\"ḋ\\\"],[7691,2],[7692,1,\\\"ḍ\\\"],[7693,2],[7694,1,\\\"ḏ\\\"],[7695,2],[7696,1,\\\"ḑ\\\"],[7697,2],[7698,1,\\\"ḓ\\\"],[7699,2],[7700,1,\\\"ḕ\\\"],[7701,2],[7702,1,\\\"ḗ\\\"],[7703,2],[7704,1,\\\"ḙ\\\"],[7705,2],[7706,1,\\\"ḛ\\\"],[7707,2],[7708,1,\\\"ḝ\\\"],[7709,2],[7710,1,\\\"ḟ\\\"],[7711,2],[7712,1,\\\"ḡ\\\"],[7713,2],[7714,1,\\\"ḣ\\\"],[7715,2],[7716,1,\\\"ḥ\\\"],[7717,2],[7718,1,\\\"ḧ\\\"],[7719,2],[7720,1,\\\"ḩ\\\"],[7721,2],[7722,1,\\\"ḫ\\\"],[7723,2],[7724,1,\\\"ḭ\\\"],[7725,2],[7726,1,\\\"ḯ\\\"],[7727,2],[7728,1,\\\"ḱ\\\"],[7729,2],[7730,1,\\\"ḳ\\\"],[7731,2],[7732,1,\\\"ḵ\\\"],[7733,2],[7734,1,\\\"ḷ\\\"],[7735,2],[7736,1,\\\"ḹ\\\"],[7737,2],[7738,1,\\\"ḻ\\\"],[7739,2],[7740,1,\\\"ḽ\\\"],[7741,2],[7742,1,\\\"ḿ\\\"],[7743,2],[7744,1,\\\"ṁ\\\"],[7745,2],[7746,1,\\\"ṃ\\\"],[7747,2],[7748,1,\\\"ṅ\\\"],[7749,2],[7750,1,\\\"ṇ\\\"],[7751,2],[7752,1,\\\"ṉ\\\"],[7753,2],[7754,1,\\\"ṋ\\\"],[7755,2],[7756,1,\\\"ṍ\\\"],[7757,2],[7758,1,\\\"ṏ\\\"],[7759,2],[7760,1,\\\"ṑ\\\"],[7761,2],[7762,1,\\\"ṓ\\\"],[7763,2],[7764,1,\\\"ṕ\\\"],[7765,2],[7766,1,\\\"ṗ\\\"],[7767,2],[7768,1,\\\"ṙ\\\"],[7769,2],[7770,1,\\\"ṛ\\\"],[7771,2],[7772,1,\\\"ṝ\\\"],[7773,2],[7774,1,\\\"ṟ\\\"],[7775,2],[7776,1,\\\"ṡ\\\"],[7777,2],[7778,1,\\\"ṣ\\\"],[7779,2],[7780,1,\\\"ṥ\\\"],[7781,2],[7782,1,\\\"ṧ\\\"],[7783,2],[7784,1,\\\"ṩ\\\"],[7785,2],[7786,1,\\\"ṫ\\\"],[7787,2],[7788,1,\\\"ṭ\\\"],[7789,2],[7790,1,\\\"ṯ\\\"],[7791,2],[7792,1,\\\"ṱ\\\"],[7793,2],[7794,1,\\\"ṳ\\\"],[7795,2],[7796,1,\\\"ṵ\\\"],[7797,2],[7798,1,\\\"ṷ\\\"],[7799,2],[7800,1,\\\"ṹ\\\"],[7801,2],[7802,1,\\\"ṻ\\\"],[7803,2],[7804,1,\\\"ṽ\\\"],[7805,2],[7806,1,\\\"ṿ\\\"],[7807,2],[7808,1,\\\"ẁ\\\"],[7809,2],[7810,1,\\\"ẃ\\\"],[7811,2],[7812,1,\\\"ẅ\\\"],[7813,2],[7814,1,\\\"ẇ\\\"],[7815,2],[7816,1,\\\"ẉ\\\"],[7817,2],[7818,1,\\\"ẋ\\\"],[7819,2],[7820,1,\\\"ẍ\\\"],[7821,2],[7822,1,\\\"ẏ\\\"],[7823,2],[7824,1,\\\"ẑ\\\"],[7825,2],[7826,1,\\\"ẓ\\\"],[7827,2],[7828,1,\\\"ẕ\\\"],[[7829,7833],2],[7834,1,\\\"aʾ\\\"],[7835,1,\\\"ṡ\\\"],[[7836,7837],2],[7838,1,\\\"ss\\\"],[7839,2],[7840,1,\\\"ạ\\\"],[7841,2],[7842,1,\\\"ả\\\"],[7843,2],[7844,1,\\\"ấ\\\"],[7845,2],[7846,1,\\\"ầ\\\"],[7847,2],[7848,1,\\\"ẩ\\\"],[7849,2],[7850,1,\\\"ẫ\\\"],[7851,2],[7852,1,\\\"ậ\\\"],[7853,2],[7854,1,\\\"ắ\\\"],[7855,2],[7856,1,\\\"ằ\\\"],[7857,2],[7858,1,\\\"ẳ\\\"],[7859,2],[7860,1,\\\"ẵ\\\"],[7861,2],[7862,1,\\\"ặ\\\"],[7863,2],[7864,1,\\\"ẹ\\\"],[7865,2],[7866,1,\\\"ẻ\\\"],[7867,2],[7868,1,\\\"ẽ\\\"],[7869,2],[7870,1,\\\"ế\\\"],[7871,2],[7872,1,\\\"ề\\\"],[7873,2],[7874,1,\\\"ể\\\"],[7875,2],[7876,1,\\\"ễ\\\"],[7877,2],[7878,1,\\\"ệ\\\"],[7879,2],[7880,1,\\\"ỉ\\\"],[7881,2],[7882,1,\\\"ị\\\"],[7883,2],[7884,1,\\\"ọ\\\"],[7885,2],[7886,1,\\\"ỏ\\\"],[7887,2],[7888,1,\\\"ố\\\"],[7889,2],[7890,1,\\\"ồ\\\"],[7891,2],[7892,1,\\\"ổ\\\"],[7893,2],[7894,1,\\\"ỗ\\\"],[7895,2],[7896,1,\\\"ộ\\\"],[7897,2],[7898,1,\\\"ớ\\\"],[7899,2],[7900,1,\\\"ờ\\\"],[7901,2],[7902,1,\\\"ở\\\"],[7903,2],[7904,1,\\\"ỡ\\\"],[7905,2],[7906,1,\\\"ợ\\\"],[7907,2],[7908,1,\\\"ụ\\\"],[7909,2],[7910,1,\\\"ủ\\\"],[7911,2],[7912,1,\\\"ứ\\\"],[7913,2],[7914,1,\\\"ừ\\\"],[7915,2],[7916,1,\\\"ử\\\"],[7917,2],[7918,1,\\\"ữ\\\"],[7919,2],[7920,1,\\\"ự\\\"],[7921,2],[7922,1,\\\"ỳ\\\"],[7923,2],[7924,1,\\\"ỵ\\\"],[7925,2],[7926,1,\\\"ỷ\\\"],[7927,2],[7928,1,\\\"ỹ\\\"],[7929,2],[7930,1,\\\"ỻ\\\"],[7931,2],[7932,1,\\\"ỽ\\\"],[7933,2],[7934,1,\\\"ỿ\\\"],[7935,2],[[7936,7943],2],[7944,1,\\\"ἀ\\\"],[7945,1,\\\"ἁ\\\"],[7946,1,\\\"ἂ\\\"],[7947,1,\\\"ἃ\\\"],[7948,1,\\\"ἄ\\\"],[7949,1,\\\"ἅ\\\"],[7950,1,\\\"ἆ\\\"],[7951,1,\\\"ἇ\\\"],[[7952,7957],2],[[7958,7959],3],[7960,1,\\\"ἐ\\\"],[7961,1,\\\"ἑ\\\"],[7962,1,\\\"ἒ\\\"],[7963,1,\\\"ἓ\\\"],[7964,1,\\\"ἔ\\\"],[7965,1,\\\"ἕ\\\"],[[7966,7967],3],[[7968,7975],2],[7976,1,\\\"ἠ\\\"],[7977,1,\\\"ἡ\\\"],[7978,1,\\\"ἢ\\\"],[7979,1,\\\"ἣ\\\"],[7980,1,\\\"ἤ\\\"],[7981,1,\\\"ἥ\\\"],[7982,1,\\\"ἦ\\\"],[7983,1,\\\"ἧ\\\"],[[7984,7991],2],[7992,1,\\\"ἰ\\\"],[7993,1,\\\"ἱ\\\"],[7994,1,\\\"ἲ\\\"],[7995,1,\\\"ἳ\\\"],[7996,1,\\\"ἴ\\\"],[7997,1,\\\"ἵ\\\"],[7998,1,\\\"ἶ\\\"],[7999,1,\\\"ἷ\\\"],[[8000,8005],2],[[8006,8007],3],[8008,1,\\\"ὀ\\\"],[8009,1,\\\"ὁ\\\"],[8010,1,\\\"ὂ\\\"],[8011,1,\\\"ὃ\\\"],[8012,1,\\\"ὄ\\\"],[8013,1,\\\"ὅ\\\"],[[8014,8015],3],[[8016,8023],2],[8024,3],[8025,1,\\\"ὑ\\\"],[8026,3],[8027,1,\\\"ὓ\\\"],[8028,3],[8029,1,\\\"ὕ\\\"],[8030,3],[8031,1,\\\"ὗ\\\"],[[8032,8039],2],[8040,1,\\\"ὠ\\\"],[8041,1,\\\"ὡ\\\"],[8042,1,\\\"ὢ\\\"],[8043,1,\\\"ὣ\\\"],[8044,1,\\\"ὤ\\\"],[8045,1,\\\"ὥ\\\"],[8046,1,\\\"ὦ\\\"],[8047,1,\\\"ὧ\\\"],[8048,2],[8049,1,\\\"ά\\\"],[8050,2],[8051,1,\\\"έ\\\"],[8052,2],[8053,1,\\\"ή\\\"],[8054,2],[8055,1,\\\"ί\\\"],[8056,2],[8057,1,\\\"ό\\\"],[8058,2],[8059,1,\\\"ύ\\\"],[8060,2],[8061,1,\\\"ώ\\\"],[[8062,8063],3],[8064,1,\\\"ἀι\\\"],[8065,1,\\\"ἁι\\\"],[8066,1,\\\"ἂι\\\"],[8067,1,\\\"ἃι\\\"],[8068,1,\\\"ἄι\\\"],[8069,1,\\\"ἅι\\\"],[8070,1,\\\"ἆι\\\"],[8071,1,\\\"ἇι\\\"],[8072,1,\\\"ἀι\\\"],[8073,1,\\\"ἁι\\\"],[8074,1,\\\"ἂι\\\"],[8075,1,\\\"ἃι\\\"],[8076,1,\\\"ἄι\\\"],[8077,1,\\\"ἅι\\\"],[8078,1,\\\"ἆι\\\"],[8079,1,\\\"ἇι\\\"],[8080,1,\\\"ἠι\\\"],[8081,1,\\\"ἡι\\\"],[8082,1,\\\"ἢι\\\"],[8083,1,\\\"ἣι\\\"],[8084,1,\\\"ἤι\\\"],[8085,1,\\\"ἥι\\\"],[8086,1,\\\"ἦι\\\"],[8087,1,\\\"ἧι\\\"],[8088,1,\\\"ἠι\\\"],[8089,1,\\\"ἡι\\\"],[8090,1,\\\"ἢι\\\"],[8091,1,\\\"ἣι\\\"],[8092,1,\\\"ἤι\\\"],[8093,1,\\\"ἥι\\\"],[8094,1,\\\"ἦι\\\"],[8095,1,\\\"ἧι\\\"],[8096,1,\\\"ὠι\\\"],[8097,1,\\\"ὡι\\\"],[8098,1,\\\"ὢι\\\"],[8099,1,\\\"ὣι\\\"],[8100,1,\\\"ὤι\\\"],[8101,1,\\\"ὥι\\\"],[8102,1,\\\"ὦι\\\"],[8103,1,\\\"ὧι\\\"],[8104,1,\\\"ὠι\\\"],[8105,1,\\\"ὡι\\\"],[8106,1,\\\"ὢι\\\"],[8107,1,\\\"ὣι\\\"],[8108,1,\\\"ὤι\\\"],[8109,1,\\\"ὥι\\\"],[8110,1,\\\"ὦι\\\"],[8111,1,\\\"ὧι\\\"],[[8112,8113],2],[8114,1,\\\"ὰι\\\"],[8115,1,\\\"αι\\\"],[8116,1,\\\"άι\\\"],[8117,3],[8118,2],[8119,1,\\\"ᾶι\\\"],[8120,1,\\\"ᾰ\\\"],[8121,1,\\\"ᾱ\\\"],[8122,1,\\\"ὰ\\\"],[8123,1,\\\"ά\\\"],[8124,1,\\\"αι\\\"],[8125,5,\\\" ̓\\\"],[8126,1,\\\"ι\\\"],[8127,5,\\\" ̓\\\"],[8128,5,\\\" ͂\\\"],[8129,5,\\\" ̈͂\\\"],[8130,1,\\\"ὴι\\\"],[8131,1,\\\"ηι\\\"],[8132,1,\\\"ήι\\\"],[8133,3],[8134,2],[8135,1,\\\"ῆι\\\"],[8136,1,\\\"ὲ\\\"],[8137,1,\\\"έ\\\"],[8138,1,\\\"ὴ\\\"],[8139,1,\\\"ή\\\"],[8140,1,\\\"ηι\\\"],[8141,5,\\\" ̓̀\\\"],[8142,5,\\\" ̓́\\\"],[8143,5,\\\" ̓͂\\\"],[[8144,8146],2],[8147,1,\\\"ΐ\\\"],[[8148,8149],3],[[8150,8151],2],[8152,1,\\\"ῐ\\\"],[8153,1,\\\"ῑ\\\"],[8154,1,\\\"ὶ\\\"],[8155,1,\\\"ί\\\"],[8156,3],[8157,5,\\\" ̔̀\\\"],[8158,5,\\\" ̔́\\\"],[8159,5,\\\" ̔͂\\\"],[[8160,8162],2],[8163,1,\\\"ΰ\\\"],[[8164,8167],2],[8168,1,\\\"ῠ\\\"],[8169,1,\\\"ῡ\\\"],[8170,1,\\\"ὺ\\\"],[8171,1,\\\"ύ\\\"],[8172,1,\\\"ῥ\\\"],[8173,5,\\\" ̈̀\\\"],[8174,5,\\\" ̈́\\\"],[8175,5,\\\"`\\\"],[[8176,8177],3],[8178,1,\\\"ὼι\\\"],[8179,1,\\\"ωι\\\"],[8180,1,\\\"ώι\\\"],[8181,3],[8182,2],[8183,1,\\\"ῶι\\\"],[8184,1,\\\"ὸ\\\"],[8185,1,\\\"ό\\\"],[8186,1,\\\"ὼ\\\"],[8187,1,\\\"ώ\\\"],[8188,1,\\\"ωι\\\"],[8189,5,\\\" ́\\\"],[8190,5,\\\" ̔\\\"],[8191,3],[[8192,8202],5,\\\" \\\"],[8203,7],[[8204,8205],6,\\\"\\\"],[[8206,8207],3],[8208,2],[8209,1,\\\"‐\\\"],[[8210,8214],2],[8215,5,\\\" ̳\\\"],[[8216,8227],2],[[8228,8230],3],[8231,2],[[8232,8238],3],[8239,5,\\\" \\\"],[[8240,8242],2],[8243,1,\\\"′′\\\"],[8244,1,\\\"′′′\\\"],[8245,2],[8246,1,\\\"‵‵\\\"],[8247,1,\\\"‵‵‵\\\"],[[8248,8251],2],[8252,5,\\\"!!\\\"],[8253,2],[8254,5,\\\" ̅\\\"],[[8255,8262],2],[8263,5,\\\"??\\\"],[8264,5,\\\"?!\\\"],[8265,5,\\\"!?\\\"],[[8266,8269],2],[[8270,8274],2],[[8275,8276],2],[[8277,8278],2],[8279,1,\\\"′′′′\\\"],[[8280,8286],2],[8287,5,\\\" \\\"],[8288,7],[[8289,8291],3],[8292,7],[8293,3],[[8294,8297],3],[[8298,8303],3],[8304,1,\\\"0\\\"],[8305,1,\\\"i\\\"],[[8306,8307],3],[8308,1,\\\"4\\\"],[8309,1,\\\"5\\\"],[8310,1,\\\"6\\\"],[8311,1,\\\"7\\\"],[8312,1,\\\"8\\\"],[8313,1,\\\"9\\\"],[8314,5,\\\"+\\\"],[8315,1,\\\"−\\\"],[8316,5,\\\"=\\\"],[8317,5,\\\"(\\\"],[8318,5,\\\")\\\"],[8319,1,\\\"n\\\"],[8320,1,\\\"0\\\"],[8321,1,\\\"1\\\"],[8322,1,\\\"2\\\"],[8323,1,\\\"3\\\"],[8324,1,\\\"4\\\"],[8325,1,\\\"5\\\"],[8326,1,\\\"6\\\"],[8327,1,\\\"7\\\"],[8328,1,\\\"8\\\"],[8329,1,\\\"9\\\"],[8330,5,\\\"+\\\"],[8331,1,\\\"−\\\"],[8332,5,\\\"=\\\"],[8333,5,\\\"(\\\"],[8334,5,\\\")\\\"],[8335,3],[8336,1,\\\"a\\\"],[8337,1,\\\"e\\\"],[8338,1,\\\"o\\\"],[8339,1,\\\"x\\\"],[8340,1,\\\"ə\\\"],[8341,1,\\\"h\\\"],[8342,1,\\\"k\\\"],[8343,1,\\\"l\\\"],[8344,1,\\\"m\\\"],[8345,1,\\\"n\\\"],[8346,1,\\\"p\\\"],[8347,1,\\\"s\\\"],[8348,1,\\\"t\\\"],[[8349,8351],3],[[8352,8359],2],[8360,1,\\\"rs\\\"],[[8361,8362],2],[8363,2],[8364,2],[[8365,8367],2],[[8368,8369],2],[[8370,8373],2],[[8374,8376],2],[8377,2],[8378,2],[[8379,8381],2],[8382,2],[8383,2],[[8384,8399],3],[[8400,8417],2],[[8418,8419],2],[[8420,8426],2],[8427,2],[[8428,8431],2],[8432,2],[[8433,8447],3],[8448,5,\\\"a/c\\\"],[8449,5,\\\"a/s\\\"],[8450,1,\\\"c\\\"],[8451,1,\\\"°c\\\"],[8452,2],[8453,5,\\\"c/o\\\"],[8454,5,\\\"c/u\\\"],[8455,1,\\\"ɛ\\\"],[8456,2],[8457,1,\\\"°f\\\"],[8458,1,\\\"g\\\"],[[8459,8462],1,\\\"h\\\"],[8463,1,\\\"ħ\\\"],[[8464,8465],1,\\\"i\\\"],[[8466,8467],1,\\\"l\\\"],[8468,2],[8469,1,\\\"n\\\"],[8470,1,\\\"no\\\"],[[8471,8472],2],[8473,1,\\\"p\\\"],[8474,1,\\\"q\\\"],[[8475,8477],1,\\\"r\\\"],[[8478,8479],2],[8480,1,\\\"sm\\\"],[8481,1,\\\"tel\\\"],[8482,1,\\\"tm\\\"],[8483,2],[8484,1,\\\"z\\\"],[8485,2],[8486,1,\\\"ω\\\"],[8487,2],[8488,1,\\\"z\\\"],[8489,2],[8490,1,\\\"k\\\"],[8491,1,\\\"å\\\"],[8492,1,\\\"b\\\"],[8493,1,\\\"c\\\"],[8494,2],[[8495,8496],1,\\\"e\\\"],[8497,1,\\\"f\\\"],[8498,3],[8499,1,\\\"m\\\"],[8500,1,\\\"o\\\"],[8501,1,\\\"א\\\"],[8502,1,\\\"ב\\\"],[8503,1,\\\"ג\\\"],[8504,1,\\\"ד\\\"],[8505,1,\\\"i\\\"],[8506,2],[8507,1,\\\"fax\\\"],[8508,1,\\\"π\\\"],[[8509,8510],1,\\\"γ\\\"],[8511,1,\\\"π\\\"],[8512,1,\\\"∑\\\"],[[8513,8516],2],[[8517,8518],1,\\\"d\\\"],[8519,1,\\\"e\\\"],[8520,1,\\\"i\\\"],[8521,1,\\\"j\\\"],[[8522,8523],2],[8524,2],[8525,2],[8526,2],[8527,2],[8528,1,\\\"1⁄7\\\"],[8529,1,\\\"1⁄9\\\"],[8530,1,\\\"1⁄10\\\"],[8531,1,\\\"1⁄3\\\"],[8532,1,\\\"2⁄3\\\"],[8533,1,\\\"1⁄5\\\"],[8534,1,\\\"2⁄5\\\"],[8535,1,\\\"3⁄5\\\"],[8536,1,\\\"4⁄5\\\"],[8537,1,\\\"1⁄6\\\"],[8538,1,\\\"5⁄6\\\"],[8539,1,\\\"1⁄8\\\"],[8540,1,\\\"3⁄8\\\"],[8541,1,\\\"5⁄8\\\"],[8542,1,\\\"7⁄8\\\"],[8543,1,\\\"1⁄\\\"],[8544,1,\\\"i\\\"],[8545,1,\\\"ii\\\"],[8546,1,\\\"iii\\\"],[8547,1,\\\"iv\\\"],[8548,1,\\\"v\\\"],[8549,1,\\\"vi\\\"],[8550,1,\\\"vii\\\"],[8551,1,\\\"viii\\\"],[8552,1,\\\"ix\\\"],[8553,1,\\\"x\\\"],[8554,1,\\\"xi\\\"],[8555,1,\\\"xii\\\"],[8556,1,\\\"l\\\"],[8557,1,\\\"c\\\"],[8558,1,\\\"d\\\"],[8559,1,\\\"m\\\"],[8560,1,\\\"i\\\"],[8561,1,\\\"ii\\\"],[8562,1,\\\"iii\\\"],[8563,1,\\\"iv\\\"],[8564,1,\\\"v\\\"],[8565,1,\\\"vi\\\"],[8566,1,\\\"vii\\\"],[8567,1,\\\"viii\\\"],[8568,1,\\\"ix\\\"],[8569,1,\\\"x\\\"],[8570,1,\\\"xi\\\"],[8571,1,\\\"xii\\\"],[8572,1,\\\"l\\\"],[8573,1,\\\"c\\\"],[8574,1,\\\"d\\\"],[8575,1,\\\"m\\\"],[[8576,8578],2],[8579,3],[8580,2],[[8581,8584],2],[8585,1,\\\"0⁄3\\\"],[[8586,8587],2],[[8588,8591],3],[[8592,8682],2],[[8683,8691],2],[[8692,8703],2],[[8704,8747],2],[8748,1,\\\"∫∫\\\"],[8749,1,\\\"∫∫∫\\\"],[8750,2],[8751,1,\\\"∮∮\\\"],[8752,1,\\\"∮∮∮\\\"],[[8753,8799],2],[8800,4],[[8801,8813],2],[[8814,8815],4],[[8816,8945],2],[[8946,8959],2],[8960,2],[8961,2],[[8962,9000],2],[9001,1,\\\"〈\\\"],[9002,1,\\\"〉\\\"],[[9003,9082],2],[9083,2],[9084,2],[[9085,9114],2],[[9115,9166],2],[[9167,9168],2],[[9169,9179],2],[[9180,9191],2],[9192,2],[[9193,9203],2],[[9204,9210],2],[[9211,9214],2],[9215,2],[[9216,9252],2],[[9253,9254],2],[[9255,9279],3],[[9280,9290],2],[[9291,9311],3],[9312,1,\\\"1\\\"],[9313,1,\\\"2\\\"],[9314,1,\\\"3\\\"],[9315,1,\\\"4\\\"],[9316,1,\\\"5\\\"],[9317,1,\\\"6\\\"],[9318,1,\\\"7\\\"],[9319,1,\\\"8\\\"],[9320,1,\\\"9\\\"],[9321,1,\\\"10\\\"],[9322,1,\\\"11\\\"],[9323,1,\\\"12\\\"],[9324,1,\\\"13\\\"],[9325,1,\\\"14\\\"],[9326,1,\\\"15\\\"],[9327,1,\\\"16\\\"],[9328,1,\\\"17\\\"],[9329,1,\\\"18\\\"],[9330,1,\\\"19\\\"],[9331,1,\\\"20\\\"],[9332,5,\\\"(1)\\\"],[9333,5,\\\"(2)\\\"],[9334,5,\\\"(3)\\\"],[9335,5,\\\"(4)\\\"],[9336,5,\\\"(5)\\\"],[9337,5,\\\"(6)\\\"],[9338,5,\\\"(7)\\\"],[9339,5,\\\"(8)\\\"],[9340,5,\\\"(9)\\\"],[9341,5,\\\"(10)\\\"],[9342,5,\\\"(11)\\\"],[9343,5,\\\"(12)\\\"],[9344,5,\\\"(13)\\\"],[9345,5,\\\"(14)\\\"],[9346,5,\\\"(15)\\\"],[9347,5,\\\"(16)\\\"],[9348,5,\\\"(17)\\\"],[9349,5,\\\"(18)\\\"],[9350,5,\\\"(19)\\\"],[9351,5,\\\"(20)\\\"],[[9352,9371],3],[9372,5,\\\"(a)\\\"],[9373,5,\\\"(b)\\\"],[9374,5,\\\"(c)\\\"],[9375,5,\\\"(d)\\\"],[9376,5,\\\"(e)\\\"],[9377,5,\\\"(f)\\\"],[9378,5,\\\"(g)\\\"],[9379,5,\\\"(h)\\\"],[9380,5,\\\"(i)\\\"],[9381,5,\\\"(j)\\\"],[9382,5,\\\"(k)\\\"],[9383,5,\\\"(l)\\\"],[9384,5,\\\"(m)\\\"],[9385,5,\\\"(n)\\\"],[9386,5,\\\"(o)\\\"],[9387,5,\\\"(p)\\\"],[9388,5,\\\"(q)\\\"],[9389,5,\\\"(r)\\\"],[9390,5,\\\"(s)\\\"],[9391,5,\\\"(t)\\\"],[9392,5,\\\"(u)\\\"],[9393,5,\\\"(v)\\\"],[9394,5,\\\"(w)\\\"],[9395,5,\\\"(x)\\\"],[9396,5,\\\"(y)\\\"],[9397,5,\\\"(z)\\\"],[9398,1,\\\"a\\\"],[9399,1,\\\"b\\\"],[9400,1,\\\"c\\\"],[9401,1,\\\"d\\\"],[9402,1,\\\"e\\\"],[9403,1,\\\"f\\\"],[9404,1,\\\"g\\\"],[9405,1,\\\"h\\\"],[9406,1,\\\"i\\\"],[9407,1,\\\"j\\\"],[9408,1,\\\"k\\\"],[9409,1,\\\"l\\\"],[9410,1,\\\"m\\\"],[9411,1,\\\"n\\\"],[9412,1,\\\"o\\\"],[9413,1,\\\"p\\\"],[9414,1,\\\"q\\\"],[9415,1,\\\"r\\\"],[9416,1,\\\"s\\\"],[9417,1,\\\"t\\\"],[9418,1,\\\"u\\\"],[9419,1,\\\"v\\\"],[9420,1,\\\"w\\\"],[9421,1,\\\"x\\\"],[9422,1,\\\"y\\\"],[9423,1,\\\"z\\\"],[9424,1,\\\"a\\\"],[9425,1,\\\"b\\\"],[9426,1,\\\"c\\\"],[9427,1,\\\"d\\\"],[9428,1,\\\"e\\\"],[9429,1,\\\"f\\\"],[9430,1,\\\"g\\\"],[9431,1,\\\"h\\\"],[9432,1,\\\"i\\\"],[9433,1,\\\"j\\\"],[9434,1,\\\"k\\\"],[9435,1,\\\"l\\\"],[9436,1,\\\"m\\\"],[9437,1,\\\"n\\\"],[9438,1,\\\"o\\\"],[9439,1,\\\"p\\\"],[9440,1,\\\"q\\\"],[9441,1,\\\"r\\\"],[9442,1,\\\"s\\\"],[9443,1,\\\"t\\\"],[9444,1,\\\"u\\\"],[9445,1,\\\"v\\\"],[9446,1,\\\"w\\\"],[9447,1,\\\"x\\\"],[9448,1,\\\"y\\\"],[9449,1,\\\"z\\\"],[9450,1,\\\"0\\\"],[[9451,9470],2],[9471,2],[[9472,9621],2],[[9622,9631],2],[[9632,9711],2],[[9712,9719],2],[[9720,9727],2],[[9728,9747],2],[[9748,9749],2],[[9750,9751],2],[9752,2],[9753,2],[[9754,9839],2],[[9840,9841],2],[[9842,9853],2],[[9854,9855],2],[[9856,9865],2],[[9866,9873],2],[[9874,9884],2],[9885,2],[[9886,9887],2],[[9888,9889],2],[[9890,9905],2],[9906,2],[[9907,9916],2],[[9917,9919],2],[[9920,9923],2],[[9924,9933],2],[9934,2],[[9935,9953],2],[9954,2],[9955,2],[[9956,9959],2],[[9960,9983],2],[9984,2],[[9985,9988],2],[9989,2],[[9990,9993],2],[[9994,9995],2],[[9996,10023],2],[10024,2],[[10025,10059],2],[10060,2],[10061,2],[10062,2],[[10063,10066],2],[[10067,10069],2],[10070,2],[10071,2],[[10072,10078],2],[[10079,10080],2],[[10081,10087],2],[[10088,10101],2],[[10102,10132],2],[[10133,10135],2],[[10136,10159],2],[10160,2],[[10161,10174],2],[10175,2],[[10176,10182],2],[[10183,10186],2],[10187,2],[10188,2],[10189,2],[[10190,10191],2],[[10192,10219],2],[[10220,10223],2],[[10224,10239],2],[[10240,10495],2],[[10496,10763],2],[10764,1,\\\"∫∫∫∫\\\"],[[10765,10867],2],[10868,5,\\\"::=\\\"],[10869,5,\\\"==\\\"],[10870,5,\\\"===\\\"],[[10871,10971],2],[10972,1,\\\"⫝̸\\\"],[[10973,11007],2],[[11008,11021],2],[[11022,11027],2],[[11028,11034],2],[[11035,11039],2],[[11040,11043],2],[[11044,11084],2],[[11085,11087],2],[[11088,11092],2],[[11093,11097],2],[[11098,11123],2],[[11124,11125],3],[[11126,11157],2],[[11158,11159],3],[[11160,11193],2],[[11194,11196],2],[[11197,11208],2],[11209,2],[[11210,11217],2],[11218,2],[[11219,11243],2],[[11244,11247],2],[[11248,11262],2],[11263,2],[11264,1,\\\"ⰰ\\\"],[11265,1,\\\"ⰱ\\\"],[11266,1,\\\"ⰲ\\\"],[11267,1,\\\"ⰳ\\\"],[11268,1,\\\"ⰴ\\\"],[11269,1,\\\"ⰵ\\\"],[11270,1,\\\"ⰶ\\\"],[11271,1,\\\"ⰷ\\\"],[11272,1,\\\"ⰸ\\\"],[11273,1,\\\"ⰹ\\\"],[11274,1,\\\"ⰺ\\\"],[11275,1,\\\"ⰻ\\\"],[11276,1,\\\"ⰼ\\\"],[11277,1,\\\"ⰽ\\\"],[11278,1,\\\"ⰾ\\\"],[11279,1,\\\"ⰿ\\\"],[11280,1,\\\"ⱀ\\\"],[11281,1,\\\"ⱁ\\\"],[11282,1,\\\"ⱂ\\\"],[11283,1,\\\"ⱃ\\\"],[11284,1,\\\"ⱄ\\\"],[11285,1,\\\"ⱅ\\\"],[11286,1,\\\"ⱆ\\\"],[11287,1,\\\"ⱇ\\\"],[11288,1,\\\"ⱈ\\\"],[11289,1,\\\"ⱉ\\\"],[11290,1,\\\"ⱊ\\\"],[11291,1,\\\"ⱋ\\\"],[11292,1,\\\"ⱌ\\\"],[11293,1,\\\"ⱍ\\\"],[11294,1,\\\"ⱎ\\\"],[11295,1,\\\"ⱏ\\\"],[11296,1,\\\"ⱐ\\\"],[11297,1,\\\"ⱑ\\\"],[11298,1,\\\"ⱒ\\\"],[11299,1,\\\"ⱓ\\\"],[11300,1,\\\"ⱔ\\\"],[11301,1,\\\"ⱕ\\\"],[11302,1,\\\"ⱖ\\\"],[11303,1,\\\"ⱗ\\\"],[11304,1,\\\"ⱘ\\\"],[11305,1,\\\"ⱙ\\\"],[11306,1,\\\"ⱚ\\\"],[11307,1,\\\"ⱛ\\\"],[11308,1,\\\"ⱜ\\\"],[11309,1,\\\"ⱝ\\\"],[11310,1,\\\"ⱞ\\\"],[11311,3],[[11312,11358],2],[11359,3],[11360,1,\\\"ⱡ\\\"],[11361,2],[11362,1,\\\"ɫ\\\"],[11363,1,\\\"ᵽ\\\"],[11364,1,\\\"ɽ\\\"],[[11365,11366],2],[11367,1,\\\"ⱨ\\\"],[11368,2],[11369,1,\\\"ⱪ\\\"],[11370,2],[11371,1,\\\"ⱬ\\\"],[11372,2],[11373,1,\\\"ɑ\\\"],[11374,1,\\\"ɱ\\\"],[11375,1,\\\"ɐ\\\"],[11376,1,\\\"ɒ\\\"],[11377,2],[11378,1,\\\"ⱳ\\\"],[11379,2],[11380,2],[11381,1,\\\"ⱶ\\\"],[[11382,11383],2],[[11384,11387],2],[11388,1,\\\"j\\\"],[11389,1,\\\"v\\\"],[11390,1,\\\"ȿ\\\"],[11391,1,\\\"ɀ\\\"],[11392,1,\\\"ⲁ\\\"],[11393,2],[11394,1,\\\"ⲃ\\\"],[11395,2],[11396,1,\\\"ⲅ\\\"],[11397,2],[11398,1,\\\"ⲇ\\\"],[11399,2],[11400,1,\\\"ⲉ\\\"],[11401,2],[11402,1,\\\"ⲋ\\\"],[11403,2],[11404,1,\\\"ⲍ\\\"],[11405,2],[11406,1,\\\"ⲏ\\\"],[11407,2],[11408,1,\\\"ⲑ\\\"],[11409,2],[11410,1,\\\"ⲓ\\\"],[11411,2],[11412,1,\\\"ⲕ\\\"],[11413,2],[11414,1,\\\"ⲗ\\\"],[11415,2],[11416,1,\\\"ⲙ\\\"],[11417,2],[11418,1,\\\"ⲛ\\\"],[11419,2],[11420,1,\\\"ⲝ\\\"],[11421,2],[11422,1,\\\"ⲟ\\\"],[11423,2],[11424,1,\\\"ⲡ\\\"],[11425,2],[11426,1,\\\"ⲣ\\\"],[11427,2],[11428,1,\\\"ⲥ\\\"],[11429,2],[11430,1,\\\"ⲧ\\\"],[11431,2],[11432,1,\\\"ⲩ\\\"],[11433,2],[11434,1,\\\"ⲫ\\\"],[11435,2],[11436,1,\\\"ⲭ\\\"],[11437,2],[11438,1,\\\"ⲯ\\\"],[11439,2],[11440,1,\\\"ⲱ\\\"],[11441,2],[11442,1,\\\"ⲳ\\\"],[11443,2],[11444,1,\\\"ⲵ\\\"],[11445,2],[11446,1,\\\"ⲷ\\\"],[11447,2],[11448,1,\\\"ⲹ\\\"],[11449,2],[11450,1,\\\"ⲻ\\\"],[11451,2],[11452,1,\\\"ⲽ\\\"],[11453,2],[11454,1,\\\"ⲿ\\\"],[11455,2],[11456,1,\\\"ⳁ\\\"],[11457,2],[11458,1,\\\"ⳃ\\\"],[11459,2],[11460,1,\\\"ⳅ\\\"],[11461,2],[11462,1,\\\"ⳇ\\\"],[11463,2],[11464,1,\\\"ⳉ\\\"],[11465,2],[11466,1,\\\"ⳋ\\\"],[11467,2],[11468,1,\\\"ⳍ\\\"],[11469,2],[11470,1,\\\"ⳏ\\\"],[11471,2],[11472,1,\\\"ⳑ\\\"],[11473,2],[11474,1,\\\"ⳓ\\\"],[11475,2],[11476,1,\\\"ⳕ\\\"],[11477,2],[11478,1,\\\"ⳗ\\\"],[11479,2],[11480,1,\\\"ⳙ\\\"],[11481,2],[11482,1,\\\"ⳛ\\\"],[11483,2],[11484,1,\\\"ⳝ\\\"],[11485,2],[11486,1,\\\"ⳟ\\\"],[11487,2],[11488,1,\\\"ⳡ\\\"],[11489,2],[11490,1,\\\"ⳣ\\\"],[[11491,11492],2],[[11493,11498],2],[11499,1,\\\"ⳬ\\\"],[11500,2],[11501,1,\\\"ⳮ\\\"],[[11502,11505],2],[11506,1,\\\"ⳳ\\\"],[11507,2],[[11508,11512],3],[[11513,11519],2],[[11520,11557],2],[11558,3],[11559,2],[[11560,11564],3],[11565,2],[[11566,11567],3],[[11568,11621],2],[[11622,11623],2],[[11624,11630],3],[11631,1,\\\"ⵡ\\\"],[11632,2],[[11633,11646],3],[11647,2],[[11648,11670],2],[[11671,11679],3],[[11680,11686],2],[11687,3],[[11688,11694],2],[11695,3],[[11696,11702],2],[11703,3],[[11704,11710],2],[11711,3],[[11712,11718],2],[11719,3],[[11720,11726],2],[11727,3],[[11728,11734],2],[11735,3],[[11736,11742],2],[11743,3],[[11744,11775],2],[[11776,11799],2],[[11800,11803],2],[[11804,11805],2],[[11806,11822],2],[11823,2],[11824,2],[11825,2],[[11826,11835],2],[[11836,11842],2],[[11843,11844],2],[[11845,11849],2],[[11850,11854],2],[11855,2],[[11856,11903],3],[[11904,11929],2],[11930,3],[[11931,11934],2],[11935,1,\\\"母\\\"],[[11936,12018],2],[12019,1,\\\"龟\\\"],[[12020,12031],3],[12032,1,\\\"一\\\"],[12033,1,\\\"丨\\\"],[12034,1,\\\"丶\\\"],[12035,1,\\\"丿\\\"],[12036,1,\\\"乙\\\"],[12037,1,\\\"亅\\\"],[12038,1,\\\"二\\\"],[12039,1,\\\"亠\\\"],[12040,1,\\\"人\\\"],[12041,1,\\\"儿\\\"],[12042,1,\\\"入\\\"],[12043,1,\\\"八\\\"],[12044,1,\\\"冂\\\"],[12045,1,\\\"冖\\\"],[12046,1,\\\"冫\\\"],[12047,1,\\\"几\\\"],[12048,1,\\\"凵\\\"],[12049,1,\\\"刀\\\"],[12050,1,\\\"力\\\"],[12051,1,\\\"勹\\\"],[12052,1,\\\"匕\\\"],[12053,1,\\\"匚\\\"],[12054,1,\\\"匸\\\"],[12055,1,\\\"十\\\"],[12056,1,\\\"卜\\\"],[12057,1,\\\"卩\\\"],[12058,1,\\\"厂\\\"],[12059,1,\\\"厶\\\"],[12060,1,\\\"又\\\"],[12061,1,\\\"口\\\"],[12062,1,\\\"囗\\\"],[12063,1,\\\"土\\\"],[12064,1,\\\"士\\\"],[12065,1,\\\"夂\\\"],[12066,1,\\\"夊\\\"],[12067,1,\\\"夕\\\"],[12068,1,\\\"大\\\"],[12069,1,\\\"女\\\"],[12070,1,\\\"子\\\"],[12071,1,\\\"宀\\\"],[12072,1,\\\"寸\\\"],[12073,1,\\\"小\\\"],[12074,1,\\\"尢\\\"],[12075,1,\\\"尸\\\"],[12076,1,\\\"屮\\\"],[12077,1,\\\"山\\\"],[12078,1,\\\"巛\\\"],[12079,1,\\\"工\\\"],[12080,1,\\\"己\\\"],[12081,1,\\\"巾\\\"],[12082,1,\\\"干\\\"],[12083,1,\\\"幺\\\"],[12084,1,\\\"广\\\"],[12085,1,\\\"廴\\\"],[12086,1,\\\"廾\\\"],[12087,1,\\\"弋\\\"],[12088,1,\\\"弓\\\"],[12089,1,\\\"彐\\\"],[12090,1,\\\"彡\\\"],[12091,1,\\\"彳\\\"],[12092,1,\\\"心\\\"],[12093,1,\\\"戈\\\"],[12094,1,\\\"戶\\\"],[12095,1,\\\"手\\\"],[12096,1,\\\"支\\\"],[12097,1,\\\"攴\\\"],[12098,1,\\\"文\\\"],[12099,1,\\\"斗\\\"],[12100,1,\\\"斤\\\"],[12101,1,\\\"方\\\"],[12102,1,\\\"无\\\"],[12103,1,\\\"日\\\"],[12104,1,\\\"曰\\\"],[12105,1,\\\"月\\\"],[12106,1,\\\"木\\\"],[12107,1,\\\"欠\\\"],[12108,1,\\\"止\\\"],[12109,1,\\\"歹\\\"],[12110,1,\\\"殳\\\"],[12111,1,\\\"毋\\\"],[12112,1,\\\"比\\\"],[12113,1,\\\"毛\\\"],[12114,1,\\\"氏\\\"],[12115,1,\\\"气\\\"],[12116,1,\\\"水\\\"],[12117,1,\\\"火\\\"],[12118,1,\\\"爪\\\"],[12119,1,\\\"父\\\"],[12120,1,\\\"爻\\\"],[12121,1,\\\"爿\\\"],[12122,1,\\\"片\\\"],[12123,1,\\\"牙\\\"],[12124,1,\\\"牛\\\"],[12125,1,\\\"犬\\\"],[12126,1,\\\"玄\\\"],[12127,1,\\\"玉\\\"],[12128,1,\\\"瓜\\\"],[12129,1,\\\"瓦\\\"],[12130,1,\\\"甘\\\"],[12131,1,\\\"生\\\"],[12132,1,\\\"用\\\"],[12133,1,\\\"田\\\"],[12134,1,\\\"疋\\\"],[12135,1,\\\"疒\\\"],[12136,1,\\\"癶\\\"],[12137,1,\\\"白\\\"],[12138,1,\\\"皮\\\"],[12139,1,\\\"皿\\\"],[12140,1,\\\"目\\\"],[12141,1,\\\"矛\\\"],[12142,1,\\\"矢\\\"],[12143,1,\\\"石\\\"],[12144,1,\\\"示\\\"],[12145,1,\\\"禸\\\"],[12146,1,\\\"禾\\\"],[12147,1,\\\"穴\\\"],[12148,1,\\\"立\\\"],[12149,1,\\\"竹\\\"],[12150,1,\\\"米\\\"],[12151,1,\\\"糸\\\"],[12152,1,\\\"缶\\\"],[12153,1,\\\"网\\\"],[12154,1,\\\"羊\\\"],[12155,1,\\\"羽\\\"],[12156,1,\\\"老\\\"],[12157,1,\\\"而\\\"],[12158,1,\\\"耒\\\"],[12159,1,\\\"耳\\\"],[12160,1,\\\"聿\\\"],[12161,1,\\\"肉\\\"],[12162,1,\\\"臣\\\"],[12163,1,\\\"自\\\"],[12164,1,\\\"至\\\"],[12165,1,\\\"臼\\\"],[12166,1,\\\"舌\\\"],[12167,1,\\\"舛\\\"],[12168,1,\\\"舟\\\"],[12169,1,\\\"艮\\\"],[12170,1,\\\"色\\\"],[12171,1,\\\"艸\\\"],[12172,1,\\\"虍\\\"],[12173,1,\\\"虫\\\"],[12174,1,\\\"血\\\"],[12175,1,\\\"行\\\"],[12176,1,\\\"衣\\\"],[12177,1,\\\"襾\\\"],[12178,1,\\\"見\\\"],[12179,1,\\\"角\\\"],[12180,1,\\\"言\\\"],[12181,1,\\\"谷\\\"],[12182,1,\\\"豆\\\"],[12183,1,\\\"豕\\\"],[12184,1,\\\"豸\\\"],[12185,1,\\\"貝\\\"],[12186,1,\\\"赤\\\"],[12187,1,\\\"走\\\"],[12188,1,\\\"足\\\"],[12189,1,\\\"身\\\"],[12190,1,\\\"車\\\"],[12191,1,\\\"辛\\\"],[12192,1,\\\"辰\\\"],[12193,1,\\\"辵\\\"],[12194,1,\\\"邑\\\"],[12195,1,\\\"酉\\\"],[12196,1,\\\"釆\\\"],[12197,1,\\\"里\\\"],[12198,1,\\\"金\\\"],[12199,1,\\\"長\\\"],[12200,1,\\\"門\\\"],[12201,1,\\\"阜\\\"],[12202,1,\\\"隶\\\"],[12203,1,\\\"隹\\\"],[12204,1,\\\"雨\\\"],[12205,1,\\\"靑\\\"],[12206,1,\\\"非\\\"],[12207,1,\\\"面\\\"],[12208,1,\\\"革\\\"],[12209,1,\\\"韋\\\"],[12210,1,\\\"韭\\\"],[12211,1,\\\"音\\\"],[12212,1,\\\"頁\\\"],[12213,1,\\\"風\\\"],[12214,1,\\\"飛\\\"],[12215,1,\\\"食\\\"],[12216,1,\\\"首\\\"],[12217,1,\\\"香\\\"],[12218,1,\\\"馬\\\"],[12219,1,\\\"骨\\\"],[12220,1,\\\"高\\\"],[12221,1,\\\"髟\\\"],[12222,1,\\\"鬥\\\"],[12223,1,\\\"鬯\\\"],[12224,1,\\\"鬲\\\"],[12225,1,\\\"鬼\\\"],[12226,1,\\\"魚\\\"],[12227,1,\\\"鳥\\\"],[12228,1,\\\"鹵\\\"],[12229,1,\\\"鹿\\\"],[12230,1,\\\"麥\\\"],[12231,1,\\\"麻\\\"],[12232,1,\\\"黃\\\"],[12233,1,\\\"黍\\\"],[12234,1,\\\"黑\\\"],[12235,1,\\\"黹\\\"],[12236,1,\\\"黽\\\"],[12237,1,\\\"鼎\\\"],[12238,1,\\\"鼓\\\"],[12239,1,\\\"鼠\\\"],[12240,1,\\\"鼻\\\"],[12241,1,\\\"齊\\\"],[12242,1,\\\"齒\\\"],[12243,1,\\\"龍\\\"],[12244,1,\\\"龜\\\"],[12245,1,\\\"龠\\\"],[[12246,12271],3],[[12272,12283],3],[[12284,12287],3],[12288,5,\\\" \\\"],[12289,2],[12290,1,\\\".\\\"],[[12291,12292],2],[[12293,12295],2],[[12296,12329],2],[[12330,12333],2],[[12334,12341],2],[12342,1,\\\"〒\\\"],[12343,2],[12344,1,\\\"十\\\"],[12345,1,\\\"卄\\\"],[12346,1,\\\"卅\\\"],[12347,2],[12348,2],[12349,2],[12350,2],[12351,2],[12352,3],[[12353,12436],2],[[12437,12438],2],[[12439,12440],3],[[12441,12442],2],[12443,5,\\\" ゙\\\"],[12444,5,\\\" ゚\\\"],[[12445,12446],2],[12447,1,\\\"より\\\"],[12448,2],[[12449,12542],2],[12543,1,\\\"コト\\\"],[[12544,12548],3],[[12549,12588],2],[12589,2],[12590,2],[12591,2],[12592,3],[12593,1,\\\"ᄀ\\\"],[12594,1,\\\"ᄁ\\\"],[12595,1,\\\"ᆪ\\\"],[12596,1,\\\"ᄂ\\\"],[12597,1,\\\"ᆬ\\\"],[12598,1,\\\"ᆭ\\\"],[12599,1,\\\"ᄃ\\\"],[12600,1,\\\"ᄄ\\\"],[12601,1,\\\"ᄅ\\\"],[12602,1,\\\"ᆰ\\\"],[12603,1,\\\"ᆱ\\\"],[12604,1,\\\"ᆲ\\\"],[12605,1,\\\"ᆳ\\\"],[12606,1,\\\"ᆴ\\\"],[12607,1,\\\"ᆵ\\\"],[12608,1,\\\"ᄚ\\\"],[12609,1,\\\"ᄆ\\\"],[12610,1,\\\"ᄇ\\\"],[12611,1,\\\"ᄈ\\\"],[12612,1,\\\"ᄡ\\\"],[12613,1,\\\"ᄉ\\\"],[12614,1,\\\"ᄊ\\\"],[12615,1,\\\"ᄋ\\\"],[12616,1,\\\"ᄌ\\\"],[12617,1,\\\"ᄍ\\\"],[12618,1,\\\"ᄎ\\\"],[12619,1,\\\"ᄏ\\\"],[12620,1,\\\"ᄐ\\\"],[12621,1,\\\"ᄑ\\\"],[12622,1,\\\"ᄒ\\\"],[12623,1,\\\"ᅡ\\\"],[12624,1,\\\"ᅢ\\\"],[12625,1,\\\"ᅣ\\\"],[12626,1,\\\"ᅤ\\\"],[12627,1,\\\"ᅥ\\\"],[12628,1,\\\"ᅦ\\\"],[12629,1,\\\"ᅧ\\\"],[12630,1,\\\"ᅨ\\\"],[12631,1,\\\"ᅩ\\\"],[12632,1,\\\"ᅪ\\\"],[12633,1,\\\"ᅫ\\\"],[12634,1,\\\"ᅬ\\\"],[12635,1,\\\"ᅭ\\\"],[12636,1,\\\"ᅮ\\\"],[12637,1,\\\"ᅯ\\\"],[12638,1,\\\"ᅰ\\\"],[12639,1,\\\"ᅱ\\\"],[12640,1,\\\"ᅲ\\\"],[12641,1,\\\"ᅳ\\\"],[12642,1,\\\"ᅴ\\\"],[12643,1,\\\"ᅵ\\\"],[12644,3],[12645,1,\\\"ᄔ\\\"],[12646,1,\\\"ᄕ\\\"],[12647,1,\\\"ᇇ\\\"],[12648,1,\\\"ᇈ\\\"],[12649,1,\\\"ᇌ\\\"],[12650,1,\\\"ᇎ\\\"],[12651,1,\\\"ᇓ\\\"],[12652,1,\\\"ᇗ\\\"],[12653,1,\\\"ᇙ\\\"],[12654,1,\\\"ᄜ\\\"],[12655,1,\\\"ᇝ\\\"],[12656,1,\\\"ᇟ\\\"],[12657,1,\\\"ᄝ\\\"],[12658,1,\\\"ᄞ\\\"],[12659,1,\\\"ᄠ\\\"],[12660,1,\\\"ᄢ\\\"],[12661,1,\\\"ᄣ\\\"],[12662,1,\\\"ᄧ\\\"],[12663,1,\\\"ᄩ\\\"],[12664,1,\\\"ᄫ\\\"],[12665,1,\\\"ᄬ\\\"],[12666,1,\\\"ᄭ\\\"],[12667,1,\\\"ᄮ\\\"],[12668,1,\\\"ᄯ\\\"],[12669,1,\\\"ᄲ\\\"],[12670,1,\\\"ᄶ\\\"],[12671,1,\\\"ᅀ\\\"],[12672,1,\\\"ᅇ\\\"],[12673,1,\\\"ᅌ\\\"],[12674,1,\\\"ᇱ\\\"],[12675,1,\\\"ᇲ\\\"],[12676,1,\\\"ᅗ\\\"],[12677,1,\\\"ᅘ\\\"],[12678,1,\\\"ᅙ\\\"],[12679,1,\\\"ᆄ\\\"],[12680,1,\\\"ᆅ\\\"],[12681,1,\\\"ᆈ\\\"],[12682,1,\\\"ᆑ\\\"],[12683,1,\\\"ᆒ\\\"],[12684,1,\\\"ᆔ\\\"],[12685,1,\\\"ᆞ\\\"],[12686,1,\\\"ᆡ\\\"],[12687,3],[[12688,12689],2],[12690,1,\\\"一\\\"],[12691,1,\\\"二\\\"],[12692,1,\\\"三\\\"],[12693,1,\\\"四\\\"],[12694,1,\\\"上\\\"],[12695,1,\\\"中\\\"],[12696,1,\\\"下\\\"],[12697,1,\\\"甲\\\"],[12698,1,\\\"乙\\\"],[12699,1,\\\"丙\\\"],[12700,1,\\\"丁\\\"],[12701,1,\\\"天\\\"],[12702,1,\\\"地\\\"],[12703,1,\\\"人\\\"],[[12704,12727],2],[[12728,12730],2],[[12731,12735],3],[[12736,12751],2],[[12752,12771],2],[[12772,12783],3],[[12784,12799],2],[12800,5,\\\"(ᄀ)\\\"],[12801,5,\\\"(ᄂ)\\\"],[12802,5,\\\"(ᄃ)\\\"],[12803,5,\\\"(ᄅ)\\\"],[12804,5,\\\"(ᄆ)\\\"],[12805,5,\\\"(ᄇ)\\\"],[12806,5,\\\"(ᄉ)\\\"],[12807,5,\\\"(ᄋ)\\\"],[12808,5,\\\"(ᄌ)\\\"],[12809,5,\\\"(ᄎ)\\\"],[12810,5,\\\"(ᄏ)\\\"],[12811,5,\\\"(ᄐ)\\\"],[12812,5,\\\"(ᄑ)\\\"],[12813,5,\\\"(ᄒ)\\\"],[12814,5,\\\"(가)\\\"],[12815,5,\\\"(나)\\\"],[12816,5,\\\"(다)\\\"],[12817,5,\\\"(라)\\\"],[12818,5,\\\"(마)\\\"],[12819,5,\\\"(바)\\\"],[12820,5,\\\"(사)\\\"],[12821,5,\\\"(아)\\\"],[12822,5,\\\"(자)\\\"],[12823,5,\\\"(차)\\\"],[12824,5,\\\"(카)\\\"],[12825,5,\\\"(타)\\\"],[12826,5,\\\"(파)\\\"],[12827,5,\\\"(하)\\\"],[12828,5,\\\"(주)\\\"],[12829,5,\\\"(오전)\\\"],[12830,5,\\\"(오후)\\\"],[12831,3],[12832,5,\\\"(一)\\\"],[12833,5,\\\"(二)\\\"],[12834,5,\\\"(三)\\\"],[12835,5,\\\"(四)\\\"],[12836,5,\\\"(五)\\\"],[12837,5,\\\"(六)\\\"],[12838,5,\\\"(七)\\\"],[12839,5,\\\"(八)\\\"],[12840,5,\\\"(九)\\\"],[12841,5,\\\"(十)\\\"],[12842,5,\\\"(月)\\\"],[12843,5,\\\"(火)\\\"],[12844,5,\\\"(水)\\\"],[12845,5,\\\"(木)\\\"],[12846,5,\\\"(金)\\\"],[12847,5,\\\"(土)\\\"],[12848,5,\\\"(日)\\\"],[12849,5,\\\"(株)\\\"],[12850,5,\\\"(有)\\\"],[12851,5,\\\"(社)\\\"],[12852,5,\\\"(名)\\\"],[12853,5,\\\"(特)\\\"],[12854,5,\\\"(財)\\\"],[12855,5,\\\"(祝)\\\"],[12856,5,\\\"(労)\\\"],[12857,5,\\\"(代)\\\"],[12858,5,\\\"(呼)\\\"],[12859,5,\\\"(学)\\\"],[12860,5,\\\"(監)\\\"],[12861,5,\\\"(企)\\\"],[12862,5,\\\"(資)\\\"],[12863,5,\\\"(協)\\\"],[12864,5,\\\"(祭)\\\"],[12865,5,\\\"(休)\\\"],[12866,5,\\\"(自)\\\"],[12867,5,\\\"(至)\\\"],[12868,1,\\\"問\\\"],[12869,1,\\\"幼\\\"],[12870,1,\\\"文\\\"],[12871,1,\\\"箏\\\"],[[12872,12879],2],[12880,1,\\\"pte\\\"],[12881,1,\\\"21\\\"],[12882,1,\\\"22\\\"],[12883,1,\\\"23\\\"],[12884,1,\\\"24\\\"],[12885,1,\\\"25\\\"],[12886,1,\\\"26\\\"],[12887,1,\\\"27\\\"],[12888,1,\\\"28\\\"],[12889,1,\\\"29\\\"],[12890,1,\\\"30\\\"],[12891,1,\\\"31\\\"],[12892,1,\\\"32\\\"],[12893,1,\\\"33\\\"],[12894,1,\\\"34\\\"],[12895,1,\\\"35\\\"],[12896,1,\\\"ᄀ\\\"],[12897,1,\\\"ᄂ\\\"],[12898,1,\\\"ᄃ\\\"],[12899,1,\\\"ᄅ\\\"],[12900,1,\\\"ᄆ\\\"],[12901,1,\\\"ᄇ\\\"],[12902,1,\\\"ᄉ\\\"],[12903,1,\\\"ᄋ\\\"],[12904,1,\\\"ᄌ\\\"],[12905,1,\\\"ᄎ\\\"],[12906,1,\\\"ᄏ\\\"],[12907,1,\\\"ᄐ\\\"],[12908,1,\\\"ᄑ\\\"],[12909,1,\\\"ᄒ\\\"],[12910,1,\\\"가\\\"],[12911,1,\\\"나\\\"],[12912,1,\\\"다\\\"],[12913,1,\\\"라\\\"],[12914,1,\\\"마\\\"],[12915,1,\\\"바\\\"],[12916,1,\\\"사\\\"],[12917,1,\\\"아\\\"],[12918,1,\\\"자\\\"],[12919,1,\\\"차\\\"],[12920,1,\\\"카\\\"],[12921,1,\\\"타\\\"],[12922,1,\\\"파\\\"],[12923,1,\\\"하\\\"],[12924,1,\\\"참고\\\"],[12925,1,\\\"주의\\\"],[12926,1,\\\"우\\\"],[12927,2],[12928,1,\\\"一\\\"],[12929,1,\\\"二\\\"],[12930,1,\\\"三\\\"],[12931,1,\\\"四\\\"],[12932,1,\\\"五\\\"],[12933,1,\\\"六\\\"],[12934,1,\\\"七\\\"],[12935,1,\\\"八\\\"],[12936,1,\\\"九\\\"],[12937,1,\\\"十\\\"],[12938,1,\\\"月\\\"],[12939,1,\\\"火\\\"],[12940,1,\\\"水\\\"],[12941,1,\\\"木\\\"],[12942,1,\\\"金\\\"],[12943,1,\\\"土\\\"],[12944,1,\\\"日\\\"],[12945,1,\\\"株\\\"],[12946,1,\\\"有\\\"],[12947,1,\\\"社\\\"],[12948,1,\\\"名\\\"],[12949,1,\\\"特\\\"],[12950,1,\\\"財\\\"],[12951,1,\\\"祝\\\"],[12952,1,\\\"労\\\"],[12953,1,\\\"秘\\\"],[12954,1,\\\"男\\\"],[12955,1,\\\"女\\\"],[12956,1,\\\"適\\\"],[12957,1,\\\"優\\\"],[12958,1,\\\"印\\\"],[12959,1,\\\"注\\\"],[12960,1,\\\"項\\\"],[12961,1,\\\"休\\\"],[12962,1,\\\"写\\\"],[12963,1,\\\"正\\\"],[12964,1,\\\"上\\\"],[12965,1,\\\"中\\\"],[12966,1,\\\"下\\\"],[12967,1,\\\"左\\\"],[12968,1,\\\"右\\\"],[12969,1,\\\"医\\\"],[12970,1,\\\"宗\\\"],[12971,1,\\\"学\\\"],[12972,1,\\\"監\\\"],[12973,1,\\\"企\\\"],[12974,1,\\\"資\\\"],[12975,1,\\\"協\\\"],[12976,1,\\\"夜\\\"],[12977,1,\\\"36\\\"],[12978,1,\\\"37\\\"],[12979,1,\\\"38\\\"],[12980,1,\\\"39\\\"],[12981,1,\\\"40\\\"],[12982,1,\\\"41\\\"],[12983,1,\\\"42\\\"],[12984,1,\\\"43\\\"],[12985,1,\\\"44\\\"],[12986,1,\\\"45\\\"],[12987,1,\\\"46\\\"],[12988,1,\\\"47\\\"],[12989,1,\\\"48\\\"],[12990,1,\\\"49\\\"],[12991,1,\\\"50\\\"],[12992,1,\\\"1月\\\"],[12993,1,\\\"2月\\\"],[12994,1,\\\"3月\\\"],[12995,1,\\\"4月\\\"],[12996,1,\\\"5月\\\"],[12997,1,\\\"6月\\\"],[12998,1,\\\"7月\\\"],[12999,1,\\\"8月\\\"],[13000,1,\\\"9月\\\"],[13001,1,\\\"10月\\\"],[13002,1,\\\"11月\\\"],[13003,1,\\\"12月\\\"],[13004,1,\\\"hg\\\"],[13005,1,\\\"erg\\\"],[13006,1,\\\"ev\\\"],[13007,1,\\\"ltd\\\"],[13008,1,\\\"ア\\\"],[13009,1,\\\"イ\\\"],[13010,1,\\\"ウ\\\"],[13011,1,\\\"エ\\\"],[13012,1,\\\"オ\\\"],[13013,1,\\\"カ\\\"],[13014,1,\\\"キ\\\"],[13015,1,\\\"ク\\\"],[13016,1,\\\"ケ\\\"],[13017,1,\\\"コ\\\"],[13018,1,\\\"サ\\\"],[13019,1,\\\"シ\\\"],[13020,1,\\\"ス\\\"],[13021,1,\\\"セ\\\"],[13022,1,\\\"ソ\\\"],[13023,1,\\\"タ\\\"],[13024,1,\\\"チ\\\"],[13025,1,\\\"ツ\\\"],[13026,1,\\\"テ\\\"],[13027,1,\\\"ト\\\"],[13028,1,\\\"ナ\\\"],[13029,1,\\\"ニ\\\"],[13030,1,\\\"ヌ\\\"],[13031,1,\\\"ネ\\\"],[13032,1,\\\"ノ\\\"],[13033,1,\\\"ハ\\\"],[13034,1,\\\"ヒ\\\"],[13035,1,\\\"フ\\\"],[13036,1,\\\"ヘ\\\"],[13037,1,\\\"ホ\\\"],[13038,1,\\\"マ\\\"],[13039,1,\\\"ミ\\\"],[13040,1,\\\"ム\\\"],[13041,1,\\\"メ\\\"],[13042,1,\\\"モ\\\"],[13043,1,\\\"ヤ\\\"],[13044,1,\\\"ユ\\\"],[13045,1,\\\"ヨ\\\"],[13046,1,\\\"ラ\\\"],[13047,1,\\\"リ\\\"],[13048,1,\\\"ル\\\"],[13049,1,\\\"レ\\\"],[13050,1,\\\"ロ\\\"],[13051,1,\\\"ワ\\\"],[13052,1,\\\"ヰ\\\"],[13053,1,\\\"ヱ\\\"],[13054,1,\\\"ヲ\\\"],[13055,1,\\\"令和\\\"],[13056,1,\\\"アパート\\\"],[13057,1,\\\"アルファ\\\"],[13058,1,\\\"アンペア\\\"],[13059,1,\\\"アール\\\"],[13060,1,\\\"イニング\\\"],[13061,1,\\\"インチ\\\"],[13062,1,\\\"ウォン\\\"],[13063,1,\\\"エスクード\\\"],[13064,1,\\\"エーカー\\\"],[13065,1,\\\"オンス\\\"],[13066,1,\\\"オーム\\\"],[13067,1,\\\"カイリ\\\"],[13068,1,\\\"カラット\\\"],[13069,1,\\\"カロリー\\\"],[13070,1,\\\"ガロン\\\"],[13071,1,\\\"ガンマ\\\"],[13072,1,\\\"ギガ\\\"],[13073,1,\\\"ギニー\\\"],[13074,1,\\\"キュリー\\\"],[13075,1,\\\"ギルダー\\\"],[13076,1,\\\"キロ\\\"],[13077,1,\\\"キログラム\\\"],[13078,1,\\\"キロメートル\\\"],[13079,1,\\\"キロワット\\\"],[13080,1,\\\"グラム\\\"],[13081,1,\\\"グラムトン\\\"],[13082,1,\\\"クルゼイロ\\\"],[13083,1,\\\"クローネ\\\"],[13084,1,\\\"ケース\\\"],[13085,1,\\\"コルナ\\\"],[13086,1,\\\"コーポ\\\"],[13087,1,\\\"サイクル\\\"],[13088,1,\\\"サンチーム\\\"],[13089,1,\\\"シリング\\\"],[13090,1,\\\"センチ\\\"],[13091,1,\\\"セント\\\"],[13092,1,\\\"ダース\\\"],[13093,1,\\\"デシ\\\"],[13094,1,\\\"ドル\\\"],[13095,1,\\\"トン\\\"],[13096,1,\\\"ナノ\\\"],[13097,1,\\\"ノット\\\"],[13098,1,\\\"ハイツ\\\"],[13099,1,\\\"パーセント\\\"],[13100,1,\\\"パーツ\\\"],[13101,1,\\\"バーレル\\\"],[13102,1,\\\"ピアストル\\\"],[13103,1,\\\"ピクル\\\"],[13104,1,\\\"ピコ\\\"],[13105,1,\\\"ビル\\\"],[13106,1,\\\"ファラッド\\\"],[13107,1,\\\"フィート\\\"],[13108,1,\\\"ブッシェル\\\"],[13109,1,\\\"フラン\\\"],[13110,1,\\\"ヘクタール\\\"],[13111,1,\\\"ペソ\\\"],[13112,1,\\\"ペニヒ\\\"],[13113,1,\\\"ヘルツ\\\"],[13114,1,\\\"ペンス\\\"],[13115,1,\\\"ページ\\\"],[13116,1,\\\"ベータ\\\"],[13117,1,\\\"ポイント\\\"],[13118,1,\\\"ボルト\\\"],[13119,1,\\\"ホン\\\"],[13120,1,\\\"ポンド\\\"],[13121,1,\\\"ホール\\\"],[13122,1,\\\"ホーン\\\"],[13123,1,\\\"マイクロ\\\"],[13124,1,\\\"マイル\\\"],[13125,1,\\\"マッハ\\\"],[13126,1,\\\"マルク\\\"],[13127,1,\\\"マンション\\\"],[13128,1,\\\"ミクロン\\\"],[13129,1,\\\"ミリ\\\"],[13130,1,\\\"ミリバール\\\"],[13131,1,\\\"メガ\\\"],[13132,1,\\\"メガトン\\\"],[13133,1,\\\"メートル\\\"],[13134,1,\\\"ヤード\\\"],[13135,1,\\\"ヤール\\\"],[13136,1,\\\"ユアン\\\"],[13137,1,\\\"リットル\\\"],[13138,1,\\\"リラ\\\"],[13139,1,\\\"ルピー\\\"],[13140,1,\\\"ルーブル\\\"],[13141,1,\\\"レム\\\"],[13142,1,\\\"レントゲン\\\"],[13143,1,\\\"ワット\\\"],[13144,1,\\\"0点\\\"],[13145,1,\\\"1点\\\"],[13146,1,\\\"2点\\\"],[13147,1,\\\"3点\\\"],[13148,1,\\\"4点\\\"],[13149,1,\\\"5点\\\"],[13150,1,\\\"6点\\\"],[13151,1,\\\"7点\\\"],[13152,1,\\\"8点\\\"],[13153,1,\\\"9点\\\"],[13154,1,\\\"10点\\\"],[13155,1,\\\"11点\\\"],[13156,1,\\\"12点\\\"],[13157,1,\\\"13点\\\"],[13158,1,\\\"14点\\\"],[13159,1,\\\"15点\\\"],[13160,1,\\\"16点\\\"],[13161,1,\\\"17点\\\"],[13162,1,\\\"18点\\\"],[13163,1,\\\"19点\\\"],[13164,1,\\\"20点\\\"],[13165,1,\\\"21点\\\"],[13166,1,\\\"22点\\\"],[13167,1,\\\"23点\\\"],[13168,1,\\\"24点\\\"],[13169,1,\\\"hpa\\\"],[13170,1,\\\"da\\\"],[13171,1,\\\"au\\\"],[13172,1,\\\"bar\\\"],[13173,1,\\\"ov\\\"],[13174,1,\\\"pc\\\"],[13175,1,\\\"dm\\\"],[13176,1,\\\"dm2\\\"],[13177,1,\\\"dm3\\\"],[13178,1,\\\"iu\\\"],[13179,1,\\\"平成\\\"],[13180,1,\\\"昭和\\\"],[13181,1,\\\"大正\\\"],[13182,1,\\\"明治\\\"],[13183,1,\\\"株式会社\\\"],[13184,1,\\\"pa\\\"],[13185,1,\\\"na\\\"],[13186,1,\\\"μa\\\"],[13187,1,\\\"ma\\\"],[13188,1,\\\"ka\\\"],[13189,1,\\\"kb\\\"],[13190,1,\\\"mb\\\"],[13191,1,\\\"gb\\\"],[13192,1,\\\"cal\\\"],[13193,1,\\\"kcal\\\"],[13194,1,\\\"pf\\\"],[13195,1,\\\"nf\\\"],[13196,1,\\\"μf\\\"],[13197,1,\\\"μg\\\"],[13198,1,\\\"mg\\\"],[13199,1,\\\"kg\\\"],[13200,1,\\\"hz\\\"],[13201,1,\\\"khz\\\"],[13202,1,\\\"mhz\\\"],[13203,1,\\\"ghz\\\"],[13204,1,\\\"thz\\\"],[13205,1,\\\"μl\\\"],[13206,1,\\\"ml\\\"],[13207,1,\\\"dl\\\"],[13208,1,\\\"kl\\\"],[13209,1,\\\"fm\\\"],[13210,1,\\\"nm\\\"],[13211,1,\\\"μm\\\"],[13212,1,\\\"mm\\\"],[13213,1,\\\"cm\\\"],[13214,1,\\\"km\\\"],[13215,1,\\\"mm2\\\"],[13216,1,\\\"cm2\\\"],[13217,1,\\\"m2\\\"],[13218,1,\\\"km2\\\"],[13219,1,\\\"mm3\\\"],[13220,1,\\\"cm3\\\"],[13221,1,\\\"m3\\\"],[13222,1,\\\"km3\\\"],[13223,1,\\\"m∕s\\\"],[13224,1,\\\"m∕s2\\\"],[13225,1,\\\"pa\\\"],[13226,1,\\\"kpa\\\"],[13227,1,\\\"mpa\\\"],[13228,1,\\\"gpa\\\"],[13229,1,\\\"rad\\\"],[13230,1,\\\"rad∕s\\\"],[13231,1,\\\"rad∕s2\\\"],[13232,1,\\\"ps\\\"],[13233,1,\\\"ns\\\"],[13234,1,\\\"μs\\\"],[13235,1,\\\"ms\\\"],[13236,1,\\\"pv\\\"],[13237,1,\\\"nv\\\"],[13238,1,\\\"μv\\\"],[13239,1,\\\"mv\\\"],[13240,1,\\\"kv\\\"],[13241,1,\\\"mv\\\"],[13242,1,\\\"pw\\\"],[13243,1,\\\"nw\\\"],[13244,1,\\\"μw\\\"],[13245,1,\\\"mw\\\"],[13246,1,\\\"kw\\\"],[13247,1,\\\"mw\\\"],[13248,1,\\\"kω\\\"],[13249,1,\\\"mω\\\"],[13250,3],[13251,1,\\\"bq\\\"],[13252,1,\\\"cc\\\"],[13253,1,\\\"cd\\\"],[13254,1,\\\"c∕kg\\\"],[13255,3],[13256,1,\\\"db\\\"],[13257,1,\\\"gy\\\"],[13258,1,\\\"ha\\\"],[13259,1,\\\"hp\\\"],[13260,1,\\\"in\\\"],[13261,1,\\\"kk\\\"],[13262,1,\\\"km\\\"],[13263,1,\\\"kt\\\"],[13264,1,\\\"lm\\\"],[13265,1,\\\"ln\\\"],[13266,1,\\\"log\\\"],[13267,1,\\\"lx\\\"],[13268,1,\\\"mb\\\"],[13269,1,\\\"mil\\\"],[13270,1,\\\"mol\\\"],[13271,1,\\\"ph\\\"],[13272,3],[13273,1,\\\"ppm\\\"],[13274,1,\\\"pr\\\"],[13275,1,\\\"sr\\\"],[13276,1,\\\"sv\\\"],[13277,1,\\\"wb\\\"],[13278,1,\\\"v∕m\\\"],[13279,1,\\\"a∕m\\\"],[13280,1,\\\"1日\\\"],[13281,1,\\\"2日\\\"],[13282,1,\\\"3日\\\"],[13283,1,\\\"4日\\\"],[13284,1,\\\"5日\\\"],[13285,1,\\\"6日\\\"],[13286,1,\\\"7日\\\"],[13287,1,\\\"8日\\\"],[13288,1,\\\"9日\\\"],[13289,1,\\\"10日\\\"],[13290,1,\\\"11日\\\"],[13291,1,\\\"12日\\\"],[13292,1,\\\"13日\\\"],[13293,1,\\\"14日\\\"],[13294,1,\\\"15日\\\"],[13295,1,\\\"16日\\\"],[13296,1,\\\"17日\\\"],[13297,1,\\\"18日\\\"],[13298,1,\\\"19日\\\"],[13299,1,\\\"20日\\\"],[13300,1,\\\"21日\\\"],[13301,1,\\\"22日\\\"],[13302,1,\\\"23日\\\"],[13303,1,\\\"24日\\\"],[13304,1,\\\"25日\\\"],[13305,1,\\\"26日\\\"],[13306,1,\\\"27日\\\"],[13307,1,\\\"28日\\\"],[13308,1,\\\"29日\\\"],[13309,1,\\\"30日\\\"],[13310,1,\\\"31日\\\"],[13311,1,\\\"gal\\\"],[[13312,19893],2],[[19894,19903],3],[[19904,19967],2],[[19968,40869],2],[[40870,40891],2],[[40892,40899],2],[[40900,40907],2],[40908,2],[[40909,40917],2],[[40918,40938],2],[[40939,40943],2],[[40944,40959],3],[[40960,42124],2],[[42125,42127],3],[[42128,42145],2],[[42146,42147],2],[[42148,42163],2],[42164,2],[[42165,42176],2],[42177,2],[[42178,42180],2],[42181,2],[42182,2],[[42183,42191],3],[[42192,42237],2],[[42238,42239],2],[[42240,42508],2],[[42509,42511],2],[[42512,42539],2],[[42540,42559],3],[42560,1,\\\"ꙁ\\\"],[42561,2],[42562,1,\\\"ꙃ\\\"],[42563,2],[42564,1,\\\"ꙅ\\\"],[42565,2],[42566,1,\\\"ꙇ\\\"],[42567,2],[42568,1,\\\"ꙉ\\\"],[42569,2],[42570,1,\\\"ꙋ\\\"],[42571,2],[42572,1,\\\"ꙍ\\\"],[42573,2],[42574,1,\\\"ꙏ\\\"],[42575,2],[42576,1,\\\"ꙑ\\\"],[42577,2],[42578,1,\\\"ꙓ\\\"],[42579,2],[42580,1,\\\"ꙕ\\\"],[42581,2],[42582,1,\\\"ꙗ\\\"],[42583,2],[42584,1,\\\"ꙙ\\\"],[42585,2],[42586,1,\\\"ꙛ\\\"],[42587,2],[42588,1,\\\"ꙝ\\\"],[42589,2],[42590,1,\\\"ꙟ\\\"],[42591,2],[42592,1,\\\"ꙡ\\\"],[42593,2],[42594,1,\\\"ꙣ\\\"],[42595,2],[42596,1,\\\"ꙥ\\\"],[42597,2],[42598,1,\\\"ꙧ\\\"],[42599,2],[42600,1,\\\"ꙩ\\\"],[42601,2],[42602,1,\\\"ꙫ\\\"],[42603,2],[42604,1,\\\"ꙭ\\\"],[[42605,42607],2],[[42608,42611],2],[[42612,42619],2],[[42620,42621],2],[42622,2],[42623,2],[42624,1,\\\"ꚁ\\\"],[42625,2],[42626,1,\\\"ꚃ\\\"],[42627,2],[42628,1,\\\"ꚅ\\\"],[42629,2],[42630,1,\\\"ꚇ\\\"],[42631,2],[42632,1,\\\"ꚉ\\\"],[42633,2],[42634,1,\\\"ꚋ\\\"],[42635,2],[42636,1,\\\"ꚍ\\\"],[42637,2],[42638,1,\\\"ꚏ\\\"],[42639,2],[42640,1,\\\"ꚑ\\\"],[42641,2],[42642,1,\\\"ꚓ\\\"],[42643,2],[42644,1,\\\"ꚕ\\\"],[42645,2],[42646,1,\\\"ꚗ\\\"],[42647,2],[42648,1,\\\"ꚙ\\\"],[42649,2],[42650,1,\\\"ꚛ\\\"],[42651,2],[42652,1,\\\"ъ\\\"],[42653,1,\\\"ь\\\"],[42654,2],[42655,2],[[42656,42725],2],[[42726,42735],2],[[42736,42737],2],[[42738,42743],2],[[42744,42751],3],[[42752,42774],2],[[42775,42778],2],[[42779,42783],2],[[42784,42785],2],[42786,1,\\\"ꜣ\\\"],[42787,2],[42788,1,\\\"ꜥ\\\"],[42789,2],[42790,1,\\\"ꜧ\\\"],[42791,2],[42792,1,\\\"ꜩ\\\"],[42793,2],[42794,1,\\\"ꜫ\\\"],[42795,2],[42796,1,\\\"ꜭ\\\"],[42797,2],[42798,1,\\\"ꜯ\\\"],[[42799,42801],2],[42802,1,\\\"ꜳ\\\"],[42803,2],[42804,1,\\\"ꜵ\\\"],[42805,2],[42806,1,\\\"ꜷ\\\"],[42807,2],[42808,1,\\\"ꜹ\\\"],[42809,2],[42810,1,\\\"ꜻ\\\"],[42811,2],[42812,1,\\\"ꜽ\\\"],[42813,2],[42814,1,\\\"ꜿ\\\"],[42815,2],[42816,1,\\\"ꝁ\\\"],[42817,2],[42818,1,\\\"ꝃ\\\"],[42819,2],[42820,1,\\\"ꝅ\\\"],[42821,2],[42822,1,\\\"ꝇ\\\"],[42823,2],[42824,1,\\\"ꝉ\\\"],[42825,2],[42826,1,\\\"ꝋ\\\"],[42827,2],[42828,1,\\\"ꝍ\\\"],[42829,2],[42830,1,\\\"ꝏ\\\"],[42831,2],[42832,1,\\\"ꝑ\\\"],[42833,2],[42834,1,\\\"ꝓ\\\"],[42835,2],[42836,1,\\\"ꝕ\\\"],[42837,2],[42838,1,\\\"ꝗ\\\"],[42839,2],[42840,1,\\\"ꝙ\\\"],[42841,2],[42842,1,\\\"ꝛ\\\"],[42843,2],[42844,1,\\\"ꝝ\\\"],[42845,2],[42846,1,\\\"ꝟ\\\"],[42847,2],[42848,1,\\\"ꝡ\\\"],[42849,2],[42850,1,\\\"ꝣ\\\"],[42851,2],[42852,1,\\\"ꝥ\\\"],[42853,2],[42854,1,\\\"ꝧ\\\"],[42855,2],[42856,1,\\\"ꝩ\\\"],[42857,2],[42858,1,\\\"ꝫ\\\"],[42859,2],[42860,1,\\\"ꝭ\\\"],[42861,2],[42862,1,\\\"ꝯ\\\"],[42863,2],[42864,1,\\\"ꝯ\\\"],[[42865,42872],2],[42873,1,\\\"ꝺ\\\"],[42874,2],[42875,1,\\\"ꝼ\\\"],[42876,2],[42877,1,\\\"ᵹ\\\"],[42878,1,\\\"ꝿ\\\"],[42879,2],[42880,1,\\\"ꞁ\\\"],[42881,2],[42882,1,\\\"ꞃ\\\"],[42883,2],[42884,1,\\\"ꞅ\\\"],[42885,2],[42886,1,\\\"ꞇ\\\"],[[42887,42888],2],[[42889,42890],2],[42891,1,\\\"ꞌ\\\"],[42892,2],[42893,1,\\\"ɥ\\\"],[42894,2],[42895,2],[42896,1,\\\"ꞑ\\\"],[42897,2],[42898,1,\\\"ꞓ\\\"],[42899,2],[[42900,42901],2],[42902,1,\\\"ꞗ\\\"],[42903,2],[42904,1,\\\"ꞙ\\\"],[42905,2],[42906,1,\\\"ꞛ\\\"],[42907,2],[42908,1,\\\"ꞝ\\\"],[42909,2],[42910,1,\\\"ꞟ\\\"],[42911,2],[42912,1,\\\"ꞡ\\\"],[42913,2],[42914,1,\\\"ꞣ\\\"],[42915,2],[42916,1,\\\"ꞥ\\\"],[42917,2],[42918,1,\\\"ꞧ\\\"],[42919,2],[42920,1,\\\"ꞩ\\\"],[42921,2],[42922,1,\\\"ɦ\\\"],[42923,1,\\\"ɜ\\\"],[42924,1,\\\"ɡ\\\"],[42925,1,\\\"ɬ\\\"],[42926,1,\\\"ɪ\\\"],[42927,2],[42928,1,\\\"ʞ\\\"],[42929,1,\\\"ʇ\\\"],[42930,1,\\\"ʝ\\\"],[42931,1,\\\"ꭓ\\\"],[42932,1,\\\"ꞵ\\\"],[42933,2],[42934,1,\\\"ꞷ\\\"],[42935,2],[42936,1,\\\"ꞹ\\\"],[42937,2],[42938,1,\\\"ꞻ\\\"],[42939,2],[42940,1,\\\"ꞽ\\\"],[42941,2],[42942,1,\\\"ꞿ\\\"],[42943,2],[[42944,42945],3],[42946,1,\\\"ꟃ\\\"],[42947,2],[42948,1,\\\"ꞔ\\\"],[42949,1,\\\"ʂ\\\"],[42950,1,\\\"ᶎ\\\"],[[42951,42998],3],[42999,2],[43000,1,\\\"ħ\\\"],[43001,1,\\\"œ\\\"],[43002,2],[[43003,43007],2],[[43008,43047],2],[[43048,43051],2],[[43052,43055],3],[[43056,43065],2],[[43066,43071],3],[[43072,43123],2],[[43124,43127],2],[[43128,43135],3],[[43136,43204],2],[43205,2],[[43206,43213],3],[[43214,43215],2],[[43216,43225],2],[[43226,43231],3],[[43232,43255],2],[[43256,43258],2],[43259,2],[43260,2],[43261,2],[[43262,43263],2],[[43264,43309],2],[[43310,43311],2],[[43312,43347],2],[[43348,43358],3],[43359,2],[[43360,43388],2],[[43389,43391],3],[[43392,43456],2],[[43457,43469],2],[43470,3],[[43471,43481],2],[[43482,43485],3],[[43486,43487],2],[[43488,43518],2],[43519,3],[[43520,43574],2],[[43575,43583],3],[[43584,43597],2],[[43598,43599],3],[[43600,43609],2],[[43610,43611],3],[[43612,43615],2],[[43616,43638],2],[[43639,43641],2],[[43642,43643],2],[[43644,43647],2],[[43648,43714],2],[[43715,43738],3],[[43739,43741],2],[[43742,43743],2],[[43744,43759],2],[[43760,43761],2],[[43762,43766],2],[[43767,43776],3],[[43777,43782],2],[[43783,43784],3],[[43785,43790],2],[[43791,43792],3],[[43793,43798],2],[[43799,43807],3],[[43808,43814],2],[43815,3],[[43816,43822],2],[43823,3],[[43824,43866],2],[43867,2],[43868,1,\\\"ꜧ\\\"],[43869,1,\\\"ꬷ\\\"],[43870,1,\\\"ɫ\\\"],[43871,1,\\\"ꭒ\\\"],[[43872,43875],2],[[43876,43877],2],[[43878,43879],2],[[43880,43887],3],[43888,1,\\\"Ꭰ\\\"],[43889,1,\\\"Ꭱ\\\"],[43890,1,\\\"Ꭲ\\\"],[43891,1,\\\"Ꭳ\\\"],[43892,1,\\\"Ꭴ\\\"],[43893,1,\\\"Ꭵ\\\"],[43894,1,\\\"Ꭶ\\\"],[43895,1,\\\"Ꭷ\\\"],[43896,1,\\\"Ꭸ\\\"],[43897,1,\\\"Ꭹ\\\"],[43898,1,\\\"Ꭺ\\\"],[43899,1,\\\"Ꭻ\\\"],[43900,1,\\\"Ꭼ\\\"],[43901,1,\\\"Ꭽ\\\"],[43902,1,\\\"Ꭾ\\\"],[43903,1,\\\"Ꭿ\\\"],[43904,1,\\\"Ꮀ\\\"],[43905,1,\\\"Ꮁ\\\"],[43906,1,\\\"Ꮂ\\\"],[43907,1,\\\"Ꮃ\\\"],[43908,1,\\\"Ꮄ\\\"],[43909,1,\\\"Ꮅ\\\"],[43910,1,\\\"Ꮆ\\\"],[43911,1,\\\"Ꮇ\\\"],[43912,1,\\\"Ꮈ\\\"],[43913,1,\\\"Ꮉ\\\"],[43914,1,\\\"Ꮊ\\\"],[43915,1,\\\"Ꮋ\\\"],[43916,1,\\\"Ꮌ\\\"],[43917,1,\\\"Ꮍ\\\"],[43918,1,\\\"Ꮎ\\\"],[43919,1,\\\"Ꮏ\\\"],[43920,1,\\\"Ꮐ\\\"],[43921,1,\\\"Ꮑ\\\"],[43922,1,\\\"Ꮒ\\\"],[43923,1,\\\"Ꮓ\\\"],[43924,1,\\\"Ꮔ\\\"],[43925,1,\\\"Ꮕ\\\"],[43926,1,\\\"Ꮖ\\\"],[43927,1,\\\"Ꮗ\\\"],[43928,1,\\\"Ꮘ\\\"],[43929,1,\\\"Ꮙ\\\"],[43930,1,\\\"Ꮚ\\\"],[43931,1,\\\"Ꮛ\\\"],[43932,1,\\\"Ꮜ\\\"],[43933,1,\\\"Ꮝ\\\"],[43934,1,\\\"Ꮞ\\\"],[43935,1,\\\"Ꮟ\\\"],[43936,1,\\\"Ꮠ\\\"],[43937,1,\\\"Ꮡ\\\"],[43938,1,\\\"Ꮢ\\\"],[43939,1,\\\"Ꮣ\\\"],[43940,1,\\\"Ꮤ\\\"],[43941,1,\\\"Ꮥ\\\"],[43942,1,\\\"Ꮦ\\\"],[43943,1,\\\"Ꮧ\\\"],[43944,1,\\\"Ꮨ\\\"],[43945,1,\\\"Ꮩ\\\"],[43946,1,\\\"Ꮪ\\\"],[43947,1,\\\"Ꮫ\\\"],[43948,1,\\\"Ꮬ\\\"],[43949,1,\\\"Ꮭ\\\"],[43950,1,\\\"Ꮮ\\\"],[43951,1,\\\"Ꮯ\\\"],[43952,1,\\\"Ꮰ\\\"],[43953,1,\\\"Ꮱ\\\"],[43954,1,\\\"Ꮲ\\\"],[43955,1,\\\"Ꮳ\\\"],[43956,1,\\\"Ꮴ\\\"],[43957,1,\\\"Ꮵ\\\"],[43958,1,\\\"Ꮶ\\\"],[43959,1,\\\"Ꮷ\\\"],[43960,1,\\\"Ꮸ\\\"],[43961,1,\\\"Ꮹ\\\"],[43962,1,\\\"Ꮺ\\\"],[43963,1,\\\"Ꮻ\\\"],[43964,1,\\\"Ꮼ\\\"],[43965,1,\\\"Ꮽ\\\"],[43966,1,\\\"Ꮾ\\\"],[43967,1,\\\"Ꮿ\\\"],[[43968,44010],2],[44011,2],[[44012,44013],2],[[44014,44015],3],[[44016,44025],2],[[44026,44031],3],[[44032,55203],2],[[55204,55215],3],[[55216,55238],2],[[55239,55242],3],[[55243,55291],2],[[55292,55295],3],[[55296,57343],3],[[57344,63743],3],[63744,1,\\\"豈\\\"],[63745,1,\\\"更\\\"],[63746,1,\\\"車\\\"],[63747,1,\\\"賈\\\"],[63748,1,\\\"滑\\\"],[63749,1,\\\"串\\\"],[63750,1,\\\"句\\\"],[[63751,63752],1,\\\"龜\\\"],[63753,1,\\\"契\\\"],[63754,1,\\\"金\\\"],[63755,1,\\\"喇\\\"],[63756,1,\\\"奈\\\"],[63757,1,\\\"懶\\\"],[63758,1,\\\"癩\\\"],[63759,1,\\\"羅\\\"],[63760,1,\\\"蘿\\\"],[63761,1,\\\"螺\\\"],[63762,1,\\\"裸\\\"],[63763,1,\\\"邏\\\"],[63764,1,\\\"樂\\\"],[63765,1,\\\"洛\\\"],[63766,1,\\\"烙\\\"],[63767,1,\\\"珞\\\"],[63768,1,\\\"落\\\"],[63769,1,\\\"酪\\\"],[63770,1,\\\"駱\\\"],[63771,1,\\\"亂\\\"],[63772,1,\\\"卵\\\"],[63773,1,\\\"欄\\\"],[63774,1,\\\"爛\\\"],[63775,1,\\\"蘭\\\"],[63776,1,\\\"鸞\\\"],[63777,1,\\\"嵐\\\"],[63778,1,\\\"濫\\\"],[63779,1,\\\"藍\\\"],[63780,1,\\\"襤\\\"],[63781,1,\\\"拉\\\"],[63782,1,\\\"臘\\\"],[63783,1,\\\"蠟\\\"],[63784,1,\\\"廊\\\"],[63785,1,\\\"朗\\\"],[63786,1,\\\"浪\\\"],[63787,1,\\\"狼\\\"],[63788,1,\\\"郎\\\"],[63789,1,\\\"來\\\"],[63790,1,\\\"冷\\\"],[63791,1,\\\"勞\\\"],[63792,1,\\\"擄\\\"],[63793,1,\\\"櫓\\\"],[63794,1,\\\"爐\\\"],[63795,1,\\\"盧\\\"],[63796,1,\\\"老\\\"],[63797,1,\\\"蘆\\\"],[63798,1,\\\"虜\\\"],[63799,1,\\\"路\\\"],[63800,1,\\\"露\\\"],[63801,1,\\\"魯\\\"],[63802,1,\\\"鷺\\\"],[63803,1,\\\"碌\\\"],[63804,1,\\\"祿\\\"],[63805,1,\\\"綠\\\"],[63806,1,\\\"菉\\\"],[63807,1,\\\"錄\\\"],[63808,1,\\\"鹿\\\"],[63809,1,\\\"論\\\"],[63810,1,\\\"壟\\\"],[63811,1,\\\"弄\\\"],[63812,1,\\\"籠\\\"],[63813,1,\\\"聾\\\"],[63814,1,\\\"牢\\\"],[63815,1,\\\"磊\\\"],[63816,1,\\\"賂\\\"],[63817,1,\\\"雷\\\"],[63818,1,\\\"壘\\\"],[63819,1,\\\"屢\\\"],[63820,1,\\\"樓\\\"],[63821,1,\\\"淚\\\"],[63822,1,\\\"漏\\\"],[63823,1,\\\"累\\\"],[63824,1,\\\"縷\\\"],[63825,1,\\\"陋\\\"],[63826,1,\\\"勒\\\"],[63827,1,\\\"肋\\\"],[63828,1,\\\"凜\\\"],[63829,1,\\\"凌\\\"],[63830,1,\\\"稜\\\"],[63831,1,\\\"綾\\\"],[63832,1,\\\"菱\\\"],[63833,1,\\\"陵\\\"],[63834,1,\\\"讀\\\"],[63835,1,\\\"拏\\\"],[63836,1,\\\"樂\\\"],[63837,1,\\\"諾\\\"],[63838,1,\\\"丹\\\"],[63839,1,\\\"寧\\\"],[63840,1,\\\"怒\\\"],[63841,1,\\\"率\\\"],[63842,1,\\\"異\\\"],[63843,1,\\\"北\\\"],[63844,1,\\\"磻\\\"],[63845,1,\\\"便\\\"],[63846,1,\\\"復\\\"],[63847,1,\\\"不\\\"],[63848,1,\\\"泌\\\"],[63849,1,\\\"數\\\"],[63850,1,\\\"索\\\"],[63851,1,\\\"參\\\"],[63852,1,\\\"塞\\\"],[63853,1,\\\"省\\\"],[63854,1,\\\"葉\\\"],[63855,1,\\\"說\\\"],[63856,1,\\\"殺\\\"],[63857,1,\\\"辰\\\"],[63858,1,\\\"沈\\\"],[63859,1,\\\"拾\\\"],[63860,1,\\\"若\\\"],[63861,1,\\\"掠\\\"],[63862,1,\\\"略\\\"],[63863,1,\\\"亮\\\"],[63864,1,\\\"兩\\\"],[63865,1,\\\"凉\\\"],[63866,1,\\\"梁\\\"],[63867,1,\\\"糧\\\"],[63868,1,\\\"良\\\"],[63869,1,\\\"諒\\\"],[63870,1,\\\"量\\\"],[63871,1,\\\"勵\\\"],[63872,1,\\\"呂\\\"],[63873,1,\\\"女\\\"],[63874,1,\\\"廬\\\"],[63875,1,\\\"旅\\\"],[63876,1,\\\"濾\\\"],[63877,1,\\\"礪\\\"],[63878,1,\\\"閭\\\"],[63879,1,\\\"驪\\\"],[63880,1,\\\"麗\\\"],[63881,1,\\\"黎\\\"],[63882,1,\\\"力\\\"],[63883,1,\\\"曆\\\"],[63884,1,\\\"歷\\\"],[63885,1,\\\"轢\\\"],[63886,1,\\\"年\\\"],[63887,1,\\\"憐\\\"],[63888,1,\\\"戀\\\"],[63889,1,\\\"撚\\\"],[63890,1,\\\"漣\\\"],[63891,1,\\\"煉\\\"],[63892,1,\\\"璉\\\"],[63893,1,\\\"秊\\\"],[63894,1,\\\"練\\\"],[63895,1,\\\"聯\\\"],[63896,1,\\\"輦\\\"],[63897,1,\\\"蓮\\\"],[63898,1,\\\"連\\\"],[63899,1,\\\"鍊\\\"],[63900,1,\\\"列\\\"],[63901,1,\\\"劣\\\"],[63902,1,\\\"咽\\\"],[63903,1,\\\"烈\\\"],[63904,1,\\\"裂\\\"],[63905,1,\\\"說\\\"],[63906,1,\\\"廉\\\"],[63907,1,\\\"念\\\"],[63908,1,\\\"捻\\\"],[63909,1,\\\"殮\\\"],[63910,1,\\\"簾\\\"],[63911,1,\\\"獵\\\"],[63912,1,\\\"令\\\"],[63913,1,\\\"囹\\\"],[63914,1,\\\"寧\\\"],[63915,1,\\\"嶺\\\"],[63916,1,\\\"怜\\\"],[63917,1,\\\"玲\\\"],[63918,1,\\\"瑩\\\"],[63919,1,\\\"羚\\\"],[63920,1,\\\"聆\\\"],[63921,1,\\\"鈴\\\"],[63922,1,\\\"零\\\"],[63923,1,\\\"靈\\\"],[63924,1,\\\"領\\\"],[63925,1,\\\"例\\\"],[63926,1,\\\"禮\\\"],[63927,1,\\\"醴\\\"],[63928,1,\\\"隸\\\"],[63929,1,\\\"惡\\\"],[63930,1,\\\"了\\\"],[63931,1,\\\"僚\\\"],[63932,1,\\\"寮\\\"],[63933,1,\\\"尿\\\"],[63934,1,\\\"料\\\"],[63935,1,\\\"樂\\\"],[63936,1,\\\"燎\\\"],[63937,1,\\\"療\\\"],[63938,1,\\\"蓼\\\"],[63939,1,\\\"遼\\\"],[63940,1,\\\"龍\\\"],[63941,1,\\\"暈\\\"],[63942,1,\\\"阮\\\"],[63943,1,\\\"劉\\\"],[63944,1,\\\"杻\\\"],[63945,1,\\\"柳\\\"],[63946,1,\\\"流\\\"],[63947,1,\\\"溜\\\"],[63948,1,\\\"琉\\\"],[63949,1,\\\"留\\\"],[63950,1,\\\"硫\\\"],[63951,1,\\\"紐\\\"],[63952,1,\\\"類\\\"],[63953,1,\\\"六\\\"],[63954,1,\\\"戮\\\"],[63955,1,\\\"陸\\\"],[63956,1,\\\"倫\\\"],[63957,1,\\\"崙\\\"],[63958,1,\\\"淪\\\"],[63959,1,\\\"輪\\\"],[63960,1,\\\"律\\\"],[63961,1,\\\"慄\\\"],[63962,1,\\\"栗\\\"],[63963,1,\\\"率\\\"],[63964,1,\\\"隆\\\"],[63965,1,\\\"利\\\"],[63966,1,\\\"吏\\\"],[63967,1,\\\"履\\\"],[63968,1,\\\"易\\\"],[63969,1,\\\"李\\\"],[63970,1,\\\"梨\\\"],[63971,1,\\\"泥\\\"],[63972,1,\\\"理\\\"],[63973,1,\\\"痢\\\"],[63974,1,\\\"罹\\\"],[63975,1,\\\"裏\\\"],[63976,1,\\\"裡\\\"],[63977,1,\\\"里\\\"],[63978,1,\\\"離\\\"],[63979,1,\\\"匿\\\"],[63980,1,\\\"溺\\\"],[63981,1,\\\"吝\\\"],[63982,1,\\\"燐\\\"],[63983,1,\\\"璘\\\"],[63984,1,\\\"藺\\\"],[63985,1,\\\"隣\\\"],[63986,1,\\\"鱗\\\"],[63987,1,\\\"麟\\\"],[63988,1,\\\"林\\\"],[63989,1,\\\"淋\\\"],[63990,1,\\\"臨\\\"],[63991,1,\\\"立\\\"],[63992,1,\\\"笠\\\"],[63993,1,\\\"粒\\\"],[63994,1,\\\"狀\\\"],[63995,1,\\\"炙\\\"],[63996,1,\\\"識\\\"],[63997,1,\\\"什\\\"],[63998,1,\\\"茶\\\"],[63999,1,\\\"刺\\\"],[64000,1,\\\"切\\\"],[64001,1,\\\"度\\\"],[64002,1,\\\"拓\\\"],[64003,1,\\\"糖\\\"],[64004,1,\\\"宅\\\"],[64005,1,\\\"洞\\\"],[64006,1,\\\"暴\\\"],[64007,1,\\\"輻\\\"],[64008,1,\\\"行\\\"],[64009,1,\\\"降\\\"],[64010,1,\\\"見\\\"],[64011,1,\\\"廓\\\"],[64012,1,\\\"兀\\\"],[64013,1,\\\"嗀\\\"],[[64014,64015],2],[64016,1,\\\"塚\\\"],[64017,2],[64018,1,\\\"晴\\\"],[[64019,64020],2],[64021,1,\\\"凞\\\"],[64022,1,\\\"猪\\\"],[64023,1,\\\"益\\\"],[64024,1,\\\"礼\\\"],[64025,1,\\\"神\\\"],[64026,1,\\\"祥\\\"],[64027,1,\\\"福\\\"],[64028,1,\\\"靖\\\"],[64029,1,\\\"精\\\"],[64030,1,\\\"羽\\\"],[64031,2],[64032,1,\\\"蘒\\\"],[64033,2],[64034,1,\\\"諸\\\"],[[64035,64036],2],[64037,1,\\\"逸\\\"],[64038,1,\\\"都\\\"],[[64039,64041],2],[64042,1,\\\"飯\\\"],[64043,1,\\\"飼\\\"],[64044,1,\\\"館\\\"],[64045,1,\\\"鶴\\\"],[64046,1,\\\"郞\\\"],[64047,1,\\\"隷\\\"],[64048,1,\\\"侮\\\"],[64049,1,\\\"僧\\\"],[64050,1,\\\"免\\\"],[64051,1,\\\"勉\\\"],[64052,1,\\\"勤\\\"],[64053,1,\\\"卑\\\"],[64054,1,\\\"喝\\\"],[64055,1,\\\"嘆\\\"],[64056,1,\\\"器\\\"],[64057,1,\\\"塀\\\"],[64058,1,\\\"墨\\\"],[64059,1,\\\"層\\\"],[64060,1,\\\"屮\\\"],[64061,1,\\\"悔\\\"],[64062,1,\\\"慨\\\"],[64063,1,\\\"憎\\\"],[64064,1,\\\"懲\\\"],[64065,1,\\\"敏\\\"],[64066,1,\\\"既\\\"],[64067,1,\\\"暑\\\"],[64068,1,\\\"梅\\\"],[64069,1,\\\"海\\\"],[64070,1,\\\"渚\\\"],[64071,1,\\\"漢\\\"],[64072,1,\\\"煮\\\"],[64073,1,\\\"爫\\\"],[64074,1,\\\"琢\\\"],[64075,1,\\\"碑\\\"],[64076,1,\\\"社\\\"],[64077,1,\\\"祉\\\"],[64078,1,\\\"祈\\\"],[64079,1,\\\"祐\\\"],[64080,1,\\\"祖\\\"],[64081,1,\\\"祝\\\"],[64082,1,\\\"禍\\\"],[64083,1,\\\"禎\\\"],[64084,1,\\\"穀\\\"],[64085,1,\\\"突\\\"],[64086,1,\\\"節\\\"],[64087,1,\\\"練\\\"],[64088,1,\\\"縉\\\"],[64089,1,\\\"繁\\\"],[64090,1,\\\"署\\\"],[64091,1,\\\"者\\\"],[64092,1,\\\"臭\\\"],[[64093,64094],1,\\\"艹\\\"],[64095,1,\\\"著\\\"],[64096,1,\\\"褐\\\"],[64097,1,\\\"視\\\"],[64098,1,\\\"謁\\\"],[64099,1,\\\"謹\\\"],[64100,1,\\\"賓\\\"],[64101,1,\\\"贈\\\"],[64102,1,\\\"辶\\\"],[64103,1,\\\"逸\\\"],[64104,1,\\\"難\\\"],[64105,1,\\\"響\\\"],[64106,1,\\\"頻\\\"],[64107,1,\\\"恵\\\"],[64108,1,\\\"𤋮\\\"],[64109,1,\\\"舘\\\"],[[64110,64111],3],[64112,1,\\\"並\\\"],[64113,1,\\\"况\\\"],[64114,1,\\\"全\\\"],[64115,1,\\\"侀\\\"],[64116,1,\\\"充\\\"],[64117,1,\\\"冀\\\"],[64118,1,\\\"勇\\\"],[64119,1,\\\"勺\\\"],[64120,1,\\\"喝\\\"],[64121,1,\\\"啕\\\"],[64122,1,\\\"喙\\\"],[64123,1,\\\"嗢\\\"],[64124,1,\\\"塚\\\"],[64125,1,\\\"墳\\\"],[64126,1,\\\"奄\\\"],[64127,1,\\\"奔\\\"],[64128,1,\\\"婢\\\"],[64129,1,\\\"嬨\\\"],[64130,1,\\\"廒\\\"],[64131,1,\\\"廙\\\"],[64132,1,\\\"彩\\\"],[64133,1,\\\"徭\\\"],[64134,1,\\\"惘\\\"],[64135,1,\\\"慎\\\"],[64136,1,\\\"愈\\\"],[64137,1,\\\"憎\\\"],[64138,1,\\\"慠\\\"],[64139,1,\\\"懲\\\"],[64140,1,\\\"戴\\\"],[64141,1,\\\"揄\\\"],[64142,1,\\\"搜\\\"],[64143,1,\\\"摒\\\"],[64144,1,\\\"敖\\\"],[64145,1,\\\"晴\\\"],[64146,1,\\\"朗\\\"],[64147,1,\\\"望\\\"],[64148,1,\\\"杖\\\"],[64149,1,\\\"歹\\\"],[64150,1,\\\"殺\\\"],[64151,1,\\\"流\\\"],[64152,1,\\\"滛\\\"],[64153,1,\\\"滋\\\"],[64154,1,\\\"漢\\\"],[64155,1,\\\"瀞\\\"],[64156,1,\\\"煮\\\"],[64157,1,\\\"瞧\\\"],[64158,1,\\\"爵\\\"],[64159,1,\\\"犯\\\"],[64160,1,\\\"猪\\\"],[64161,1,\\\"瑱\\\"],[64162,1,\\\"甆\\\"],[64163,1,\\\"画\\\"],[64164,1,\\\"瘝\\\"],[64165,1,\\\"瘟\\\"],[64166,1,\\\"益\\\"],[64167,1,\\\"盛\\\"],[64168,1,\\\"直\\\"],[64169,1,\\\"睊\\\"],[64170,1,\\\"着\\\"],[64171,1,\\\"磌\\\"],[64172,1,\\\"窱\\\"],[64173,1,\\\"節\\\"],[64174,1,\\\"类\\\"],[64175,1,\\\"絛\\\"],[64176,1,\\\"練\\\"],[64177,1,\\\"缾\\\"],[64178,1,\\\"者\\\"],[64179,1,\\\"荒\\\"],[64180,1,\\\"華\\\"],[64181,1,\\\"蝹\\\"],[64182,1,\\\"襁\\\"],[64183,1,\\\"覆\\\"],[64184,1,\\\"視\\\"],[64185,1,\\\"調\\\"],[64186,1,\\\"諸\\\"],[64187,1,\\\"請\\\"],[64188,1,\\\"謁\\\"],[64189,1,\\\"諾\\\"],[64190,1,\\\"諭\\\"],[64191,1,\\\"謹\\\"],[64192,1,\\\"變\\\"],[64193,1,\\\"贈\\\"],[64194,1,\\\"輸\\\"],[64195,1,\\\"遲\\\"],[64196,1,\\\"醙\\\"],[64197,1,\\\"鉶\\\"],[64198,1,\\\"陼\\\"],[64199,1,\\\"難\\\"],[64200,1,\\\"靖\\\"],[64201,1,\\\"韛\\\"],[64202,1,\\\"響\\\"],[64203,1,\\\"頋\\\"],[64204,1,\\\"頻\\\"],[64205,1,\\\"鬒\\\"],[64206,1,\\\"龜\\\"],[64207,1,\\\"𢡊\\\"],[64208,1,\\\"𢡄\\\"],[64209,1,\\\"𣏕\\\"],[64210,1,\\\"㮝\\\"],[64211,1,\\\"䀘\\\"],[64212,1,\\\"䀹\\\"],[64213,1,\\\"𥉉\\\"],[64214,1,\\\"𥳐\\\"],[64215,1,\\\"𧻓\\\"],[64216,1,\\\"齃\\\"],[64217,1,\\\"龎\\\"],[[64218,64255],3],[64256,1,\\\"ff\\\"],[64257,1,\\\"fi\\\"],[64258,1,\\\"fl\\\"],[64259,1,\\\"ffi\\\"],[64260,1,\\\"ffl\\\"],[[64261,64262],1,\\\"st\\\"],[[64263,64274],3],[64275,1,\\\"մն\\\"],[64276,1,\\\"մե\\\"],[64277,1,\\\"մի\\\"],[64278,1,\\\"վն\\\"],[64279,1,\\\"մխ\\\"],[[64280,64284],3],[64285,1,\\\"יִ\\\"],[64286,2],[64287,1,\\\"ײַ\\\"],[64288,1,\\\"ע\\\"],[64289,1,\\\"א\\\"],[64290,1,\\\"ד\\\"],[64291,1,\\\"ה\\\"],[64292,1,\\\"כ\\\"],[64293,1,\\\"ל\\\"],[64294,1,\\\"ם\\\"],[64295,1,\\\"ר\\\"],[64296,1,\\\"ת\\\"],[64297,5,\\\"+\\\"],[64298,1,\\\"שׁ\\\"],[64299,1,\\\"שׂ\\\"],[64300,1,\\\"שּׁ\\\"],[64301,1,\\\"שּׂ\\\"],[64302,1,\\\"אַ\\\"],[64303,1,\\\"אָ\\\"],[64304,1,\\\"אּ\\\"],[64305,1,\\\"בּ\\\"],[64306,1,\\\"גּ\\\"],[64307,1,\\\"דּ\\\"],[64308,1,\\\"הּ\\\"],[64309,1,\\\"וּ\\\"],[64310,1,\\\"זּ\\\"],[64311,3],[64312,1,\\\"טּ\\\"],[64313,1,\\\"יּ\\\"],[64314,1,\\\"ךּ\\\"],[64315,1,\\\"כּ\\\"],[64316,1,\\\"לּ\\\"],[64317,3],[64318,1,\\\"מּ\\\"],[64319,3],[64320,1,\\\"נּ\\\"],[64321,1,\\\"סּ\\\"],[64322,3],[64323,1,\\\"ףּ\\\"],[64324,1,\\\"פּ\\\"],[64325,3],[64326,1,\\\"צּ\\\"],[64327,1,\\\"קּ\\\"],[64328,1,\\\"רּ\\\"],[64329,1,\\\"שּ\\\"],[64330,1,\\\"תּ\\\"],[64331,1,\\\"וֹ\\\"],[64332,1,\\\"בֿ\\\"],[64333,1,\\\"כֿ\\\"],[64334,1,\\\"פֿ\\\"],[64335,1,\\\"אל\\\"],[[64336,64337],1,\\\"ٱ\\\"],[[64338,64341],1,\\\"ٻ\\\"],[[64342,64345],1,\\\"پ\\\"],[[64346,64349],1,\\\"ڀ\\\"],[[64350,64353],1,\\\"ٺ\\\"],[[64354,64357],1,\\\"ٿ\\\"],[[64358,64361],1,\\\"ٹ\\\"],[[64362,64365],1,\\\"ڤ\\\"],[[64366,64369],1,\\\"ڦ\\\"],[[64370,64373],1,\\\"ڄ\\\"],[[64374,64377],1,\\\"ڃ\\\"],[[64378,64381],1,\\\"چ\\\"],[[64382,64385],1,\\\"ڇ\\\"],[[64386,64387],1,\\\"ڍ\\\"],[[64388,64389],1,\\\"ڌ\\\"],[[64390,64391],1,\\\"ڎ\\\"],[[64392,64393],1,\\\"ڈ\\\"],[[64394,64395],1,\\\"ژ\\\"],[[64396,64397],1,\\\"ڑ\\\"],[[64398,64401],1,\\\"ک\\\"],[[64402,64405],1,\\\"گ\\\"],[[64406,64409],1,\\\"ڳ\\\"],[[64410,64413],1,\\\"ڱ\\\"],[[64414,64415],1,\\\"ں\\\"],[[64416,64419],1,\\\"ڻ\\\"],[[64420,64421],1,\\\"ۀ\\\"],[[64422,64425],1,\\\"ہ\\\"],[[64426,64429],1,\\\"ھ\\\"],[[64430,64431],1,\\\"ے\\\"],[[64432,64433],1,\\\"ۓ\\\"],[[64434,64449],2],[[64450,64466],3],[[64467,64470],1,\\\"ڭ\\\"],[[64471,64472],1,\\\"ۇ\\\"],[[64473,64474],1,\\\"ۆ\\\"],[[64475,64476],1,\\\"ۈ\\\"],[64477,1,\\\"ۇٴ\\\"],[[64478,64479],1,\\\"ۋ\\\"],[[64480,64481],1,\\\"ۅ\\\"],[[64482,64483],1,\\\"ۉ\\\"],[[64484,64487],1,\\\"ې\\\"],[[64488,64489],1,\\\"ى\\\"],[[64490,64491],1,\\\"ئا\\\"],[[64492,64493],1,\\\"ئە\\\"],[[64494,64495],1,\\\"ئو\\\"],[[64496,64497],1,\\\"ئۇ\\\"],[[64498,64499],1,\\\"ئۆ\\\"],[[64500,64501],1,\\\"ئۈ\\\"],[[64502,64504],1,\\\"ئې\\\"],[[64505,64507],1,\\\"ئى\\\"],[[64508,64511],1,\\\"ی\\\"],[64512,1,\\\"ئج\\\"],[64513,1,\\\"ئح\\\"],[64514,1,\\\"ئم\\\"],[64515,1,\\\"ئى\\\"],[64516,1,\\\"ئي\\\"],[64517,1,\\\"بج\\\"],[64518,1,\\\"بح\\\"],[64519,1,\\\"بخ\\\"],[64520,1,\\\"بم\\\"],[64521,1,\\\"بى\\\"],[64522,1,\\\"بي\\\"],[64523,1,\\\"تج\\\"],[64524,1,\\\"تح\\\"],[64525,1,\\\"تخ\\\"],[64526,1,\\\"تم\\\"],[64527,1,\\\"تى\\\"],[64528,1,\\\"تي\\\"],[64529,1,\\\"ثج\\\"],[64530,1,\\\"ثم\\\"],[64531,1,\\\"ثى\\\"],[64532,1,\\\"ثي\\\"],[64533,1,\\\"جح\\\"],[64534,1,\\\"جم\\\"],[64535,1,\\\"حج\\\"],[64536,1,\\\"حم\\\"],[64537,1,\\\"خج\\\"],[64538,1,\\\"خح\\\"],[64539,1,\\\"خم\\\"],[64540,1,\\\"سج\\\"],[64541,1,\\\"سح\\\"],[64542,1,\\\"سخ\\\"],[64543,1,\\\"سم\\\"],[64544,1,\\\"صح\\\"],[64545,1,\\\"صم\\\"],[64546,1,\\\"ضج\\\"],[64547,1,\\\"ضح\\\"],[64548,1,\\\"ضخ\\\"],[64549,1,\\\"ضم\\\"],[64550,1,\\\"طح\\\"],[64551,1,\\\"طم\\\"],[64552,1,\\\"ظم\\\"],[64553,1,\\\"عج\\\"],[64554,1,\\\"عم\\\"],[64555,1,\\\"غج\\\"],[64556,1,\\\"غم\\\"],[64557,1,\\\"فج\\\"],[64558,1,\\\"فح\\\"],[64559,1,\\\"فخ\\\"],[64560,1,\\\"فم\\\"],[64561,1,\\\"فى\\\"],[64562,1,\\\"في\\\"],[64563,1,\\\"قح\\\"],[64564,1,\\\"قم\\\"],[64565,1,\\\"قى\\\"],[64566,1,\\\"قي\\\"],[64567,1,\\\"كا\\\"],[64568,1,\\\"كج\\\"],[64569,1,\\\"كح\\\"],[64570,1,\\\"كخ\\\"],[64571,1,\\\"كل\\\"],[64572,1,\\\"كم\\\"],[64573,1,\\\"كى\\\"],[64574,1,\\\"كي\\\"],[64575,1,\\\"لج\\\"],[64576,1,\\\"لح\\\"],[64577,1,\\\"لخ\\\"],[64578,1,\\\"لم\\\"],[64579,1,\\\"لى\\\"],[64580,1,\\\"لي\\\"],[64581,1,\\\"مج\\\"],[64582,1,\\\"مح\\\"],[64583,1,\\\"مخ\\\"],[64584,1,\\\"مم\\\"],[64585,1,\\\"مى\\\"],[64586,1,\\\"مي\\\"],[64587,1,\\\"نج\\\"],[64588,1,\\\"نح\\\"],[64589,1,\\\"نخ\\\"],[64590,1,\\\"نم\\\"],[64591,1,\\\"نى\\\"],[64592,1,\\\"ني\\\"],[64593,1,\\\"هج\\\"],[64594,1,\\\"هم\\\"],[64595,1,\\\"هى\\\"],[64596,1,\\\"هي\\\"],[64597,1,\\\"يج\\\"],[64598,1,\\\"يح\\\"],[64599,1,\\\"يخ\\\"],[64600,1,\\\"يم\\\"],[64601,1,\\\"يى\\\"],[64602,1,\\\"يي\\\"],[64603,1,\\\"ذٰ\\\"],[64604,1,\\\"رٰ\\\"],[64605,1,\\\"ىٰ\\\"],[64606,5,\\\" ٌّ\\\"],[64607,5,\\\" ٍّ\\\"],[64608,5,\\\" َّ\\\"],[64609,5,\\\" ُّ\\\"],[64610,5,\\\" ِّ\\\"],[64611,5,\\\" ّٰ\\\"],[64612,1,\\\"ئر\\\"],[64613,1,\\\"ئز\\\"],[64614,1,\\\"ئم\\\"],[64615,1,\\\"ئن\\\"],[64616,1,\\\"ئى\\\"],[64617,1,\\\"ئي\\\"],[64618,1,\\\"بر\\\"],[64619,1,\\\"بز\\\"],[64620,1,\\\"بم\\\"],[64621,1,\\\"بن\\\"],[64622,1,\\\"بى\\\"],[64623,1,\\\"بي\\\"],[64624,1,\\\"تر\\\"],[64625,1,\\\"تز\\\"],[64626,1,\\\"تم\\\"],[64627,1,\\\"تن\\\"],[64628,1,\\\"تى\\\"],[64629,1,\\\"تي\\\"],[64630,1,\\\"ثر\\\"],[64631,1,\\\"ثز\\\"],[64632,1,\\\"ثم\\\"],[64633,1,\\\"ثن\\\"],[64634,1,\\\"ثى\\\"],[64635,1,\\\"ثي\\\"],[64636,1,\\\"فى\\\"],[64637,1,\\\"في\\\"],[64638,1,\\\"قى\\\"],[64639,1,\\\"قي\\\"],[64640,1,\\\"كا\\\"],[64641,1,\\\"كل\\\"],[64642,1,\\\"كم\\\"],[64643,1,\\\"كى\\\"],[64644,1,\\\"كي\\\"],[64645,1,\\\"لم\\\"],[64646,1,\\\"لى\\\"],[64647,1,\\\"لي\\\"],[64648,1,\\\"ما\\\"],[64649,1,\\\"مم\\\"],[64650,1,\\\"نر\\\"],[64651,1,\\\"نز\\\"],[64652,1,\\\"نم\\\"],[64653,1,\\\"نن\\\"],[64654,1,\\\"نى\\\"],[64655,1,\\\"ني\\\"],[64656,1,\\\"ىٰ\\\"],[64657,1,\\\"ير\\\"],[64658,1,\\\"يز\\\"],[64659,1,\\\"يم\\\"],[64660,1,\\\"ين\\\"],[64661,1,\\\"يى\\\"],[64662,1,\\\"يي\\\"],[64663,1,\\\"ئج\\\"],[64664,1,\\\"ئح\\\"],[64665,1,\\\"ئخ\\\"],[64666,1,\\\"ئم\\\"],[64667,1,\\\"ئه\\\"],[64668,1,\\\"بج\\\"],[64669,1,\\\"بح\\\"],[64670,1,\\\"بخ\\\"],[64671,1,\\\"بم\\\"],[64672,1,\\\"به\\\"],[64673,1,\\\"تج\\\"],[64674,1,\\\"تح\\\"],[64675,1,\\\"تخ\\\"],[64676,1,\\\"تم\\\"],[64677,1,\\\"ته\\\"],[64678,1,\\\"ثم\\\"],[64679,1,\\\"جح\\\"],[64680,1,\\\"جم\\\"],[64681,1,\\\"حج\\\"],[64682,1,\\\"حم\\\"],[64683,1,\\\"خج\\\"],[64684,1,\\\"خم\\\"],[64685,1,\\\"سج\\\"],[64686,1,\\\"سح\\\"],[64687,1,\\\"سخ\\\"],[64688,1,\\\"سم\\\"],[64689,1,\\\"صح\\\"],[64690,1,\\\"صخ\\\"],[64691,1,\\\"صم\\\"],[64692,1,\\\"ضج\\\"],[64693,1,\\\"ضح\\\"],[64694,1,\\\"ضخ\\\"],[64695,1,\\\"ضم\\\"],[64696,1,\\\"طح\\\"],[64697,1,\\\"ظم\\\"],[64698,1,\\\"عج\\\"],[64699,1,\\\"عم\\\"],[64700,1,\\\"غج\\\"],[64701,1,\\\"غم\\\"],[64702,1,\\\"فج\\\"],[64703,1,\\\"فح\\\"],[64704,1,\\\"فخ\\\"],[64705,1,\\\"فم\\\"],[64706,1,\\\"قح\\\"],[64707,1,\\\"قم\\\"],[64708,1,\\\"كج\\\"],[64709,1,\\\"كح\\\"],[64710,1,\\\"كخ\\\"],[64711,1,\\\"كل\\\"],[64712,1,\\\"كم\\\"],[64713,1,\\\"لج\\\"],[64714,1,\\\"لح\\\"],[64715,1,\\\"لخ\\\"],[64716,1,\\\"لم\\\"],[64717,1,\\\"له\\\"],[64718,1,\\\"مج\\\"],[64719,1,\\\"مح\\\"],[64720,1,\\\"مخ\\\"],[64721,1,\\\"مم\\\"],[64722,1,\\\"نج\\\"],[64723,1,\\\"نح\\\"],[64724,1,\\\"نخ\\\"],[64725,1,\\\"نم\\\"],[64726,1,\\\"نه\\\"],[64727,1,\\\"هج\\\"],[64728,1,\\\"هم\\\"],[64729,1,\\\"هٰ\\\"],[64730,1,\\\"يج\\\"],[64731,1,\\\"يح\\\"],[64732,1,\\\"يخ\\\"],[64733,1,\\\"يم\\\"],[64734,1,\\\"يه\\\"],[64735,1,\\\"ئم\\\"],[64736,1,\\\"ئه\\\"],[64737,1,\\\"بم\\\"],[64738,1,\\\"به\\\"],[64739,1,\\\"تم\\\"],[64740,1,\\\"ته\\\"],[64741,1,\\\"ثم\\\"],[64742,1,\\\"ثه\\\"],[64743,1,\\\"سم\\\"],[64744,1,\\\"سه\\\"],[64745,1,\\\"شم\\\"],[64746,1,\\\"شه\\\"],[64747,1,\\\"كل\\\"],[64748,1,\\\"كم\\\"],[64749,1,\\\"لم\\\"],[64750,1,\\\"نم\\\"],[64751,1,\\\"نه\\\"],[64752,1,\\\"يم\\\"],[64753,1,\\\"يه\\\"],[64754,1,\\\"ـَّ\\\"],[64755,1,\\\"ـُّ\\\"],[64756,1,\\\"ـِّ\\\"],[64757,1,\\\"طى\\\"],[64758,1,\\\"طي\\\"],[64759,1,\\\"عى\\\"],[64760,1,\\\"عي\\\"],[64761,1,\\\"غى\\\"],[64762,1,\\\"غي\\\"],[64763,1,\\\"سى\\\"],[64764,1,\\\"سي\\\"],[64765,1,\\\"شى\\\"],[64766,1,\\\"شي\\\"],[64767,1,\\\"حى\\\"],[64768,1,\\\"حي\\\"],[64769,1,\\\"جى\\\"],[64770,1,\\\"جي\\\"],[64771,1,\\\"خى\\\"],[64772,1,\\\"خي\\\"],[64773,1,\\\"صى\\\"],[64774,1,\\\"صي\\\"],[64775,1,\\\"ضى\\\"],[64776,1,\\\"ضي\\\"],[64777,1,\\\"شج\\\"],[64778,1,\\\"شح\\\"],[64779,1,\\\"شخ\\\"],[64780,1,\\\"شم\\\"],[64781,1,\\\"شر\\\"],[64782,1,\\\"سر\\\"],[64783,1,\\\"صر\\\"],[64784,1,\\\"ضر\\\"],[64785,1,\\\"طى\\\"],[64786,1,\\\"طي\\\"],[64787,1,\\\"عى\\\"],[64788,1,\\\"عي\\\"],[64789,1,\\\"غى\\\"],[64790,1,\\\"غي\\\"],[64791,1,\\\"سى\\\"],[64792,1,\\\"سي\\\"],[64793,1,\\\"شى\\\"],[64794,1,\\\"شي\\\"],[64795,1,\\\"حى\\\"],[64796,1,\\\"حي\\\"],[64797,1,\\\"جى\\\"],[64798,1,\\\"جي\\\"],[64799,1,\\\"خى\\\"],[64800,1,\\\"خي\\\"],[64801,1,\\\"صى\\\"],[64802,1,\\\"صي\\\"],[64803,1,\\\"ضى\\\"],[64804,1,\\\"ضي\\\"],[64805,1,\\\"شج\\\"],[64806,1,\\\"شح\\\"],[64807,1,\\\"شخ\\\"],[64808,1,\\\"شم\\\"],[64809,1,\\\"شر\\\"],[64810,1,\\\"سر\\\"],[64811,1,\\\"صر\\\"],[64812,1,\\\"ضر\\\"],[64813,1,\\\"شج\\\"],[64814,1,\\\"شح\\\"],[64815,1,\\\"شخ\\\"],[64816,1,\\\"شم\\\"],[64817,1,\\\"سه\\\"],[64818,1,\\\"شه\\\"],[64819,1,\\\"طم\\\"],[64820,1,\\\"سج\\\"],[64821,1,\\\"سح\\\"],[64822,1,\\\"سخ\\\"],[64823,1,\\\"شج\\\"],[64824,1,\\\"شح\\\"],[64825,1,\\\"شخ\\\"],[64826,1,\\\"طم\\\"],[64827,1,\\\"ظم\\\"],[[64828,64829],1,\\\"اً\\\"],[[64830,64831],2],[[64832,64847],3],[64848,1,\\\"تجم\\\"],[[64849,64850],1,\\\"تحج\\\"],[64851,1,\\\"تحم\\\"],[64852,1,\\\"تخم\\\"],[64853,1,\\\"تمج\\\"],[64854,1,\\\"تمح\\\"],[64855,1,\\\"تمخ\\\"],[[64856,64857],1,\\\"جمح\\\"],[64858,1,\\\"حمي\\\"],[64859,1,\\\"حمى\\\"],[64860,1,\\\"سحج\\\"],[64861,1,\\\"سجح\\\"],[64862,1,\\\"سجى\\\"],[[64863,64864],1,\\\"سمح\\\"],[64865,1,\\\"سمج\\\"],[[64866,64867],1,\\\"سمم\\\"],[[64868,64869],1,\\\"صحح\\\"],[64870,1,\\\"صمم\\\"],[[64871,64872],1,\\\"شحم\\\"],[64873,1,\\\"شجي\\\"],[[64874,64875],1,\\\"شمخ\\\"],[[64876,64877],1,\\\"شمم\\\"],[64878,1,\\\"ضحى\\\"],[[64879,64880],1,\\\"ضخم\\\"],[[64881,64882],1,\\\"طمح\\\"],[64883,1,\\\"طمم\\\"],[64884,1,\\\"طمي\\\"],[64885,1,\\\"عجم\\\"],[[64886,64887],1,\\\"عمم\\\"],[64888,1,\\\"عمى\\\"],[64889,1,\\\"غمم\\\"],[64890,1,\\\"غمي\\\"],[64891,1,\\\"غمى\\\"],[[64892,64893],1,\\\"فخم\\\"],[64894,1,\\\"قمح\\\"],[64895,1,\\\"قمم\\\"],[64896,1,\\\"لحم\\\"],[64897,1,\\\"لحي\\\"],[64898,1,\\\"لحى\\\"],[[64899,64900],1,\\\"لجج\\\"],[[64901,64902],1,\\\"لخم\\\"],[[64903,64904],1,\\\"لمح\\\"],[64905,1,\\\"محج\\\"],[64906,1,\\\"محم\\\"],[64907,1,\\\"محي\\\"],[64908,1,\\\"مجح\\\"],[64909,1,\\\"مجم\\\"],[64910,1,\\\"مخج\\\"],[64911,1,\\\"مخم\\\"],[[64912,64913],3],[64914,1,\\\"مجخ\\\"],[64915,1,\\\"همج\\\"],[64916,1,\\\"همم\\\"],[64917,1,\\\"نحم\\\"],[64918,1,\\\"نحى\\\"],[[64919,64920],1,\\\"نجم\\\"],[64921,1,\\\"نجى\\\"],[64922,1,\\\"نمي\\\"],[64923,1,\\\"نمى\\\"],[[64924,64925],1,\\\"يمم\\\"],[64926,1,\\\"بخي\\\"],[64927,1,\\\"تجي\\\"],[64928,1,\\\"تجى\\\"],[64929,1,\\\"تخي\\\"],[64930,1,\\\"تخى\\\"],[64931,1,\\\"تمي\\\"],[64932,1,\\\"تمى\\\"],[64933,1,\\\"جمي\\\"],[64934,1,\\\"جحى\\\"],[64935,1,\\\"جمى\\\"],[64936,1,\\\"سخى\\\"],[64937,1,\\\"صحي\\\"],[64938,1,\\\"شحي\\\"],[64939,1,\\\"ضحي\\\"],[64940,1,\\\"لجي\\\"],[64941,1,\\\"لمي\\\"],[64942,1,\\\"يحي\\\"],[64943,1,\\\"يجي\\\"],[64944,1,\\\"يمي\\\"],[64945,1,\\\"ممي\\\"],[64946,1,\\\"قمي\\\"],[64947,1,\\\"نحي\\\"],[64948,1,\\\"قمح\\\"],[64949,1,\\\"لحم\\\"],[64950,1,\\\"عمي\\\"],[64951,1,\\\"كمي\\\"],[64952,1,\\\"نجح\\\"],[64953,1,\\\"مخي\\\"],[64954,1,\\\"لجم\\\"],[64955,1,\\\"كمم\\\"],[64956,1,\\\"لجم\\\"],[64957,1,\\\"نجح\\\"],[64958,1,\\\"جحي\\\"],[64959,1,\\\"حجي\\\"],[64960,1,\\\"مجي\\\"],[64961,1,\\\"فمي\\\"],[64962,1,\\\"بحي\\\"],[64963,1,\\\"كمم\\\"],[64964,1,\\\"عجم\\\"],[64965,1,\\\"صمم\\\"],[64966,1,\\\"سخي\\\"],[64967,1,\\\"نجي\\\"],[[64968,64975],3],[[64976,65007],3],[65008,1,\\\"صلے\\\"],[65009,1,\\\"قلے\\\"],[65010,1,\\\"الله\\\"],[65011,1,\\\"اكبر\\\"],[65012,1,\\\"محمد\\\"],[65013,1,\\\"صلعم\\\"],[65014,1,\\\"رسول\\\"],[65015,1,\\\"عليه\\\"],[65016,1,\\\"وسلم\\\"],[65017,1,\\\"صلى\\\"],[65018,5,\\\"صلى الله عليه وسلم\\\"],[65019,5,\\\"جل جلاله\\\"],[65020,1,\\\"ریال\\\"],[65021,2],[[65022,65023],3],[[65024,65039],7],[65040,5,\\\",\\\"],[65041,1,\\\"、\\\"],[65042,3],[65043,5,\\\":\\\"],[65044,5,\\\";\\\"],[65045,5,\\\"!\\\"],[65046,5,\\\"?\\\"],[65047,1,\\\"〖\\\"],[65048,1,\\\"〗\\\"],[65049,3],[[65050,65055],3],[[65056,65059],2],[[65060,65062],2],[[65063,65069],2],[[65070,65071],2],[65072,3],[65073,1,\\\"—\\\"],[65074,1,\\\"–\\\"],[[65075,65076],5,\\\"_\\\"],[65077,5,\\\"(\\\"],[65078,5,\\\")\\\"],[65079,5,\\\"{\\\"],[65080,5,\\\"}\\\"],[65081,1,\\\"〔\\\"],[65082,1,\\\"〕\\\"],[65083,1,\\\"【\\\"],[65084,1,\\\"】\\\"],[65085,1,\\\"《\\\"],[65086,1,\\\"》\\\"],[65087,1,\\\"〈\\\"],[65088,1,\\\"〉\\\"],[65089,1,\\\"「\\\"],[65090,1,\\\"」\\\"],[65091,1,\\\"『\\\"],[65092,1,\\\"』\\\"],[[65093,65094],2],[65095,5,\\\"[\\\"],[65096,5,\\\"]\\\"],[[65097,65100],5,\\\" ̅\\\"],[[65101,65103],5,\\\"_\\\"],[65104,5,\\\",\\\"],[65105,1,\\\"、\\\"],[65106,3],[65107,3],[65108,5,\\\";\\\"],[65109,5,\\\":\\\"],[65110,5,\\\"?\\\"],[65111,5,\\\"!\\\"],[65112,1,\\\"—\\\"],[65113,5,\\\"(\\\"],[65114,5,\\\")\\\"],[65115,5,\\\"{\\\"],[65116,5,\\\"}\\\"],[65117,1,\\\"〔\\\"],[65118,1,\\\"〕\\\"],[65119,5,\\\"#\\\"],[65120,5,\\\"&\\\"],[65121,5,\\\"*\\\"],[65122,5,\\\"+\\\"],[65123,1,\\\"-\\\"],[65124,5,\\\"<\\\"],[65125,5,\\\">\\\"],[65126,5,\\\"=\\\"],[65127,3],[65128,5,\\\"\\\\\\\\\\\"],[65129,5,\\\"$\\\"],[65130,5,\\\"%\\\"],[65131,5,\\\"@\\\"],[[65132,65135],3],[65136,5,\\\" ً\\\"],[65137,1,\\\"ـً\\\"],[65138,5,\\\" ٌ\\\"],[65139,2],[65140,5,\\\" ٍ\\\"],[65141,3],[65142,5,\\\" َ\\\"],[65143,1,\\\"ـَ\\\"],[65144,5,\\\" ُ\\\"],[65145,1,\\\"ـُ\\\"],[65146,5,\\\" ِ\\\"],[65147,1,\\\"ـِ\\\"],[65148,5,\\\" ّ\\\"],[65149,1,\\\"ـّ\\\"],[65150,5,\\\" ْ\\\"],[65151,1,\\\"ـْ\\\"],[65152,1,\\\"ء\\\"],[[65153,65154],1,\\\"آ\\\"],[[65155,65156],1,\\\"أ\\\"],[[65157,65158],1,\\\"ؤ\\\"],[[65159,65160],1,\\\"إ\\\"],[[65161,65164],1,\\\"ئ\\\"],[[65165,65166],1,\\\"ا\\\"],[[65167,65170],1,\\\"ب\\\"],[[65171,65172],1,\\\"ة\\\"],[[65173,65176],1,\\\"ت\\\"],[[65177,65180],1,\\\"ث\\\"],[[65181,65184],1,\\\"ج\\\"],[[65185,65188],1,\\\"ح\\\"],[[65189,65192],1,\\\"خ\\\"],[[65193,65194],1,\\\"د\\\"],[[65195,65196],1,\\\"ذ\\\"],[[65197,65198],1,\\\"ر\\\"],[[65199,65200],1,\\\"ز\\\"],[[65201,65204],1,\\\"س\\\"],[[65205,65208],1,\\\"ش\\\"],[[65209,65212],1,\\\"ص\\\"],[[65213,65216],1,\\\"ض\\\"],[[65217,65220],1,\\\"ط\\\"],[[65221,65224],1,\\\"ظ\\\"],[[65225,65228],1,\\\"ع\\\"],[[65229,65232],1,\\\"غ\\\"],[[65233,65236],1,\\\"ف\\\"],[[65237,65240],1,\\\"ق\\\"],[[65241,65244],1,\\\"ك\\\"],[[65245,65248],1,\\\"ل\\\"],[[65249,65252],1,\\\"م\\\"],[[65253,65256],1,\\\"ن\\\"],[[65257,65260],1,\\\"ه\\\"],[[65261,65262],1,\\\"و\\\"],[[65263,65264],1,\\\"ى\\\"],[[65265,65268],1,\\\"ي\\\"],[[65269,65270],1,\\\"لآ\\\"],[[65271,65272],1,\\\"لأ\\\"],[[65273,65274],1,\\\"لإ\\\"],[[65275,65276],1,\\\"لا\\\"],[[65277,65278],3],[65279,7],[65280,3],[65281,5,\\\"!\\\"],[65282,5,\\\"\\\\\\\"\\\"],[65283,5,\\\"#\\\"],[65284,5,\\\"$\\\"],[65285,5,\\\"%\\\"],[65286,5,\\\"&\\\"],[65287,5,\\\"'\\\"],[65288,5,\\\"(\\\"],[65289,5,\\\")\\\"],[65290,5,\\\"*\\\"],[65291,5,\\\"+\\\"],[65292,5,\\\",\\\"],[65293,1,\\\"-\\\"],[65294,1,\\\".\\\"],[65295,5,\\\"/\\\"],[65296,1,\\\"0\\\"],[65297,1,\\\"1\\\"],[65298,1,\\\"2\\\"],[65299,1,\\\"3\\\"],[65300,1,\\\"4\\\"],[65301,1,\\\"5\\\"],[65302,1,\\\"6\\\"],[65303,1,\\\"7\\\"],[65304,1,\\\"8\\\"],[65305,1,\\\"9\\\"],[65306,5,\\\":\\\"],[65307,5,\\\";\\\"],[65308,5,\\\"<\\\"],[65309,5,\\\"=\\\"],[65310,5,\\\">\\\"],[65311,5,\\\"?\\\"],[65312,5,\\\"@\\\"],[65313,1,\\\"a\\\"],[65314,1,\\\"b\\\"],[65315,1,\\\"c\\\"],[65316,1,\\\"d\\\"],[65317,1,\\\"e\\\"],[65318,1,\\\"f\\\"],[65319,1,\\\"g\\\"],[65320,1,\\\"h\\\"],[65321,1,\\\"i\\\"],[65322,1,\\\"j\\\"],[65323,1,\\\"k\\\"],[65324,1,\\\"l\\\"],[65325,1,\\\"m\\\"],[65326,1,\\\"n\\\"],[65327,1,\\\"o\\\"],[65328,1,\\\"p\\\"],[65329,1,\\\"q\\\"],[65330,1,\\\"r\\\"],[65331,1,\\\"s\\\"],[65332,1,\\\"t\\\"],[65333,1,\\\"u\\\"],[65334,1,\\\"v\\\"],[65335,1,\\\"w\\\"],[65336,1,\\\"x\\\"],[65337,1,\\\"y\\\"],[65338,1,\\\"z\\\"],[65339,5,\\\"[\\\"],[65340,5,\\\"\\\\\\\\\\\"],[65341,5,\\\"]\\\"],[65342,5,\\\"^\\\"],[65343,5,\\\"_\\\"],[65344,5,\\\"`\\\"],[65345,1,\\\"a\\\"],[65346,1,\\\"b\\\"],[65347,1,\\\"c\\\"],[65348,1,\\\"d\\\"],[65349,1,\\\"e\\\"],[65350,1,\\\"f\\\"],[65351,1,\\\"g\\\"],[65352,1,\\\"h\\\"],[65353,1,\\\"i\\\"],[65354,1,\\\"j\\\"],[65355,1,\\\"k\\\"],[65356,1,\\\"l\\\"],[65357,1,\\\"m\\\"],[65358,1,\\\"n\\\"],[65359,1,\\\"o\\\"],[65360,1,\\\"p\\\"],[65361,1,\\\"q\\\"],[65362,1,\\\"r\\\"],[65363,1,\\\"s\\\"],[65364,1,\\\"t\\\"],[65365,1,\\\"u\\\"],[65366,1,\\\"v\\\"],[65367,1,\\\"w\\\"],[65368,1,\\\"x\\\"],[65369,1,\\\"y\\\"],[65370,1,\\\"z\\\"],[65371,5,\\\"{\\\"],[65372,5,\\\"|\\\"],[65373,5,\\\"}\\\"],[65374,5,\\\"~\\\"],[65375,1,\\\"⦅\\\"],[65376,1,\\\"⦆\\\"],[65377,1,\\\".\\\"],[65378,1,\\\"「\\\"],[65379,1,\\\"」\\\"],[65380,1,\\\"、\\\"],[65381,1,\\\"・\\\"],[65382,1,\\\"ヲ\\\"],[65383,1,\\\"ァ\\\"],[65384,1,\\\"ィ\\\"],[65385,1,\\\"ゥ\\\"],[65386,1,\\\"ェ\\\"],[65387,1,\\\"ォ\\\"],[65388,1,\\\"ャ\\\"],[65389,1,\\\"ュ\\\"],[65390,1,\\\"ョ\\\"],[65391,1,\\\"ッ\\\"],[65392,1,\\\"ー\\\"],[65393,1,\\\"ア\\\"],[65394,1,\\\"イ\\\"],[65395,1,\\\"ウ\\\"],[65396,1,\\\"エ\\\"],[65397,1,\\\"オ\\\"],[65398,1,\\\"カ\\\"],[65399,1,\\\"キ\\\"],[65400,1,\\\"ク\\\"],[65401,1,\\\"ケ\\\"],[65402,1,\\\"コ\\\"],[65403,1,\\\"サ\\\"],[65404,1,\\\"シ\\\"],[65405,1,\\\"ス\\\"],[65406,1,\\\"セ\\\"],[65407,1,\\\"ソ\\\"],[65408,1,\\\"タ\\\"],[65409,1,\\\"チ\\\"],[65410,1,\\\"ツ\\\"],[65411,1,\\\"テ\\\"],[65412,1,\\\"ト\\\"],[65413,1,\\\"ナ\\\"],[65414,1,\\\"ニ\\\"],[65415,1,\\\"ヌ\\\"],[65416,1,\\\"ネ\\\"],[65417,1,\\\"ノ\\\"],[65418,1,\\\"ハ\\\"],[65419,1,\\\"ヒ\\\"],[65420,1,\\\"フ\\\"],[65421,1,\\\"ヘ\\\"],[65422,1,\\\"ホ\\\"],[65423,1,\\\"マ\\\"],[65424,1,\\\"ミ\\\"],[65425,1,\\\"ム\\\"],[65426,1,\\\"メ\\\"],[65427,1,\\\"モ\\\"],[65428,1,\\\"ヤ\\\"],[65429,1,\\\"ユ\\\"],[65430,1,\\\"ヨ\\\"],[65431,1,\\\"ラ\\\"],[65432,1,\\\"リ\\\"],[65433,1,\\\"ル\\\"],[65434,1,\\\"レ\\\"],[65435,1,\\\"ロ\\\"],[65436,1,\\\"ワ\\\"],[65437,1,\\\"ン\\\"],[65438,1,\\\"゙\\\"],[65439,1,\\\"゚\\\"],[65440,3],[65441,1,\\\"ᄀ\\\"],[65442,1,\\\"ᄁ\\\"],[65443,1,\\\"ᆪ\\\"],[65444,1,\\\"ᄂ\\\"],[65445,1,\\\"ᆬ\\\"],[65446,1,\\\"ᆭ\\\"],[65447,1,\\\"ᄃ\\\"],[65448,1,\\\"ᄄ\\\"],[65449,1,\\\"ᄅ\\\"],[65450,1,\\\"ᆰ\\\"],[65451,1,\\\"ᆱ\\\"],[65452,1,\\\"ᆲ\\\"],[65453,1,\\\"ᆳ\\\"],[65454,1,\\\"ᆴ\\\"],[65455,1,\\\"ᆵ\\\"],[65456,1,\\\"ᄚ\\\"],[65457,1,\\\"ᄆ\\\"],[65458,1,\\\"ᄇ\\\"],[65459,1,\\\"ᄈ\\\"],[65460,1,\\\"ᄡ\\\"],[65461,1,\\\"ᄉ\\\"],[65462,1,\\\"ᄊ\\\"],[65463,1,\\\"ᄋ\\\"],[65464,1,\\\"ᄌ\\\"],[65465,1,\\\"ᄍ\\\"],[65466,1,\\\"ᄎ\\\"],[65467,1,\\\"ᄏ\\\"],[65468,1,\\\"ᄐ\\\"],[65469,1,\\\"ᄑ\\\"],[65470,1,\\\"ᄒ\\\"],[[65471,65473],3],[65474,1,\\\"ᅡ\\\"],[65475,1,\\\"ᅢ\\\"],[65476,1,\\\"ᅣ\\\"],[65477,1,\\\"ᅤ\\\"],[65478,1,\\\"ᅥ\\\"],[65479,1,\\\"ᅦ\\\"],[[65480,65481],3],[65482,1,\\\"ᅧ\\\"],[65483,1,\\\"ᅨ\\\"],[65484,1,\\\"ᅩ\\\"],[65485,1,\\\"ᅪ\\\"],[65486,1,\\\"ᅫ\\\"],[65487,1,\\\"ᅬ\\\"],[[65488,65489],3],[65490,1,\\\"ᅭ\\\"],[65491,1,\\\"ᅮ\\\"],[65492,1,\\\"ᅯ\\\"],[65493,1,\\\"ᅰ\\\"],[65494,1,\\\"ᅱ\\\"],[65495,1,\\\"ᅲ\\\"],[[65496,65497],3],[65498,1,\\\"ᅳ\\\"],[65499,1,\\\"ᅴ\\\"],[65500,1,\\\"ᅵ\\\"],[[65501,65503],3],[65504,1,\\\"¢\\\"],[65505,1,\\\"£\\\"],[65506,1,\\\"¬\\\"],[65507,5,\\\" ̄\\\"],[65508,1,\\\"¦\\\"],[65509,1,\\\"¥\\\"],[65510,1,\\\"₩\\\"],[65511,3],[65512,1,\\\"│\\\"],[65513,1,\\\"←\\\"],[65514,1,\\\"↑\\\"],[65515,1,\\\"→\\\"],[65516,1,\\\"↓\\\"],[65517,1,\\\"■\\\"],[65518,1,\\\"○\\\"],[[65519,65528],3],[[65529,65531],3],[65532,3],[65533,3],[[65534,65535],3],[[65536,65547],2],[65548,3],[[65549,65574],2],[65575,3],[[65576,65594],2],[65595,3],[[65596,65597],2],[65598,3],[[65599,65613],2],[[65614,65615],3],[[65616,65629],2],[[65630,65663],3],[[65664,65786],2],[[65787,65791],3],[[65792,65794],2],[[65795,65798],3],[[65799,65843],2],[[65844,65846],3],[[65847,65855],2],[[65856,65930],2],[[65931,65932],2],[[65933,65934],2],[65935,3],[[65936,65947],2],[[65948,65951],3],[65952,2],[[65953,65999],3],[[66000,66044],2],[66045,2],[[66046,66175],3],[[66176,66204],2],[[66205,66207],3],[[66208,66256],2],[[66257,66271],3],[66272,2],[[66273,66299],2],[[66300,66303],3],[[66304,66334],2],[66335,2],[[66336,66339],2],[[66340,66348],3],[[66349,66351],2],[[66352,66368],2],[66369,2],[[66370,66377],2],[66378,2],[[66379,66383],3],[[66384,66426],2],[[66427,66431],3],[[66432,66461],2],[66462,3],[66463,2],[[66464,66499],2],[[66500,66503],3],[[66504,66511],2],[[66512,66517],2],[[66518,66559],3],[66560,1,\\\"𐐨\\\"],[66561,1,\\\"𐐩\\\"],[66562,1,\\\"𐐪\\\"],[66563,1,\\\"𐐫\\\"],[66564,1,\\\"𐐬\\\"],[66565,1,\\\"𐐭\\\"],[66566,1,\\\"𐐮\\\"],[66567,1,\\\"𐐯\\\"],[66568,1,\\\"𐐰\\\"],[66569,1,\\\"𐐱\\\"],[66570,1,\\\"𐐲\\\"],[66571,1,\\\"𐐳\\\"],[66572,1,\\\"𐐴\\\"],[66573,1,\\\"𐐵\\\"],[66574,1,\\\"𐐶\\\"],[66575,1,\\\"𐐷\\\"],[66576,1,\\\"𐐸\\\"],[66577,1,\\\"𐐹\\\"],[66578,1,\\\"𐐺\\\"],[66579,1,\\\"𐐻\\\"],[66580,1,\\\"𐐼\\\"],[66581,1,\\\"𐐽\\\"],[66582,1,\\\"𐐾\\\"],[66583,1,\\\"𐐿\\\"],[66584,1,\\\"𐑀\\\"],[66585,1,\\\"𐑁\\\"],[66586,1,\\\"𐑂\\\"],[66587,1,\\\"𐑃\\\"],[66588,1,\\\"𐑄\\\"],[66589,1,\\\"𐑅\\\"],[66590,1,\\\"𐑆\\\"],[66591,1,\\\"𐑇\\\"],[66592,1,\\\"𐑈\\\"],[66593,1,\\\"𐑉\\\"],[66594,1,\\\"𐑊\\\"],[66595,1,\\\"𐑋\\\"],[66596,1,\\\"𐑌\\\"],[66597,1,\\\"𐑍\\\"],[66598,1,\\\"𐑎\\\"],[66599,1,\\\"𐑏\\\"],[[66600,66637],2],[[66638,66717],2],[[66718,66719],3],[[66720,66729],2],[[66730,66735],3],[66736,1,\\\"𐓘\\\"],[66737,1,\\\"𐓙\\\"],[66738,1,\\\"𐓚\\\"],[66739,1,\\\"𐓛\\\"],[66740,1,\\\"𐓜\\\"],[66741,1,\\\"𐓝\\\"],[66742,1,\\\"𐓞\\\"],[66743,1,\\\"𐓟\\\"],[66744,1,\\\"𐓠\\\"],[66745,1,\\\"𐓡\\\"],[66746,1,\\\"𐓢\\\"],[66747,1,\\\"𐓣\\\"],[66748,1,\\\"𐓤\\\"],[66749,1,\\\"𐓥\\\"],[66750,1,\\\"𐓦\\\"],[66751,1,\\\"𐓧\\\"],[66752,1,\\\"𐓨\\\"],[66753,1,\\\"𐓩\\\"],[66754,1,\\\"𐓪\\\"],[66755,1,\\\"𐓫\\\"],[66756,1,\\\"𐓬\\\"],[66757,1,\\\"𐓭\\\"],[66758,1,\\\"𐓮\\\"],[66759,1,\\\"𐓯\\\"],[66760,1,\\\"𐓰\\\"],[66761,1,\\\"𐓱\\\"],[66762,1,\\\"𐓲\\\"],[66763,1,\\\"𐓳\\\"],[66764,1,\\\"𐓴\\\"],[66765,1,\\\"𐓵\\\"],[66766,1,\\\"𐓶\\\"],[66767,1,\\\"𐓷\\\"],[66768,1,\\\"𐓸\\\"],[66769,1,\\\"𐓹\\\"],[66770,1,\\\"𐓺\\\"],[66771,1,\\\"𐓻\\\"],[[66772,66775],3],[[66776,66811],2],[[66812,66815],3],[[66816,66855],2],[[66856,66863],3],[[66864,66915],2],[[66916,66926],3],[66927,2],[[66928,67071],3],[[67072,67382],2],[[67383,67391],3],[[67392,67413],2],[[67414,67423],3],[[67424,67431],2],[[67432,67583],3],[[67584,67589],2],[[67590,67591],3],[67592,2],[67593,3],[[67594,67637],2],[67638,3],[[67639,67640],2],[[67641,67643],3],[67644,2],[[67645,67646],3],[67647,2],[[67648,67669],2],[67670,3],[[67671,67679],2],[[67680,67702],2],[[67703,67711],2],[[67712,67742],2],[[67743,67750],3],[[67751,67759],2],[[67760,67807],3],[[67808,67826],2],[67827,3],[[67828,67829],2],[[67830,67834],3],[[67835,67839],2],[[67840,67861],2],[[67862,67865],2],[[67866,67867],2],[[67868,67870],3],[67871,2],[[67872,67897],2],[[67898,67902],3],[67903,2],[[67904,67967],3],[[67968,68023],2],[[68024,68027],3],[[68028,68029],2],[[68030,68031],2],[[68032,68047],2],[[68048,68049],3],[[68050,68095],2],[[68096,68099],2],[68100,3],[[68101,68102],2],[[68103,68107],3],[[68108,68115],2],[68116,3],[[68117,68119],2],[68120,3],[[68121,68147],2],[[68148,68149],2],[[68150,68151],3],[[68152,68154],2],[[68155,68158],3],[68159,2],[[68160,68167],2],[68168,2],[[68169,68175],3],[[68176,68184],2],[[68185,68191],3],[[68192,68220],2],[[68221,68223],2],[[68224,68252],2],[[68253,68255],2],[[68256,68287],3],[[68288,68295],2],[68296,2],[[68297,68326],2],[[68327,68330],3],[[68331,68342],2],[[68343,68351],3],[[68352,68405],2],[[68406,68408],3],[[68409,68415],2],[[68416,68437],2],[[68438,68439],3],[[68440,68447],2],[[68448,68466],2],[[68467,68471],3],[[68472,68479],2],[[68480,68497],2],[[68498,68504],3],[[68505,68508],2],[[68509,68520],3],[[68521,68527],2],[[68528,68607],3],[[68608,68680],2],[[68681,68735],3],[68736,1,\\\"𐳀\\\"],[68737,1,\\\"𐳁\\\"],[68738,1,\\\"𐳂\\\"],[68739,1,\\\"𐳃\\\"],[68740,1,\\\"𐳄\\\"],[68741,1,\\\"𐳅\\\"],[68742,1,\\\"𐳆\\\"],[68743,1,\\\"𐳇\\\"],[68744,1,\\\"𐳈\\\"],[68745,1,\\\"𐳉\\\"],[68746,1,\\\"𐳊\\\"],[68747,1,\\\"𐳋\\\"],[68748,1,\\\"𐳌\\\"],[68749,1,\\\"𐳍\\\"],[68750,1,\\\"𐳎\\\"],[68751,1,\\\"𐳏\\\"],[68752,1,\\\"𐳐\\\"],[68753,1,\\\"𐳑\\\"],[68754,1,\\\"𐳒\\\"],[68755,1,\\\"𐳓\\\"],[68756,1,\\\"𐳔\\\"],[68757,1,\\\"𐳕\\\"],[68758,1,\\\"𐳖\\\"],[68759,1,\\\"𐳗\\\"],[68760,1,\\\"𐳘\\\"],[68761,1,\\\"𐳙\\\"],[68762,1,\\\"𐳚\\\"],[68763,1,\\\"𐳛\\\"],[68764,1,\\\"𐳜\\\"],[68765,1,\\\"𐳝\\\"],[68766,1,\\\"𐳞\\\"],[68767,1,\\\"𐳟\\\"],[68768,1,\\\"𐳠\\\"],[68769,1,\\\"𐳡\\\"],[68770,1,\\\"𐳢\\\"],[68771,1,\\\"𐳣\\\"],[68772,1,\\\"𐳤\\\"],[68773,1,\\\"𐳥\\\"],[68774,1,\\\"𐳦\\\"],[68775,1,\\\"𐳧\\\"],[68776,1,\\\"𐳨\\\"],[68777,1,\\\"𐳩\\\"],[68778,1,\\\"𐳪\\\"],[68779,1,\\\"𐳫\\\"],[68780,1,\\\"𐳬\\\"],[68781,1,\\\"𐳭\\\"],[68782,1,\\\"𐳮\\\"],[68783,1,\\\"𐳯\\\"],[68784,1,\\\"𐳰\\\"],[68785,1,\\\"𐳱\\\"],[68786,1,\\\"𐳲\\\"],[[68787,68799],3],[[68800,68850],2],[[68851,68857],3],[[68858,68863],2],[[68864,68903],2],[[68904,68911],3],[[68912,68921],2],[[68922,69215],3],[[69216,69246],2],[[69247,69375],3],[[69376,69404],2],[[69405,69414],2],[69415,2],[[69416,69423],3],[[69424,69456],2],[[69457,69465],2],[[69466,69599],3],[[69600,69622],2],[[69623,69631],3],[[69632,69702],2],[[69703,69709],2],[[69710,69713],3],[[69714,69733],2],[[69734,69743],2],[[69744,69758],3],[69759,2],[[69760,69818],2],[[69819,69820],2],[69821,3],[[69822,69825],2],[[69826,69836],3],[69837,3],[[69838,69839],3],[[69840,69864],2],[[69865,69871],3],[[69872,69881],2],[[69882,69887],3],[[69888,69940],2],[69941,3],[[69942,69951],2],[[69952,69955],2],[[69956,69958],2],[[69959,69967],3],[[69968,70003],2],[[70004,70005],2],[70006,2],[[70007,70015],3],[[70016,70084],2],[[70085,70088],2],[[70089,70092],2],[70093,2],[[70094,70095],3],[[70096,70105],2],[70106,2],[70107,2],[70108,2],[[70109,70111],2],[70112,3],[[70113,70132],2],[[70133,70143],3],[[70144,70161],2],[70162,3],[[70163,70199],2],[[70200,70205],2],[70206,2],[[70207,70271],3],[[70272,70278],2],[70279,3],[70280,2],[70281,3],[[70282,70285],2],[70286,3],[[70287,70301],2],[70302,3],[[70303,70312],2],[70313,2],[[70314,70319],3],[[70320,70378],2],[[70379,70383],3],[[70384,70393],2],[[70394,70399],3],[70400,2],[[70401,70403],2],[70404,3],[[70405,70412],2],[[70413,70414],3],[[70415,70416],2],[[70417,70418],3],[[70419,70440],2],[70441,3],[[70442,70448],2],[70449,3],[[70450,70451],2],[70452,3],[[70453,70457],2],[70458,3],[70459,2],[[70460,70468],2],[[70469,70470],3],[[70471,70472],2],[[70473,70474],3],[[70475,70477],2],[[70478,70479],3],[70480,2],[[70481,70486],3],[70487,2],[[70488,70492],3],[[70493,70499],2],[[70500,70501],3],[[70502,70508],2],[[70509,70511],3],[[70512,70516],2],[[70517,70655],3],[[70656,70730],2],[[70731,70735],2],[[70736,70745],2],[70746,3],[70747,2],[70748,3],[70749,2],[70750,2],[70751,2],[[70752,70783],3],[[70784,70853],2],[70854,2],[70855,2],[[70856,70863],3],[[70864,70873],2],[[70874,71039],3],[[71040,71093],2],[[71094,71095],3],[[71096,71104],2],[[71105,71113],2],[[71114,71127],2],[[71128,71133],2],[[71134,71167],3],[[71168,71232],2],[[71233,71235],2],[71236,2],[[71237,71247],3],[[71248,71257],2],[[71258,71263],3],[[71264,71276],2],[[71277,71295],3],[[71296,71351],2],[71352,2],[[71353,71359],3],[[71360,71369],2],[[71370,71423],3],[[71424,71449],2],[71450,2],[[71451,71452],3],[[71453,71467],2],[[71468,71471],3],[[71472,71481],2],[[71482,71487],2],[[71488,71679],3],[[71680,71738],2],[71739,2],[[71740,71839],3],[71840,1,\\\"𑣀\\\"],[71841,1,\\\"𑣁\\\"],[71842,1,\\\"𑣂\\\"],[71843,1,\\\"𑣃\\\"],[71844,1,\\\"𑣄\\\"],[71845,1,\\\"𑣅\\\"],[71846,1,\\\"𑣆\\\"],[71847,1,\\\"𑣇\\\"],[71848,1,\\\"𑣈\\\"],[71849,1,\\\"𑣉\\\"],[71850,1,\\\"𑣊\\\"],[71851,1,\\\"𑣋\\\"],[71852,1,\\\"𑣌\\\"],[71853,1,\\\"𑣍\\\"],[71854,1,\\\"𑣎\\\"],[71855,1,\\\"𑣏\\\"],[71856,1,\\\"𑣐\\\"],[71857,1,\\\"𑣑\\\"],[71858,1,\\\"𑣒\\\"],[71859,1,\\\"𑣓\\\"],[71860,1,\\\"𑣔\\\"],[71861,1,\\\"𑣕\\\"],[71862,1,\\\"𑣖\\\"],[71863,1,\\\"𑣗\\\"],[71864,1,\\\"𑣘\\\"],[71865,1,\\\"𑣙\\\"],[71866,1,\\\"𑣚\\\"],[71867,1,\\\"𑣛\\\"],[71868,1,\\\"𑣜\\\"],[71869,1,\\\"𑣝\\\"],[71870,1,\\\"𑣞\\\"],[71871,1,\\\"𑣟\\\"],[[71872,71913],2],[[71914,71922],2],[[71923,71934],3],[71935,2],[[71936,72095],3],[[72096,72103],2],[[72104,72105],3],[[72106,72151],2],[[72152,72153],3],[[72154,72161],2],[72162,2],[[72163,72164],2],[[72165,72191],3],[[72192,72254],2],[[72255,72262],2],[72263,2],[[72264,72271],3],[[72272,72323],2],[[72324,72325],2],[[72326,72345],2],[[72346,72348],2],[72349,2],[[72350,72354],2],[[72355,72383],3],[[72384,72440],2],[[72441,72703],3],[[72704,72712],2],[72713,3],[[72714,72758],2],[72759,3],[[72760,72768],2],[[72769,72773],2],[[72774,72783],3],[[72784,72793],2],[[72794,72812],2],[[72813,72815],3],[[72816,72817],2],[[72818,72847],2],[[72848,72849],3],[[72850,72871],2],[72872,3],[[72873,72886],2],[[72887,72959],3],[[72960,72966],2],[72967,3],[[72968,72969],2],[72970,3],[[72971,73014],2],[[73015,73017],3],[73018,2],[73019,3],[[73020,73021],2],[73022,3],[[73023,73031],2],[[73032,73039],3],[[73040,73049],2],[[73050,73055],3],[[73056,73061],2],[73062,3],[[73063,73064],2],[73065,3],[[73066,73102],2],[73103,3],[[73104,73105],2],[73106,3],[[73107,73112],2],[[73113,73119],3],[[73120,73129],2],[[73130,73439],3],[[73440,73462],2],[[73463,73464],2],[[73465,73663],3],[[73664,73713],2],[[73714,73726],3],[73727,2],[[73728,74606],2],[[74607,74648],2],[74649,2],[[74650,74751],3],[[74752,74850],2],[[74851,74862],2],[74863,3],[[74864,74867],2],[74868,2],[[74869,74879],3],[[74880,75075],2],[[75076,77823],3],[[77824,78894],2],[78895,3],[[78896,78904],3],[[78905,82943],3],[[82944,83526],2],[[83527,92159],3],[[92160,92728],2],[[92729,92735],3],[[92736,92766],2],[92767,3],[[92768,92777],2],[[92778,92781],3],[[92782,92783],2],[[92784,92879],3],[[92880,92909],2],[[92910,92911],3],[[92912,92916],2],[92917,2],[[92918,92927],3],[[92928,92982],2],[[92983,92991],2],[[92992,92995],2],[[92996,92997],2],[[92998,93007],3],[[93008,93017],2],[93018,3],[[93019,93025],2],[93026,3],[[93027,93047],2],[[93048,93052],3],[[93053,93071],2],[[93072,93759],3],[93760,1,\\\"𖹠\\\"],[93761,1,\\\"𖹡\\\"],[93762,1,\\\"𖹢\\\"],[93763,1,\\\"𖹣\\\"],[93764,1,\\\"𖹤\\\"],[93765,1,\\\"𖹥\\\"],[93766,1,\\\"𖹦\\\"],[93767,1,\\\"𖹧\\\"],[93768,1,\\\"𖹨\\\"],[93769,1,\\\"𖹩\\\"],[93770,1,\\\"𖹪\\\"],[93771,1,\\\"𖹫\\\"],[93772,1,\\\"𖹬\\\"],[93773,1,\\\"𖹭\\\"],[93774,1,\\\"𖹮\\\"],[93775,1,\\\"𖹯\\\"],[93776,1,\\\"𖹰\\\"],[93777,1,\\\"𖹱\\\"],[93778,1,\\\"𖹲\\\"],[93779,1,\\\"𖹳\\\"],[93780,1,\\\"𖹴\\\"],[93781,1,\\\"𖹵\\\"],[93782,1,\\\"𖹶\\\"],[93783,1,\\\"𖹷\\\"],[93784,1,\\\"𖹸\\\"],[93785,1,\\\"𖹹\\\"],[93786,1,\\\"𖹺\\\"],[93787,1,\\\"𖹻\\\"],[93788,1,\\\"𖹼\\\"],[93789,1,\\\"𖹽\\\"],[93790,1,\\\"𖹾\\\"],[93791,1,\\\"𖹿\\\"],[[93792,93823],2],[[93824,93850],2],[[93851,93951],3],[[93952,94020],2],[[94021,94026],2],[[94027,94030],3],[94031,2],[[94032,94078],2],[[94079,94087],2],[[94088,94094],3],[[94095,94111],2],[[94112,94175],3],[94176,2],[94177,2],[94178,2],[94179,2],[[94180,94207],3],[[94208,100332],2],[[100333,100337],2],[[100338,100343],2],[[100344,100351],3],[[100352,101106],2],[[101107,110591],3],[[110592,110593],2],[[110594,110878],2],[[110879,110927],3],[[110928,110930],2],[[110931,110947],3],[[110948,110951],2],[[110952,110959],3],[[110960,111355],2],[[111356,113663],3],[[113664,113770],2],[[113771,113775],3],[[113776,113788],2],[[113789,113791],3],[[113792,113800],2],[[113801,113807],3],[[113808,113817],2],[[113818,113819],3],[113820,2],[[113821,113822],2],[113823,2],[[113824,113827],7],[[113828,118783],3],[[118784,119029],2],[[119030,119039],3],[[119040,119078],2],[[119079,119080],3],[119081,2],[[119082,119133],2],[119134,1,\\\"𝅗𝅥\\\"],[119135,1,\\\"𝅘𝅥\\\"],[119136,1,\\\"𝅘𝅥𝅮\\\"],[119137,1,\\\"𝅘𝅥𝅯\\\"],[119138,1,\\\"𝅘𝅥𝅰\\\"],[119139,1,\\\"𝅘𝅥𝅱\\\"],[119140,1,\\\"𝅘𝅥𝅲\\\"],[[119141,119154],2],[[119155,119162],3],[[119163,119226],2],[119227,1,\\\"𝆹𝅥\\\"],[119228,1,\\\"𝆺𝅥\\\"],[119229,1,\\\"𝆹𝅥𝅮\\\"],[119230,1,\\\"𝆺𝅥𝅮\\\"],[119231,1,\\\"𝆹𝅥𝅯\\\"],[119232,1,\\\"𝆺𝅥𝅯\\\"],[[119233,119261],2],[[119262,119272],2],[[119273,119295],3],[[119296,119365],2],[[119366,119519],3],[[119520,119539],2],[[119540,119551],3],[[119552,119638],2],[[119639,119647],3],[[119648,119665],2],[[119666,119672],2],[[119673,119807],3],[119808,1,\\\"a\\\"],[119809,1,\\\"b\\\"],[119810,1,\\\"c\\\"],[119811,1,\\\"d\\\"],[119812,1,\\\"e\\\"],[119813,1,\\\"f\\\"],[119814,1,\\\"g\\\"],[119815,1,\\\"h\\\"],[119816,1,\\\"i\\\"],[119817,1,\\\"j\\\"],[119818,1,\\\"k\\\"],[119819,1,\\\"l\\\"],[119820,1,\\\"m\\\"],[119821,1,\\\"n\\\"],[119822,1,\\\"o\\\"],[119823,1,\\\"p\\\"],[119824,1,\\\"q\\\"],[119825,1,\\\"r\\\"],[119826,1,\\\"s\\\"],[119827,1,\\\"t\\\"],[119828,1,\\\"u\\\"],[119829,1,\\\"v\\\"],[119830,1,\\\"w\\\"],[119831,1,\\\"x\\\"],[119832,1,\\\"y\\\"],[119833,1,\\\"z\\\"],[119834,1,\\\"a\\\"],[119835,1,\\\"b\\\"],[119836,1,\\\"c\\\"],[119837,1,\\\"d\\\"],[119838,1,\\\"e\\\"],[119839,1,\\\"f\\\"],[119840,1,\\\"g\\\"],[119841,1,\\\"h\\\"],[119842,1,\\\"i\\\"],[119843,1,\\\"j\\\"],[119844,1,\\\"k\\\"],[119845,1,\\\"l\\\"],[119846,1,\\\"m\\\"],[119847,1,\\\"n\\\"],[119848,1,\\\"o\\\"],[119849,1,\\\"p\\\"],[119850,1,\\\"q\\\"],[119851,1,\\\"r\\\"],[119852,1,\\\"s\\\"],[119853,1,\\\"t\\\"],[119854,1,\\\"u\\\"],[119855,1,\\\"v\\\"],[119856,1,\\\"w\\\"],[119857,1,\\\"x\\\"],[119858,1,\\\"y\\\"],[119859,1,\\\"z\\\"],[119860,1,\\\"a\\\"],[119861,1,\\\"b\\\"],[119862,1,\\\"c\\\"],[119863,1,\\\"d\\\"],[119864,1,\\\"e\\\"],[119865,1,\\\"f\\\"],[119866,1,\\\"g\\\"],[119867,1,\\\"h\\\"],[119868,1,\\\"i\\\"],[119869,1,\\\"j\\\"],[119870,1,\\\"k\\\"],[119871,1,\\\"l\\\"],[119872,1,\\\"m\\\"],[119873,1,\\\"n\\\"],[119874,1,\\\"o\\\"],[119875,1,\\\"p\\\"],[119876,1,\\\"q\\\"],[119877,1,\\\"r\\\"],[119878,1,\\\"s\\\"],[119879,1,\\\"t\\\"],[119880,1,\\\"u\\\"],[119881,1,\\\"v\\\"],[119882,1,\\\"w\\\"],[119883,1,\\\"x\\\"],[119884,1,\\\"y\\\"],[119885,1,\\\"z\\\"],[119886,1,\\\"a\\\"],[119887,1,\\\"b\\\"],[119888,1,\\\"c\\\"],[119889,1,\\\"d\\\"],[119890,1,\\\"e\\\"],[119891,1,\\\"f\\\"],[119892,1,\\\"g\\\"],[119893,3],[119894,1,\\\"i\\\"],[119895,1,\\\"j\\\"],[119896,1,\\\"k\\\"],[119897,1,\\\"l\\\"],[119898,1,\\\"m\\\"],[119899,1,\\\"n\\\"],[119900,1,\\\"o\\\"],[119901,1,\\\"p\\\"],[119902,1,\\\"q\\\"],[119903,1,\\\"r\\\"],[119904,1,\\\"s\\\"],[119905,1,\\\"t\\\"],[119906,1,\\\"u\\\"],[119907,1,\\\"v\\\"],[119908,1,\\\"w\\\"],[119909,1,\\\"x\\\"],[119910,1,\\\"y\\\"],[119911,1,\\\"z\\\"],[119912,1,\\\"a\\\"],[119913,1,\\\"b\\\"],[119914,1,\\\"c\\\"],[119915,1,\\\"d\\\"],[119916,1,\\\"e\\\"],[119917,1,\\\"f\\\"],[119918,1,\\\"g\\\"],[119919,1,\\\"h\\\"],[119920,1,\\\"i\\\"],[119921,1,\\\"j\\\"],[119922,1,\\\"k\\\"],[119923,1,\\\"l\\\"],[119924,1,\\\"m\\\"],[119925,1,\\\"n\\\"],[119926,1,\\\"o\\\"],[119927,1,\\\"p\\\"],[119928,1,\\\"q\\\"],[119929,1,\\\"r\\\"],[119930,1,\\\"s\\\"],[119931,1,\\\"t\\\"],[119932,1,\\\"u\\\"],[119933,1,\\\"v\\\"],[119934,1,\\\"w\\\"],[119935,1,\\\"x\\\"],[119936,1,\\\"y\\\"],[119937,1,\\\"z\\\"],[119938,1,\\\"a\\\"],[119939,1,\\\"b\\\"],[119940,1,\\\"c\\\"],[119941,1,\\\"d\\\"],[119942,1,\\\"e\\\"],[119943,1,\\\"f\\\"],[119944,1,\\\"g\\\"],[119945,1,\\\"h\\\"],[119946,1,\\\"i\\\"],[119947,1,\\\"j\\\"],[119948,1,\\\"k\\\"],[119949,1,\\\"l\\\"],[119950,1,\\\"m\\\"],[119951,1,\\\"n\\\"],[119952,1,\\\"o\\\"],[119953,1,\\\"p\\\"],[119954,1,\\\"q\\\"],[119955,1,\\\"r\\\"],[119956,1,\\\"s\\\"],[119957,1,\\\"t\\\"],[119958,1,\\\"u\\\"],[119959,1,\\\"v\\\"],[119960,1,\\\"w\\\"],[119961,1,\\\"x\\\"],[119962,1,\\\"y\\\"],[119963,1,\\\"z\\\"],[119964,1,\\\"a\\\"],[119965,3],[119966,1,\\\"c\\\"],[119967,1,\\\"d\\\"],[[119968,119969],3],[119970,1,\\\"g\\\"],[[119971,119972],3],[119973,1,\\\"j\\\"],[119974,1,\\\"k\\\"],[[119975,119976],3],[119977,1,\\\"n\\\"],[119978,1,\\\"o\\\"],[119979,1,\\\"p\\\"],[119980,1,\\\"q\\\"],[119981,3],[119982,1,\\\"s\\\"],[119983,1,\\\"t\\\"],[119984,1,\\\"u\\\"],[119985,1,\\\"v\\\"],[119986,1,\\\"w\\\"],[119987,1,\\\"x\\\"],[119988,1,\\\"y\\\"],[119989,1,\\\"z\\\"],[119990,1,\\\"a\\\"],[119991,1,\\\"b\\\"],[119992,1,\\\"c\\\"],[119993,1,\\\"d\\\"],[119994,3],[119995,1,\\\"f\\\"],[119996,3],[119997,1,\\\"h\\\"],[119998,1,\\\"i\\\"],[119999,1,\\\"j\\\"],[120000,1,\\\"k\\\"],[120001,1,\\\"l\\\"],[120002,1,\\\"m\\\"],[120003,1,\\\"n\\\"],[120004,3],[120005,1,\\\"p\\\"],[120006,1,\\\"q\\\"],[120007,1,\\\"r\\\"],[120008,1,\\\"s\\\"],[120009,1,\\\"t\\\"],[120010,1,\\\"u\\\"],[120011,1,\\\"v\\\"],[120012,1,\\\"w\\\"],[120013,1,\\\"x\\\"],[120014,1,\\\"y\\\"],[120015,1,\\\"z\\\"],[120016,1,\\\"a\\\"],[120017,1,\\\"b\\\"],[120018,1,\\\"c\\\"],[120019,1,\\\"d\\\"],[120020,1,\\\"e\\\"],[120021,1,\\\"f\\\"],[120022,1,\\\"g\\\"],[120023,1,\\\"h\\\"],[120024,1,\\\"i\\\"],[120025,1,\\\"j\\\"],[120026,1,\\\"k\\\"],[120027,1,\\\"l\\\"],[120028,1,\\\"m\\\"],[120029,1,\\\"n\\\"],[120030,1,\\\"o\\\"],[120031,1,\\\"p\\\"],[120032,1,\\\"q\\\"],[120033,1,\\\"r\\\"],[120034,1,\\\"s\\\"],[120035,1,\\\"t\\\"],[120036,1,\\\"u\\\"],[120037,1,\\\"v\\\"],[120038,1,\\\"w\\\"],[120039,1,\\\"x\\\"],[120040,1,\\\"y\\\"],[120041,1,\\\"z\\\"],[120042,1,\\\"a\\\"],[120043,1,\\\"b\\\"],[120044,1,\\\"c\\\"],[120045,1,\\\"d\\\"],[120046,1,\\\"e\\\"],[120047,1,\\\"f\\\"],[120048,1,\\\"g\\\"],[120049,1,\\\"h\\\"],[120050,1,\\\"i\\\"],[120051,1,\\\"j\\\"],[120052,1,\\\"k\\\"],[120053,1,\\\"l\\\"],[120054,1,\\\"m\\\"],[120055,1,\\\"n\\\"],[120056,1,\\\"o\\\"],[120057,1,\\\"p\\\"],[120058,1,\\\"q\\\"],[120059,1,\\\"r\\\"],[120060,1,\\\"s\\\"],[120061,1,\\\"t\\\"],[120062,1,\\\"u\\\"],[120063,1,\\\"v\\\"],[120064,1,\\\"w\\\"],[120065,1,\\\"x\\\"],[120066,1,\\\"y\\\"],[120067,1,\\\"z\\\"],[120068,1,\\\"a\\\"],[120069,1,\\\"b\\\"],[120070,3],[120071,1,\\\"d\\\"],[120072,1,\\\"e\\\"],[120073,1,\\\"f\\\"],[120074,1,\\\"g\\\"],[[120075,120076],3],[120077,1,\\\"j\\\"],[120078,1,\\\"k\\\"],[120079,1,\\\"l\\\"],[120080,1,\\\"m\\\"],[120081,1,\\\"n\\\"],[120082,1,\\\"o\\\"],[120083,1,\\\"p\\\"],[120084,1,\\\"q\\\"],[120085,3],[120086,1,\\\"s\\\"],[120087,1,\\\"t\\\"],[120088,1,\\\"u\\\"],[120089,1,\\\"v\\\"],[120090,1,\\\"w\\\"],[120091,1,\\\"x\\\"],[120092,1,\\\"y\\\"],[120093,3],[120094,1,\\\"a\\\"],[120095,1,\\\"b\\\"],[120096,1,\\\"c\\\"],[120097,1,\\\"d\\\"],[120098,1,\\\"e\\\"],[120099,1,\\\"f\\\"],[120100,1,\\\"g\\\"],[120101,1,\\\"h\\\"],[120102,1,\\\"i\\\"],[120103,1,\\\"j\\\"],[120104,1,\\\"k\\\"],[120105,1,\\\"l\\\"],[120106,1,\\\"m\\\"],[120107,1,\\\"n\\\"],[120108,1,\\\"o\\\"],[120109,1,\\\"p\\\"],[120110,1,\\\"q\\\"],[120111,1,\\\"r\\\"],[120112,1,\\\"s\\\"],[120113,1,\\\"t\\\"],[120114,1,\\\"u\\\"],[120115,1,\\\"v\\\"],[120116,1,\\\"w\\\"],[120117,1,\\\"x\\\"],[120118,1,\\\"y\\\"],[120119,1,\\\"z\\\"],[120120,1,\\\"a\\\"],[120121,1,\\\"b\\\"],[120122,3],[120123,1,\\\"d\\\"],[120124,1,\\\"e\\\"],[120125,1,\\\"f\\\"],[120126,1,\\\"g\\\"],[120127,3],[120128,1,\\\"i\\\"],[120129,1,\\\"j\\\"],[120130,1,\\\"k\\\"],[120131,1,\\\"l\\\"],[120132,1,\\\"m\\\"],[120133,3],[120134,1,\\\"o\\\"],[[120135,120137],3],[120138,1,\\\"s\\\"],[120139,1,\\\"t\\\"],[120140,1,\\\"u\\\"],[120141,1,\\\"v\\\"],[120142,1,\\\"w\\\"],[120143,1,\\\"x\\\"],[120144,1,\\\"y\\\"],[120145,3],[120146,1,\\\"a\\\"],[120147,1,\\\"b\\\"],[120148,1,\\\"c\\\"],[120149,1,\\\"d\\\"],[120150,1,\\\"e\\\"],[120151,1,\\\"f\\\"],[120152,1,\\\"g\\\"],[120153,1,\\\"h\\\"],[120154,1,\\\"i\\\"],[120155,1,\\\"j\\\"],[120156,1,\\\"k\\\"],[120157,1,\\\"l\\\"],[120158,1,\\\"m\\\"],[120159,1,\\\"n\\\"],[120160,1,\\\"o\\\"],[120161,1,\\\"p\\\"],[120162,1,\\\"q\\\"],[120163,1,\\\"r\\\"],[120164,1,\\\"s\\\"],[120165,1,\\\"t\\\"],[120166,1,\\\"u\\\"],[120167,1,\\\"v\\\"],[120168,1,\\\"w\\\"],[120169,1,\\\"x\\\"],[120170,1,\\\"y\\\"],[120171,1,\\\"z\\\"],[120172,1,\\\"a\\\"],[120173,1,\\\"b\\\"],[120174,1,\\\"c\\\"],[120175,1,\\\"d\\\"],[120176,1,\\\"e\\\"],[120177,1,\\\"f\\\"],[120178,1,\\\"g\\\"],[120179,1,\\\"h\\\"],[120180,1,\\\"i\\\"],[120181,1,\\\"j\\\"],[120182,1,\\\"k\\\"],[120183,1,\\\"l\\\"],[120184,1,\\\"m\\\"],[120185,1,\\\"n\\\"],[120186,1,\\\"o\\\"],[120187,1,\\\"p\\\"],[120188,1,\\\"q\\\"],[120189,1,\\\"r\\\"],[120190,1,\\\"s\\\"],[120191,1,\\\"t\\\"],[120192,1,\\\"u\\\"],[120193,1,\\\"v\\\"],[120194,1,\\\"w\\\"],[120195,1,\\\"x\\\"],[120196,1,\\\"y\\\"],[120197,1,\\\"z\\\"],[120198,1,\\\"a\\\"],[120199,1,\\\"b\\\"],[120200,1,\\\"c\\\"],[120201,1,\\\"d\\\"],[120202,1,\\\"e\\\"],[120203,1,\\\"f\\\"],[120204,1,\\\"g\\\"],[120205,1,\\\"h\\\"],[120206,1,\\\"i\\\"],[120207,1,\\\"j\\\"],[120208,1,\\\"k\\\"],[120209,1,\\\"l\\\"],[120210,1,\\\"m\\\"],[120211,1,\\\"n\\\"],[120212,1,\\\"o\\\"],[120213,1,\\\"p\\\"],[120214,1,\\\"q\\\"],[120215,1,\\\"r\\\"],[120216,1,\\\"s\\\"],[120217,1,\\\"t\\\"],[120218,1,\\\"u\\\"],[120219,1,\\\"v\\\"],[120220,1,\\\"w\\\"],[120221,1,\\\"x\\\"],[120222,1,\\\"y\\\"],[120223,1,\\\"z\\\"],[120224,1,\\\"a\\\"],[120225,1,\\\"b\\\"],[120226,1,\\\"c\\\"],[120227,1,\\\"d\\\"],[120228,1,\\\"e\\\"],[120229,1,\\\"f\\\"],[120230,1,\\\"g\\\"],[120231,1,\\\"h\\\"],[120232,1,\\\"i\\\"],[120233,1,\\\"j\\\"],[120234,1,\\\"k\\\"],[120235,1,\\\"l\\\"],[120236,1,\\\"m\\\"],[120237,1,\\\"n\\\"],[120238,1,\\\"o\\\"],[120239,1,\\\"p\\\"],[120240,1,\\\"q\\\"],[120241,1,\\\"r\\\"],[120242,1,\\\"s\\\"],[120243,1,\\\"t\\\"],[120244,1,\\\"u\\\"],[120245,1,\\\"v\\\"],[120246,1,\\\"w\\\"],[120247,1,\\\"x\\\"],[120248,1,\\\"y\\\"],[120249,1,\\\"z\\\"],[120250,1,\\\"a\\\"],[120251,1,\\\"b\\\"],[120252,1,\\\"c\\\"],[120253,1,\\\"d\\\"],[120254,1,\\\"e\\\"],[120255,1,\\\"f\\\"],[120256,1,\\\"g\\\"],[120257,1,\\\"h\\\"],[120258,1,\\\"i\\\"],[120259,1,\\\"j\\\"],[120260,1,\\\"k\\\"],[120261,1,\\\"l\\\"],[120262,1,\\\"m\\\"],[120263,1,\\\"n\\\"],[120264,1,\\\"o\\\"],[120265,1,\\\"p\\\"],[120266,1,\\\"q\\\"],[120267,1,\\\"r\\\"],[120268,1,\\\"s\\\"],[120269,1,\\\"t\\\"],[120270,1,\\\"u\\\"],[120271,1,\\\"v\\\"],[120272,1,\\\"w\\\"],[120273,1,\\\"x\\\"],[120274,1,\\\"y\\\"],[120275,1,\\\"z\\\"],[120276,1,\\\"a\\\"],[120277,1,\\\"b\\\"],[120278,1,\\\"c\\\"],[120279,1,\\\"d\\\"],[120280,1,\\\"e\\\"],[120281,1,\\\"f\\\"],[120282,1,\\\"g\\\"],[120283,1,\\\"h\\\"],[120284,1,\\\"i\\\"],[120285,1,\\\"j\\\"],[120286,1,\\\"k\\\"],[120287,1,\\\"l\\\"],[120288,1,\\\"m\\\"],[120289,1,\\\"n\\\"],[120290,1,\\\"o\\\"],[120291,1,\\\"p\\\"],[120292,1,\\\"q\\\"],[120293,1,\\\"r\\\"],[120294,1,\\\"s\\\"],[120295,1,\\\"t\\\"],[120296,1,\\\"u\\\"],[120297,1,\\\"v\\\"],[120298,1,\\\"w\\\"],[120299,1,\\\"x\\\"],[120300,1,\\\"y\\\"],[120301,1,\\\"z\\\"],[120302,1,\\\"a\\\"],[120303,1,\\\"b\\\"],[120304,1,\\\"c\\\"],[120305,1,\\\"d\\\"],[120306,1,\\\"e\\\"],[120307,1,\\\"f\\\"],[120308,1,\\\"g\\\"],[120309,1,\\\"h\\\"],[120310,1,\\\"i\\\"],[120311,1,\\\"j\\\"],[120312,1,\\\"k\\\"],[120313,1,\\\"l\\\"],[120314,1,\\\"m\\\"],[120315,1,\\\"n\\\"],[120316,1,\\\"o\\\"],[120317,1,\\\"p\\\"],[120318,1,\\\"q\\\"],[120319,1,\\\"r\\\"],[120320,1,\\\"s\\\"],[120321,1,\\\"t\\\"],[120322,1,\\\"u\\\"],[120323,1,\\\"v\\\"],[120324,1,\\\"w\\\"],[120325,1,\\\"x\\\"],[120326,1,\\\"y\\\"],[120327,1,\\\"z\\\"],[120328,1,\\\"a\\\"],[120329,1,\\\"b\\\"],[120330,1,\\\"c\\\"],[120331,1,\\\"d\\\"],[120332,1,\\\"e\\\"],[120333,1,\\\"f\\\"],[120334,1,\\\"g\\\"],[120335,1,\\\"h\\\"],[120336,1,\\\"i\\\"],[120337,1,\\\"j\\\"],[120338,1,\\\"k\\\"],[120339,1,\\\"l\\\"],[120340,1,\\\"m\\\"],[120341,1,\\\"n\\\"],[120342,1,\\\"o\\\"],[120343,1,\\\"p\\\"],[120344,1,\\\"q\\\"],[120345,1,\\\"r\\\"],[120346,1,\\\"s\\\"],[120347,1,\\\"t\\\"],[120348,1,\\\"u\\\"],[120349,1,\\\"v\\\"],[120350,1,\\\"w\\\"],[120351,1,\\\"x\\\"],[120352,1,\\\"y\\\"],[120353,1,\\\"z\\\"],[120354,1,\\\"a\\\"],[120355,1,\\\"b\\\"],[120356,1,\\\"c\\\"],[120357,1,\\\"d\\\"],[120358,1,\\\"e\\\"],[120359,1,\\\"f\\\"],[120360,1,\\\"g\\\"],[120361,1,\\\"h\\\"],[120362,1,\\\"i\\\"],[120363,1,\\\"j\\\"],[120364,1,\\\"k\\\"],[120365,1,\\\"l\\\"],[120366,1,\\\"m\\\"],[120367,1,\\\"n\\\"],[120368,1,\\\"o\\\"],[120369,1,\\\"p\\\"],[120370,1,\\\"q\\\"],[120371,1,\\\"r\\\"],[120372,1,\\\"s\\\"],[120373,1,\\\"t\\\"],[120374,1,\\\"u\\\"],[120375,1,\\\"v\\\"],[120376,1,\\\"w\\\"],[120377,1,\\\"x\\\"],[120378,1,\\\"y\\\"],[120379,1,\\\"z\\\"],[120380,1,\\\"a\\\"],[120381,1,\\\"b\\\"],[120382,1,\\\"c\\\"],[120383,1,\\\"d\\\"],[120384,1,\\\"e\\\"],[120385,1,\\\"f\\\"],[120386,1,\\\"g\\\"],[120387,1,\\\"h\\\"],[120388,1,\\\"i\\\"],[120389,1,\\\"j\\\"],[120390,1,\\\"k\\\"],[120391,1,\\\"l\\\"],[120392,1,\\\"m\\\"],[120393,1,\\\"n\\\"],[120394,1,\\\"o\\\"],[120395,1,\\\"p\\\"],[120396,1,\\\"q\\\"],[120397,1,\\\"r\\\"],[120398,1,\\\"s\\\"],[120399,1,\\\"t\\\"],[120400,1,\\\"u\\\"],[120401,1,\\\"v\\\"],[120402,1,\\\"w\\\"],[120403,1,\\\"x\\\"],[120404,1,\\\"y\\\"],[120405,1,\\\"z\\\"],[120406,1,\\\"a\\\"],[120407,1,\\\"b\\\"],[120408,1,\\\"c\\\"],[120409,1,\\\"d\\\"],[120410,1,\\\"e\\\"],[120411,1,\\\"f\\\"],[120412,1,\\\"g\\\"],[120413,1,\\\"h\\\"],[120414,1,\\\"i\\\"],[120415,1,\\\"j\\\"],[120416,1,\\\"k\\\"],[120417,1,\\\"l\\\"],[120418,1,\\\"m\\\"],[120419,1,\\\"n\\\"],[120420,1,\\\"o\\\"],[120421,1,\\\"p\\\"],[120422,1,\\\"q\\\"],[120423,1,\\\"r\\\"],[120424,1,\\\"s\\\"],[120425,1,\\\"t\\\"],[120426,1,\\\"u\\\"],[120427,1,\\\"v\\\"],[120428,1,\\\"w\\\"],[120429,1,\\\"x\\\"],[120430,1,\\\"y\\\"],[120431,1,\\\"z\\\"],[120432,1,\\\"a\\\"],[120433,1,\\\"b\\\"],[120434,1,\\\"c\\\"],[120435,1,\\\"d\\\"],[120436,1,\\\"e\\\"],[120437,1,\\\"f\\\"],[120438,1,\\\"g\\\"],[120439,1,\\\"h\\\"],[120440,1,\\\"i\\\"],[120441,1,\\\"j\\\"],[120442,1,\\\"k\\\"],[120443,1,\\\"l\\\"],[120444,1,\\\"m\\\"],[120445,1,\\\"n\\\"],[120446,1,\\\"o\\\"],[120447,1,\\\"p\\\"],[120448,1,\\\"q\\\"],[120449,1,\\\"r\\\"],[120450,1,\\\"s\\\"],[120451,1,\\\"t\\\"],[120452,1,\\\"u\\\"],[120453,1,\\\"v\\\"],[120454,1,\\\"w\\\"],[120455,1,\\\"x\\\"],[120456,1,\\\"y\\\"],[120457,1,\\\"z\\\"],[120458,1,\\\"a\\\"],[120459,1,\\\"b\\\"],[120460,1,\\\"c\\\"],[120461,1,\\\"d\\\"],[120462,1,\\\"e\\\"],[120463,1,\\\"f\\\"],[120464,1,\\\"g\\\"],[120465,1,\\\"h\\\"],[120466,1,\\\"i\\\"],[120467,1,\\\"j\\\"],[120468,1,\\\"k\\\"],[120469,1,\\\"l\\\"],[120470,1,\\\"m\\\"],[120471,1,\\\"n\\\"],[120472,1,\\\"o\\\"],[120473,1,\\\"p\\\"],[120474,1,\\\"q\\\"],[120475,1,\\\"r\\\"],[120476,1,\\\"s\\\"],[120477,1,\\\"t\\\"],[120478,1,\\\"u\\\"],[120479,1,\\\"v\\\"],[120480,1,\\\"w\\\"],[120481,1,\\\"x\\\"],[120482,1,\\\"y\\\"],[120483,1,\\\"z\\\"],[120484,1,\\\"ı\\\"],[120485,1,\\\"ȷ\\\"],[[120486,120487],3],[120488,1,\\\"α\\\"],[120489,1,\\\"β\\\"],[120490,1,\\\"γ\\\"],[120491,1,\\\"δ\\\"],[120492,1,\\\"ε\\\"],[120493,1,\\\"ζ\\\"],[120494,1,\\\"η\\\"],[120495,1,\\\"θ\\\"],[120496,1,\\\"ι\\\"],[120497,1,\\\"κ\\\"],[120498,1,\\\"λ\\\"],[120499,1,\\\"μ\\\"],[120500,1,\\\"ν\\\"],[120501,1,\\\"ξ\\\"],[120502,1,\\\"ο\\\"],[120503,1,\\\"π\\\"],[120504,1,\\\"ρ\\\"],[120505,1,\\\"θ\\\"],[120506,1,\\\"σ\\\"],[120507,1,\\\"τ\\\"],[120508,1,\\\"υ\\\"],[120509,1,\\\"φ\\\"],[120510,1,\\\"χ\\\"],[120511,1,\\\"ψ\\\"],[120512,1,\\\"ω\\\"],[120513,1,\\\"∇\\\"],[120514,1,\\\"α\\\"],[120515,1,\\\"β\\\"],[120516,1,\\\"γ\\\"],[120517,1,\\\"δ\\\"],[120518,1,\\\"ε\\\"],[120519,1,\\\"ζ\\\"],[120520,1,\\\"η\\\"],[120521,1,\\\"θ\\\"],[120522,1,\\\"ι\\\"],[120523,1,\\\"κ\\\"],[120524,1,\\\"λ\\\"],[120525,1,\\\"μ\\\"],[120526,1,\\\"ν\\\"],[120527,1,\\\"ξ\\\"],[120528,1,\\\"ο\\\"],[120529,1,\\\"π\\\"],[120530,1,\\\"ρ\\\"],[[120531,120532],1,\\\"σ\\\"],[120533,1,\\\"τ\\\"],[120534,1,\\\"υ\\\"],[120535,1,\\\"φ\\\"],[120536,1,\\\"χ\\\"],[120537,1,\\\"ψ\\\"],[120538,1,\\\"ω\\\"],[120539,1,\\\"∂\\\"],[120540,1,\\\"ε\\\"],[120541,1,\\\"θ\\\"],[120542,1,\\\"κ\\\"],[120543,1,\\\"φ\\\"],[120544,1,\\\"ρ\\\"],[120545,1,\\\"π\\\"],[120546,1,\\\"α\\\"],[120547,1,\\\"β\\\"],[120548,1,\\\"γ\\\"],[120549,1,\\\"δ\\\"],[120550,1,\\\"ε\\\"],[120551,1,\\\"ζ\\\"],[120552,1,\\\"η\\\"],[120553,1,\\\"θ\\\"],[120554,1,\\\"ι\\\"],[120555,1,\\\"κ\\\"],[120556,1,\\\"λ\\\"],[120557,1,\\\"μ\\\"],[120558,1,\\\"ν\\\"],[120559,1,\\\"ξ\\\"],[120560,1,\\\"ο\\\"],[120561,1,\\\"π\\\"],[120562,1,\\\"ρ\\\"],[120563,1,\\\"θ\\\"],[120564,1,\\\"σ\\\"],[120565,1,\\\"τ\\\"],[120566,1,\\\"υ\\\"],[120567,1,\\\"φ\\\"],[120568,1,\\\"χ\\\"],[120569,1,\\\"ψ\\\"],[120570,1,\\\"ω\\\"],[120571,1,\\\"∇\\\"],[120572,1,\\\"α\\\"],[120573,1,\\\"β\\\"],[120574,1,\\\"γ\\\"],[120575,1,\\\"δ\\\"],[120576,1,\\\"ε\\\"],[120577,1,\\\"ζ\\\"],[120578,1,\\\"η\\\"],[120579,1,\\\"θ\\\"],[120580,1,\\\"ι\\\"],[120581,1,\\\"κ\\\"],[120582,1,\\\"λ\\\"],[120583,1,\\\"μ\\\"],[120584,1,\\\"ν\\\"],[120585,1,\\\"ξ\\\"],[120586,1,\\\"ο\\\"],[120587,1,\\\"π\\\"],[120588,1,\\\"ρ\\\"],[[120589,120590],1,\\\"σ\\\"],[120591,1,\\\"τ\\\"],[120592,1,\\\"υ\\\"],[120593,1,\\\"φ\\\"],[120594,1,\\\"χ\\\"],[120595,1,\\\"ψ\\\"],[120596,1,\\\"ω\\\"],[120597,1,\\\"∂\\\"],[120598,1,\\\"ε\\\"],[120599,1,\\\"θ\\\"],[120600,1,\\\"κ\\\"],[120601,1,\\\"φ\\\"],[120602,1,\\\"ρ\\\"],[120603,1,\\\"π\\\"],[120604,1,\\\"α\\\"],[120605,1,\\\"β\\\"],[120606,1,\\\"γ\\\"],[120607,1,\\\"δ\\\"],[120608,1,\\\"ε\\\"],[120609,1,\\\"ζ\\\"],[120610,1,\\\"η\\\"],[120611,1,\\\"θ\\\"],[120612,1,\\\"ι\\\"],[120613,1,\\\"κ\\\"],[120614,1,\\\"λ\\\"],[120615,1,\\\"μ\\\"],[120616,1,\\\"ν\\\"],[120617,1,\\\"ξ\\\"],[120618,1,\\\"ο\\\"],[120619,1,\\\"π\\\"],[120620,1,\\\"ρ\\\"],[120621,1,\\\"θ\\\"],[120622,1,\\\"σ\\\"],[120623,1,\\\"τ\\\"],[120624,1,\\\"υ\\\"],[120625,1,\\\"φ\\\"],[120626,1,\\\"χ\\\"],[120627,1,\\\"ψ\\\"],[120628,1,\\\"ω\\\"],[120629,1,\\\"∇\\\"],[120630,1,\\\"α\\\"],[120631,1,\\\"β\\\"],[120632,1,\\\"γ\\\"],[120633,1,\\\"δ\\\"],[120634,1,\\\"ε\\\"],[120635,1,\\\"ζ\\\"],[120636,1,\\\"η\\\"],[120637,1,\\\"θ\\\"],[120638,1,\\\"ι\\\"],[120639,1,\\\"κ\\\"],[120640,1,\\\"λ\\\"],[120641,1,\\\"μ\\\"],[120642,1,\\\"ν\\\"],[120643,1,\\\"ξ\\\"],[120644,1,\\\"ο\\\"],[120645,1,\\\"π\\\"],[120646,1,\\\"ρ\\\"],[[120647,120648],1,\\\"σ\\\"],[120649,1,\\\"τ\\\"],[120650,1,\\\"υ\\\"],[120651,1,\\\"φ\\\"],[120652,1,\\\"χ\\\"],[120653,1,\\\"ψ\\\"],[120654,1,\\\"ω\\\"],[120655,1,\\\"∂\\\"],[120656,1,\\\"ε\\\"],[120657,1,\\\"θ\\\"],[120658,1,\\\"κ\\\"],[120659,1,\\\"φ\\\"],[120660,1,\\\"ρ\\\"],[120661,1,\\\"π\\\"],[120662,1,\\\"α\\\"],[120663,1,\\\"β\\\"],[120664,1,\\\"γ\\\"],[120665,1,\\\"δ\\\"],[120666,1,\\\"ε\\\"],[120667,1,\\\"ζ\\\"],[120668,1,\\\"η\\\"],[120669,1,\\\"θ\\\"],[120670,1,\\\"ι\\\"],[120671,1,\\\"κ\\\"],[120672,1,\\\"λ\\\"],[120673,1,\\\"μ\\\"],[120674,1,\\\"ν\\\"],[120675,1,\\\"ξ\\\"],[120676,1,\\\"ο\\\"],[120677,1,\\\"π\\\"],[120678,1,\\\"ρ\\\"],[120679,1,\\\"θ\\\"],[120680,1,\\\"σ\\\"],[120681,1,\\\"τ\\\"],[120682,1,\\\"υ\\\"],[120683,1,\\\"φ\\\"],[120684,1,\\\"χ\\\"],[120685,1,\\\"ψ\\\"],[120686,1,\\\"ω\\\"],[120687,1,\\\"∇\\\"],[120688,1,\\\"α\\\"],[120689,1,\\\"β\\\"],[120690,1,\\\"γ\\\"],[120691,1,\\\"δ\\\"],[120692,1,\\\"ε\\\"],[120693,1,\\\"ζ\\\"],[120694,1,\\\"η\\\"],[120695,1,\\\"θ\\\"],[120696,1,\\\"ι\\\"],[120697,1,\\\"κ\\\"],[120698,1,\\\"λ\\\"],[120699,1,\\\"μ\\\"],[120700,1,\\\"ν\\\"],[120701,1,\\\"ξ\\\"],[120702,1,\\\"ο\\\"],[120703,1,\\\"π\\\"],[120704,1,\\\"ρ\\\"],[[120705,120706],1,\\\"σ\\\"],[120707,1,\\\"τ\\\"],[120708,1,\\\"υ\\\"],[120709,1,\\\"φ\\\"],[120710,1,\\\"χ\\\"],[120711,1,\\\"ψ\\\"],[120712,1,\\\"ω\\\"],[120713,1,\\\"∂\\\"],[120714,1,\\\"ε\\\"],[120715,1,\\\"θ\\\"],[120716,1,\\\"κ\\\"],[120717,1,\\\"φ\\\"],[120718,1,\\\"ρ\\\"],[120719,1,\\\"π\\\"],[120720,1,\\\"α\\\"],[120721,1,\\\"β\\\"],[120722,1,\\\"γ\\\"],[120723,1,\\\"δ\\\"],[120724,1,\\\"ε\\\"],[120725,1,\\\"ζ\\\"],[120726,1,\\\"η\\\"],[120727,1,\\\"θ\\\"],[120728,1,\\\"ι\\\"],[120729,1,\\\"κ\\\"],[120730,1,\\\"λ\\\"],[120731,1,\\\"μ\\\"],[120732,1,\\\"ν\\\"],[120733,1,\\\"ξ\\\"],[120734,1,\\\"ο\\\"],[120735,1,\\\"π\\\"],[120736,1,\\\"ρ\\\"],[120737,1,\\\"θ\\\"],[120738,1,\\\"σ\\\"],[120739,1,\\\"τ\\\"],[120740,1,\\\"υ\\\"],[120741,1,\\\"φ\\\"],[120742,1,\\\"χ\\\"],[120743,1,\\\"ψ\\\"],[120744,1,\\\"ω\\\"],[120745,1,\\\"∇\\\"],[120746,1,\\\"α\\\"],[120747,1,\\\"β\\\"],[120748,1,\\\"γ\\\"],[120749,1,\\\"δ\\\"],[120750,1,\\\"ε\\\"],[120751,1,\\\"ζ\\\"],[120752,1,\\\"η\\\"],[120753,1,\\\"θ\\\"],[120754,1,\\\"ι\\\"],[120755,1,\\\"κ\\\"],[120756,1,\\\"λ\\\"],[120757,1,\\\"μ\\\"],[120758,1,\\\"ν\\\"],[120759,1,\\\"ξ\\\"],[120760,1,\\\"ο\\\"],[120761,1,\\\"π\\\"],[120762,1,\\\"ρ\\\"],[[120763,120764],1,\\\"σ\\\"],[120765,1,\\\"τ\\\"],[120766,1,\\\"υ\\\"],[120767,1,\\\"φ\\\"],[120768,1,\\\"χ\\\"],[120769,1,\\\"ψ\\\"],[120770,1,\\\"ω\\\"],[120771,1,\\\"∂\\\"],[120772,1,\\\"ε\\\"],[120773,1,\\\"θ\\\"],[120774,1,\\\"κ\\\"],[120775,1,\\\"φ\\\"],[120776,1,\\\"ρ\\\"],[120777,1,\\\"π\\\"],[[120778,120779],1,\\\"ϝ\\\"],[[120780,120781],3],[120782,1,\\\"0\\\"],[120783,1,\\\"1\\\"],[120784,1,\\\"2\\\"],[120785,1,\\\"3\\\"],[120786,1,\\\"4\\\"],[120787,1,\\\"5\\\"],[120788,1,\\\"6\\\"],[120789,1,\\\"7\\\"],[120790,1,\\\"8\\\"],[120791,1,\\\"9\\\"],[120792,1,\\\"0\\\"],[120793,1,\\\"1\\\"],[120794,1,\\\"2\\\"],[120795,1,\\\"3\\\"],[120796,1,\\\"4\\\"],[120797,1,\\\"5\\\"],[120798,1,\\\"6\\\"],[120799,1,\\\"7\\\"],[120800,1,\\\"8\\\"],[120801,1,\\\"9\\\"],[120802,1,\\\"0\\\"],[120803,1,\\\"1\\\"],[120804,1,\\\"2\\\"],[120805,1,\\\"3\\\"],[120806,1,\\\"4\\\"],[120807,1,\\\"5\\\"],[120808,1,\\\"6\\\"],[120809,1,\\\"7\\\"],[120810,1,\\\"8\\\"],[120811,1,\\\"9\\\"],[120812,1,\\\"0\\\"],[120813,1,\\\"1\\\"],[120814,1,\\\"2\\\"],[120815,1,\\\"3\\\"],[120816,1,\\\"4\\\"],[120817,1,\\\"5\\\"],[120818,1,\\\"6\\\"],[120819,1,\\\"7\\\"],[120820,1,\\\"8\\\"],[120821,1,\\\"9\\\"],[120822,1,\\\"0\\\"],[120823,1,\\\"1\\\"],[120824,1,\\\"2\\\"],[120825,1,\\\"3\\\"],[120826,1,\\\"4\\\"],[120827,1,\\\"5\\\"],[120828,1,\\\"6\\\"],[120829,1,\\\"7\\\"],[120830,1,\\\"8\\\"],[120831,1,\\\"9\\\"],[[120832,121343],2],[[121344,121398],2],[[121399,121402],2],[[121403,121452],2],[[121453,121460],2],[121461,2],[[121462,121475],2],[121476,2],[[121477,121483],2],[[121484,121498],3],[[121499,121503],2],[121504,3],[[121505,121519],2],[[121520,122879],3],[[122880,122886],2],[122887,3],[[122888,122904],2],[[122905,122906],3],[[122907,122913],2],[122914,3],[[122915,122916],2],[122917,3],[[122918,122922],2],[[122923,123135],3],[[123136,123180],2],[[123181,123183],3],[[123184,123197],2],[[123198,123199],3],[[123200,123209],2],[[123210,123213],3],[123214,2],[123215,2],[[123216,123583],3],[[123584,123641],2],[[123642,123646],3],[123647,2],[[123648,124927],3],[[124928,125124],2],[[125125,125126],3],[[125127,125135],2],[[125136,125142],2],[[125143,125183],3],[125184,1,\\\"𞤢\\\"],[125185,1,\\\"𞤣\\\"],[125186,1,\\\"𞤤\\\"],[125187,1,\\\"𞤥\\\"],[125188,1,\\\"𞤦\\\"],[125189,1,\\\"𞤧\\\"],[125190,1,\\\"𞤨\\\"],[125191,1,\\\"𞤩\\\"],[125192,1,\\\"𞤪\\\"],[125193,1,\\\"𞤫\\\"],[125194,1,\\\"𞤬\\\"],[125195,1,\\\"𞤭\\\"],[125196,1,\\\"𞤮\\\"],[125197,1,\\\"𞤯\\\"],[125198,1,\\\"𞤰\\\"],[125199,1,\\\"𞤱\\\"],[125200,1,\\\"𞤲\\\"],[125201,1,\\\"𞤳\\\"],[125202,1,\\\"𞤴\\\"],[125203,1,\\\"𞤵\\\"],[125204,1,\\\"𞤶\\\"],[125205,1,\\\"𞤷\\\"],[125206,1,\\\"𞤸\\\"],[125207,1,\\\"𞤹\\\"],[125208,1,\\\"𞤺\\\"],[125209,1,\\\"𞤻\\\"],[125210,1,\\\"𞤼\\\"],[125211,1,\\\"𞤽\\\"],[125212,1,\\\"𞤾\\\"],[125213,1,\\\"𞤿\\\"],[125214,1,\\\"𞥀\\\"],[125215,1,\\\"𞥁\\\"],[125216,1,\\\"𞥂\\\"],[125217,1,\\\"𞥃\\\"],[[125218,125258],2],[125259,2],[[125260,125263],3],[[125264,125273],2],[[125274,125277],3],[[125278,125279],2],[[125280,126064],3],[[126065,126132],2],[[126133,126208],3],[[126209,126269],2],[[126270,126463],3],[126464,1,\\\"ا\\\"],[126465,1,\\\"ب\\\"],[126466,1,\\\"ج\\\"],[126467,1,\\\"د\\\"],[126468,3],[126469,1,\\\"و\\\"],[126470,1,\\\"ز\\\"],[126471,1,\\\"ح\\\"],[126472,1,\\\"ط\\\"],[126473,1,\\\"ي\\\"],[126474,1,\\\"ك\\\"],[126475,1,\\\"ل\\\"],[126476,1,\\\"م\\\"],[126477,1,\\\"ن\\\"],[126478,1,\\\"س\\\"],[126479,1,\\\"ع\\\"],[126480,1,\\\"ف\\\"],[126481,1,\\\"ص\\\"],[126482,1,\\\"ق\\\"],[126483,1,\\\"ر\\\"],[126484,1,\\\"ش\\\"],[126485,1,\\\"ت\\\"],[126486,1,\\\"ث\\\"],[126487,1,\\\"خ\\\"],[126488,1,\\\"ذ\\\"],[126489,1,\\\"ض\\\"],[126490,1,\\\"ظ\\\"],[126491,1,\\\"غ\\\"],[126492,1,\\\"ٮ\\\"],[126493,1,\\\"ں\\\"],[126494,1,\\\"ڡ\\\"],[126495,1,\\\"ٯ\\\"],[126496,3],[126497,1,\\\"ب\\\"],[126498,1,\\\"ج\\\"],[126499,3],[126500,1,\\\"ه\\\"],[[126501,126502],3],[126503,1,\\\"ح\\\"],[126504,3],[126505,1,\\\"ي\\\"],[126506,1,\\\"ك\\\"],[126507,1,\\\"ل\\\"],[126508,1,\\\"م\\\"],[126509,1,\\\"ن\\\"],[126510,1,\\\"س\\\"],[126511,1,\\\"ع\\\"],[126512,1,\\\"ف\\\"],[126513,1,\\\"ص\\\"],[126514,1,\\\"ق\\\"],[126515,3],[126516,1,\\\"ش\\\"],[126517,1,\\\"ت\\\"],[126518,1,\\\"ث\\\"],[126519,1,\\\"خ\\\"],[126520,3],[126521,1,\\\"ض\\\"],[126522,3],[126523,1,\\\"غ\\\"],[[126524,126529],3],[126530,1,\\\"ج\\\"],[[126531,126534],3],[126535,1,\\\"ح\\\"],[126536,3],[126537,1,\\\"ي\\\"],[126538,3],[126539,1,\\\"ل\\\"],[126540,3],[126541,1,\\\"ن\\\"],[126542,1,\\\"س\\\"],[126543,1,\\\"ع\\\"],[126544,3],[126545,1,\\\"ص\\\"],[126546,1,\\\"ق\\\"],[126547,3],[126548,1,\\\"ش\\\"],[[126549,126550],3],[126551,1,\\\"خ\\\"],[126552,3],[126553,1,\\\"ض\\\"],[126554,3],[126555,1,\\\"غ\\\"],[126556,3],[126557,1,\\\"ں\\\"],[126558,3],[126559,1,\\\"ٯ\\\"],[126560,3],[126561,1,\\\"ب\\\"],[126562,1,\\\"ج\\\"],[126563,3],[126564,1,\\\"ه\\\"],[[126565,126566],3],[126567,1,\\\"ح\\\"],[126568,1,\\\"ط\\\"],[126569,1,\\\"ي\\\"],[126570,1,\\\"ك\\\"],[126571,3],[126572,1,\\\"م\\\"],[126573,1,\\\"ن\\\"],[126574,1,\\\"س\\\"],[126575,1,\\\"ع\\\"],[126576,1,\\\"ف\\\"],[126577,1,\\\"ص\\\"],[126578,1,\\\"ق\\\"],[126579,3],[126580,1,\\\"ش\\\"],[126581,1,\\\"ت\\\"],[126582,1,\\\"ث\\\"],[126583,1,\\\"خ\\\"],[126584,3],[126585,1,\\\"ض\\\"],[126586,1,\\\"ظ\\\"],[126587,1,\\\"غ\\\"],[126588,1,\\\"ٮ\\\"],[126589,3],[126590,1,\\\"ڡ\\\"],[126591,3],[126592,1,\\\"ا\\\"],[126593,1,\\\"ب\\\"],[126594,1,\\\"ج\\\"],[126595,1,\\\"د\\\"],[126596,1,\\\"ه\\\"],[126597,1,\\\"و\\\"],[126598,1,\\\"ز\\\"],[126599,1,\\\"ح\\\"],[126600,1,\\\"ط\\\"],[126601,1,\\\"ي\\\"],[126602,3],[126603,1,\\\"ل\\\"],[126604,1,\\\"م\\\"],[126605,1,\\\"ن\\\"],[126606,1,\\\"س\\\"],[126607,1,\\\"ع\\\"],[126608,1,\\\"ف\\\"],[126609,1,\\\"ص\\\"],[126610,1,\\\"ق\\\"],[126611,1,\\\"ر\\\"],[126612,1,\\\"ش\\\"],[126613,1,\\\"ت\\\"],[126614,1,\\\"ث\\\"],[126615,1,\\\"خ\\\"],[126616,1,\\\"ذ\\\"],[126617,1,\\\"ض\\\"],[126618,1,\\\"ظ\\\"],[126619,1,\\\"غ\\\"],[[126620,126624],3],[126625,1,\\\"ب\\\"],[126626,1,\\\"ج\\\"],[126627,1,\\\"د\\\"],[126628,3],[126629,1,\\\"و\\\"],[126630,1,\\\"ز\\\"],[126631,1,\\\"ح\\\"],[126632,1,\\\"ط\\\"],[126633,1,\\\"ي\\\"],[126634,3],[126635,1,\\\"ل\\\"],[126636,1,\\\"م\\\"],[126637,1,\\\"ن\\\"],[126638,1,\\\"س\\\"],[126639,1,\\\"ع\\\"],[126640,1,\\\"ف\\\"],[126641,1,\\\"ص\\\"],[126642,1,\\\"ق\\\"],[126643,1,\\\"ر\\\"],[126644,1,\\\"ش\\\"],[126645,1,\\\"ت\\\"],[126646,1,\\\"ث\\\"],[126647,1,\\\"خ\\\"],[126648,1,\\\"ذ\\\"],[126649,1,\\\"ض\\\"],[126650,1,\\\"ظ\\\"],[126651,1,\\\"غ\\\"],[[126652,126703],3],[[126704,126705],2],[[126706,126975],3],[[126976,127019],2],[[127020,127023],3],[[127024,127123],2],[[127124,127135],3],[[127136,127150],2],[[127151,127152],3],[[127153,127166],2],[127167,2],[127168,3],[[127169,127183],2],[127184,3],[[127185,127199],2],[[127200,127221],2],[[127222,127231],3],[127232,3],[127233,5,\\\"0,\\\"],[127234,5,\\\"1,\\\"],[127235,5,\\\"2,\\\"],[127236,5,\\\"3,\\\"],[127237,5,\\\"4,\\\"],[127238,5,\\\"5,\\\"],[127239,5,\\\"6,\\\"],[127240,5,\\\"7,\\\"],[127241,5,\\\"8,\\\"],[127242,5,\\\"9,\\\"],[[127243,127244],2],[[127245,127247],3],[127248,5,\\\"(a)\\\"],[127249,5,\\\"(b)\\\"],[127250,5,\\\"(c)\\\"],[127251,5,\\\"(d)\\\"],[127252,5,\\\"(e)\\\"],[127253,5,\\\"(f)\\\"],[127254,5,\\\"(g)\\\"],[127255,5,\\\"(h)\\\"],[127256,5,\\\"(i)\\\"],[127257,5,\\\"(j)\\\"],[127258,5,\\\"(k)\\\"],[127259,5,\\\"(l)\\\"],[127260,5,\\\"(m)\\\"],[127261,5,\\\"(n)\\\"],[127262,5,\\\"(o)\\\"],[127263,5,\\\"(p)\\\"],[127264,5,\\\"(q)\\\"],[127265,5,\\\"(r)\\\"],[127266,5,\\\"(s)\\\"],[127267,5,\\\"(t)\\\"],[127268,5,\\\"(u)\\\"],[127269,5,\\\"(v)\\\"],[127270,5,\\\"(w)\\\"],[127271,5,\\\"(x)\\\"],[127272,5,\\\"(y)\\\"],[127273,5,\\\"(z)\\\"],[127274,1,\\\"〔s〕\\\"],[127275,1,\\\"c\\\"],[127276,1,\\\"r\\\"],[127277,1,\\\"cd\\\"],[127278,1,\\\"wz\\\"],[127279,2],[127280,1,\\\"a\\\"],[127281,1,\\\"b\\\"],[127282,1,\\\"c\\\"],[127283,1,\\\"d\\\"],[127284,1,\\\"e\\\"],[127285,1,\\\"f\\\"],[127286,1,\\\"g\\\"],[127287,1,\\\"h\\\"],[127288,1,\\\"i\\\"],[127289,1,\\\"j\\\"],[127290,1,\\\"k\\\"],[127291,1,\\\"l\\\"],[127292,1,\\\"m\\\"],[127293,1,\\\"n\\\"],[127294,1,\\\"o\\\"],[127295,1,\\\"p\\\"],[127296,1,\\\"q\\\"],[127297,1,\\\"r\\\"],[127298,1,\\\"s\\\"],[127299,1,\\\"t\\\"],[127300,1,\\\"u\\\"],[127301,1,\\\"v\\\"],[127302,1,\\\"w\\\"],[127303,1,\\\"x\\\"],[127304,1,\\\"y\\\"],[127305,1,\\\"z\\\"],[127306,1,\\\"hv\\\"],[127307,1,\\\"mv\\\"],[127308,1,\\\"sd\\\"],[127309,1,\\\"ss\\\"],[127310,1,\\\"ppv\\\"],[127311,1,\\\"wc\\\"],[[127312,127318],2],[127319,2],[[127320,127326],2],[127327,2],[[127328,127337],2],[127338,1,\\\"mc\\\"],[127339,1,\\\"md\\\"],[127340,1,\\\"mr\\\"],[[127341,127343],3],[[127344,127352],2],[127353,2],[127354,2],[[127355,127356],2],[[127357,127358],2],[127359,2],[[127360,127369],2],[[127370,127373],2],[[127374,127375],2],[127376,1,\\\"dj\\\"],[[127377,127386],2],[[127387,127404],2],[[127405,127461],3],[[127462,127487],2],[127488,1,\\\"ほか\\\"],[127489,1,\\\"ココ\\\"],[127490,1,\\\"サ\\\"],[[127491,127503],3],[127504,1,\\\"手\\\"],[127505,1,\\\"字\\\"],[127506,1,\\\"双\\\"],[127507,1,\\\"デ\\\"],[127508,1,\\\"二\\\"],[127509,1,\\\"多\\\"],[127510,1,\\\"解\\\"],[127511,1,\\\"天\\\"],[127512,1,\\\"交\\\"],[127513,1,\\\"映\\\"],[127514,1,\\\"無\\\"],[127515,1,\\\"料\\\"],[127516,1,\\\"前\\\"],[127517,1,\\\"後\\\"],[127518,1,\\\"再\\\"],[127519,1,\\\"新\\\"],[127520,1,\\\"初\\\"],[127521,1,\\\"終\\\"],[127522,1,\\\"生\\\"],[127523,1,\\\"販\\\"],[127524,1,\\\"声\\\"],[127525,1,\\\"吹\\\"],[127526,1,\\\"演\\\"],[127527,1,\\\"投\\\"],[127528,1,\\\"捕\\\"],[127529,1,\\\"一\\\"],[127530,1,\\\"三\\\"],[127531,1,\\\"遊\\\"],[127532,1,\\\"左\\\"],[127533,1,\\\"中\\\"],[127534,1,\\\"右\\\"],[127535,1,\\\"指\\\"],[127536,1,\\\"走\\\"],[127537,1,\\\"打\\\"],[127538,1,\\\"禁\\\"],[127539,1,\\\"空\\\"],[127540,1,\\\"合\\\"],[127541,1,\\\"満\\\"],[127542,1,\\\"有\\\"],[127543,1,\\\"月\\\"],[127544,1,\\\"申\\\"],[127545,1,\\\"割\\\"],[127546,1,\\\"営\\\"],[127547,1,\\\"配\\\"],[[127548,127551],3],[127552,1,\\\"〔本〕\\\"],[127553,1,\\\"〔三〕\\\"],[127554,1,\\\"〔二〕\\\"],[127555,1,\\\"〔安〕\\\"],[127556,1,\\\"〔点〕\\\"],[127557,1,\\\"〔打〕\\\"],[127558,1,\\\"〔盗〕\\\"],[127559,1,\\\"〔勝〕\\\"],[127560,1,\\\"〔敗〕\\\"],[[127561,127567],3],[127568,1,\\\"得\\\"],[127569,1,\\\"可\\\"],[[127570,127583],3],[[127584,127589],2],[[127590,127743],3],[[127744,127776],2],[[127777,127788],2],[[127789,127791],2],[[127792,127797],2],[127798,2],[[127799,127868],2],[127869,2],[[127870,127871],2],[[127872,127891],2],[[127892,127903],2],[[127904,127940],2],[127941,2],[[127942,127946],2],[[127947,127950],2],[[127951,127955],2],[[127956,127967],2],[[127968,127984],2],[[127985,127991],2],[[127992,127999],2],[[128000,128062],2],[128063,2],[128064,2],[128065,2],[[128066,128247],2],[128248,2],[[128249,128252],2],[[128253,128254],2],[128255,2],[[128256,128317],2],[[128318,128319],2],[[128320,128323],2],[[128324,128330],2],[[128331,128335],2],[[128336,128359],2],[[128360,128377],2],[128378,2],[[128379,128419],2],[128420,2],[[128421,128506],2],[[128507,128511],2],[128512,2],[[128513,128528],2],[128529,2],[[128530,128532],2],[128533,2],[128534,2],[128535,2],[128536,2],[128537,2],[128538,2],[128539,2],[[128540,128542],2],[128543,2],[[128544,128549],2],[[128550,128551],2],[[128552,128555],2],[128556,2],[128557,2],[[128558,128559],2],[[128560,128563],2],[128564,2],[[128565,128576],2],[[128577,128578],2],[[128579,128580],2],[[128581,128591],2],[[128592,128639],2],[[128640,128709],2],[[128710,128719],2],[128720,2],[[128721,128722],2],[[128723,128724],2],[128725,2],[[128726,128735],3],[[128736,128748],2],[[128749,128751],3],[[128752,128755],2],[[128756,128758],2],[[128759,128760],2],[128761,2],[128762,2],[[128763,128767],3],[[128768,128883],2],[[128884,128895],3],[[128896,128980],2],[[128981,128984],2],[[128985,128991],3],[[128992,129003],2],[[129004,129023],3],[[129024,129035],2],[[129036,129039],3],[[129040,129095],2],[[129096,129103],3],[[129104,129113],2],[[129114,129119],3],[[129120,129159],2],[[129160,129167],3],[[129168,129197],2],[[129198,129279],3],[[129280,129291],2],[129292,3],[[129293,129295],2],[[129296,129304],2],[[129305,129310],2],[129311,2],[[129312,129319],2],[[129320,129327],2],[129328,2],[[129329,129330],2],[[129331,129342],2],[129343,2],[[129344,129355],2],[129356,2],[[129357,129359],2],[[129360,129374],2],[[129375,129387],2],[[129388,129392],2],[129393,2],[129394,3],[[129395,129398],2],[[129399,129401],3],[129402,2],[129403,2],[[129404,129407],2],[[129408,129412],2],[[129413,129425],2],[[129426,129431],2],[[129432,129442],2],[[129443,129444],3],[[129445,129450],2],[[129451,129453],3],[[129454,129455],2],[[129456,129465],2],[[129466,129471],2],[129472,2],[[129473,129474],2],[[129475,129482],2],[[129483,129484],3],[[129485,129487],2],[[129488,129510],2],[[129511,129535],2],[[129536,129619],2],[[129620,129631],3],[[129632,129645],2],[[129646,129647],3],[[129648,129651],2],[[129652,129655],3],[[129656,129658],2],[[129659,129663],3],[[129664,129666],2],[[129667,129679],3],[[129680,129685],2],[[129686,131069],3],[[131070,131071],3],[[131072,173782],2],[[173783,173823],3],[[173824,177972],2],[[177973,177983],3],[[177984,178205],2],[[178206,178207],3],[[178208,183969],2],[[183970,183983],3],[[183984,191456],2],[[191457,194559],3],[194560,1,\\\"丽\\\"],[194561,1,\\\"丸\\\"],[194562,1,\\\"乁\\\"],[194563,1,\\\"𠄢\\\"],[194564,1,\\\"你\\\"],[194565,1,\\\"侮\\\"],[194566,1,\\\"侻\\\"],[194567,1,\\\"倂\\\"],[194568,1,\\\"偺\\\"],[194569,1,\\\"備\\\"],[194570,1,\\\"僧\\\"],[194571,1,\\\"像\\\"],[194572,1,\\\"㒞\\\"],[194573,1,\\\"𠘺\\\"],[194574,1,\\\"免\\\"],[194575,1,\\\"兔\\\"],[194576,1,\\\"兤\\\"],[194577,1,\\\"具\\\"],[194578,1,\\\"𠔜\\\"],[194579,1,\\\"㒹\\\"],[194580,1,\\\"內\\\"],[194581,1,\\\"再\\\"],[194582,1,\\\"𠕋\\\"],[194583,1,\\\"冗\\\"],[194584,1,\\\"冤\\\"],[194585,1,\\\"仌\\\"],[194586,1,\\\"冬\\\"],[194587,1,\\\"况\\\"],[194588,1,\\\"𩇟\\\"],[194589,1,\\\"凵\\\"],[194590,1,\\\"刃\\\"],[194591,1,\\\"㓟\\\"],[194592,1,\\\"刻\\\"],[194593,1,\\\"剆\\\"],[194594,1,\\\"割\\\"],[194595,1,\\\"剷\\\"],[194596,1,\\\"㔕\\\"],[194597,1,\\\"勇\\\"],[194598,1,\\\"勉\\\"],[194599,1,\\\"勤\\\"],[194600,1,\\\"勺\\\"],[194601,1,\\\"包\\\"],[194602,1,\\\"匆\\\"],[194603,1,\\\"北\\\"],[194604,1,\\\"卉\\\"],[194605,1,\\\"卑\\\"],[194606,1,\\\"博\\\"],[194607,1,\\\"即\\\"],[194608,1,\\\"卽\\\"],[[194609,194611],1,\\\"卿\\\"],[194612,1,\\\"𠨬\\\"],[194613,1,\\\"灰\\\"],[194614,1,\\\"及\\\"],[194615,1,\\\"叟\\\"],[194616,1,\\\"𠭣\\\"],[194617,1,\\\"叫\\\"],[194618,1,\\\"叱\\\"],[194619,1,\\\"吆\\\"],[194620,1,\\\"咞\\\"],[194621,1,\\\"吸\\\"],[194622,1,\\\"呈\\\"],[194623,1,\\\"周\\\"],[194624,1,\\\"咢\\\"],[194625,1,\\\"哶\\\"],[194626,1,\\\"唐\\\"],[194627,1,\\\"啓\\\"],[194628,1,\\\"啣\\\"],[[194629,194630],1,\\\"善\\\"],[194631,1,\\\"喙\\\"],[194632,1,\\\"喫\\\"],[194633,1,\\\"喳\\\"],[194634,1,\\\"嗂\\\"],[194635,1,\\\"圖\\\"],[194636,1,\\\"嘆\\\"],[194637,1,\\\"圗\\\"],[194638,1,\\\"噑\\\"],[194639,1,\\\"噴\\\"],[194640,1,\\\"切\\\"],[194641,1,\\\"壮\\\"],[194642,1,\\\"城\\\"],[194643,1,\\\"埴\\\"],[194644,1,\\\"堍\\\"],[194645,1,\\\"型\\\"],[194646,1,\\\"堲\\\"],[194647,1,\\\"報\\\"],[194648,1,\\\"墬\\\"],[194649,1,\\\"𡓤\\\"],[194650,1,\\\"売\\\"],[194651,1,\\\"壷\\\"],[194652,1,\\\"夆\\\"],[194653,1,\\\"多\\\"],[194654,1,\\\"夢\\\"],[194655,1,\\\"奢\\\"],[194656,1,\\\"𡚨\\\"],[194657,1,\\\"𡛪\\\"],[194658,1,\\\"姬\\\"],[194659,1,\\\"娛\\\"],[194660,1,\\\"娧\\\"],[194661,1,\\\"姘\\\"],[194662,1,\\\"婦\\\"],[194663,1,\\\"㛮\\\"],[194664,3],[194665,1,\\\"嬈\\\"],[[194666,194667],1,\\\"嬾\\\"],[194668,1,\\\"𡧈\\\"],[194669,1,\\\"寃\\\"],[194670,1,\\\"寘\\\"],[194671,1,\\\"寧\\\"],[194672,1,\\\"寳\\\"],[194673,1,\\\"𡬘\\\"],[194674,1,\\\"寿\\\"],[194675,1,\\\"将\\\"],[194676,3],[194677,1,\\\"尢\\\"],[194678,1,\\\"㞁\\\"],[194679,1,\\\"屠\\\"],[194680,1,\\\"屮\\\"],[194681,1,\\\"峀\\\"],[194682,1,\\\"岍\\\"],[194683,1,\\\"𡷤\\\"],[194684,1,\\\"嵃\\\"],[194685,1,\\\"𡷦\\\"],[194686,1,\\\"嵮\\\"],[194687,1,\\\"嵫\\\"],[194688,1,\\\"嵼\\\"],[194689,1,\\\"巡\\\"],[194690,1,\\\"巢\\\"],[194691,1,\\\"㠯\\\"],[194692,1,\\\"巽\\\"],[194693,1,\\\"帨\\\"],[194694,1,\\\"帽\\\"],[194695,1,\\\"幩\\\"],[194696,1,\\\"㡢\\\"],[194697,1,\\\"𢆃\\\"],[194698,1,\\\"㡼\\\"],[194699,1,\\\"庰\\\"],[194700,1,\\\"庳\\\"],[194701,1,\\\"庶\\\"],[194702,1,\\\"廊\\\"],[194703,1,\\\"𪎒\\\"],[194704,1,\\\"廾\\\"],[[194705,194706],1,\\\"𢌱\\\"],[194707,1,\\\"舁\\\"],[[194708,194709],1,\\\"弢\\\"],[194710,1,\\\"㣇\\\"],[194711,1,\\\"𣊸\\\"],[194712,1,\\\"𦇚\\\"],[194713,1,\\\"形\\\"],[194714,1,\\\"彫\\\"],[194715,1,\\\"㣣\\\"],[194716,1,\\\"徚\\\"],[194717,1,\\\"忍\\\"],[194718,1,\\\"志\\\"],[194719,1,\\\"忹\\\"],[194720,1,\\\"悁\\\"],[194721,1,\\\"㤺\\\"],[194722,1,\\\"㤜\\\"],[194723,1,\\\"悔\\\"],[194724,1,\\\"𢛔\\\"],[194725,1,\\\"惇\\\"],[194726,1,\\\"慈\\\"],[194727,1,\\\"慌\\\"],[194728,1,\\\"慎\\\"],[194729,1,\\\"慌\\\"],[194730,1,\\\"慺\\\"],[194731,1,\\\"憎\\\"],[194732,1,\\\"憲\\\"],[194733,1,\\\"憤\\\"],[194734,1,\\\"憯\\\"],[194735,1,\\\"懞\\\"],[194736,1,\\\"懲\\\"],[194737,1,\\\"懶\\\"],[194738,1,\\\"成\\\"],[194739,1,\\\"戛\\\"],[194740,1,\\\"扝\\\"],[194741,1,\\\"抱\\\"],[194742,1,\\\"拔\\\"],[194743,1,\\\"捐\\\"],[194744,1,\\\"𢬌\\\"],[194745,1,\\\"挽\\\"],[194746,1,\\\"拼\\\"],[194747,1,\\\"捨\\\"],[194748,1,\\\"掃\\\"],[194749,1,\\\"揤\\\"],[194750,1,\\\"𢯱\\\"],[194751,1,\\\"搢\\\"],[194752,1,\\\"揅\\\"],[194753,1,\\\"掩\\\"],[194754,1,\\\"㨮\\\"],[194755,1,\\\"摩\\\"],[194756,1,\\\"摾\\\"],[194757,1,\\\"撝\\\"],[194758,1,\\\"摷\\\"],[194759,1,\\\"㩬\\\"],[194760,1,\\\"敏\\\"],[194761,1,\\\"敬\\\"],[194762,1,\\\"𣀊\\\"],[194763,1,\\\"旣\\\"],[194764,1,\\\"書\\\"],[194765,1,\\\"晉\\\"],[194766,1,\\\"㬙\\\"],[194767,1,\\\"暑\\\"],[194768,1,\\\"㬈\\\"],[194769,1,\\\"㫤\\\"],[194770,1,\\\"冒\\\"],[194771,1,\\\"冕\\\"],[194772,1,\\\"最\\\"],[194773,1,\\\"暜\\\"],[194774,1,\\\"肭\\\"],[194775,1,\\\"䏙\\\"],[194776,1,\\\"朗\\\"],[194777,1,\\\"望\\\"],[194778,1,\\\"朡\\\"],[194779,1,\\\"杞\\\"],[194780,1,\\\"杓\\\"],[194781,1,\\\"𣏃\\\"],[194782,1,\\\"㭉\\\"],[194783,1,\\\"柺\\\"],[194784,1,\\\"枅\\\"],[194785,1,\\\"桒\\\"],[194786,1,\\\"梅\\\"],[194787,1,\\\"𣑭\\\"],[194788,1,\\\"梎\\\"],[194789,1,\\\"栟\\\"],[194790,1,\\\"椔\\\"],[194791,1,\\\"㮝\\\"],[194792,1,\\\"楂\\\"],[194793,1,\\\"榣\\\"],[194794,1,\\\"槪\\\"],[194795,1,\\\"檨\\\"],[194796,1,\\\"𣚣\\\"],[194797,1,\\\"櫛\\\"],[194798,1,\\\"㰘\\\"],[194799,1,\\\"次\\\"],[194800,1,\\\"𣢧\\\"],[194801,1,\\\"歔\\\"],[194802,1,\\\"㱎\\\"],[194803,1,\\\"歲\\\"],[194804,1,\\\"殟\\\"],[194805,1,\\\"殺\\\"],[194806,1,\\\"殻\\\"],[194807,1,\\\"𣪍\\\"],[194808,1,\\\"𡴋\\\"],[194809,1,\\\"𣫺\\\"],[194810,1,\\\"汎\\\"],[194811,1,\\\"𣲼\\\"],[194812,1,\\\"沿\\\"],[194813,1,\\\"泍\\\"],[194814,1,\\\"汧\\\"],[194815,1,\\\"洖\\\"],[194816,1,\\\"派\\\"],[194817,1,\\\"海\\\"],[194818,1,\\\"流\\\"],[194819,1,\\\"浩\\\"],[194820,1,\\\"浸\\\"],[194821,1,\\\"涅\\\"],[194822,1,\\\"𣴞\\\"],[194823,1,\\\"洴\\\"],[194824,1,\\\"港\\\"],[194825,1,\\\"湮\\\"],[194826,1,\\\"㴳\\\"],[194827,1,\\\"滋\\\"],[194828,1,\\\"滇\\\"],[194829,1,\\\"𣻑\\\"],[194830,1,\\\"淹\\\"],[194831,1,\\\"潮\\\"],[194832,1,\\\"𣽞\\\"],[194833,1,\\\"𣾎\\\"],[194834,1,\\\"濆\\\"],[194835,1,\\\"瀹\\\"],[194836,1,\\\"瀞\\\"],[194837,1,\\\"瀛\\\"],[194838,1,\\\"㶖\\\"],[194839,1,\\\"灊\\\"],[194840,1,\\\"災\\\"],[194841,1,\\\"灷\\\"],[194842,1,\\\"炭\\\"],[194843,1,\\\"𠔥\\\"],[194844,1,\\\"煅\\\"],[194845,1,\\\"𤉣\\\"],[194846,1,\\\"熜\\\"],[194847,3],[194848,1,\\\"爨\\\"],[194849,1,\\\"爵\\\"],[194850,1,\\\"牐\\\"],[194851,1,\\\"𤘈\\\"],[194852,1,\\\"犀\\\"],[194853,1,\\\"犕\\\"],[194854,1,\\\"𤜵\\\"],[194855,1,\\\"𤠔\\\"],[194856,1,\\\"獺\\\"],[194857,1,\\\"王\\\"],[194858,1,\\\"㺬\\\"],[194859,1,\\\"玥\\\"],[[194860,194861],1,\\\"㺸\\\"],[194862,1,\\\"瑇\\\"],[194863,1,\\\"瑜\\\"],[194864,1,\\\"瑱\\\"],[194865,1,\\\"璅\\\"],[194866,1,\\\"瓊\\\"],[194867,1,\\\"㼛\\\"],[194868,1,\\\"甤\\\"],[194869,1,\\\"𤰶\\\"],[194870,1,\\\"甾\\\"],[194871,1,\\\"𤲒\\\"],[194872,1,\\\"異\\\"],[194873,1,\\\"𢆟\\\"],[194874,1,\\\"瘐\\\"],[194875,1,\\\"𤾡\\\"],[194876,1,\\\"𤾸\\\"],[194877,1,\\\"𥁄\\\"],[194878,1,\\\"㿼\\\"],[194879,1,\\\"䀈\\\"],[194880,1,\\\"直\\\"],[194881,1,\\\"𥃳\\\"],[194882,1,\\\"𥃲\\\"],[194883,1,\\\"𥄙\\\"],[194884,1,\\\"𥄳\\\"],[194885,1,\\\"眞\\\"],[[194886,194887],1,\\\"真\\\"],[194888,1,\\\"睊\\\"],[194889,1,\\\"䀹\\\"],[194890,1,\\\"瞋\\\"],[194891,1,\\\"䁆\\\"],[194892,1,\\\"䂖\\\"],[194893,1,\\\"𥐝\\\"],[194894,1,\\\"硎\\\"],[194895,1,\\\"碌\\\"],[194896,1,\\\"磌\\\"],[194897,1,\\\"䃣\\\"],[194898,1,\\\"𥘦\\\"],[194899,1,\\\"祖\\\"],[194900,1,\\\"𥚚\\\"],[194901,1,\\\"𥛅\\\"],[194902,1,\\\"福\\\"],[194903,1,\\\"秫\\\"],[194904,1,\\\"䄯\\\"],[194905,1,\\\"穀\\\"],[194906,1,\\\"穊\\\"],[194907,1,\\\"穏\\\"],[194908,1,\\\"𥥼\\\"],[[194909,194910],1,\\\"𥪧\\\"],[194911,3],[194912,1,\\\"䈂\\\"],[194913,1,\\\"𥮫\\\"],[194914,1,\\\"篆\\\"],[194915,1,\\\"築\\\"],[194916,1,\\\"䈧\\\"],[194917,1,\\\"𥲀\\\"],[194918,1,\\\"糒\\\"],[194919,1,\\\"䊠\\\"],[194920,1,\\\"糨\\\"],[194921,1,\\\"糣\\\"],[194922,1,\\\"紀\\\"],[194923,1,\\\"𥾆\\\"],[194924,1,\\\"絣\\\"],[194925,1,\\\"䌁\\\"],[194926,1,\\\"緇\\\"],[194927,1,\\\"縂\\\"],[194928,1,\\\"繅\\\"],[194929,1,\\\"䌴\\\"],[194930,1,\\\"𦈨\\\"],[194931,1,\\\"𦉇\\\"],[194932,1,\\\"䍙\\\"],[194933,1,\\\"𦋙\\\"],[194934,1,\\\"罺\\\"],[194935,1,\\\"𦌾\\\"],[194936,1,\\\"羕\\\"],[194937,1,\\\"翺\\\"],[194938,1,\\\"者\\\"],[194939,1,\\\"𦓚\\\"],[194940,1,\\\"𦔣\\\"],[194941,1,\\\"聠\\\"],[194942,1,\\\"𦖨\\\"],[194943,1,\\\"聰\\\"],[194944,1,\\\"𣍟\\\"],[194945,1,\\\"䏕\\\"],[194946,1,\\\"育\\\"],[194947,1,\\\"脃\\\"],[194948,1,\\\"䐋\\\"],[194949,1,\\\"脾\\\"],[194950,1,\\\"媵\\\"],[194951,1,\\\"𦞧\\\"],[194952,1,\\\"𦞵\\\"],[194953,1,\\\"𣎓\\\"],[194954,1,\\\"𣎜\\\"],[194955,1,\\\"舁\\\"],[194956,1,\\\"舄\\\"],[194957,1,\\\"辞\\\"],[194958,1,\\\"䑫\\\"],[194959,1,\\\"芑\\\"],[194960,1,\\\"芋\\\"],[194961,1,\\\"芝\\\"],[194962,1,\\\"劳\\\"],[194963,1,\\\"花\\\"],[194964,1,\\\"芳\\\"],[194965,1,\\\"芽\\\"],[194966,1,\\\"苦\\\"],[194967,1,\\\"𦬼\\\"],[194968,1,\\\"若\\\"],[194969,1,\\\"茝\\\"],[194970,1,\\\"荣\\\"],[194971,1,\\\"莭\\\"],[194972,1,\\\"茣\\\"],[194973,1,\\\"莽\\\"],[194974,1,\\\"菧\\\"],[194975,1,\\\"著\\\"],[194976,1,\\\"荓\\\"],[194977,1,\\\"菊\\\"],[194978,1,\\\"菌\\\"],[194979,1,\\\"菜\\\"],[194980,1,\\\"𦰶\\\"],[194981,1,\\\"𦵫\\\"],[194982,1,\\\"𦳕\\\"],[194983,1,\\\"䔫\\\"],[194984,1,\\\"蓱\\\"],[194985,1,\\\"蓳\\\"],[194986,1,\\\"蔖\\\"],[194987,1,\\\"𧏊\\\"],[194988,1,\\\"蕤\\\"],[194989,1,\\\"𦼬\\\"],[194990,1,\\\"䕝\\\"],[194991,1,\\\"䕡\\\"],[194992,1,\\\"𦾱\\\"],[194993,1,\\\"𧃒\\\"],[194994,1,\\\"䕫\\\"],[194995,1,\\\"虐\\\"],[194996,1,\\\"虜\\\"],[194997,1,\\\"虧\\\"],[194998,1,\\\"虩\\\"],[194999,1,\\\"蚩\\\"],[195000,1,\\\"蚈\\\"],[195001,1,\\\"蜎\\\"],[195002,1,\\\"蛢\\\"],[195003,1,\\\"蝹\\\"],[195004,1,\\\"蜨\\\"],[195005,1,\\\"蝫\\\"],[195006,1,\\\"螆\\\"],[195007,3],[195008,1,\\\"蟡\\\"],[195009,1,\\\"蠁\\\"],[195010,1,\\\"䗹\\\"],[195011,1,\\\"衠\\\"],[195012,1,\\\"衣\\\"],[195013,1,\\\"𧙧\\\"],[195014,1,\\\"裗\\\"],[195015,1,\\\"裞\\\"],[195016,1,\\\"䘵\\\"],[195017,1,\\\"裺\\\"],[195018,1,\\\"㒻\\\"],[195019,1,\\\"𧢮\\\"],[195020,1,\\\"𧥦\\\"],[195021,1,\\\"䚾\\\"],[195022,1,\\\"䛇\\\"],[195023,1,\\\"誠\\\"],[195024,1,\\\"諭\\\"],[195025,1,\\\"變\\\"],[195026,1,\\\"豕\\\"],[195027,1,\\\"𧲨\\\"],[195028,1,\\\"貫\\\"],[195029,1,\\\"賁\\\"],[195030,1,\\\"贛\\\"],[195031,1,\\\"起\\\"],[195032,1,\\\"𧼯\\\"],[195033,1,\\\"𠠄\\\"],[195034,1,\\\"跋\\\"],[195035,1,\\\"趼\\\"],[195036,1,\\\"跰\\\"],[195037,1,\\\"𠣞\\\"],[195038,1,\\\"軔\\\"],[195039,1,\\\"輸\\\"],[195040,1,\\\"𨗒\\\"],[195041,1,\\\"𨗭\\\"],[195042,1,\\\"邔\\\"],[195043,1,\\\"郱\\\"],[195044,1,\\\"鄑\\\"],[195045,1,\\\"𨜮\\\"],[195046,1,\\\"鄛\\\"],[195047,1,\\\"鈸\\\"],[195048,1,\\\"鋗\\\"],[195049,1,\\\"鋘\\\"],[195050,1,\\\"鉼\\\"],[195051,1,\\\"鏹\\\"],[195052,1,\\\"鐕\\\"],[195053,1,\\\"𨯺\\\"],[195054,1,\\\"開\\\"],[195055,1,\\\"䦕\\\"],[195056,1,\\\"閷\\\"],[195057,1,\\\"𨵷\\\"],[195058,1,\\\"䧦\\\"],[195059,1,\\\"雃\\\"],[195060,1,\\\"嶲\\\"],[195061,1,\\\"霣\\\"],[195062,1,\\\"𩅅\\\"],[195063,1,\\\"𩈚\\\"],[195064,1,\\\"䩮\\\"],[195065,1,\\\"䩶\\\"],[195066,1,\\\"韠\\\"],[195067,1,\\\"𩐊\\\"],[195068,1,\\\"䪲\\\"],[195069,1,\\\"𩒖\\\"],[[195070,195071],1,\\\"頋\\\"],[195072,1,\\\"頩\\\"],[195073,1,\\\"𩖶\\\"],[195074,1,\\\"飢\\\"],[195075,1,\\\"䬳\\\"],[195076,1,\\\"餩\\\"],[195077,1,\\\"馧\\\"],[195078,1,\\\"駂\\\"],[195079,1,\\\"駾\\\"],[195080,1,\\\"䯎\\\"],[195081,1,\\\"𩬰\\\"],[195082,1,\\\"鬒\\\"],[195083,1,\\\"鱀\\\"],[195084,1,\\\"鳽\\\"],[195085,1,\\\"䳎\\\"],[195086,1,\\\"䳭\\\"],[195087,1,\\\"鵧\\\"],[195088,1,\\\"𪃎\\\"],[195089,1,\\\"䳸\\\"],[195090,1,\\\"𪄅\\\"],[195091,1,\\\"𪈎\\\"],[195092,1,\\\"𪊑\\\"],[195093,1,\\\"麻\\\"],[195094,1,\\\"䵖\\\"],[195095,1,\\\"黹\\\"],[195096,1,\\\"黾\\\"],[195097,1,\\\"鼅\\\"],[195098,1,\\\"鼏\\\"],[195099,1,\\\"鼖\\\"],[195100,1,\\\"鼻\\\"],[195101,1,\\\"𪘀\\\"],[[195102,196605],3],[[196606,196607],3],[[196608,262141],3],[[262142,262143],3],[[262144,327677],3],[[327678,327679],3],[[327680,393213],3],[[393214,393215],3],[[393216,458749],3],[[458750,458751],3],[[458752,524285],3],[[524286,524287],3],[[524288,589821],3],[[589822,589823],3],[[589824,655357],3],[[655358,655359],3],[[655360,720893],3],[[720894,720895],3],[[720896,786429],3],[[786430,786431],3],[[786432,851965],3],[[851966,851967],3],[[851968,917501],3],[[917502,917503],3],[917504,3],[917505,3],[[917506,917535],3],[[917536,917631],3],[[917632,917759],3],[[917760,917999],7],[[918000,983037],3],[[983038,983039],3],[[983040,1048573],3],[[1048574,1048575],3],[[1048576,1114109],3],[[1114110,1114111],3]]\\n},{}],79:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nconst combiningMarks = /[\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u08D3-\\\\u08E1\\\\u08E3-\\\\u0903\\\\u093A-\\\\u093C\\\\u093E-\\\\u094F\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981-\\\\u0983\\\\u09BC\\\\u09BE-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CD\\\\u09D7\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0ABC\\\\u0ABE-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B3C\\\\u0B3E-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B56\\\\u0B57\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD7\\\\u0C00-\\\\u0C04\\\\u0C3E-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81-\\\\u0C83\\\\u0CBC\\\\u0CBE-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CE2\\\\u0CE3\\\\u0D00-\\\\u0D03\\\\u0D3B\\\\u0D3C\\\\u0D3E-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4D\\\\u0D57\\\\u0D62\\\\u0D63\\\\u0D82\\\\u0D83\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DF2\\\\u0DF3\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E\\\\u0F3F\\\\u0F71-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102B-\\\\u103E\\\\u1056-\\\\u1059\\\\u105E-\\\\u1060\\\\u1062-\\\\u1064\\\\u1067-\\\\u106D\\\\u1071-\\\\u1074\\\\u1082-\\\\u108D\\\\u108F\\\\u109A-\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1A17-\\\\u1A1B\\\\u1A55-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ABE\\\\u1B00-\\\\u1B04\\\\u1B34-\\\\u1B44\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1B82\\\\u1BA1-\\\\u1BAD\\\\u1BE6-\\\\u1BF3\\\\u1C24-\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF7-\\\\u1CF9\\\\u1DC0-\\\\u1DF9\\\\u1DFB-\\\\u1DFF\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302F\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA823-\\\\uA827\\\\uA880\\\\uA881\\\\uA8B4-\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA953\\\\uA980-\\\\uA983\\\\uA9B3-\\\\uA9C0\\\\uA9E5\\\\uAA29-\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA4D\\\\uAA7B-\\\\uAA7D\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEB-\\\\uAAEF\\\\uAAF5\\\\uAAF6\\\\uABE3-\\\\uABEA\\\\uABEC\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\u{101FD}\\\\u{102E0}\\\\u{10376}-\\\\u{1037A}\\\\u{10A01}-\\\\u{10A03}\\\\u{10A05}\\\\u{10A06}\\\\u{10A0C}-\\\\u{10A0F}\\\\u{10A38}-\\\\u{10A3A}\\\\u{10A3F}\\\\u{10AE5}\\\\u{10AE6}\\\\u{10D24}-\\\\u{10D27}\\\\u{10F46}-\\\\u{10F50}\\\\u{11000}-\\\\u{11002}\\\\u{11038}-\\\\u{11046}\\\\u{1107F}-\\\\u{11082}\\\\u{110B0}-\\\\u{110BA}\\\\u{11100}-\\\\u{11102}\\\\u{11127}-\\\\u{11134}\\\\u{11145}\\\\u{11146}\\\\u{11173}\\\\u{11180}-\\\\u{11182}\\\\u{111B3}-\\\\u{111C0}\\\\u{111C9}-\\\\u{111CC}\\\\u{1122C}-\\\\u{11237}\\\\u{1123E}\\\\u{112DF}-\\\\u{112EA}\\\\u{11300}-\\\\u{11303}\\\\u{1133B}\\\\u{1133C}\\\\u{1133E}-\\\\u{11344}\\\\u{11347}\\\\u{11348}\\\\u{1134B}-\\\\u{1134D}\\\\u{11357}\\\\u{11362}\\\\u{11363}\\\\u{11366}-\\\\u{1136C}\\\\u{11370}-\\\\u{11374}\\\\u{11435}-\\\\u{11446}\\\\u{1145E}\\\\u{114B0}-\\\\u{114C3}\\\\u{115AF}-\\\\u{115B5}\\\\u{115B8}-\\\\u{115C0}\\\\u{115DC}\\\\u{115DD}\\\\u{11630}-\\\\u{11640}\\\\u{116AB}-\\\\u{116B7}\\\\u{1171D}-\\\\u{1172B}\\\\u{1182C}-\\\\u{1183A}\\\\u{119D1}-\\\\u{119D7}\\\\u{119DA}-\\\\u{119E0}\\\\u{119E4}\\\\u{11A01}-\\\\u{11A0A}\\\\u{11A33}-\\\\u{11A39}\\\\u{11A3B}-\\\\u{11A3E}\\\\u{11A47}\\\\u{11A51}-\\\\u{11A5B}\\\\u{11A8A}-\\\\u{11A99}\\\\u{11C2F}-\\\\u{11C36}\\\\u{11C38}-\\\\u{11C3F}\\\\u{11C92}-\\\\u{11CA7}\\\\u{11CA9}-\\\\u{11CB6}\\\\u{11D31}-\\\\u{11D36}\\\\u{11D3A}\\\\u{11D3C}\\\\u{11D3D}\\\\u{11D3F}-\\\\u{11D45}\\\\u{11D47}\\\\u{11D8A}-\\\\u{11D8E}\\\\u{11D90}\\\\u{11D91}\\\\u{11D93}-\\\\u{11D97}\\\\u{11EF3}-\\\\u{11EF6}\\\\u{16AF0}-\\\\u{16AF4}\\\\u{16B30}-\\\\u{16B36}\\\\u{16F4F}\\\\u{16F51}-\\\\u{16F87}\\\\u{16F8F}-\\\\u{16F92}\\\\u{1BC9D}\\\\u{1BC9E}\\\\u{1D165}-\\\\u{1D169}\\\\u{1D16D}-\\\\u{1D172}\\\\u{1D17B}-\\\\u{1D182}\\\\u{1D185}-\\\\u{1D18B}\\\\u{1D1AA}-\\\\u{1D1AD}\\\\u{1D242}-\\\\u{1D244}\\\\u{1DA00}-\\\\u{1DA36}\\\\u{1DA3B}-\\\\u{1DA6C}\\\\u{1DA75}\\\\u{1DA84}\\\\u{1DA9B}-\\\\u{1DA9F}\\\\u{1DAA1}-\\\\u{1DAAF}\\\\u{1E000}-\\\\u{1E006}\\\\u{1E008}-\\\\u{1E018}\\\\u{1E01B}-\\\\u{1E021}\\\\u{1E023}\\\\u{1E024}\\\\u{1E026}-\\\\u{1E02A}\\\\u{1E130}-\\\\u{1E136}\\\\u{1E2EC}-\\\\u{1E2EF}\\\\u{1E8D0}-\\\\u{1E8D6}\\\\u{1E944}-\\\\u{1E94A}\\\\u{E0100}-\\\\u{E01EF}]/u;\\nconst combiningClassVirama = /[\\\\u094D\\\\u09CD\\\\u0A4D\\\\u0ACD\\\\u0B4D\\\\u0BCD\\\\u0C4D\\\\u0CCD\\\\u0D3B\\\\u0D3C\\\\u0D4D\\\\u0DCA\\\\u0E3A\\\\u0EBA\\\\u0F84\\\\u1039\\\\u103A\\\\u1714\\\\u1734\\\\u17D2\\\\u1A60\\\\u1B44\\\\u1BAA\\\\u1BAB\\\\u1BF2\\\\u1BF3\\\\u2D7F\\\\uA806\\\\uA8C4\\\\uA953\\\\uA9C0\\\\uAAF6\\\\uABED\\\\u{10A3F}\\\\u{11046}\\\\u{1107F}\\\\u{110B9}\\\\u{11133}\\\\u{11134}\\\\u{111C0}\\\\u{11235}\\\\u{112EA}\\\\u{1134D}\\\\u{11442}\\\\u{114C2}\\\\u{115BF}\\\\u{1163F}\\\\u{116B6}\\\\u{1172B}\\\\u{11839}\\\\u{119E0}\\\\u{11A34}\\\\u{11A47}\\\\u{11A99}\\\\u{11C3F}\\\\u{11D44}\\\\u{11D45}\\\\u{11D97}]/u;\\nconst validZWNJ = /[\\\\u0620\\\\u0626\\\\u0628\\\\u062A-\\\\u062E\\\\u0633-\\\\u063F\\\\u0641-\\\\u0647\\\\u0649\\\\u064A\\\\u066E\\\\u066F\\\\u0678-\\\\u0687\\\\u069A-\\\\u06BF\\\\u06C1\\\\u06C2\\\\u06CC\\\\u06CE\\\\u06D0\\\\u06D1\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0712-\\\\u0714\\\\u071A-\\\\u071D\\\\u071F-\\\\u0727\\\\u0729\\\\u072B\\\\u072D\\\\u072E\\\\u074E-\\\\u0758\\\\u075C-\\\\u076A\\\\u076D-\\\\u0770\\\\u0772\\\\u0775-\\\\u0777\\\\u077A-\\\\u077F\\\\u07CA-\\\\u07EA\\\\u0841-\\\\u0845\\\\u0848\\\\u084A-\\\\u0853\\\\u0855\\\\u0860\\\\u0862-\\\\u0865\\\\u0868\\\\u08A0-\\\\u08A9\\\\u08AF\\\\u08B0\\\\u08B3\\\\u08B4\\\\u08B6-\\\\u08B8\\\\u08BA-\\\\u08BD\\\\u1807\\\\u1820-\\\\u1878\\\\u1887-\\\\u18A8\\\\u18AA\\\\uA840-\\\\uA872\\\\u{10AC0}-\\\\u{10AC4}\\\\u{10ACD}\\\\u{10AD3}-\\\\u{10ADC}\\\\u{10ADE}-\\\\u{10AE0}\\\\u{10AEB}-\\\\u{10AEE}\\\\u{10B80}\\\\u{10B82}\\\\u{10B86}-\\\\u{10B88}\\\\u{10B8A}\\\\u{10B8B}\\\\u{10B8D}\\\\u{10B90}\\\\u{10BAD}\\\\u{10BAE}\\\\u{10D00}-\\\\u{10D21}\\\\u{10D23}\\\\u{10F30}-\\\\u{10F32}\\\\u{10F34}-\\\\u{10F44}\\\\u{10F51}-\\\\u{10F53}\\\\u{1E900}-\\\\u{1E943}][\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u08D3-\\\\u08E1\\\\u08E3-\\\\u0902\\\\u093A\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C00\\\\u0C04\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81\\\\u0CBC\\\\u0CBF\\\\u0CC6\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D00\\\\u0D01\\\\u0D3B\\\\u0D3C\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4\\\\u17B5\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A1B\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ABE\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1BAB-\\\\u1BAD\\\\u1BE6\\\\u1BE8\\\\u1BE9\\\\u1BED\\\\u1BEF-\\\\u1BF1\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF8\\\\u1CF9\\\\u1DC0-\\\\u1DF9\\\\u1DFB-\\\\u1DFF\\\\u200B\\\\u200E\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u206A-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302D\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uA9BD\\\\uA9E5\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA7C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEC\\\\uAAED\\\\uAAF6\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFFF9-\\\\uFFFB\\\\u{101FD}\\\\u{102E0}\\\\u{10376}-\\\\u{1037A}\\\\u{10A01}-\\\\u{10A03}\\\\u{10A05}\\\\u{10A06}\\\\u{10A0C}-\\\\u{10A0F}\\\\u{10A38}-\\\\u{10A3A}\\\\u{10A3F}\\\\u{10AE5}\\\\u{10AE6}\\\\u{10D24}-\\\\u{10D27}\\\\u{10F46}-\\\\u{10F50}\\\\u{11001}\\\\u{11038}-\\\\u{11046}\\\\u{1107F}-\\\\u{11081}\\\\u{110B3}-\\\\u{110B6}\\\\u{110B9}\\\\u{110BA}\\\\u{11100}-\\\\u{11102}\\\\u{11127}-\\\\u{1112B}\\\\u{1112D}-\\\\u{11134}\\\\u{11173}\\\\u{11180}\\\\u{11181}\\\\u{111B6}-\\\\u{111BE}\\\\u{111C9}-\\\\u{111CC}\\\\u{1122F}-\\\\u{11231}\\\\u{11234}\\\\u{11236}\\\\u{11237}\\\\u{1123E}\\\\u{112DF}\\\\u{112E3}-\\\\u{112EA}\\\\u{11300}\\\\u{11301}\\\\u{1133B}\\\\u{1133C}\\\\u{11340}\\\\u{11366}-\\\\u{1136C}\\\\u{11370}-\\\\u{11374}\\\\u{11438}-\\\\u{1143F}\\\\u{11442}-\\\\u{11444}\\\\u{11446}\\\\u{1145E}\\\\u{114B3}-\\\\u{114B8}\\\\u{114BA}\\\\u{114BF}\\\\u{114C0}\\\\u{114C2}\\\\u{114C3}\\\\u{115B2}-\\\\u{115B5}\\\\u{115BC}\\\\u{115BD}\\\\u{115BF}\\\\u{115C0}\\\\u{115DC}\\\\u{115DD}\\\\u{11633}-\\\\u{1163A}\\\\u{1163D}\\\\u{1163F}\\\\u{11640}\\\\u{116AB}\\\\u{116AD}\\\\u{116B0}-\\\\u{116B5}\\\\u{116B7}\\\\u{1171D}-\\\\u{1171F}\\\\u{11722}-\\\\u{11725}\\\\u{11727}-\\\\u{1172B}\\\\u{1182F}-\\\\u{11837}\\\\u{11839}\\\\u{1183A}\\\\u{119D4}-\\\\u{119D7}\\\\u{119DA}\\\\u{119DB}\\\\u{119E0}\\\\u{11A01}-\\\\u{11A0A}\\\\u{11A33}-\\\\u{11A38}\\\\u{11A3B}-\\\\u{11A3E}\\\\u{11A47}\\\\u{11A51}-\\\\u{11A56}\\\\u{11A59}-\\\\u{11A5B}\\\\u{11A8A}-\\\\u{11A96}\\\\u{11A98}\\\\u{11A99}\\\\u{11C30}-\\\\u{11C36}\\\\u{11C38}-\\\\u{11C3D}\\\\u{11C3F}\\\\u{11C92}-\\\\u{11CA7}\\\\u{11CAA}-\\\\u{11CB0}\\\\u{11CB2}\\\\u{11CB3}\\\\u{11CB5}\\\\u{11CB6}\\\\u{11D31}-\\\\u{11D36}\\\\u{11D3A}\\\\u{11D3C}\\\\u{11D3D}\\\\u{11D3F}-\\\\u{11D45}\\\\u{11D47}\\\\u{11D90}\\\\u{11D91}\\\\u{11D95}\\\\u{11D97}\\\\u{11EF3}\\\\u{11EF4}\\\\u{13430}-\\\\u{13438}\\\\u{16AF0}-\\\\u{16AF4}\\\\u{16B30}-\\\\u{16B36}\\\\u{16F4F}\\\\u{16F8F}-\\\\u{16F92}\\\\u{1BC9D}\\\\u{1BC9E}\\\\u{1BCA0}-\\\\u{1BCA3}\\\\u{1D167}-\\\\u{1D169}\\\\u{1D173}-\\\\u{1D182}\\\\u{1D185}-\\\\u{1D18B}\\\\u{1D1AA}-\\\\u{1D1AD}\\\\u{1D242}-\\\\u{1D244}\\\\u{1DA00}-\\\\u{1DA36}\\\\u{1DA3B}-\\\\u{1DA6C}\\\\u{1DA75}\\\\u{1DA84}\\\\u{1DA9B}-\\\\u{1DA9F}\\\\u{1DAA1}-\\\\u{1DAAF}\\\\u{1E000}-\\\\u{1E006}\\\\u{1E008}-\\\\u{1E018}\\\\u{1E01B}-\\\\u{1E021}\\\\u{1E023}\\\\u{1E024}\\\\u{1E026}-\\\\u{1E02A}\\\\u{1E130}-\\\\u{1E136}\\\\u{1E2EC}-\\\\u{1E2EF}\\\\u{1E8D0}-\\\\u{1E8D6}\\\\u{1E944}-\\\\u{1E94B}\\\\u{E0001}\\\\u{E0020}-\\\\u{E007F}\\\\u{E0100}-\\\\u{E01EF}]*\\\\u200C[\\\\xAD\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u061C\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u070F\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u08D3-\\\\u08E1\\\\u08E3-\\\\u0902\\\\u093A\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C00\\\\u0C04\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81\\\\u0CBC\\\\u0CBF\\\\u0CC6\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D00\\\\u0D01\\\\u0D3B\\\\u0D3C\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4\\\\u17B5\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A1B\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ABE\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1BAB-\\\\u1BAD\\\\u1BE6\\\\u1BE8\\\\u1BE9\\\\u1BED\\\\u1BEF-\\\\u1BF1\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF8\\\\u1CF9\\\\u1DC0-\\\\u1DF9\\\\u1DFB-\\\\u1DFF\\\\u200B\\\\u200E\\\\u200F\\\\u202A-\\\\u202E\\\\u2060-\\\\u2064\\\\u206A-\\\\u206F\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302D\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uA9BD\\\\uA9E5\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA7C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEC\\\\uAAED\\\\uAAF6\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\uFEFF\\\\uFFF9-\\\\uFFFB\\\\u{101FD}\\\\u{102E0}\\\\u{10376}-\\\\u{1037A}\\\\u{10A01}-\\\\u{10A03}\\\\u{10A05}\\\\u{10A06}\\\\u{10A0C}-\\\\u{10A0F}\\\\u{10A38}-\\\\u{10A3A}\\\\u{10A3F}\\\\u{10AE5}\\\\u{10AE6}\\\\u{10D24}-\\\\u{10D27}\\\\u{10F46}-\\\\u{10F50}\\\\u{11001}\\\\u{11038}-\\\\u{11046}\\\\u{1107F}-\\\\u{11081}\\\\u{110B3}-\\\\u{110B6}\\\\u{110B9}\\\\u{110BA}\\\\u{11100}-\\\\u{11102}\\\\u{11127}-\\\\u{1112B}\\\\u{1112D}-\\\\u{11134}\\\\u{11173}\\\\u{11180}\\\\u{11181}\\\\u{111B6}-\\\\u{111BE}\\\\u{111C9}-\\\\u{111CC}\\\\u{1122F}-\\\\u{11231}\\\\u{11234}\\\\u{11236}\\\\u{11237}\\\\u{1123E}\\\\u{112DF}\\\\u{112E3}-\\\\u{112EA}\\\\u{11300}\\\\u{11301}\\\\u{1133B}\\\\u{1133C}\\\\u{11340}\\\\u{11366}-\\\\u{1136C}\\\\u{11370}-\\\\u{11374}\\\\u{11438}-\\\\u{1143F}\\\\u{11442}-\\\\u{11444}\\\\u{11446}\\\\u{1145E}\\\\u{114B3}-\\\\u{114B8}\\\\u{114BA}\\\\u{114BF}\\\\u{114C0}\\\\u{114C2}\\\\u{114C3}\\\\u{115B2}-\\\\u{115B5}\\\\u{115BC}\\\\u{115BD}\\\\u{115BF}\\\\u{115C0}\\\\u{115DC}\\\\u{115DD}\\\\u{11633}-\\\\u{1163A}\\\\u{1163D}\\\\u{1163F}\\\\u{11640}\\\\u{116AB}\\\\u{116AD}\\\\u{116B0}-\\\\u{116B5}\\\\u{116B7}\\\\u{1171D}-\\\\u{1171F}\\\\u{11722}-\\\\u{11725}\\\\u{11727}-\\\\u{1172B}\\\\u{1182F}-\\\\u{11837}\\\\u{11839}\\\\u{1183A}\\\\u{119D4}-\\\\u{119D7}\\\\u{119DA}\\\\u{119DB}\\\\u{119E0}\\\\u{11A01}-\\\\u{11A0A}\\\\u{11A33}-\\\\u{11A38}\\\\u{11A3B}-\\\\u{11A3E}\\\\u{11A47}\\\\u{11A51}-\\\\u{11A56}\\\\u{11A59}-\\\\u{11A5B}\\\\u{11A8A}-\\\\u{11A96}\\\\u{11A98}\\\\u{11A99}\\\\u{11C30}-\\\\u{11C36}\\\\u{11C38}-\\\\u{11C3D}\\\\u{11C3F}\\\\u{11C92}-\\\\u{11CA7}\\\\u{11CAA}-\\\\u{11CB0}\\\\u{11CB2}\\\\u{11CB3}\\\\u{11CB5}\\\\u{11CB6}\\\\u{11D31}-\\\\u{11D36}\\\\u{11D3A}\\\\u{11D3C}\\\\u{11D3D}\\\\u{11D3F}-\\\\u{11D45}\\\\u{11D47}\\\\u{11D90}\\\\u{11D91}\\\\u{11D95}\\\\u{11D97}\\\\u{11EF3}\\\\u{11EF4}\\\\u{13430}-\\\\u{13438}\\\\u{16AF0}-\\\\u{16AF4}\\\\u{16B30}-\\\\u{16B36}\\\\u{16F4F}\\\\u{16F8F}-\\\\u{16F92}\\\\u{1BC9D}\\\\u{1BC9E}\\\\u{1BCA0}-\\\\u{1BCA3}\\\\u{1D167}-\\\\u{1D169}\\\\u{1D173}-\\\\u{1D182}\\\\u{1D185}-\\\\u{1D18B}\\\\u{1D1AA}-\\\\u{1D1AD}\\\\u{1D242}-\\\\u{1D244}\\\\u{1DA00}-\\\\u{1DA36}\\\\u{1DA3B}-\\\\u{1DA6C}\\\\u{1DA75}\\\\u{1DA84}\\\\u{1DA9B}-\\\\u{1DA9F}\\\\u{1DAA1}-\\\\u{1DAAF}\\\\u{1E000}-\\\\u{1E006}\\\\u{1E008}-\\\\u{1E018}\\\\u{1E01B}-\\\\u{1E021}\\\\u{1E023}\\\\u{1E024}\\\\u{1E026}-\\\\u{1E02A}\\\\u{1E130}-\\\\u{1E136}\\\\u{1E2EC}-\\\\u{1E2EF}\\\\u{1E8D0}-\\\\u{1E8D6}\\\\u{1E944}-\\\\u{1E94B}\\\\u{E0001}\\\\u{E0020}-\\\\u{E007F}\\\\u{E0100}-\\\\u{E01EF}]*[\\\\u0620\\\\u0622-\\\\u063F\\\\u0641-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u0673\\\\u0675-\\\\u06D3\\\\u06D5\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u077F\\\\u07CA-\\\\u07EA\\\\u0840-\\\\u0855\\\\u0860\\\\u0862-\\\\u0865\\\\u0867-\\\\u086A\\\\u08A0-\\\\u08AC\\\\u08AE-\\\\u08B4\\\\u08B6-\\\\u08BD\\\\u1807\\\\u1820-\\\\u1878\\\\u1887-\\\\u18A8\\\\u18AA\\\\uA840-\\\\uA871\\\\u{10AC0}-\\\\u{10AC5}\\\\u{10AC7}\\\\u{10AC9}\\\\u{10ACA}\\\\u{10ACE}-\\\\u{10AD6}\\\\u{10AD8}-\\\\u{10AE1}\\\\u{10AE4}\\\\u{10AEB}-\\\\u{10AEF}\\\\u{10B80}-\\\\u{10B91}\\\\u{10BA9}-\\\\u{10BAE}\\\\u{10D01}-\\\\u{10D23}\\\\u{10F30}-\\\\u{10F44}\\\\u{10F51}-\\\\u{10F54}\\\\u{1E900}-\\\\u{1E943}]/u;\\nconst bidiDomain = /[\\\\u05BE\\\\u05C0\\\\u05C3\\\\u05C6\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F4\\\\u0600-\\\\u0605\\\\u0608\\\\u060B\\\\u060D\\\\u061B\\\\u061C\\\\u061E-\\\\u064A\\\\u0660-\\\\u0669\\\\u066B-\\\\u066F\\\\u0671-\\\\u06D5\\\\u06DD\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u070D\\\\u070F\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07C0-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u07FE-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0830-\\\\u083E\\\\u0840-\\\\u0858\\\\u085E\\\\u0860-\\\\u086A\\\\u08A0-\\\\u08B4\\\\u08B6-\\\\u08BD\\\\u08E2\\\\u200F\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBC1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFC\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\u{10800}-\\\\u{10805}\\\\u{10808}\\\\u{1080A}-\\\\u{10835}\\\\u{10837}\\\\u{10838}\\\\u{1083C}\\\\u{1083F}-\\\\u{10855}\\\\u{10857}-\\\\u{1089E}\\\\u{108A7}-\\\\u{108AF}\\\\u{108E0}-\\\\u{108F2}\\\\u{108F4}\\\\u{108F5}\\\\u{108FB}-\\\\u{1091B}\\\\u{10920}-\\\\u{10939}\\\\u{1093F}\\\\u{10980}-\\\\u{109B7}\\\\u{109BC}-\\\\u{109CF}\\\\u{109D2}-\\\\u{10A00}\\\\u{10A10}-\\\\u{10A13}\\\\u{10A15}-\\\\u{10A17}\\\\u{10A19}-\\\\u{10A35}\\\\u{10A40}-\\\\u{10A48}\\\\u{10A50}-\\\\u{10A58}\\\\u{10A60}-\\\\u{10A9F}\\\\u{10AC0}-\\\\u{10AE4}\\\\u{10AEB}-\\\\u{10AF6}\\\\u{10B00}-\\\\u{10B35}\\\\u{10B40}-\\\\u{10B55}\\\\u{10B58}-\\\\u{10B72}\\\\u{10B78}-\\\\u{10B91}\\\\u{10B99}-\\\\u{10B9C}\\\\u{10BA9}-\\\\u{10BAF}\\\\u{10C00}-\\\\u{10C48}\\\\u{10C80}-\\\\u{10CB2}\\\\u{10CC0}-\\\\u{10CF2}\\\\u{10CFA}-\\\\u{10D23}\\\\u{10D30}-\\\\u{10D39}\\\\u{10E60}-\\\\u{10E7E}\\\\u{10F00}-\\\\u{10F27}\\\\u{10F30}-\\\\u{10F45}\\\\u{10F51}-\\\\u{10F59}\\\\u{10FE0}-\\\\u{10FF6}\\\\u{1E800}-\\\\u{1E8C4}\\\\u{1E8C7}-\\\\u{1E8CF}\\\\u{1E900}-\\\\u{1E943}\\\\u{1E94B}\\\\u{1E950}-\\\\u{1E959}\\\\u{1E95E}\\\\u{1E95F}\\\\u{1EC71}-\\\\u{1ECB4}\\\\u{1ED01}-\\\\u{1ED3D}\\\\u{1EE00}-\\\\u{1EE03}\\\\u{1EE05}-\\\\u{1EE1F}\\\\u{1EE21}\\\\u{1EE22}\\\\u{1EE24}\\\\u{1EE27}\\\\u{1EE29}-\\\\u{1EE32}\\\\u{1EE34}-\\\\u{1EE37}\\\\u{1EE39}\\\\u{1EE3B}\\\\u{1EE42}\\\\u{1EE47}\\\\u{1EE49}\\\\u{1EE4B}\\\\u{1EE4D}-\\\\u{1EE4F}\\\\u{1EE51}\\\\u{1EE52}\\\\u{1EE54}\\\\u{1EE57}\\\\u{1EE59}\\\\u{1EE5B}\\\\u{1EE5D}\\\\u{1EE5F}\\\\u{1EE61}\\\\u{1EE62}\\\\u{1EE64}\\\\u{1EE67}-\\\\u{1EE6A}\\\\u{1EE6C}-\\\\u{1EE72}\\\\u{1EE74}-\\\\u{1EE77}\\\\u{1EE79}-\\\\u{1EE7C}\\\\u{1EE7E}\\\\u{1EE80}-\\\\u{1EE89}\\\\u{1EE8B}-\\\\u{1EE9B}\\\\u{1EEA1}-\\\\u{1EEA3}\\\\u{1EEA5}-\\\\u{1EEA9}\\\\u{1EEAB}-\\\\u{1EEBB}]/u;\\nconst bidiS1LTR = /[A-Za-z\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02B8\\\\u02BB-\\\\u02C1\\\\u02D0\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EE\\\\u0370-\\\\u0373\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0482\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559-\\\\u0589\\\\u0903-\\\\u0939\\\\u093B\\\\u093D-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E-\\\\u0950\\\\u0958-\\\\u0961\\\\u0964-\\\\u0980\\\\u0982\\\\u0983\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD-\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u09CE\\\\u09D7\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09E6-\\\\u09F1\\\\u09F4-\\\\u09FA\\\\u09FC\\\\u09FD\\\\u0A03\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A3E-\\\\u0A40\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A66-\\\\u0A6F\\\\u0A72-\\\\u0A74\\\\u0A76\\\\u0A83\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0AE6-\\\\u0AF0\\\\u0AF9\\\\u0B02\\\\u0B03\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B3E\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0B57\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B66-\\\\u0B77\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BBE\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0BD0\\\\u0BD7\\\\u0BE6-\\\\u0BF2\\\\u0C01-\\\\u0C03\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C41-\\\\u0C44\\\\u0C58-\\\\u0C5A\\\\u0C60\\\\u0C61\\\\u0C66-\\\\u0C6F\\\\u0C77\\\\u0C7F\\\\u0C80\\\\u0C82-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA\\\\u0CCB\\\\u0CD5\\\\u0CD6\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CE6-\\\\u0CEF\\\\u0CF1\\\\u0CF2\\\\u0D02\\\\u0D03\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D-\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D4E\\\\u0D4F\\\\u0D54-\\\\u0D61\\\\u0D66-\\\\u0D7F\\\\u0D82\\\\u0D83\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0DCF-\\\\u0DD1\\\\u0DD8-\\\\u0DDF\\\\u0DE6-\\\\u0DEF\\\\u0DF2-\\\\u0DF4\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E4F-\\\\u0E5B\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E86-\\\\u0E8A\\\\u0E8C-\\\\u0EA3\\\\u0EA5\\\\u0EA7-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0ED0-\\\\u0ED9\\\\u0EDC-\\\\u0EDF\\\\u0F00-\\\\u0F17\\\\u0F1A-\\\\u0F34\\\\u0F36\\\\u0F38\\\\u0F3E-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F7F\\\\u0F85\\\\u0F88-\\\\u0F8C\\\\u0FBE-\\\\u0FC5\\\\u0FC7-\\\\u0FCC\\\\u0FCE-\\\\u0FDA\\\\u1000-\\\\u102C\\\\u1031\\\\u1038\\\\u103B\\\\u103C\\\\u103F-\\\\u1057\\\\u105A-\\\\u105D\\\\u1061-\\\\u1070\\\\u1075-\\\\u1081\\\\u1083\\\\u1084\\\\u1087-\\\\u108C\\\\u108E-\\\\u109C\\\\u109E-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1360-\\\\u137C\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F5\\\\u13F8-\\\\u13FD\\\\u1401-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1735\\\\u1736\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u17D4-\\\\u17DA\\\\u17DC\\\\u17E0-\\\\u17E9\\\\u1810-\\\\u1819\\\\u1820-\\\\u1878\\\\u1880-\\\\u1884\\\\u1887-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u1946-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19B0-\\\\u19C9\\\\u19D0-\\\\u19DA\\\\u1A00-\\\\u1A16\\\\u1A19\\\\u1A1A\\\\u1A1E-\\\\u1A55\\\\u1A57\\\\u1A61\\\\u1A63\\\\u1A64\\\\u1A6D-\\\\u1A72\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1AA0-\\\\u1AAD\\\\u1B04-\\\\u1B33\\\\u1B35\\\\u1B3B\\\\u1B3D-\\\\u1B41\\\\u1B43-\\\\u1B4B\\\\u1B50-\\\\u1B6A\\\\u1B74-\\\\u1B7C\\\\u1B82-\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BAA\\\\u1BAE-\\\\u1BE5\\\\u1BE7\\\\u1BEA-\\\\u1BEC\\\\u1BEE\\\\u1BF2\\\\u1BF3\\\\u1BFC-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1C3B-\\\\u1C49\\\\u1C4D-\\\\u1C88\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CC7\\\\u1CD3\\\\u1CE1\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF3\\\\u1CF5-\\\\u1CF7\\\\u1CFA\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u200E\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u214F\\\\u2160-\\\\u2188\\\\u2336-\\\\u237A\\\\u2395\\\\u249C-\\\\u24E9\\\\u26AC\\\\u2800-\\\\u28FF\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D70\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u302E\\\\u302F\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312F\\\\u3131-\\\\u318E\\\\u3190-\\\\u31BA\\\\u31F0-\\\\u321C\\\\u3220-\\\\u324F\\\\u3260-\\\\u327B\\\\u327F-\\\\u32B0\\\\u32C0-\\\\u32CB\\\\u32D0-\\\\u3376\\\\u337B-\\\\u33DD\\\\u33E0-\\\\u33FE\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FEF\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA60C\\\\uA610-\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA680-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA6F2-\\\\uA6F7\\\\uA722-\\\\uA787\\\\uA789-\\\\uA7BF\\\\uA7C2-\\\\uA7C6\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA824\\\\uA827\\\\uA830-\\\\uA837\\\\uA840-\\\\uA873\\\\uA880-\\\\uA8C3\\\\uA8CE-\\\\uA8D9\\\\uA8F2-\\\\uA8FE\\\\uA900-\\\\uA925\\\\uA92E-\\\\uA946\\\\uA952\\\\uA953\\\\uA95F-\\\\uA97C\\\\uA983-\\\\uA9B2\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BE-\\\\uA9CD\\\\uA9CF-\\\\uA9D9\\\\uA9DE-\\\\uA9E4\\\\uA9E6-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA4D\\\\uAA50-\\\\uAA59\\\\uAA5C-\\\\uAA7B\\\\uAA7D-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAAEB\\\\uAAEE-\\\\uAAF5\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB67\\\\uAB70-\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9-\\\\uABEC\\\\uABF0-\\\\uABF9\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uD800-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC\\\\u{10000}-\\\\u{1000B}\\\\u{1000D}-\\\\u{10026}\\\\u{10028}-\\\\u{1003A}\\\\u{1003C}\\\\u{1003D}\\\\u{1003F}-\\\\u{1004D}\\\\u{10050}-\\\\u{1005D}\\\\u{10080}-\\\\u{100FA}\\\\u{10100}\\\\u{10102}\\\\u{10107}-\\\\u{10133}\\\\u{10137}-\\\\u{1013F}\\\\u{1018D}\\\\u{1018E}\\\\u{101D0}-\\\\u{101FC}\\\\u{10280}-\\\\u{1029C}\\\\u{102A0}-\\\\u{102D0}\\\\u{10300}-\\\\u{10323}\\\\u{1032D}-\\\\u{1034A}\\\\u{10350}-\\\\u{10375}\\\\u{10380}-\\\\u{1039D}\\\\u{1039F}-\\\\u{103C3}\\\\u{103C8}-\\\\u{103D5}\\\\u{10400}-\\\\u{1049D}\\\\u{104A0}-\\\\u{104A9}\\\\u{104B0}-\\\\u{104D3}\\\\u{104D8}-\\\\u{104FB}\\\\u{10500}-\\\\u{10527}\\\\u{10530}-\\\\u{10563}\\\\u{1056F}\\\\u{10600}-\\\\u{10736}\\\\u{10740}-\\\\u{10755}\\\\u{10760}-\\\\u{10767}\\\\u{11000}\\\\u{11002}-\\\\u{11037}\\\\u{11047}-\\\\u{1104D}\\\\u{11066}-\\\\u{1106F}\\\\u{11082}-\\\\u{110B2}\\\\u{110B7}\\\\u{110B8}\\\\u{110BB}-\\\\u{110C1}\\\\u{110CD}\\\\u{110D0}-\\\\u{110E8}\\\\u{110F0}-\\\\u{110F9}\\\\u{11103}-\\\\u{11126}\\\\u{1112C}\\\\u{11136}-\\\\u{11146}\\\\u{11150}-\\\\u{11172}\\\\u{11174}-\\\\u{11176}\\\\u{11182}-\\\\u{111B5}\\\\u{111BF}-\\\\u{111C8}\\\\u{111CD}\\\\u{111D0}-\\\\u{111DF}\\\\u{111E1}-\\\\u{111F4}\\\\u{11200}-\\\\u{11211}\\\\u{11213}-\\\\u{1122E}\\\\u{11232}\\\\u{11233}\\\\u{11235}\\\\u{11238}-\\\\u{1123D}\\\\u{11280}-\\\\u{11286}\\\\u{11288}\\\\u{1128A}-\\\\u{1128D}\\\\u{1128F}-\\\\u{1129D}\\\\u{1129F}-\\\\u{112A9}\\\\u{112B0}-\\\\u{112DE}\\\\u{112E0}-\\\\u{112E2}\\\\u{112F0}-\\\\u{112F9}\\\\u{11302}\\\\u{11303}\\\\u{11305}-\\\\u{1130C}\\\\u{1130F}\\\\u{11310}\\\\u{11313}-\\\\u{11328}\\\\u{1132A}-\\\\u{11330}\\\\u{11332}\\\\u{11333}\\\\u{11335}-\\\\u{11339}\\\\u{1133D}-\\\\u{1133F}\\\\u{11341}-\\\\u{11344}\\\\u{11347}\\\\u{11348}\\\\u{1134B}-\\\\u{1134D}\\\\u{11350}\\\\u{11357}\\\\u{1135D}-\\\\u{11363}\\\\u{11400}-\\\\u{11437}\\\\u{11440}\\\\u{11441}\\\\u{11445}\\\\u{11447}-\\\\u{11459}\\\\u{1145B}\\\\u{1145D}\\\\u{1145F}\\\\u{11480}-\\\\u{114B2}\\\\u{114B9}\\\\u{114BB}-\\\\u{114BE}\\\\u{114C1}\\\\u{114C4}-\\\\u{114C7}\\\\u{114D0}-\\\\u{114D9}\\\\u{11580}-\\\\u{115B1}\\\\u{115B8}-\\\\u{115BB}\\\\u{115BE}\\\\u{115C1}-\\\\u{115DB}\\\\u{11600}-\\\\u{11632}\\\\u{1163B}\\\\u{1163C}\\\\u{1163E}\\\\u{11641}-\\\\u{11644}\\\\u{11650}-\\\\u{11659}\\\\u{11680}-\\\\u{116AA}\\\\u{116AC}\\\\u{116AE}\\\\u{116AF}\\\\u{116B6}\\\\u{116B8}\\\\u{116C0}-\\\\u{116C9}\\\\u{11700}-\\\\u{1171A}\\\\u{11720}\\\\u{11721}\\\\u{11726}\\\\u{11730}-\\\\u{1173F}\\\\u{11800}-\\\\u{1182E}\\\\u{11838}\\\\u{1183B}\\\\u{118A0}-\\\\u{118F2}\\\\u{118FF}\\\\u{119A0}-\\\\u{119A7}\\\\u{119AA}-\\\\u{119D3}\\\\u{119DC}-\\\\u{119DF}\\\\u{119E1}-\\\\u{119E4}\\\\u{11A00}\\\\u{11A07}\\\\u{11A08}\\\\u{11A0B}-\\\\u{11A32}\\\\u{11A39}\\\\u{11A3A}\\\\u{11A3F}-\\\\u{11A46}\\\\u{11A50}\\\\u{11A57}\\\\u{11A58}\\\\u{11A5C}-\\\\u{11A89}\\\\u{11A97}\\\\u{11A9A}-\\\\u{11AA2}\\\\u{11AC0}-\\\\u{11AF8}\\\\u{11C00}-\\\\u{11C08}\\\\u{11C0A}-\\\\u{11C2F}\\\\u{11C3E}-\\\\u{11C45}\\\\u{11C50}-\\\\u{11C6C}\\\\u{11C70}-\\\\u{11C8F}\\\\u{11CA9}\\\\u{11CB1}\\\\u{11CB4}\\\\u{11D00}-\\\\u{11D06}\\\\u{11D08}\\\\u{11D09}\\\\u{11D0B}-\\\\u{11D30}\\\\u{11D46}\\\\u{11D50}-\\\\u{11D59}\\\\u{11D60}-\\\\u{11D65}\\\\u{11D67}\\\\u{11D68}\\\\u{11D6A}-\\\\u{11D8E}\\\\u{11D93}\\\\u{11D94}\\\\u{11D96}\\\\u{11D98}\\\\u{11DA0}-\\\\u{11DA9}\\\\u{11EE0}-\\\\u{11EF2}\\\\u{11EF5}-\\\\u{11EF8}\\\\u{11FC0}-\\\\u{11FD4}\\\\u{11FFF}-\\\\u{12399}\\\\u{12400}-\\\\u{1246E}\\\\u{12470}-\\\\u{12474}\\\\u{12480}-\\\\u{12543}\\\\u{13000}-\\\\u{1342E}\\\\u{13430}-\\\\u{13438}\\\\u{14400}-\\\\u{14646}\\\\u{16800}-\\\\u{16A38}\\\\u{16A40}-\\\\u{16A5E}\\\\u{16A60}-\\\\u{16A69}\\\\u{16A6E}\\\\u{16A6F}\\\\u{16AD0}-\\\\u{16AED}\\\\u{16AF5}\\\\u{16B00}-\\\\u{16B2F}\\\\u{16B37}-\\\\u{16B45}\\\\u{16B50}-\\\\u{16B59}\\\\u{16B5B}-\\\\u{16B61}\\\\u{16B63}-\\\\u{16B77}\\\\u{16B7D}-\\\\u{16B8F}\\\\u{16E40}-\\\\u{16E9A}\\\\u{16F00}-\\\\u{16F4A}\\\\u{16F50}-\\\\u{16F87}\\\\u{16F93}-\\\\u{16F9F}\\\\u{16FE0}\\\\u{16FE1}\\\\u{16FE3}\\\\u{17000}-\\\\u{187F7}\\\\u{18800}-\\\\u{18AF2}\\\\u{1B000}-\\\\u{1B11E}\\\\u{1B150}-\\\\u{1B152}\\\\u{1B164}-\\\\u{1B167}\\\\u{1B170}-\\\\u{1B2FB}\\\\u{1BC00}-\\\\u{1BC6A}\\\\u{1BC70}-\\\\u{1BC7C}\\\\u{1BC80}-\\\\u{1BC88}\\\\u{1BC90}-\\\\u{1BC99}\\\\u{1BC9C}\\\\u{1BC9F}\\\\u{1D000}-\\\\u{1D0F5}\\\\u{1D100}-\\\\u{1D126}\\\\u{1D129}-\\\\u{1D166}\\\\u{1D16A}-\\\\u{1D172}\\\\u{1D183}\\\\u{1D184}\\\\u{1D18C}-\\\\u{1D1A9}\\\\u{1D1AE}-\\\\u{1D1E8}\\\\u{1D2E0}-\\\\u{1D2F3}\\\\u{1D360}-\\\\u{1D378}\\\\u{1D400}-\\\\u{1D454}\\\\u{1D456}-\\\\u{1D49C}\\\\u{1D49E}\\\\u{1D49F}\\\\u{1D4A2}\\\\u{1D4A5}\\\\u{1D4A6}\\\\u{1D4A9}-\\\\u{1D4AC}\\\\u{1D4AE}-\\\\u{1D4B9}\\\\u{1D4BB}\\\\u{1D4BD}-\\\\u{1D4C3}\\\\u{1D4C5}-\\\\u{1D505}\\\\u{1D507}-\\\\u{1D50A}\\\\u{1D50D}-\\\\u{1D514}\\\\u{1D516}-\\\\u{1D51C}\\\\u{1D51E}-\\\\u{1D539}\\\\u{1D53B}-\\\\u{1D53E}\\\\u{1D540}-\\\\u{1D544}\\\\u{1D546}\\\\u{1D54A}-\\\\u{1D550}\\\\u{1D552}-\\\\u{1D6A5}\\\\u{1D6A8}-\\\\u{1D6DA}\\\\u{1D6DC}-\\\\u{1D714}\\\\u{1D716}-\\\\u{1D74E}\\\\u{1D750}-\\\\u{1D788}\\\\u{1D78A}-\\\\u{1D7C2}\\\\u{1D7C4}-\\\\u{1D7CB}\\\\u{1D800}-\\\\u{1D9FF}\\\\u{1DA37}-\\\\u{1DA3A}\\\\u{1DA6D}-\\\\u{1DA74}\\\\u{1DA76}-\\\\u{1DA83}\\\\u{1DA85}-\\\\u{1DA8B}\\\\u{1E100}-\\\\u{1E12C}\\\\u{1E137}-\\\\u{1E13D}\\\\u{1E140}-\\\\u{1E149}\\\\u{1E14E}\\\\u{1E14F}\\\\u{1E2C0}-\\\\u{1E2EB}\\\\u{1E2F0}-\\\\u{1E2F9}\\\\u{1F110}-\\\\u{1F12E}\\\\u{1F130}-\\\\u{1F169}\\\\u{1F170}-\\\\u{1F1AC}\\\\u{1F1E6}-\\\\u{1F202}\\\\u{1F210}-\\\\u{1F23B}\\\\u{1F240}-\\\\u{1F248}\\\\u{1F250}\\\\u{1F251}\\\\u{20000}-\\\\u{2A6D6}\\\\u{2A700}-\\\\u{2B734}\\\\u{2B740}-\\\\u{2B81D}\\\\u{2B820}-\\\\u{2CEA1}\\\\u{2CEB0}-\\\\u{2EBE0}\\\\u{2F800}-\\\\u{2FA1D}\\\\u{F0000}-\\\\u{FFFFD}\\\\u{100000}-\\\\u{10FFFD}]/u;\\nconst bidiS1RTL = /[\\\\u05BE\\\\u05C0\\\\u05C3\\\\u05C6\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F4\\\\u0608\\\\u060B\\\\u060D\\\\u061B\\\\u061C\\\\u061E-\\\\u064A\\\\u066D-\\\\u066F\\\\u0671-\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u070D\\\\u070F\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07C0-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u07FE-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0830-\\\\u083E\\\\u0840-\\\\u0858\\\\u085E\\\\u0860-\\\\u086A\\\\u08A0-\\\\u08B4\\\\u08B6-\\\\u08BD\\\\u200F\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBC1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFC\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\u{10800}-\\\\u{10805}\\\\u{10808}\\\\u{1080A}-\\\\u{10835}\\\\u{10837}\\\\u{10838}\\\\u{1083C}\\\\u{1083F}-\\\\u{10855}\\\\u{10857}-\\\\u{1089E}\\\\u{108A7}-\\\\u{108AF}\\\\u{108E0}-\\\\u{108F2}\\\\u{108F4}\\\\u{108F5}\\\\u{108FB}-\\\\u{1091B}\\\\u{10920}-\\\\u{10939}\\\\u{1093F}\\\\u{10980}-\\\\u{109B7}\\\\u{109BC}-\\\\u{109CF}\\\\u{109D2}-\\\\u{10A00}\\\\u{10A10}-\\\\u{10A13}\\\\u{10A15}-\\\\u{10A17}\\\\u{10A19}-\\\\u{10A35}\\\\u{10A40}-\\\\u{10A48}\\\\u{10A50}-\\\\u{10A58}\\\\u{10A60}-\\\\u{10A9F}\\\\u{10AC0}-\\\\u{10AE4}\\\\u{10AEB}-\\\\u{10AF6}\\\\u{10B00}-\\\\u{10B35}\\\\u{10B40}-\\\\u{10B55}\\\\u{10B58}-\\\\u{10B72}\\\\u{10B78}-\\\\u{10B91}\\\\u{10B99}-\\\\u{10B9C}\\\\u{10BA9}-\\\\u{10BAF}\\\\u{10C00}-\\\\u{10C48}\\\\u{10C80}-\\\\u{10CB2}\\\\u{10CC0}-\\\\u{10CF2}\\\\u{10CFA}-\\\\u{10D23}\\\\u{10F00}-\\\\u{10F27}\\\\u{10F30}-\\\\u{10F45}\\\\u{10F51}-\\\\u{10F59}\\\\u{10FE0}-\\\\u{10FF6}\\\\u{1E800}-\\\\u{1E8C4}\\\\u{1E8C7}-\\\\u{1E8CF}\\\\u{1E900}-\\\\u{1E943}\\\\u{1E94B}\\\\u{1E950}-\\\\u{1E959}\\\\u{1E95E}\\\\u{1E95F}\\\\u{1EC71}-\\\\u{1ECB4}\\\\u{1ED01}-\\\\u{1ED3D}\\\\u{1EE00}-\\\\u{1EE03}\\\\u{1EE05}-\\\\u{1EE1F}\\\\u{1EE21}\\\\u{1EE22}\\\\u{1EE24}\\\\u{1EE27}\\\\u{1EE29}-\\\\u{1EE32}\\\\u{1EE34}-\\\\u{1EE37}\\\\u{1EE39}\\\\u{1EE3B}\\\\u{1EE42}\\\\u{1EE47}\\\\u{1EE49}\\\\u{1EE4B}\\\\u{1EE4D}-\\\\u{1EE4F}\\\\u{1EE51}\\\\u{1EE52}\\\\u{1EE54}\\\\u{1EE57}\\\\u{1EE59}\\\\u{1EE5B}\\\\u{1EE5D}\\\\u{1EE5F}\\\\u{1EE61}\\\\u{1EE62}\\\\u{1EE64}\\\\u{1EE67}-\\\\u{1EE6A}\\\\u{1EE6C}-\\\\u{1EE72}\\\\u{1EE74}-\\\\u{1EE77}\\\\u{1EE79}-\\\\u{1EE7C}\\\\u{1EE7E}\\\\u{1EE80}-\\\\u{1EE89}\\\\u{1EE8B}-\\\\u{1EE9B}\\\\u{1EEA1}-\\\\u{1EEA3}\\\\u{1EEA5}-\\\\u{1EEA9}\\\\u{1EEAB}-\\\\u{1EEBB}]/u;\\nconst bidiS2 = /^[\\\\0-\\\\x08\\\\x0E-\\\\x1B!-@\\\\[-`\\\\{-\\\\x84\\\\x86-\\\\xA9\\\\xAB-\\\\xB4\\\\xB6-\\\\xB9\\\\xBB-\\\\xBF\\\\xD7\\\\xF7\\\\u02B9\\\\u02BA\\\\u02C2-\\\\u02CF\\\\u02D2-\\\\u02DF\\\\u02E5-\\\\u02ED\\\\u02EF-\\\\u036F\\\\u0374\\\\u0375\\\\u037E\\\\u0384\\\\u0385\\\\u0387\\\\u03F6\\\\u0483-\\\\u0489\\\\u058A\\\\u058D-\\\\u058F\\\\u0591-\\\\u05C7\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F4\\\\u0600-\\\\u061C\\\\u061E-\\\\u070D\\\\u070F-\\\\u074A\\\\u074D-\\\\u07B1\\\\u07C0-\\\\u07FA\\\\u07FD-\\\\u082D\\\\u0830-\\\\u083E\\\\u0840-\\\\u085B\\\\u085E\\\\u0860-\\\\u086A\\\\u08A0-\\\\u08B4\\\\u08B6-\\\\u08BD\\\\u08D3-\\\\u0902\\\\u093A\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u09F2\\\\u09F3\\\\u09FB\\\\u09FE\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AF1\\\\u0AFA-\\\\u0AFF\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0BF3-\\\\u0BFA\\\\u0C00\\\\u0C04\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C78-\\\\u0C7E\\\\u0C81\\\\u0CBC\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D00\\\\u0D01\\\\u0D3B\\\\u0D3C\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E3F\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39-\\\\u0F3D\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135D-\\\\u135F\\\\u1390-\\\\u1399\\\\u1400\\\\u169B\\\\u169C\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4\\\\u17B5\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DB\\\\u17DD\\\\u17F0-\\\\u17F9\\\\u1800-\\\\u180E\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1940\\\\u1944\\\\u1945\\\\u19DE-\\\\u19FF\\\\u1A17\\\\u1A18\\\\u1A1B\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ABE\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1BAB-\\\\u1BAD\\\\u1BE6\\\\u1BE8\\\\u1BE9\\\\u1BED\\\\u1BEF-\\\\u1BF1\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF8\\\\u1CF9\\\\u1DC0-\\\\u1DF9\\\\u1DFB-\\\\u1DFF\\\\u1FBD\\\\u1FBF-\\\\u1FC1\\\\u1FCD-\\\\u1FCF\\\\u1FDD-\\\\u1FDF\\\\u1FED-\\\\u1FEF\\\\u1FFD\\\\u1FFE\\\\u200B-\\\\u200D\\\\u200F-\\\\u2027\\\\u202F-\\\\u205E\\\\u2060-\\\\u2064\\\\u206A-\\\\u2070\\\\u2074-\\\\u207E\\\\u2080-\\\\u208E\\\\u20A0-\\\\u20BF\\\\u20D0-\\\\u20F0\\\\u2100\\\\u2101\\\\u2103-\\\\u2106\\\\u2108\\\\u2109\\\\u2114\\\\u2116-\\\\u2118\\\\u211E-\\\\u2123\\\\u2125\\\\u2127\\\\u2129\\\\u212E\\\\u213A\\\\u213B\\\\u2140-\\\\u2144\\\\u214A-\\\\u214D\\\\u2150-\\\\u215F\\\\u2189-\\\\u218B\\\\u2190-\\\\u2335\\\\u237B-\\\\u2394\\\\u2396-\\\\u2426\\\\u2440-\\\\u244A\\\\u2460-\\\\u249B\\\\u24EA-\\\\u26AB\\\\u26AD-\\\\u27FF\\\\u2900-\\\\u2B73\\\\u2B76-\\\\u2B95\\\\u2B98-\\\\u2BFF\\\\u2CE5-\\\\u2CEA\\\\u2CEF-\\\\u2CF1\\\\u2CF9-\\\\u2CFF\\\\u2D7F\\\\u2DE0-\\\\u2E4F\\\\u2E80-\\\\u2E99\\\\u2E9B-\\\\u2EF3\\\\u2F00-\\\\u2FD5\\\\u2FF0-\\\\u2FFB\\\\u3001-\\\\u3004\\\\u3008-\\\\u3020\\\\u302A-\\\\u302D\\\\u3030\\\\u3036\\\\u3037\\\\u303D-\\\\u303F\\\\u3099-\\\\u309C\\\\u30A0\\\\u30FB\\\\u31C0-\\\\u31E3\\\\u321D\\\\u321E\\\\u3250-\\\\u325F\\\\u327C-\\\\u327E\\\\u32B1-\\\\u32BF\\\\u32CC-\\\\u32CF\\\\u3377-\\\\u337A\\\\u33DE\\\\u33DF\\\\u33FF\\\\u4DC0-\\\\u4DFF\\\\uA490-\\\\uA4C6\\\\uA60D-\\\\uA60F\\\\uA66F-\\\\uA67F\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA700-\\\\uA721\\\\uA788\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA828-\\\\uA82B\\\\uA838\\\\uA839\\\\uA874-\\\\uA877\\\\uA8C4\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uA9BD\\\\uA9E5\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA7C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEC\\\\uAAED\\\\uAAF6\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1D-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBC1\\\\uFBD3-\\\\uFD3F\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFD\\\\uFE00-\\\\uFE19\\\\uFE20-\\\\uFE52\\\\uFE54-\\\\uFE66\\\\uFE68-\\\\uFE6B\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFEFF\\\\uFF01-\\\\uFF20\\\\uFF3B-\\\\uFF40\\\\uFF5B-\\\\uFF65\\\\uFFE0-\\\\uFFE6\\\\uFFE8-\\\\uFFEE\\\\uFFF9-\\\\uFFFD\\\\u{10101}\\\\u{10140}-\\\\u{1018C}\\\\u{10190}-\\\\u{1019B}\\\\u{101A0}\\\\u{101FD}\\\\u{102E0}-\\\\u{102FB}\\\\u{10376}-\\\\u{1037A}\\\\u{10800}-\\\\u{10805}\\\\u{10808}\\\\u{1080A}-\\\\u{10835}\\\\u{10837}\\\\u{10838}\\\\u{1083C}\\\\u{1083F}-\\\\u{10855}\\\\u{10857}-\\\\u{1089E}\\\\u{108A7}-\\\\u{108AF}\\\\u{108E0}-\\\\u{108F2}\\\\u{108F4}\\\\u{108F5}\\\\u{108FB}-\\\\u{1091B}\\\\u{1091F}-\\\\u{10939}\\\\u{1093F}\\\\u{10980}-\\\\u{109B7}\\\\u{109BC}-\\\\u{109CF}\\\\u{109D2}-\\\\u{10A03}\\\\u{10A05}\\\\u{10A06}\\\\u{10A0C}-\\\\u{10A13}\\\\u{10A15}-\\\\u{10A17}\\\\u{10A19}-\\\\u{10A35}\\\\u{10A38}-\\\\u{10A3A}\\\\u{10A3F}-\\\\u{10A48}\\\\u{10A50}-\\\\u{10A58}\\\\u{10A60}-\\\\u{10A9F}\\\\u{10AC0}-\\\\u{10AE6}\\\\u{10AEB}-\\\\u{10AF6}\\\\u{10B00}-\\\\u{10B35}\\\\u{10B39}-\\\\u{10B55}\\\\u{10B58}-\\\\u{10B72}\\\\u{10B78}-\\\\u{10B91}\\\\u{10B99}-\\\\u{10B9C}\\\\u{10BA9}-\\\\u{10BAF}\\\\u{10C00}-\\\\u{10C48}\\\\u{10C80}-\\\\u{10CB2}\\\\u{10CC0}-\\\\u{10CF2}\\\\u{10CFA}-\\\\u{10D27}\\\\u{10D30}-\\\\u{10D39}\\\\u{10E60}-\\\\u{10E7E}\\\\u{10F00}-\\\\u{10F27}\\\\u{10F30}-\\\\u{10F59}\\\\u{10FE0}-\\\\u{10FF6}\\\\u{11001}\\\\u{11038}-\\\\u{11046}\\\\u{11052}-\\\\u{11065}\\\\u{1107F}-\\\\u{11081}\\\\u{110B3}-\\\\u{110B6}\\\\u{110B9}\\\\u{110BA}\\\\u{11100}-\\\\u{11102}\\\\u{11127}-\\\\u{1112B}\\\\u{1112D}-\\\\u{11134}\\\\u{11173}\\\\u{11180}\\\\u{11181}\\\\u{111B6}-\\\\u{111BE}\\\\u{111C9}-\\\\u{111CC}\\\\u{1122F}-\\\\u{11231}\\\\u{11234}\\\\u{11236}\\\\u{11237}\\\\u{1123E}\\\\u{112DF}\\\\u{112E3}-\\\\u{112EA}\\\\u{11300}\\\\u{11301}\\\\u{1133B}\\\\u{1133C}\\\\u{11340}\\\\u{11366}-\\\\u{1136C}\\\\u{11370}-\\\\u{11374}\\\\u{11438}-\\\\u{1143F}\\\\u{11442}-\\\\u{11444}\\\\u{11446}\\\\u{1145E}\\\\u{114B3}-\\\\u{114B8}\\\\u{114BA}\\\\u{114BF}\\\\u{114C0}\\\\u{114C2}\\\\u{114C3}\\\\u{115B2}-\\\\u{115B5}\\\\u{115BC}\\\\u{115BD}\\\\u{115BF}\\\\u{115C0}\\\\u{115DC}\\\\u{115DD}\\\\u{11633}-\\\\u{1163A}\\\\u{1163D}\\\\u{1163F}\\\\u{11640}\\\\u{11660}-\\\\u{1166C}\\\\u{116AB}\\\\u{116AD}\\\\u{116B0}-\\\\u{116B5}\\\\u{116B7}\\\\u{1171D}-\\\\u{1171F}\\\\u{11722}-\\\\u{11725}\\\\u{11727}-\\\\u{1172B}\\\\u{1182F}-\\\\u{11837}\\\\u{11839}\\\\u{1183A}\\\\u{119D4}-\\\\u{119D7}\\\\u{119DA}\\\\u{119DB}\\\\u{119E0}\\\\u{11A01}-\\\\u{11A06}\\\\u{11A09}\\\\u{11A0A}\\\\u{11A33}-\\\\u{11A38}\\\\u{11A3B}-\\\\u{11A3E}\\\\u{11A47}\\\\u{11A51}-\\\\u{11A56}\\\\u{11A59}-\\\\u{11A5B}\\\\u{11A8A}-\\\\u{11A96}\\\\u{11A98}\\\\u{11A99}\\\\u{11C30}-\\\\u{11C36}\\\\u{11C38}-\\\\u{11C3D}\\\\u{11C92}-\\\\u{11CA7}\\\\u{11CAA}-\\\\u{11CB0}\\\\u{11CB2}\\\\u{11CB3}\\\\u{11CB5}\\\\u{11CB6}\\\\u{11D31}-\\\\u{11D36}\\\\u{11D3A}\\\\u{11D3C}\\\\u{11D3D}\\\\u{11D3F}-\\\\u{11D45}\\\\u{11D47}\\\\u{11D90}\\\\u{11D91}\\\\u{11D95}\\\\u{11D97}\\\\u{11EF3}\\\\u{11EF4}\\\\u{11FD5}-\\\\u{11FF1}\\\\u{16AF0}-\\\\u{16AF4}\\\\u{16B30}-\\\\u{16B36}\\\\u{16F4F}\\\\u{16F8F}-\\\\u{16F92}\\\\u{16FE2}\\\\u{1BC9D}\\\\u{1BC9E}\\\\u{1BCA0}-\\\\u{1BCA3}\\\\u{1D167}-\\\\u{1D169}\\\\u{1D173}-\\\\u{1D182}\\\\u{1D185}-\\\\u{1D18B}\\\\u{1D1AA}-\\\\u{1D1AD}\\\\u{1D200}-\\\\u{1D245}\\\\u{1D300}-\\\\u{1D356}\\\\u{1D6DB}\\\\u{1D715}\\\\u{1D74F}\\\\u{1D789}\\\\u{1D7C3}\\\\u{1D7CE}-\\\\u{1D7FF}\\\\u{1DA00}-\\\\u{1DA36}\\\\u{1DA3B}-\\\\u{1DA6C}\\\\u{1DA75}\\\\u{1DA84}\\\\u{1DA9B}-\\\\u{1DA9F}\\\\u{1DAA1}-\\\\u{1DAAF}\\\\u{1E000}-\\\\u{1E006}\\\\u{1E008}-\\\\u{1E018}\\\\u{1E01B}-\\\\u{1E021}\\\\u{1E023}\\\\u{1E024}\\\\u{1E026}-\\\\u{1E02A}\\\\u{1E130}-\\\\u{1E136}\\\\u{1E2EC}-\\\\u{1E2EF}\\\\u{1E2FF}\\\\u{1E800}-\\\\u{1E8C4}\\\\u{1E8C7}-\\\\u{1E8D6}\\\\u{1E900}-\\\\u{1E94B}\\\\u{1E950}-\\\\u{1E959}\\\\u{1E95E}\\\\u{1E95F}\\\\u{1EC71}-\\\\u{1ECB4}\\\\u{1ED01}-\\\\u{1ED3D}\\\\u{1EE00}-\\\\u{1EE03}\\\\u{1EE05}-\\\\u{1EE1F}\\\\u{1EE21}\\\\u{1EE22}\\\\u{1EE24}\\\\u{1EE27}\\\\u{1EE29}-\\\\u{1EE32}\\\\u{1EE34}-\\\\u{1EE37}\\\\u{1EE39}\\\\u{1EE3B}\\\\u{1EE42}\\\\u{1EE47}\\\\u{1EE49}\\\\u{1EE4B}\\\\u{1EE4D}-\\\\u{1EE4F}\\\\u{1EE51}\\\\u{1EE52}\\\\u{1EE54}\\\\u{1EE57}\\\\u{1EE59}\\\\u{1EE5B}\\\\u{1EE5D}\\\\u{1EE5F}\\\\u{1EE61}\\\\u{1EE62}\\\\u{1EE64}\\\\u{1EE67}-\\\\u{1EE6A}\\\\u{1EE6C}-\\\\u{1EE72}\\\\u{1EE74}-\\\\u{1EE77}\\\\u{1EE79}-\\\\u{1EE7C}\\\\u{1EE7E}\\\\u{1EE80}-\\\\u{1EE89}\\\\u{1EE8B}-\\\\u{1EE9B}\\\\u{1EEA1}-\\\\u{1EEA3}\\\\u{1EEA5}-\\\\u{1EEA9}\\\\u{1EEAB}-\\\\u{1EEBB}\\\\u{1EEF0}\\\\u{1EEF1}\\\\u{1F000}-\\\\u{1F02B}\\\\u{1F030}-\\\\u{1F093}\\\\u{1F0A0}-\\\\u{1F0AE}\\\\u{1F0B1}-\\\\u{1F0BF}\\\\u{1F0C1}-\\\\u{1F0CF}\\\\u{1F0D1}-\\\\u{1F0F5}\\\\u{1F100}-\\\\u{1F10C}\\\\u{1F12F}\\\\u{1F16A}-\\\\u{1F16C}\\\\u{1F260}-\\\\u{1F265}\\\\u{1F300}-\\\\u{1F6D5}\\\\u{1F6E0}-\\\\u{1F6EC}\\\\u{1F6F0}-\\\\u{1F6FA}\\\\u{1F700}-\\\\u{1F773}\\\\u{1F780}-\\\\u{1F7D8}\\\\u{1F7E0}-\\\\u{1F7EB}\\\\u{1F800}-\\\\u{1F80B}\\\\u{1F810}-\\\\u{1F847}\\\\u{1F850}-\\\\u{1F859}\\\\u{1F860}-\\\\u{1F887}\\\\u{1F890}-\\\\u{1F8AD}\\\\u{1F900}-\\\\u{1F90B}\\\\u{1F90D}-\\\\u{1F971}\\\\u{1F973}-\\\\u{1F976}\\\\u{1F97A}-\\\\u{1F9A2}\\\\u{1F9A5}-\\\\u{1F9AA}\\\\u{1F9AE}-\\\\u{1F9CA}\\\\u{1F9CD}-\\\\u{1FA53}\\\\u{1FA60}-\\\\u{1FA6D}\\\\u{1FA70}-\\\\u{1FA73}\\\\u{1FA78}-\\\\u{1FA7A}\\\\u{1FA80}-\\\\u{1FA82}\\\\u{1FA90}-\\\\u{1FA95}\\\\u{E0001}\\\\u{E0020}-\\\\u{E007F}\\\\u{E0100}-\\\\u{E01EF}]*$/u;\\nconst bidiS3 = /[0-9\\\\xB2\\\\xB3\\\\xB9\\\\u05BE\\\\u05C0\\\\u05C3\\\\u05C6\\\\u05D0-\\\\u05EA\\\\u05EF-\\\\u05F4\\\\u0600-\\\\u0605\\\\u0608\\\\u060B\\\\u060D\\\\u061B\\\\u061C\\\\u061E-\\\\u064A\\\\u0660-\\\\u0669\\\\u066B-\\\\u066F\\\\u0671-\\\\u06D5\\\\u06DD\\\\u06E5\\\\u06E6\\\\u06EE-\\\\u070D\\\\u070F\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07C0-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u07FE-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0830-\\\\u083E\\\\u0840-\\\\u0858\\\\u085E\\\\u0860-\\\\u086A\\\\u08A0-\\\\u08B4\\\\u08B6-\\\\u08BD\\\\u08E2\\\\u200F\\\\u2070\\\\u2074-\\\\u2079\\\\u2080-\\\\u2089\\\\u2488-\\\\u249B\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBC1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFC\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF10-\\\\uFF19\\\\u{102E1}-\\\\u{102FB}\\\\u{10800}-\\\\u{10805}\\\\u{10808}\\\\u{1080A}-\\\\u{10835}\\\\u{10837}\\\\u{10838}\\\\u{1083C}\\\\u{1083F}-\\\\u{10855}\\\\u{10857}-\\\\u{1089E}\\\\u{108A7}-\\\\u{108AF}\\\\u{108E0}-\\\\u{108F2}\\\\u{108F4}\\\\u{108F5}\\\\u{108FB}-\\\\u{1091B}\\\\u{10920}-\\\\u{10939}\\\\u{1093F}\\\\u{10980}-\\\\u{109B7}\\\\u{109BC}-\\\\u{109CF}\\\\u{109D2}-\\\\u{10A00}\\\\u{10A10}-\\\\u{10A13}\\\\u{10A15}-\\\\u{10A17}\\\\u{10A19}-\\\\u{10A35}\\\\u{10A40}-\\\\u{10A48}\\\\u{10A50}-\\\\u{10A58}\\\\u{10A60}-\\\\u{10A9F}\\\\u{10AC0}-\\\\u{10AE4}\\\\u{10AEB}-\\\\u{10AF6}\\\\u{10B00}-\\\\u{10B35}\\\\u{10B40}-\\\\u{10B55}\\\\u{10B58}-\\\\u{10B72}\\\\u{10B78}-\\\\u{10B91}\\\\u{10B99}-\\\\u{10B9C}\\\\u{10BA9}-\\\\u{10BAF}\\\\u{10C00}-\\\\u{10C48}\\\\u{10C80}-\\\\u{10CB2}\\\\u{10CC0}-\\\\u{10CF2}\\\\u{10CFA}-\\\\u{10D23}\\\\u{10D30}-\\\\u{10D39}\\\\u{10E60}-\\\\u{10E7E}\\\\u{10F00}-\\\\u{10F27}\\\\u{10F30}-\\\\u{10F45}\\\\u{10F51}-\\\\u{10F59}\\\\u{10FE0}-\\\\u{10FF6}\\\\u{1D7CE}-\\\\u{1D7FF}\\\\u{1E800}-\\\\u{1E8C4}\\\\u{1E8C7}-\\\\u{1E8CF}\\\\u{1E900}-\\\\u{1E943}\\\\u{1E94B}\\\\u{1E950}-\\\\u{1E959}\\\\u{1E95E}\\\\u{1E95F}\\\\u{1EC71}-\\\\u{1ECB4}\\\\u{1ED01}-\\\\u{1ED3D}\\\\u{1EE00}-\\\\u{1EE03}\\\\u{1EE05}-\\\\u{1EE1F}\\\\u{1EE21}\\\\u{1EE22}\\\\u{1EE24}\\\\u{1EE27}\\\\u{1EE29}-\\\\u{1EE32}\\\\u{1EE34}-\\\\u{1EE37}\\\\u{1EE39}\\\\u{1EE3B}\\\\u{1EE42}\\\\u{1EE47}\\\\u{1EE49}\\\\u{1EE4B}\\\\u{1EE4D}-\\\\u{1EE4F}\\\\u{1EE51}\\\\u{1EE52}\\\\u{1EE54}\\\\u{1EE57}\\\\u{1EE59}\\\\u{1EE5B}\\\\u{1EE5D}\\\\u{1EE5F}\\\\u{1EE61}\\\\u{1EE62}\\\\u{1EE64}\\\\u{1EE67}-\\\\u{1EE6A}\\\\u{1EE6C}-\\\\u{1EE72}\\\\u{1EE74}-\\\\u{1EE77}\\\\u{1EE79}-\\\\u{1EE7C}\\\\u{1EE7E}\\\\u{1EE80}-\\\\u{1EE89}\\\\u{1EE8B}-\\\\u{1EE9B}\\\\u{1EEA1}-\\\\u{1EEA3}\\\\u{1EEA5}-\\\\u{1EEA9}\\\\u{1EEAB}-\\\\u{1EEBB}\\\\u{1F100}-\\\\u{1F10A}][\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u08D3-\\\\u08E1\\\\u08E3-\\\\u0902\\\\u093A\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C00\\\\u0C04\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81\\\\u0CBC\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D00\\\\u0D01\\\\u0D3B\\\\u0D3C\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4\\\\u17B5\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A1B\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ABE\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1BAB-\\\\u1BAD\\\\u1BE6\\\\u1BE8\\\\u1BE9\\\\u1BED\\\\u1BEF-\\\\u1BF1\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF8\\\\u1CF9\\\\u1DC0-\\\\u1DF9\\\\u1DFB-\\\\u1DFF\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302D\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uA9BD\\\\uA9E5\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA7C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEC\\\\uAAED\\\\uAAF6\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\u{101FD}\\\\u{102E0}\\\\u{10376}-\\\\u{1037A}\\\\u{10A01}-\\\\u{10A03}\\\\u{10A05}\\\\u{10A06}\\\\u{10A0C}-\\\\u{10A0F}\\\\u{10A38}-\\\\u{10A3A}\\\\u{10A3F}\\\\u{10AE5}\\\\u{10AE6}\\\\u{10D24}-\\\\u{10D27}\\\\u{10F46}-\\\\u{10F50}\\\\u{11001}\\\\u{11038}-\\\\u{11046}\\\\u{1107F}-\\\\u{11081}\\\\u{110B3}-\\\\u{110B6}\\\\u{110B9}\\\\u{110BA}\\\\u{11100}-\\\\u{11102}\\\\u{11127}-\\\\u{1112B}\\\\u{1112D}-\\\\u{11134}\\\\u{11173}\\\\u{11180}\\\\u{11181}\\\\u{111B6}-\\\\u{111BE}\\\\u{111C9}-\\\\u{111CC}\\\\u{1122F}-\\\\u{11231}\\\\u{11234}\\\\u{11236}\\\\u{11237}\\\\u{1123E}\\\\u{112DF}\\\\u{112E3}-\\\\u{112EA}\\\\u{11300}\\\\u{11301}\\\\u{1133B}\\\\u{1133C}\\\\u{11340}\\\\u{11366}-\\\\u{1136C}\\\\u{11370}-\\\\u{11374}\\\\u{11438}-\\\\u{1143F}\\\\u{11442}-\\\\u{11444}\\\\u{11446}\\\\u{1145E}\\\\u{114B3}-\\\\u{114B8}\\\\u{114BA}\\\\u{114BF}\\\\u{114C0}\\\\u{114C2}\\\\u{114C3}\\\\u{115B2}-\\\\u{115B5}\\\\u{115BC}\\\\u{115BD}\\\\u{115BF}\\\\u{115C0}\\\\u{115DC}\\\\u{115DD}\\\\u{11633}-\\\\u{1163A}\\\\u{1163D}\\\\u{1163F}\\\\u{11640}\\\\u{116AB}\\\\u{116AD}\\\\u{116B0}-\\\\u{116B5}\\\\u{116B7}\\\\u{1171D}-\\\\u{1171F}\\\\u{11722}-\\\\u{11725}\\\\u{11727}-\\\\u{1172B}\\\\u{1182F}-\\\\u{11837}\\\\u{11839}\\\\u{1183A}\\\\u{119D4}-\\\\u{119D7}\\\\u{119DA}\\\\u{119DB}\\\\u{119E0}\\\\u{11A01}-\\\\u{11A06}\\\\u{11A09}\\\\u{11A0A}\\\\u{11A33}-\\\\u{11A38}\\\\u{11A3B}-\\\\u{11A3E}\\\\u{11A47}\\\\u{11A51}-\\\\u{11A56}\\\\u{11A59}-\\\\u{11A5B}\\\\u{11A8A}-\\\\u{11A96}\\\\u{11A98}\\\\u{11A99}\\\\u{11C30}-\\\\u{11C36}\\\\u{11C38}-\\\\u{11C3D}\\\\u{11C92}-\\\\u{11CA7}\\\\u{11CAA}-\\\\u{11CB0}\\\\u{11CB2}\\\\u{11CB3}\\\\u{11CB5}\\\\u{11CB6}\\\\u{11D31}-\\\\u{11D36}\\\\u{11D3A}\\\\u{11D3C}\\\\u{11D3D}\\\\u{11D3F}-\\\\u{11D45}\\\\u{11D47}\\\\u{11D90}\\\\u{11D91}\\\\u{11D95}\\\\u{11D97}\\\\u{11EF3}\\\\u{11EF4}\\\\u{16AF0}-\\\\u{16AF4}\\\\u{16B30}-\\\\u{16B36}\\\\u{16F4F}\\\\u{16F8F}-\\\\u{16F92}\\\\u{1BC9D}\\\\u{1BC9E}\\\\u{1D167}-\\\\u{1D169}\\\\u{1D17B}-\\\\u{1D182}\\\\u{1D185}-\\\\u{1D18B}\\\\u{1D1AA}-\\\\u{1D1AD}\\\\u{1D242}-\\\\u{1D244}\\\\u{1DA00}-\\\\u{1DA36}\\\\u{1DA3B}-\\\\u{1DA6C}\\\\u{1DA75}\\\\u{1DA84}\\\\u{1DA9B}-\\\\u{1DA9F}\\\\u{1DAA1}-\\\\u{1DAAF}\\\\u{1E000}-\\\\u{1E006}\\\\u{1E008}-\\\\u{1E018}\\\\u{1E01B}-\\\\u{1E021}\\\\u{1E023}\\\\u{1E024}\\\\u{1E026}-\\\\u{1E02A}\\\\u{1E130}-\\\\u{1E136}\\\\u{1E2EC}-\\\\u{1E2EF}\\\\u{1E8D0}-\\\\u{1E8D6}\\\\u{1E944}-\\\\u{1E94A}\\\\u{E0100}-\\\\u{E01EF}]*$/u;\\nconst bidiS4EN = /[0-9\\\\xB2\\\\xB3\\\\xB9\\\\u06F0-\\\\u06F9\\\\u2070\\\\u2074-\\\\u2079\\\\u2080-\\\\u2089\\\\u2488-\\\\u249B\\\\uFF10-\\\\uFF19\\\\u{102E1}-\\\\u{102FB}\\\\u{1D7CE}-\\\\u{1D7FF}\\\\u{1F100}-\\\\u{1F10A}]/u;\\nconst bidiS4AN = /[\\\\u0600-\\\\u0605\\\\u0660-\\\\u0669\\\\u066B\\\\u066C\\\\u06DD\\\\u08E2\\\\u{10D30}-\\\\u{10D39}\\\\u{10E60}-\\\\u{10E7E}]/u;\\nconst bidiS5 = /^[\\\\0-\\\\x08\\\\x0E-\\\\x1B!-\\\\x84\\\\x86-\\\\u0377\\\\u037A-\\\\u037F\\\\u0384-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559-\\\\u058A\\\\u058D-\\\\u058F\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0606\\\\u0607\\\\u0609\\\\u060A\\\\u060C\\\\u060E-\\\\u061A\\\\u064B-\\\\u065F\\\\u066A\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DE-\\\\u06E4\\\\u06E7-\\\\u06ED\\\\u06F0-\\\\u06F9\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07F6-\\\\u07F9\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u08D3-\\\\u08E1\\\\u08E3-\\\\u0983\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BC-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CE\\\\u09D7\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E3\\\\u09E6-\\\\u09FE\\\\u0A01-\\\\u0A03\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A66-\\\\u0A76\\\\u0A81-\\\\u0A83\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABC-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AD0\\\\u0AE0-\\\\u0AE3\\\\u0AE6-\\\\u0AF1\\\\u0AF9-\\\\u0AFF\\\\u0B01-\\\\u0B03\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3C-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B56\\\\u0B57\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B63\\\\u0B66-\\\\u0B77\\\\u0B82\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD0\\\\u0BD7\\\\u0BE6-\\\\u0BFA\\\\u0C00-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C58-\\\\u0C5A\\\\u0C60-\\\\u0C63\\\\u0C66-\\\\u0C6F\\\\u0C77-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBC-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CDE\\\\u0CE0-\\\\u0CE3\\\\u0CE6-\\\\u0CEF\\\\u0CF1\\\\u0CF2\\\\u0D00-\\\\u0D03\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4F\\\\u0D54-\\\\u0D63\\\\u0D66-\\\\u0D7F\\\\u0D82\\\\u0D83\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DE6-\\\\u0DEF\\\\u0DF2-\\\\u0DF4\\\\u0E01-\\\\u0E3A\\\\u0E3F-\\\\u0E5B\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E86-\\\\u0E8A\\\\u0E8C-\\\\u0EA3\\\\u0EA5\\\\u0EA7-\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EC8-\\\\u0ECD\\\\u0ED0-\\\\u0ED9\\\\u0EDC-\\\\u0EDF\\\\u0F00-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F71-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FBE-\\\\u0FCC\\\\u0FCE-\\\\u0FDA\\\\u1000-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u135D-\\\\u137C\\\\u1380-\\\\u1399\\\\u13A0-\\\\u13F5\\\\u13F8-\\\\u13FD\\\\u1400-\\\\u167F\\\\u1681-\\\\u169C\\\\u16A0-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1714\\\\u1720-\\\\u1736\\\\u1740-\\\\u1753\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1772\\\\u1773\\\\u1780-\\\\u17DD\\\\u17E0-\\\\u17E9\\\\u17F0-\\\\u17F9\\\\u1800-\\\\u180E\\\\u1810-\\\\u1819\\\\u1820-\\\\u1878\\\\u1880-\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1940\\\\u1944-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19B0-\\\\u19C9\\\\u19D0-\\\\u19DA\\\\u19DE-\\\\u1A1B\\\\u1A1E-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1AA0-\\\\u1AAD\\\\u1AB0-\\\\u1ABE\\\\u1B00-\\\\u1B4B\\\\u1B50-\\\\u1B7C\\\\u1B80-\\\\u1BF3\\\\u1BFC-\\\\u1C37\\\\u1C3B-\\\\u1C49\\\\u1C4D-\\\\u1C88\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CC7\\\\u1CD0-\\\\u1CFA\\\\u1D00-\\\\u1DF9\\\\u1DFB-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FC4\\\\u1FC6-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FDD-\\\\u1FEF\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFE\\\\u200B-\\\\u200E\\\\u2010-\\\\u2027\\\\u202F-\\\\u205E\\\\u2060-\\\\u2064\\\\u206A-\\\\u2071\\\\u2074-\\\\u208E\\\\u2090-\\\\u209C\\\\u20A0-\\\\u20BF\\\\u20D0-\\\\u20F0\\\\u2100-\\\\u218B\\\\u2190-\\\\u2426\\\\u2440-\\\\u244A\\\\u2460-\\\\u2B73\\\\u2B76-\\\\u2B95\\\\u2B98-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CF3\\\\u2CF9-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D70\\\\u2D7F-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2DE0-\\\\u2E4F\\\\u2E80-\\\\u2E99\\\\u2E9B-\\\\u2EF3\\\\u2F00-\\\\u2FD5\\\\u2FF0-\\\\u2FFB\\\\u3001-\\\\u303F\\\\u3041-\\\\u3096\\\\u3099-\\\\u30FF\\\\u3105-\\\\u312F\\\\u3131-\\\\u318E\\\\u3190-\\\\u31BA\\\\u31C0-\\\\u31E3\\\\u31F0-\\\\u321E\\\\u3220-\\\\u4DB5\\\\u4DC0-\\\\u9FEF\\\\uA000-\\\\uA48C\\\\uA490-\\\\uA4C6\\\\uA4D0-\\\\uA62B\\\\uA640-\\\\uA6F7\\\\uA700-\\\\uA7BF\\\\uA7C2-\\\\uA7C6\\\\uA7F7-\\\\uA82B\\\\uA830-\\\\uA839\\\\uA840-\\\\uA877\\\\uA880-\\\\uA8C5\\\\uA8CE-\\\\uA8D9\\\\uA8E0-\\\\uA953\\\\uA95F-\\\\uA97C\\\\uA980-\\\\uA9CD\\\\uA9CF-\\\\uA9D9\\\\uA9DE-\\\\uA9FE\\\\uAA00-\\\\uAA36\\\\uAA40-\\\\uAA4D\\\\uAA50-\\\\uAA59\\\\uAA5C-\\\\uAAC2\\\\uAADB-\\\\uAAF6\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB67\\\\uAB70-\\\\uABED\\\\uABF0-\\\\uABF9\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uD800-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1E\\\\uFB29\\\\uFD3E\\\\uFD3F\\\\uFDFD\\\\uFE00-\\\\uFE19\\\\uFE20-\\\\uFE52\\\\uFE54-\\\\uFE66\\\\uFE68-\\\\uFE6B\\\\uFEFF\\\\uFF01-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC\\\\uFFE0-\\\\uFFE6\\\\uFFE8-\\\\uFFEE\\\\uFFF9-\\\\uFFFD\\\\u{10000}-\\\\u{1000B}\\\\u{1000D}-\\\\u{10026}\\\\u{10028}-\\\\u{1003A}\\\\u{1003C}\\\\u{1003D}\\\\u{1003F}-\\\\u{1004D}\\\\u{10050}-\\\\u{1005D}\\\\u{10080}-\\\\u{100FA}\\\\u{10100}-\\\\u{10102}\\\\u{10107}-\\\\u{10133}\\\\u{10137}-\\\\u{1018E}\\\\u{10190}-\\\\u{1019B}\\\\u{101A0}\\\\u{101D0}-\\\\u{101FD}\\\\u{10280}-\\\\u{1029C}\\\\u{102A0}-\\\\u{102D0}\\\\u{102E0}-\\\\u{102FB}\\\\u{10300}-\\\\u{10323}\\\\u{1032D}-\\\\u{1034A}\\\\u{10350}-\\\\u{1037A}\\\\u{10380}-\\\\u{1039D}\\\\u{1039F}-\\\\u{103C3}\\\\u{103C8}-\\\\u{103D5}\\\\u{10400}-\\\\u{1049D}\\\\u{104A0}-\\\\u{104A9}\\\\u{104B0}-\\\\u{104D3}\\\\u{104D8}-\\\\u{104FB}\\\\u{10500}-\\\\u{10527}\\\\u{10530}-\\\\u{10563}\\\\u{1056F}\\\\u{10600}-\\\\u{10736}\\\\u{10740}-\\\\u{10755}\\\\u{10760}-\\\\u{10767}\\\\u{1091F}\\\\u{10A01}-\\\\u{10A03}\\\\u{10A05}\\\\u{10A06}\\\\u{10A0C}-\\\\u{10A0F}\\\\u{10A38}-\\\\u{10A3A}\\\\u{10A3F}\\\\u{10AE5}\\\\u{10AE6}\\\\u{10B39}-\\\\u{10B3F}\\\\u{10D24}-\\\\u{10D27}\\\\u{10F46}-\\\\u{10F50}\\\\u{11000}-\\\\u{1104D}\\\\u{11052}-\\\\u{1106F}\\\\u{1107F}-\\\\u{110C1}\\\\u{110CD}\\\\u{110D0}-\\\\u{110E8}\\\\u{110F0}-\\\\u{110F9}\\\\u{11100}-\\\\u{11134}\\\\u{11136}-\\\\u{11146}\\\\u{11150}-\\\\u{11176}\\\\u{11180}-\\\\u{111CD}\\\\u{111D0}-\\\\u{111DF}\\\\u{111E1}-\\\\u{111F4}\\\\u{11200}-\\\\u{11211}\\\\u{11213}-\\\\u{1123E}\\\\u{11280}-\\\\u{11286}\\\\u{11288}\\\\u{1128A}-\\\\u{1128D}\\\\u{1128F}-\\\\u{1129D}\\\\u{1129F}-\\\\u{112A9}\\\\u{112B0}-\\\\u{112EA}\\\\u{112F0}-\\\\u{112F9}\\\\u{11300}-\\\\u{11303}\\\\u{11305}-\\\\u{1130C}\\\\u{1130F}\\\\u{11310}\\\\u{11313}-\\\\u{11328}\\\\u{1132A}-\\\\u{11330}\\\\u{11332}\\\\u{11333}\\\\u{11335}-\\\\u{11339}\\\\u{1133B}-\\\\u{11344}\\\\u{11347}\\\\u{11348}\\\\u{1134B}-\\\\u{1134D}\\\\u{11350}\\\\u{11357}\\\\u{1135D}-\\\\u{11363}\\\\u{11366}-\\\\u{1136C}\\\\u{11370}-\\\\u{11374}\\\\u{11400}-\\\\u{11459}\\\\u{1145B}\\\\u{1145D}-\\\\u{1145F}\\\\u{11480}-\\\\u{114C7}\\\\u{114D0}-\\\\u{114D9}\\\\u{11580}-\\\\u{115B5}\\\\u{115B8}-\\\\u{115DD}\\\\u{11600}-\\\\u{11644}\\\\u{11650}-\\\\u{11659}\\\\u{11660}-\\\\u{1166C}\\\\u{11680}-\\\\u{116B8}\\\\u{116C0}-\\\\u{116C9}\\\\u{11700}-\\\\u{1171A}\\\\u{1171D}-\\\\u{1172B}\\\\u{11730}-\\\\u{1173F}\\\\u{11800}-\\\\u{1183B}\\\\u{118A0}-\\\\u{118F2}\\\\u{118FF}\\\\u{119A0}-\\\\u{119A7}\\\\u{119AA}-\\\\u{119D7}\\\\u{119DA}-\\\\u{119E4}\\\\u{11A00}-\\\\u{11A47}\\\\u{11A50}-\\\\u{11AA2}\\\\u{11AC0}-\\\\u{11AF8}\\\\u{11C00}-\\\\u{11C08}\\\\u{11C0A}-\\\\u{11C36}\\\\u{11C38}-\\\\u{11C45}\\\\u{11C50}-\\\\u{11C6C}\\\\u{11C70}-\\\\u{11C8F}\\\\u{11C92}-\\\\u{11CA7}\\\\u{11CA9}-\\\\u{11CB6}\\\\u{11D00}-\\\\u{11D06}\\\\u{11D08}\\\\u{11D09}\\\\u{11D0B}-\\\\u{11D36}\\\\u{11D3A}\\\\u{11D3C}\\\\u{11D3D}\\\\u{11D3F}-\\\\u{11D47}\\\\u{11D50}-\\\\u{11D59}\\\\u{11D60}-\\\\u{11D65}\\\\u{11D67}\\\\u{11D68}\\\\u{11D6A}-\\\\u{11D8E}\\\\u{11D90}\\\\u{11D91}\\\\u{11D93}-\\\\u{11D98}\\\\u{11DA0}-\\\\u{11DA9}\\\\u{11EE0}-\\\\u{11EF8}\\\\u{11FC0}-\\\\u{11FF1}\\\\u{11FFF}-\\\\u{12399}\\\\u{12400}-\\\\u{1246E}\\\\u{12470}-\\\\u{12474}\\\\u{12480}-\\\\u{12543}\\\\u{13000}-\\\\u{1342E}\\\\u{13430}-\\\\u{13438}\\\\u{14400}-\\\\u{14646}\\\\u{16800}-\\\\u{16A38}\\\\u{16A40}-\\\\u{16A5E}\\\\u{16A60}-\\\\u{16A69}\\\\u{16A6E}\\\\u{16A6F}\\\\u{16AD0}-\\\\u{16AED}\\\\u{16AF0}-\\\\u{16AF5}\\\\u{16B00}-\\\\u{16B45}\\\\u{16B50}-\\\\u{16B59}\\\\u{16B5B}-\\\\u{16B61}\\\\u{16B63}-\\\\u{16B77}\\\\u{16B7D}-\\\\u{16B8F}\\\\u{16E40}-\\\\u{16E9A}\\\\u{16F00}-\\\\u{16F4A}\\\\u{16F4F}-\\\\u{16F87}\\\\u{16F8F}-\\\\u{16F9F}\\\\u{16FE0}-\\\\u{16FE3}\\\\u{17000}-\\\\u{187F7}\\\\u{18800}-\\\\u{18AF2}\\\\u{1B000}-\\\\u{1B11E}\\\\u{1B150}-\\\\u{1B152}\\\\u{1B164}-\\\\u{1B167}\\\\u{1B170}-\\\\u{1B2FB}\\\\u{1BC00}-\\\\u{1BC6A}\\\\u{1BC70}-\\\\u{1BC7C}\\\\u{1BC80}-\\\\u{1BC88}\\\\u{1BC90}-\\\\u{1BC99}\\\\u{1BC9C}-\\\\u{1BCA3}\\\\u{1D000}-\\\\u{1D0F5}\\\\u{1D100}-\\\\u{1D126}\\\\u{1D129}-\\\\u{1D1E8}\\\\u{1D200}-\\\\u{1D245}\\\\u{1D2E0}-\\\\u{1D2F3}\\\\u{1D300}-\\\\u{1D356}\\\\u{1D360}-\\\\u{1D378}\\\\u{1D400}-\\\\u{1D454}\\\\u{1D456}-\\\\u{1D49C}\\\\u{1D49E}\\\\u{1D49F}\\\\u{1D4A2}\\\\u{1D4A5}\\\\u{1D4A6}\\\\u{1D4A9}-\\\\u{1D4AC}\\\\u{1D4AE}-\\\\u{1D4B9}\\\\u{1D4BB}\\\\u{1D4BD}-\\\\u{1D4C3}\\\\u{1D4C5}-\\\\u{1D505}\\\\u{1D507}-\\\\u{1D50A}\\\\u{1D50D}-\\\\u{1D514}\\\\u{1D516}-\\\\u{1D51C}\\\\u{1D51E}-\\\\u{1D539}\\\\u{1D53B}-\\\\u{1D53E}\\\\u{1D540}-\\\\u{1D544}\\\\u{1D546}\\\\u{1D54A}-\\\\u{1D550}\\\\u{1D552}-\\\\u{1D6A5}\\\\u{1D6A8}-\\\\u{1D7CB}\\\\u{1D7CE}-\\\\u{1DA8B}\\\\u{1DA9B}-\\\\u{1DA9F}\\\\u{1DAA1}-\\\\u{1DAAF}\\\\u{1E000}-\\\\u{1E006}\\\\u{1E008}-\\\\u{1E018}\\\\u{1E01B}-\\\\u{1E021}\\\\u{1E023}\\\\u{1E024}\\\\u{1E026}-\\\\u{1E02A}\\\\u{1E100}-\\\\u{1E12C}\\\\u{1E130}-\\\\u{1E13D}\\\\u{1E140}-\\\\u{1E149}\\\\u{1E14E}\\\\u{1E14F}\\\\u{1E2C0}-\\\\u{1E2F9}\\\\u{1E2FF}\\\\u{1E8D0}-\\\\u{1E8D6}\\\\u{1E944}-\\\\u{1E94A}\\\\u{1EEF0}\\\\u{1EEF1}\\\\u{1F000}-\\\\u{1F02B}\\\\u{1F030}-\\\\u{1F093}\\\\u{1F0A0}-\\\\u{1F0AE}\\\\u{1F0B1}-\\\\u{1F0BF}\\\\u{1F0C1}-\\\\u{1F0CF}\\\\u{1F0D1}-\\\\u{1F0F5}\\\\u{1F100}-\\\\u{1F10C}\\\\u{1F110}-\\\\u{1F16C}\\\\u{1F170}-\\\\u{1F1AC}\\\\u{1F1E6}-\\\\u{1F202}\\\\u{1F210}-\\\\u{1F23B}\\\\u{1F240}-\\\\u{1F248}\\\\u{1F250}\\\\u{1F251}\\\\u{1F260}-\\\\u{1F265}\\\\u{1F300}-\\\\u{1F6D5}\\\\u{1F6E0}-\\\\u{1F6EC}\\\\u{1F6F0}-\\\\u{1F6FA}\\\\u{1F700}-\\\\u{1F773}\\\\u{1F780}-\\\\u{1F7D8}\\\\u{1F7E0}-\\\\u{1F7EB}\\\\u{1F800}-\\\\u{1F80B}\\\\u{1F810}-\\\\u{1F847}\\\\u{1F850}-\\\\u{1F859}\\\\u{1F860}-\\\\u{1F887}\\\\u{1F890}-\\\\u{1F8AD}\\\\u{1F900}-\\\\u{1F90B}\\\\u{1F90D}-\\\\u{1F971}\\\\u{1F973}-\\\\u{1F976}\\\\u{1F97A}-\\\\u{1F9A2}\\\\u{1F9A5}-\\\\u{1F9AA}\\\\u{1F9AE}-\\\\u{1F9CA}\\\\u{1F9CD}-\\\\u{1FA53}\\\\u{1FA60}-\\\\u{1FA6D}\\\\u{1FA70}-\\\\u{1FA73}\\\\u{1FA78}-\\\\u{1FA7A}\\\\u{1FA80}-\\\\u{1FA82}\\\\u{1FA90}-\\\\u{1FA95}\\\\u{20000}-\\\\u{2A6D6}\\\\u{2A700}-\\\\u{2B734}\\\\u{2B740}-\\\\u{2B81D}\\\\u{2B820}-\\\\u{2CEA1}\\\\u{2CEB0}-\\\\u{2EBE0}\\\\u{2F800}-\\\\u{2FA1D}\\\\u{E0001}\\\\u{E0020}-\\\\u{E007F}\\\\u{E0100}-\\\\u{E01EF}\\\\u{F0000}-\\\\u{FFFFD}\\\\u{100000}-\\\\u{10FFFD}]*$/u;\\nconst bidiS6 = /[0-9A-Za-z\\\\xAA\\\\xB2\\\\xB3\\\\xB5\\\\xB9\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02B8\\\\u02BB-\\\\u02C1\\\\u02D0\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EE\\\\u0370-\\\\u0373\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0482\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559-\\\\u0589\\\\u06F0-\\\\u06F9\\\\u0903-\\\\u0939\\\\u093B\\\\u093D-\\\\u0940\\\\u0949-\\\\u094C\\\\u094E-\\\\u0950\\\\u0958-\\\\u0961\\\\u0964-\\\\u0980\\\\u0982\\\\u0983\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD-\\\\u09C0\\\\u09C7\\\\u09C8\\\\u09CB\\\\u09CC\\\\u09CE\\\\u09D7\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09E6-\\\\u09F1\\\\u09F4-\\\\u09FA\\\\u09FC\\\\u09FD\\\\u0A03\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A3E-\\\\u0A40\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A66-\\\\u0A6F\\\\u0A72-\\\\u0A74\\\\u0A76\\\\u0A83\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD-\\\\u0AC0\\\\u0AC9\\\\u0ACB\\\\u0ACC\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0AE6-\\\\u0AF0\\\\u0AF9\\\\u0B02\\\\u0B03\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B3E\\\\u0B40\\\\u0B47\\\\u0B48\\\\u0B4B\\\\u0B4C\\\\u0B57\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B66-\\\\u0B77\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BBE\\\\u0BBF\\\\u0BC1\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCC\\\\u0BD0\\\\u0BD7\\\\u0BE6-\\\\u0BF2\\\\u0C01-\\\\u0C03\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C41-\\\\u0C44\\\\u0C58-\\\\u0C5A\\\\u0C60\\\\u0C61\\\\u0C66-\\\\u0C6F\\\\u0C77\\\\u0C7F\\\\u0C80\\\\u0C82-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA\\\\u0CCB\\\\u0CD5\\\\u0CD6\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CE6-\\\\u0CEF\\\\u0CF1\\\\u0CF2\\\\u0D02\\\\u0D03\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D-\\\\u0D40\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4C\\\\u0D4E\\\\u0D4F\\\\u0D54-\\\\u0D61\\\\u0D66-\\\\u0D7F\\\\u0D82\\\\u0D83\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0DCF-\\\\u0DD1\\\\u0DD8-\\\\u0DDF\\\\u0DE6-\\\\u0DEF\\\\u0DF2-\\\\u0DF4\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E4F-\\\\u0E5B\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E86-\\\\u0E8A\\\\u0E8C-\\\\u0EA3\\\\u0EA5\\\\u0EA7-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0ED0-\\\\u0ED9\\\\u0EDC-\\\\u0EDF\\\\u0F00-\\\\u0F17\\\\u0F1A-\\\\u0F34\\\\u0F36\\\\u0F38\\\\u0F3E-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F7F\\\\u0F85\\\\u0F88-\\\\u0F8C\\\\u0FBE-\\\\u0FC5\\\\u0FC7-\\\\u0FCC\\\\u0FCE-\\\\u0FDA\\\\u1000-\\\\u102C\\\\u1031\\\\u1038\\\\u103B\\\\u103C\\\\u103F-\\\\u1057\\\\u105A-\\\\u105D\\\\u1061-\\\\u1070\\\\u1075-\\\\u1081\\\\u1083\\\\u1084\\\\u1087-\\\\u108C\\\\u108E-\\\\u109C\\\\u109E-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1360-\\\\u137C\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F5\\\\u13F8-\\\\u13FD\\\\u1401-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1735\\\\u1736\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17B6\\\\u17BE-\\\\u17C5\\\\u17C7\\\\u17C8\\\\u17D4-\\\\u17DA\\\\u17DC\\\\u17E0-\\\\u17E9\\\\u1810-\\\\u1819\\\\u1820-\\\\u1878\\\\u1880-\\\\u1884\\\\u1887-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1923-\\\\u1926\\\\u1929-\\\\u192B\\\\u1930\\\\u1931\\\\u1933-\\\\u1938\\\\u1946-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19B0-\\\\u19C9\\\\u19D0-\\\\u19DA\\\\u1A00-\\\\u1A16\\\\u1A19\\\\u1A1A\\\\u1A1E-\\\\u1A55\\\\u1A57\\\\u1A61\\\\u1A63\\\\u1A64\\\\u1A6D-\\\\u1A72\\\\u1A80-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1AA0-\\\\u1AAD\\\\u1B04-\\\\u1B33\\\\u1B35\\\\u1B3B\\\\u1B3D-\\\\u1B41\\\\u1B43-\\\\u1B4B\\\\u1B50-\\\\u1B6A\\\\u1B74-\\\\u1B7C\\\\u1B82-\\\\u1BA1\\\\u1BA6\\\\u1BA7\\\\u1BAA\\\\u1BAE-\\\\u1BE5\\\\u1BE7\\\\u1BEA-\\\\u1BEC\\\\u1BEE\\\\u1BF2\\\\u1BF3\\\\u1BFC-\\\\u1C2B\\\\u1C34\\\\u1C35\\\\u1C3B-\\\\u1C49\\\\u1C4D-\\\\u1C88\\\\u1C90-\\\\u1CBA\\\\u1CBD-\\\\u1CC7\\\\u1CD3\\\\u1CE1\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF3\\\\u1CF5-\\\\u1CF7\\\\u1CFA\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u200E\\\\u2070\\\\u2071\\\\u2074-\\\\u2079\\\\u207F-\\\\u2089\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u214F\\\\u2160-\\\\u2188\\\\u2336-\\\\u237A\\\\u2395\\\\u2488-\\\\u24E9\\\\u26AC\\\\u2800-\\\\u28FF\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D70\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u302E\\\\u302F\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312F\\\\u3131-\\\\u318E\\\\u3190-\\\\u31BA\\\\u31F0-\\\\u321C\\\\u3220-\\\\u324F\\\\u3260-\\\\u327B\\\\u327F-\\\\u32B0\\\\u32C0-\\\\u32CB\\\\u32D0-\\\\u3376\\\\u337B-\\\\u33DD\\\\u33E0-\\\\u33FE\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FEF\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA60C\\\\uA610-\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA680-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA6F2-\\\\uA6F7\\\\uA722-\\\\uA787\\\\uA789-\\\\uA7BF\\\\uA7C2-\\\\uA7C6\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA824\\\\uA827\\\\uA830-\\\\uA837\\\\uA840-\\\\uA873\\\\uA880-\\\\uA8C3\\\\uA8CE-\\\\uA8D9\\\\uA8F2-\\\\uA8FE\\\\uA900-\\\\uA925\\\\uA92E-\\\\uA946\\\\uA952\\\\uA953\\\\uA95F-\\\\uA97C\\\\uA983-\\\\uA9B2\\\\uA9B4\\\\uA9B5\\\\uA9BA\\\\uA9BB\\\\uA9BE-\\\\uA9CD\\\\uA9CF-\\\\uA9D9\\\\uA9DE-\\\\uA9E4\\\\uA9E6-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA2F\\\\uAA30\\\\uAA33\\\\uAA34\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA4D\\\\uAA50-\\\\uAA59\\\\uAA5C-\\\\uAA7B\\\\uAA7D-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAAEB\\\\uAAEE-\\\\uAAF5\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB67\\\\uAB70-\\\\uABE4\\\\uABE6\\\\uABE7\\\\uABE9-\\\\uABEC\\\\uABF0-\\\\uABF9\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uD800-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFF10-\\\\uFF19\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC\\\\u{10000}-\\\\u{1000B}\\\\u{1000D}-\\\\u{10026}\\\\u{10028}-\\\\u{1003A}\\\\u{1003C}\\\\u{1003D}\\\\u{1003F}-\\\\u{1004D}\\\\u{10050}-\\\\u{1005D}\\\\u{10080}-\\\\u{100FA}\\\\u{10100}\\\\u{10102}\\\\u{10107}-\\\\u{10133}\\\\u{10137}-\\\\u{1013F}\\\\u{1018D}\\\\u{1018E}\\\\u{101D0}-\\\\u{101FC}\\\\u{10280}-\\\\u{1029C}\\\\u{102A0}-\\\\u{102D0}\\\\u{102E1}-\\\\u{102FB}\\\\u{10300}-\\\\u{10323}\\\\u{1032D}-\\\\u{1034A}\\\\u{10350}-\\\\u{10375}\\\\u{10380}-\\\\u{1039D}\\\\u{1039F}-\\\\u{103C3}\\\\u{103C8}-\\\\u{103D5}\\\\u{10400}-\\\\u{1049D}\\\\u{104A0}-\\\\u{104A9}\\\\u{104B0}-\\\\u{104D3}\\\\u{104D8}-\\\\u{104FB}\\\\u{10500}-\\\\u{10527}\\\\u{10530}-\\\\u{10563}\\\\u{1056F}\\\\u{10600}-\\\\u{10736}\\\\u{10740}-\\\\u{10755}\\\\u{10760}-\\\\u{10767}\\\\u{11000}\\\\u{11002}-\\\\u{11037}\\\\u{11047}-\\\\u{1104D}\\\\u{11066}-\\\\u{1106F}\\\\u{11082}-\\\\u{110B2}\\\\u{110B7}\\\\u{110B8}\\\\u{110BB}-\\\\u{110C1}\\\\u{110CD}\\\\u{110D0}-\\\\u{110E8}\\\\u{110F0}-\\\\u{110F9}\\\\u{11103}-\\\\u{11126}\\\\u{1112C}\\\\u{11136}-\\\\u{11146}\\\\u{11150}-\\\\u{11172}\\\\u{11174}-\\\\u{11176}\\\\u{11182}-\\\\u{111B5}\\\\u{111BF}-\\\\u{111C8}\\\\u{111CD}\\\\u{111D0}-\\\\u{111DF}\\\\u{111E1}-\\\\u{111F4}\\\\u{11200}-\\\\u{11211}\\\\u{11213}-\\\\u{1122E}\\\\u{11232}\\\\u{11233}\\\\u{11235}\\\\u{11238}-\\\\u{1123D}\\\\u{11280}-\\\\u{11286}\\\\u{11288}\\\\u{1128A}-\\\\u{1128D}\\\\u{1128F}-\\\\u{1129D}\\\\u{1129F}-\\\\u{112A9}\\\\u{112B0}-\\\\u{112DE}\\\\u{112E0}-\\\\u{112E2}\\\\u{112F0}-\\\\u{112F9}\\\\u{11302}\\\\u{11303}\\\\u{11305}-\\\\u{1130C}\\\\u{1130F}\\\\u{11310}\\\\u{11313}-\\\\u{11328}\\\\u{1132A}-\\\\u{11330}\\\\u{11332}\\\\u{11333}\\\\u{11335}-\\\\u{11339}\\\\u{1133D}-\\\\u{1133F}\\\\u{11341}-\\\\u{11344}\\\\u{11347}\\\\u{11348}\\\\u{1134B}-\\\\u{1134D}\\\\u{11350}\\\\u{11357}\\\\u{1135D}-\\\\u{11363}\\\\u{11400}-\\\\u{11437}\\\\u{11440}\\\\u{11441}\\\\u{11445}\\\\u{11447}-\\\\u{11459}\\\\u{1145B}\\\\u{1145D}\\\\u{1145F}\\\\u{11480}-\\\\u{114B2}\\\\u{114B9}\\\\u{114BB}-\\\\u{114BE}\\\\u{114C1}\\\\u{114C4}-\\\\u{114C7}\\\\u{114D0}-\\\\u{114D9}\\\\u{11580}-\\\\u{115B1}\\\\u{115B8}-\\\\u{115BB}\\\\u{115BE}\\\\u{115C1}-\\\\u{115DB}\\\\u{11600}-\\\\u{11632}\\\\u{1163B}\\\\u{1163C}\\\\u{1163E}\\\\u{11641}-\\\\u{11644}\\\\u{11650}-\\\\u{11659}\\\\u{11680}-\\\\u{116AA}\\\\u{116AC}\\\\u{116AE}\\\\u{116AF}\\\\u{116B6}\\\\u{116B8}\\\\u{116C0}-\\\\u{116C9}\\\\u{11700}-\\\\u{1171A}\\\\u{11720}\\\\u{11721}\\\\u{11726}\\\\u{11730}-\\\\u{1173F}\\\\u{11800}-\\\\u{1182E}\\\\u{11838}\\\\u{1183B}\\\\u{118A0}-\\\\u{118F2}\\\\u{118FF}\\\\u{119A0}-\\\\u{119A7}\\\\u{119AA}-\\\\u{119D3}\\\\u{119DC}-\\\\u{119DF}\\\\u{119E1}-\\\\u{119E4}\\\\u{11A00}\\\\u{11A07}\\\\u{11A08}\\\\u{11A0B}-\\\\u{11A32}\\\\u{11A39}\\\\u{11A3A}\\\\u{11A3F}-\\\\u{11A46}\\\\u{11A50}\\\\u{11A57}\\\\u{11A58}\\\\u{11A5C}-\\\\u{11A89}\\\\u{11A97}\\\\u{11A9A}-\\\\u{11AA2}\\\\u{11AC0}-\\\\u{11AF8}\\\\u{11C00}-\\\\u{11C08}\\\\u{11C0A}-\\\\u{11C2F}\\\\u{11C3E}-\\\\u{11C45}\\\\u{11C50}-\\\\u{11C6C}\\\\u{11C70}-\\\\u{11C8F}\\\\u{11CA9}\\\\u{11CB1}\\\\u{11CB4}\\\\u{11D00}-\\\\u{11D06}\\\\u{11D08}\\\\u{11D09}\\\\u{11D0B}-\\\\u{11D30}\\\\u{11D46}\\\\u{11D50}-\\\\u{11D59}\\\\u{11D60}-\\\\u{11D65}\\\\u{11D67}\\\\u{11D68}\\\\u{11D6A}-\\\\u{11D8E}\\\\u{11D93}\\\\u{11D94}\\\\u{11D96}\\\\u{11D98}\\\\u{11DA0}-\\\\u{11DA9}\\\\u{11EE0}-\\\\u{11EF2}\\\\u{11EF5}-\\\\u{11EF8}\\\\u{11FC0}-\\\\u{11FD4}\\\\u{11FFF}-\\\\u{12399}\\\\u{12400}-\\\\u{1246E}\\\\u{12470}-\\\\u{12474}\\\\u{12480}-\\\\u{12543}\\\\u{13000}-\\\\u{1342E}\\\\u{13430}-\\\\u{13438}\\\\u{14400}-\\\\u{14646}\\\\u{16800}-\\\\u{16A38}\\\\u{16A40}-\\\\u{16A5E}\\\\u{16A60}-\\\\u{16A69}\\\\u{16A6E}\\\\u{16A6F}\\\\u{16AD0}-\\\\u{16AED}\\\\u{16AF5}\\\\u{16B00}-\\\\u{16B2F}\\\\u{16B37}-\\\\u{16B45}\\\\u{16B50}-\\\\u{16B59}\\\\u{16B5B}-\\\\u{16B61}\\\\u{16B63}-\\\\u{16B77}\\\\u{16B7D}-\\\\u{16B8F}\\\\u{16E40}-\\\\u{16E9A}\\\\u{16F00}-\\\\u{16F4A}\\\\u{16F50}-\\\\u{16F87}\\\\u{16F93}-\\\\u{16F9F}\\\\u{16FE0}\\\\u{16FE1}\\\\u{16FE3}\\\\u{17000}-\\\\u{187F7}\\\\u{18800}-\\\\u{18AF2}\\\\u{1B000}-\\\\u{1B11E}\\\\u{1B150}-\\\\u{1B152}\\\\u{1B164}-\\\\u{1B167}\\\\u{1B170}-\\\\u{1B2FB}\\\\u{1BC00}-\\\\u{1BC6A}\\\\u{1BC70}-\\\\u{1BC7C}\\\\u{1BC80}-\\\\u{1BC88}\\\\u{1BC90}-\\\\u{1BC99}\\\\u{1BC9C}\\\\u{1BC9F}\\\\u{1D000}-\\\\u{1D0F5}\\\\u{1D100}-\\\\u{1D126}\\\\u{1D129}-\\\\u{1D166}\\\\u{1D16A}-\\\\u{1D172}\\\\u{1D183}\\\\u{1D184}\\\\u{1D18C}-\\\\u{1D1A9}\\\\u{1D1AE}-\\\\u{1D1E8}\\\\u{1D2E0}-\\\\u{1D2F3}\\\\u{1D360}-\\\\u{1D378}\\\\u{1D400}-\\\\u{1D454}\\\\u{1D456}-\\\\u{1D49C}\\\\u{1D49E}\\\\u{1D49F}\\\\u{1D4A2}\\\\u{1D4A5}\\\\u{1D4A6}\\\\u{1D4A9}-\\\\u{1D4AC}\\\\u{1D4AE}-\\\\u{1D4B9}\\\\u{1D4BB}\\\\u{1D4BD}-\\\\u{1D4C3}\\\\u{1D4C5}-\\\\u{1D505}\\\\u{1D507}-\\\\u{1D50A}\\\\u{1D50D}-\\\\u{1D514}\\\\u{1D516}-\\\\u{1D51C}\\\\u{1D51E}-\\\\u{1D539}\\\\u{1D53B}-\\\\u{1D53E}\\\\u{1D540}-\\\\u{1D544}\\\\u{1D546}\\\\u{1D54A}-\\\\u{1D550}\\\\u{1D552}-\\\\u{1D6A5}\\\\u{1D6A8}-\\\\u{1D6DA}\\\\u{1D6DC}-\\\\u{1D714}\\\\u{1D716}-\\\\u{1D74E}\\\\u{1D750}-\\\\u{1D788}\\\\u{1D78A}-\\\\u{1D7C2}\\\\u{1D7C4}-\\\\u{1D7CB}\\\\u{1D7CE}-\\\\u{1D9FF}\\\\u{1DA37}-\\\\u{1DA3A}\\\\u{1DA6D}-\\\\u{1DA74}\\\\u{1DA76}-\\\\u{1DA83}\\\\u{1DA85}-\\\\u{1DA8B}\\\\u{1E100}-\\\\u{1E12C}\\\\u{1E137}-\\\\u{1E13D}\\\\u{1E140}-\\\\u{1E149}\\\\u{1E14E}\\\\u{1E14F}\\\\u{1E2C0}-\\\\u{1E2EB}\\\\u{1E2F0}-\\\\u{1E2F9}\\\\u{1F100}-\\\\u{1F10A}\\\\u{1F110}-\\\\u{1F12E}\\\\u{1F130}-\\\\u{1F169}\\\\u{1F170}-\\\\u{1F1AC}\\\\u{1F1E6}-\\\\u{1F202}\\\\u{1F210}-\\\\u{1F23B}\\\\u{1F240}-\\\\u{1F248}\\\\u{1F250}\\\\u{1F251}\\\\u{20000}-\\\\u{2A6D6}\\\\u{2A700}-\\\\u{2B734}\\\\u{2B740}-\\\\u{2B81D}\\\\u{2B820}-\\\\u{2CEA1}\\\\u{2CEB0}-\\\\u{2EBE0}\\\\u{2F800}-\\\\u{2FA1D}\\\\u{F0000}-\\\\u{FFFFD}\\\\u{100000}-\\\\u{10FFFD}][\\\\u0300-\\\\u036F\\\\u0483-\\\\u0489\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u0610-\\\\u061A\\\\u064B-\\\\u065F\\\\u0670\\\\u06D6-\\\\u06DC\\\\u06DF-\\\\u06E4\\\\u06E7\\\\u06E8\\\\u06EA-\\\\u06ED\\\\u0711\\\\u0730-\\\\u074A\\\\u07A6-\\\\u07B0\\\\u07EB-\\\\u07F3\\\\u07FD\\\\u0816-\\\\u0819\\\\u081B-\\\\u0823\\\\u0825-\\\\u0827\\\\u0829-\\\\u082D\\\\u0859-\\\\u085B\\\\u08D3-\\\\u08E1\\\\u08E3-\\\\u0902\\\\u093A\\\\u093C\\\\u0941-\\\\u0948\\\\u094D\\\\u0951-\\\\u0957\\\\u0962\\\\u0963\\\\u0981\\\\u09BC\\\\u09C1-\\\\u09C4\\\\u09CD\\\\u09E2\\\\u09E3\\\\u09FE\\\\u0A01\\\\u0A02\\\\u0A3C\\\\u0A41\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A70\\\\u0A71\\\\u0A75\\\\u0A81\\\\u0A82\\\\u0ABC\\\\u0AC1-\\\\u0AC5\\\\u0AC7\\\\u0AC8\\\\u0ACD\\\\u0AE2\\\\u0AE3\\\\u0AFA-\\\\u0AFF\\\\u0B01\\\\u0B3C\\\\u0B3F\\\\u0B41-\\\\u0B44\\\\u0B4D\\\\u0B56\\\\u0B62\\\\u0B63\\\\u0B82\\\\u0BC0\\\\u0BCD\\\\u0C00\\\\u0C04\\\\u0C3E-\\\\u0C40\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C62\\\\u0C63\\\\u0C81\\\\u0CBC\\\\u0CCC\\\\u0CCD\\\\u0CE2\\\\u0CE3\\\\u0D00\\\\u0D01\\\\u0D3B\\\\u0D3C\\\\u0D41-\\\\u0D44\\\\u0D4D\\\\u0D62\\\\u0D63\\\\u0DCA\\\\u0DD2-\\\\u0DD4\\\\u0DD6\\\\u0E31\\\\u0E34-\\\\u0E3A\\\\u0E47-\\\\u0E4E\\\\u0EB1\\\\u0EB4-\\\\u0EBC\\\\u0EC8-\\\\u0ECD\\\\u0F18\\\\u0F19\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F71-\\\\u0F7E\\\\u0F80-\\\\u0F84\\\\u0F86\\\\u0F87\\\\u0F8D-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u102D-\\\\u1030\\\\u1032-\\\\u1037\\\\u1039\\\\u103A\\\\u103D\\\\u103E\\\\u1058\\\\u1059\\\\u105E-\\\\u1060\\\\u1071-\\\\u1074\\\\u1082\\\\u1085\\\\u1086\\\\u108D\\\\u109D\\\\u135D-\\\\u135F\\\\u1712-\\\\u1714\\\\u1732-\\\\u1734\\\\u1752\\\\u1753\\\\u1772\\\\u1773\\\\u17B4\\\\u17B5\\\\u17B7-\\\\u17BD\\\\u17C6\\\\u17C9-\\\\u17D3\\\\u17DD\\\\u180B-\\\\u180D\\\\u1885\\\\u1886\\\\u18A9\\\\u1920-\\\\u1922\\\\u1927\\\\u1928\\\\u1932\\\\u1939-\\\\u193B\\\\u1A17\\\\u1A18\\\\u1A1B\\\\u1A56\\\\u1A58-\\\\u1A5E\\\\u1A60\\\\u1A62\\\\u1A65-\\\\u1A6C\\\\u1A73-\\\\u1A7C\\\\u1A7F\\\\u1AB0-\\\\u1ABE\\\\u1B00-\\\\u1B03\\\\u1B34\\\\u1B36-\\\\u1B3A\\\\u1B3C\\\\u1B42\\\\u1B6B-\\\\u1B73\\\\u1B80\\\\u1B81\\\\u1BA2-\\\\u1BA5\\\\u1BA8\\\\u1BA9\\\\u1BAB-\\\\u1BAD\\\\u1BE6\\\\u1BE8\\\\u1BE9\\\\u1BED\\\\u1BEF-\\\\u1BF1\\\\u1C2C-\\\\u1C33\\\\u1C36\\\\u1C37\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CE0\\\\u1CE2-\\\\u1CE8\\\\u1CED\\\\u1CF4\\\\u1CF8\\\\u1CF9\\\\u1DC0-\\\\u1DF9\\\\u1DFB-\\\\u1DFF\\\\u20D0-\\\\u20F0\\\\u2CEF-\\\\u2CF1\\\\u2D7F\\\\u2DE0-\\\\u2DFF\\\\u302A-\\\\u302D\\\\u3099\\\\u309A\\\\uA66F-\\\\uA672\\\\uA674-\\\\uA67D\\\\uA69E\\\\uA69F\\\\uA6F0\\\\uA6F1\\\\uA802\\\\uA806\\\\uA80B\\\\uA825\\\\uA826\\\\uA8C4\\\\uA8C5\\\\uA8E0-\\\\uA8F1\\\\uA8FF\\\\uA926-\\\\uA92D\\\\uA947-\\\\uA951\\\\uA980-\\\\uA982\\\\uA9B3\\\\uA9B6-\\\\uA9B9\\\\uA9BC\\\\uA9BD\\\\uA9E5\\\\uAA29-\\\\uAA2E\\\\uAA31\\\\uAA32\\\\uAA35\\\\uAA36\\\\uAA43\\\\uAA4C\\\\uAA7C\\\\uAAB0\\\\uAAB2-\\\\uAAB4\\\\uAAB7\\\\uAAB8\\\\uAABE\\\\uAABF\\\\uAAC1\\\\uAAEC\\\\uAAED\\\\uAAF6\\\\uABE5\\\\uABE8\\\\uABED\\\\uFB1E\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2F\\\\u{101FD}\\\\u{102E0}\\\\u{10376}-\\\\u{1037A}\\\\u{10A01}-\\\\u{10A03}\\\\u{10A05}\\\\u{10A06}\\\\u{10A0C}-\\\\u{10A0F}\\\\u{10A38}-\\\\u{10A3A}\\\\u{10A3F}\\\\u{10AE5}\\\\u{10AE6}\\\\u{10D24}-\\\\u{10D27}\\\\u{10F46}-\\\\u{10F50}\\\\u{11001}\\\\u{11038}-\\\\u{11046}\\\\u{1107F}-\\\\u{11081}\\\\u{110B3}-\\\\u{110B6}\\\\u{110B9}\\\\u{110BA}\\\\u{11100}-\\\\u{11102}\\\\u{11127}-\\\\u{1112B}\\\\u{1112D}-\\\\u{11134}\\\\u{11173}\\\\u{11180}\\\\u{11181}\\\\u{111B6}-\\\\u{111BE}\\\\u{111C9}-\\\\u{111CC}\\\\u{1122F}-\\\\u{11231}\\\\u{11234}\\\\u{11236}\\\\u{11237}\\\\u{1123E}\\\\u{112DF}\\\\u{112E3}-\\\\u{112EA}\\\\u{11300}\\\\u{11301}\\\\u{1133B}\\\\u{1133C}\\\\u{11340}\\\\u{11366}-\\\\u{1136C}\\\\u{11370}-\\\\u{11374}\\\\u{11438}-\\\\u{1143F}\\\\u{11442}-\\\\u{11444}\\\\u{11446}\\\\u{1145E}\\\\u{114B3}-\\\\u{114B8}\\\\u{114BA}\\\\u{114BF}\\\\u{114C0}\\\\u{114C2}\\\\u{114C3}\\\\u{115B2}-\\\\u{115B5}\\\\u{115BC}\\\\u{115BD}\\\\u{115BF}\\\\u{115C0}\\\\u{115DC}\\\\u{115DD}\\\\u{11633}-\\\\u{1163A}\\\\u{1163D}\\\\u{1163F}\\\\u{11640}\\\\u{116AB}\\\\u{116AD}\\\\u{116B0}-\\\\u{116B5}\\\\u{116B7}\\\\u{1171D}-\\\\u{1171F}\\\\u{11722}-\\\\u{11725}\\\\u{11727}-\\\\u{1172B}\\\\u{1182F}-\\\\u{11837}\\\\u{11839}\\\\u{1183A}\\\\u{119D4}-\\\\u{119D7}\\\\u{119DA}\\\\u{119DB}\\\\u{119E0}\\\\u{11A01}-\\\\u{11A06}\\\\u{11A09}\\\\u{11A0A}\\\\u{11A33}-\\\\u{11A38}\\\\u{11A3B}-\\\\u{11A3E}\\\\u{11A47}\\\\u{11A51}-\\\\u{11A56}\\\\u{11A59}-\\\\u{11A5B}\\\\u{11A8A}-\\\\u{11A96}\\\\u{11A98}\\\\u{11A99}\\\\u{11C30}-\\\\u{11C36}\\\\u{11C38}-\\\\u{11C3D}\\\\u{11C92}-\\\\u{11CA7}\\\\u{11CAA}-\\\\u{11CB0}\\\\u{11CB2}\\\\u{11CB3}\\\\u{11CB5}\\\\u{11CB6}\\\\u{11D31}-\\\\u{11D36}\\\\u{11D3A}\\\\u{11D3C}\\\\u{11D3D}\\\\u{11D3F}-\\\\u{11D45}\\\\u{11D47}\\\\u{11D90}\\\\u{11D91}\\\\u{11D95}\\\\u{11D97}\\\\u{11EF3}\\\\u{11EF4}\\\\u{16AF0}-\\\\u{16AF4}\\\\u{16B30}-\\\\u{16B36}\\\\u{16F4F}\\\\u{16F8F}-\\\\u{16F92}\\\\u{1BC9D}\\\\u{1BC9E}\\\\u{1D167}-\\\\u{1D169}\\\\u{1D17B}-\\\\u{1D182}\\\\u{1D185}-\\\\u{1D18B}\\\\u{1D1AA}-\\\\u{1D1AD}\\\\u{1D242}-\\\\u{1D244}\\\\u{1DA00}-\\\\u{1DA36}\\\\u{1DA3B}-\\\\u{1DA6C}\\\\u{1DA75}\\\\u{1DA84}\\\\u{1DA9B}-\\\\u{1DA9F}\\\\u{1DAA1}-\\\\u{1DAAF}\\\\u{1E000}-\\\\u{1E006}\\\\u{1E008}-\\\\u{1E018}\\\\u{1E01B}-\\\\u{1E021}\\\\u{1E023}\\\\u{1E024}\\\\u{1E026}-\\\\u{1E02A}\\\\u{1E130}-\\\\u{1E136}\\\\u{1E2EC}-\\\\u{1E2EF}\\\\u{1E8D0}-\\\\u{1E8D6}\\\\u{1E944}-\\\\u{1E94A}\\\\u{E0100}-\\\\u{E01EF}]*$/u;\\n\\nmodule.exports = {\\n  combiningMarks,\\n  combiningClassVirama,\\n  validZWNJ,\\n  bidiDomain,\\n  bidiS1LTR,\\n  bidiS1RTL,\\n  bidiS2,\\n  bidiS3,\\n  bidiS4EN,\\n  bidiS4AN,\\n  bidiS5,\\n  bidiS6\\n};\\n\\n},{}],80:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nmodule.exports.STATUS_MAPPING = {\\n  mapped: 1,\\n  valid: 2,\\n  disallowed: 3,\\n  disallowed_STD3_valid: 4, // eslint-disable-line camelcase\\n  disallowed_STD3_mapped: 5, // eslint-disable-line camelcase\\n  deviation: 6,\\n  ignored: 7\\n};\\n\\n},{}],81:[function(require,module,exports){\\nmodule.exports = read\\n\\nvar MSB = 0x80\\n  , REST = 0x7F\\n\\nfunction read(buf, offset) {\\n  var res    = 0\\n    , offset = offset || 0\\n    , shift  = 0\\n    , counter = offset\\n    , b\\n    , l = buf.length\\n\\n  do {\\n    if (counter >= l) {\\n      read.bytes = 0\\n      throw new RangeError('Could not decode varint')\\n    }\\n    b = buf[counter++]\\n    res += shift < 28\\n      ? (b & REST) << shift\\n      : (b & REST) * Math.pow(2, shift)\\n    shift += 7\\n  } while (b >= MSB)\\n\\n  read.bytes = counter - offset\\n\\n  return res\\n}\\n\\n},{}],82:[function(require,module,exports){\\nmodule.exports = encode\\n\\nvar MSB = 0x80\\n  , REST = 0x7F\\n  , MSBALL = ~REST\\n  , INT = Math.pow(2, 31)\\n\\nfunction encode(num, out, offset) {\\n  out = out || []\\n  offset = offset || 0\\n  var oldOffset = offset\\n\\n  while(num >= INT) {\\n    out[offset++] = (num & 0xFF) | MSB\\n    num /= 128\\n  }\\n  while(num & MSBALL) {\\n    out[offset++] = (num & 0xFF) | MSB\\n    num >>>= 7\\n  }\\n  out[offset] = num | 0\\n  \\n  encode.bytes = offset - oldOffset + 1\\n  \\n  return out\\n}\\n\\n},{}],83:[function(require,module,exports){\\nmodule.exports = {\\n    encode: require('./encode.js')\\n  , decode: require('./decode.js')\\n  , encodingLength: require('./length.js')\\n}\\n\\n},{\\\"./decode.js\\\":81,\\\"./encode.js\\\":82,\\\"./length.js\\\":84}],84:[function(require,module,exports){\\n\\nvar N1 = Math.pow(2,  7)\\nvar N2 = Math.pow(2, 14)\\nvar N3 = Math.pow(2, 21)\\nvar N4 = Math.pow(2, 28)\\nvar N5 = Math.pow(2, 35)\\nvar N6 = Math.pow(2, 42)\\nvar N7 = Math.pow(2, 49)\\nvar N8 = Math.pow(2, 56)\\nvar N9 = Math.pow(2, 63)\\n\\nmodule.exports = function (value) {\\n  return (\\n    value < N1 ? 1\\n  : value < N2 ? 2\\n  : value < N3 ? 3\\n  : value < N4 ? 4\\n  : value < N5 ? 5\\n  : value < N6 ? 6\\n  : value < N7 ? 7\\n  : value < N8 ? 8\\n  : value < N9 ? 9\\n  :              10\\n  )\\n}\\n\\n},{}],85:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nfunction _(message, opts) {\\n    return `${opts && opts.context ? opts.context : \\\"Value\\\"} ${message}.`;\\n}\\n\\nfunction type(V) {\\n    if (V === null) {\\n        return \\\"Null\\\";\\n    }\\n    switch (typeof V) {\\n        case \\\"undefined\\\":\\n            return \\\"Undefined\\\";\\n        case \\\"boolean\\\":\\n            return \\\"Boolean\\\";\\n        case \\\"number\\\":\\n            return \\\"Number\\\";\\n        case \\\"string\\\":\\n            return \\\"String\\\";\\n        case \\\"symbol\\\":\\n            return \\\"Symbol\\\";\\n        case \\\"object\\\":\\n            // Falls through\\n        case \\\"function\\\":\\n            // Falls through\\n        default:\\n            // Per ES spec, typeof returns an implemention-defined value that is not any of the existing ones for\\n            // uncallable non-standard exotic objects. Yet Type() which the Web IDL spec depends on returns Object for\\n            // such cases. So treat the default case as an object.\\n            return \\\"Object\\\";\\n    }\\n}\\n\\n// Round x to the nearest integer, choosing the even integer if it lies halfway between two.\\nfunction evenRound(x) {\\n    // There are four cases for numbers with fractional part being .5:\\n    //\\n    // case |     x     | floor(x) | round(x) | expected | x <> 0 | x % 1 | x & 1 |   example\\n    //   1  |  2n + 0.5 |  2n      |  2n + 1  |  2n      |   >    |  0.5  |   0   |  0.5 ->  0\\n    //   2  |  2n + 1.5 |  2n + 1  |  2n + 2  |  2n + 2  |   >    |  0.5  |   1   |  1.5 ->  2\\n    //   3  | -2n - 0.5 | -2n - 1  | -2n      | -2n      |   <    | -0.5  |   0   | -0.5 ->  0\\n    //   4  | -2n - 1.5 | -2n - 2  | -2n - 1  | -2n - 2  |   <    | -0.5  |   1   | -1.5 -> -2\\n    // (where n is a non-negative integer)\\n    //\\n    // Branch here for cases 1 and 4\\n    if ((x > 0 && (x % 1) === +0.5 && (x & 1) === 0) ||\\n        (x < 0 && (x % 1) === -0.5 && (x & 1) === 1)) {\\n        return censorNegativeZero(Math.floor(x));\\n    }\\n\\n    return censorNegativeZero(Math.round(x));\\n}\\n\\nfunction integerPart(n) {\\n    return censorNegativeZero(Math.trunc(n));\\n}\\n\\nfunction sign(x) {\\n    return x < 0 ? -1 : 1;\\n}\\n\\nfunction modulo(x, y) {\\n    // https://tc39.github.io/ecma262/#eqn-modulo\\n    // Note that http://stackoverflow.com/a/4467559/3191 does NOT work for large modulos\\n    const signMightNotMatch = x % y;\\n    if (sign(y) !== sign(signMightNotMatch)) {\\n        return signMightNotMatch + y;\\n    }\\n    return signMightNotMatch;\\n}\\n\\nfunction censorNegativeZero(x) {\\n    return x === 0 ? 0 : x;\\n}\\n\\nfunction createIntegerConversion(bitLength, typeOpts) {\\n    const isSigned = !typeOpts.unsigned;\\n\\n    let lowerBound;\\n    let upperBound;\\n    if (bitLength === 64) {\\n        upperBound = Math.pow(2, 53) - 1;\\n        lowerBound = !isSigned ? 0 : -Math.pow(2, 53) + 1;\\n    } else if (!isSigned) {\\n        lowerBound = 0;\\n        upperBound = Math.pow(2, bitLength) - 1;\\n    } else {\\n        lowerBound = -Math.pow(2, bitLength - 1);\\n        upperBound = Math.pow(2, bitLength - 1) - 1;\\n    }\\n\\n    const twoToTheBitLength = Math.pow(2, bitLength);\\n    const twoToOneLessThanTheBitLength = Math.pow(2, bitLength - 1);\\n\\n    return (V, opts) => {\\n        if (opts === undefined) {\\n            opts = {};\\n        }\\n\\n        let x = +V;\\n        x = censorNegativeZero(x); // Spec discussion ongoing: https://github.com/heycam/webidl/issues/306\\n\\n        if (opts.enforceRange) {\\n            if (!Number.isFinite(x)) {\\n                throw new TypeError(_(\\\"is not a finite number\\\", opts));\\n            }\\n\\n            x = integerPart(x);\\n\\n            if (x < lowerBound || x > upperBound) {\\n                throw new TypeError(_(\\n                    `is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`, opts));\\n            }\\n\\n            return x;\\n        }\\n\\n        if (!Number.isNaN(x) && opts.clamp) {\\n            x = Math.min(Math.max(x, lowerBound), upperBound);\\n            x = evenRound(x);\\n            return x;\\n        }\\n\\n        if (!Number.isFinite(x) || x === 0) {\\n            return 0;\\n        }\\n        x = integerPart(x);\\n\\n        // Math.pow(2, 64) is not accurately representable in JavaScript, so try to avoid these per-spec operations if\\n        // possible. Hopefully it's an optimization for the non-64-bitLength cases too.\\n        if (x >= lowerBound && x <= upperBound) {\\n            return x;\\n        }\\n\\n        // These will not work great for bitLength of 64, but oh well. See the README for more details.\\n        x = modulo(x, twoToTheBitLength);\\n        if (isSigned && x >= twoToOneLessThanTheBitLength) {\\n            return x - twoToTheBitLength;\\n        }\\n        return x;\\n    };\\n}\\n\\nexports.any = V => {\\n    return V;\\n};\\n\\nexports.void = function () {\\n    return undefined;\\n};\\n\\nexports.boolean = function (val) {\\n    return !!val;\\n};\\n\\nexports.byte = createIntegerConversion(8, { unsigned: false });\\nexports.octet = createIntegerConversion(8, { unsigned: true });\\n\\nexports.short = createIntegerConversion(16, { unsigned: false });\\nexports[\\\"unsigned short\\\"] = createIntegerConversion(16, { unsigned: true });\\n\\nexports.long = createIntegerConversion(32, { unsigned: false });\\nexports[\\\"unsigned long\\\"] = createIntegerConversion(32, { unsigned: true });\\n\\nexports[\\\"long long\\\"] = createIntegerConversion(64, { unsigned: false });\\nexports[\\\"unsigned long long\\\"] = createIntegerConversion(64, { unsigned: true });\\n\\nexports.double = (V, opts) => {\\n    const x = +V;\\n\\n    if (!Number.isFinite(x)) {\\n        throw new TypeError(_(\\\"is not a finite floating-point value\\\", opts));\\n    }\\n\\n    return x;\\n};\\n\\nexports[\\\"unrestricted double\\\"] = V => {\\n    const x = +V;\\n\\n    return x;\\n};\\n\\nexports.float = (V, opts) => {\\n    const x = +V;\\n\\n    if (!Number.isFinite(x)) {\\n        throw new TypeError(_(\\\"is not a finite floating-point value\\\", opts));\\n    }\\n\\n    if (Object.is(x, -0)) {\\n        return x;\\n    }\\n\\n    const y = Math.fround(x);\\n\\n    if (!Number.isFinite(y)) {\\n        throw new TypeError(_(\\\"is outside the range of a single-precision floating-point value\\\", opts));\\n    }\\n\\n    return y;\\n};\\n\\nexports[\\\"unrestricted float\\\"] = V => {\\n    const x = +V;\\n\\n    if (isNaN(x)) {\\n        return x;\\n    }\\n\\n    if (Object.is(x, -0)) {\\n        return x;\\n    }\\n\\n    return Math.fround(x);\\n};\\n\\nexports.DOMString = function (V, opts) {\\n    if (opts === undefined) {\\n        opts = {};\\n    }\\n\\n    if (opts.treatNullAsEmptyString && V === null) {\\n        return \\\"\\\";\\n    }\\n\\n    if (typeof V === \\\"symbol\\\") {\\n        throw new TypeError(_(\\\"is a symbol, which cannot be converted to a string\\\", opts));\\n    }\\n\\n    return String(V);\\n};\\n\\nexports.ByteString = (V, opts) => {\\n    const x = exports.DOMString(V, opts);\\n    let c;\\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\\n        if (c > 255) {\\n            throw new TypeError(_(\\\"is not a valid ByteString\\\", opts));\\n        }\\n    }\\n\\n    return x;\\n};\\n\\nexports.USVString = (V, opts) => {\\n    const S = exports.DOMString(V, opts);\\n    const n = S.length;\\n    const U = [];\\n    for (let i = 0; i < n; ++i) {\\n        const c = S.charCodeAt(i);\\n        if (c < 0xD800 || c > 0xDFFF) {\\n            U.push(String.fromCodePoint(c));\\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\\n            U.push(String.fromCodePoint(0xFFFD));\\n        } else if (i === n - 1) {\\n            U.push(String.fromCodePoint(0xFFFD));\\n        } else {\\n            const d = S.charCodeAt(i + 1);\\n            if (0xDC00 <= d && d <= 0xDFFF) {\\n                const a = c & 0x3FF;\\n                const b = d & 0x3FF;\\n                U.push(String.fromCodePoint((2 << 15) + ((2 << 9) * a) + b));\\n                ++i;\\n            } else {\\n                U.push(String.fromCodePoint(0xFFFD));\\n            }\\n        }\\n    }\\n\\n    return U.join(\\\"\\\");\\n};\\n\\nexports.object = (V, opts) => {\\n    if (type(V) !== \\\"Object\\\") {\\n        throw new TypeError(_(\\\"is not an object\\\", opts));\\n    }\\n\\n    return V;\\n};\\n\\n// Not exported, but used in Function and VoidFunction.\\n\\n// Neither Function nor VoidFunction is defined with [TreatNonObjectAsNull], so\\n// handling for that is omitted.\\nfunction convertCallbackFunction(V, opts) {\\n    if (typeof V !== \\\"function\\\") {\\n        throw new TypeError(_(\\\"is not a function\\\", opts));\\n    }\\n    return V;\\n}\\n\\nconst abByteLengthGetter =\\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \\\"byteLength\\\").get;\\n\\nfunction isArrayBuffer(V) {\\n    try {\\n        abByteLengthGetter.call(V);\\n        return true;\\n    } catch (e) {\\n        return false;\\n    }\\n}\\n\\n// I don't think we can reliably detect detached ArrayBuffers.\\nexports.ArrayBuffer = (V, opts) => {\\n    if (!isArrayBuffer(V)) {\\n        throw new TypeError(_(\\\"is not a view on an ArrayBuffer object\\\", opts));\\n    }\\n    return V;\\n};\\n\\nconst dvByteLengthGetter =\\n    Object.getOwnPropertyDescriptor(DataView.prototype, \\\"byteLength\\\").get;\\nexports.DataView = (V, opts) => {\\n    try {\\n        dvByteLengthGetter.call(V);\\n        return V;\\n    } catch (e) {\\n        throw new TypeError(_(\\\"is not a view on an DataView object\\\", opts));\\n    }\\n};\\n\\n[\\n    Int8Array, Int16Array, Int32Array, Uint8Array,\\n    Uint16Array, Uint32Array, Uint8ClampedArray, Float32Array, Float64Array\\n].forEach(func => {\\n    const name = func.name;\\n    const article = /^[AEIOU]/.test(name) ? \\\"an\\\" : \\\"a\\\";\\n    exports[name] = (V, opts) => {\\n        if (!ArrayBuffer.isView(V) || V.constructor.name !== name) {\\n            throw new TypeError(_(`is not ${article} ${name} object`, opts));\\n        }\\n\\n        return V;\\n    };\\n});\\n\\n// Common definitions\\n\\nexports.ArrayBufferView = (V, opts) => {\\n    if (!ArrayBuffer.isView(V)) {\\n        throw new TypeError(_(\\\"is not a view on an ArrayBuffer object\\\", opts));\\n    }\\n\\n    return V;\\n};\\n\\nexports.BufferSource = (V, opts) => {\\n    if (!ArrayBuffer.isView(V) && !isArrayBuffer(V)) {\\n        throw new TypeError(_(\\\"is not an ArrayBuffer object or a view on one\\\", opts));\\n    }\\n\\n    return V;\\n};\\n\\nexports.DOMTimeStamp = exports[\\\"unsigned long long\\\"];\\n\\nexports.Function = convertCallbackFunction;\\n\\nexports.VoidFunction = convertCallbackFunction;\\n\\n},{}],86:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nconst { URL, URLSearchParams } = require(\\\"./webidl2js-wrapper\\\");\\nconst urlStateMachine = require(\\\"./lib/url-state-machine\\\");\\nconst urlEncoded = require(\\\"./lib/urlencoded\\\");\\n\\nconst sharedGlobalObject = {};\\nURL.install(sharedGlobalObject);\\nURLSearchParams.install(sharedGlobalObject);\\n\\nexports.URL = sharedGlobalObject.URL;\\nexports.URLSearchParams = sharedGlobalObject.URLSearchParams;\\n\\nexports.parseURL = urlStateMachine.parseURL;\\nexports.basicURLParse = urlStateMachine.basicURLParse;\\nexports.serializeURL = urlStateMachine.serializeURL;\\nexports.serializeHost = urlStateMachine.serializeHost;\\nexports.serializeInteger = urlStateMachine.serializeInteger;\\nexports.serializeURLOrigin = urlStateMachine.serializeURLOrigin;\\nexports.setTheUsername = urlStateMachine.setTheUsername;\\nexports.setThePassword = urlStateMachine.setThePassword;\\nexports.cannotHaveAUsernamePasswordPort = urlStateMachine.cannotHaveAUsernamePasswordPort;\\n\\nexports.percentDecode = urlEncoded.percentDecode;\\n\\n},{\\\"./lib/url-state-machine\\\":92,\\\"./lib/urlencoded\\\":93,\\\"./webidl2js-wrapper\\\":95}],87:[function(require,module,exports){\\n\\\"use strict\\\";\\nconst usm = require(\\\"./url-state-machine\\\");\\nconst urlencoded = require(\\\"./urlencoded\\\");\\nconst URLSearchParams = require(\\\"./URLSearchParams\\\");\\n\\nexports.implementation = class URLImpl {\\n  constructor(globalObject, constructorArgs) {\\n    const url = constructorArgs[0];\\n    const base = constructorArgs[1];\\n\\n    let parsedBase = null;\\n    if (base !== undefined) {\\n      parsedBase = usm.basicURLParse(base);\\n      if (parsedBase === null) {\\n        throw new TypeError(`Invalid base URL: ${base}`);\\n      }\\n    }\\n\\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\\n    if (parsedURL === null) {\\n      throw new TypeError(`Invalid URL: ${url}`);\\n    }\\n\\n    const query = parsedURL.query !== null ? parsedURL.query : \\\"\\\";\\n\\n    this._url = parsedURL;\\n\\n    // We cannot invoke the \\\"new URLSearchParams object\\\" algorithm without going through the constructor, which strips\\n    // question mark by default. Therefore the doNotStripQMark hack is used.\\n    this._query = URLSearchParams.createImpl(globalObject, [query], { doNotStripQMark: true });\\n    this._query._url = this;\\n  }\\n\\n  get href() {\\n    return usm.serializeURL(this._url);\\n  }\\n\\n  set href(v) {\\n    const parsedURL = usm.basicURLParse(v);\\n    if (parsedURL === null) {\\n      throw new TypeError(`Invalid URL: ${v}`);\\n    }\\n\\n    this._url = parsedURL;\\n\\n    this._query._list.splice(0);\\n    const { query } = parsedURL;\\n    if (query !== null) {\\n      this._query._list = urlencoded.parseUrlencoded(query);\\n    }\\n  }\\n\\n  get origin() {\\n    return usm.serializeURLOrigin(this._url);\\n  }\\n\\n  get protocol() {\\n    return this._url.scheme + \\\":\\\";\\n  }\\n\\n  set protocol(v) {\\n    usm.basicURLParse(v + \\\":\\\", { url: this._url, stateOverride: \\\"scheme start\\\" });\\n  }\\n\\n  get username() {\\n    return this._url.username;\\n  }\\n\\n  set username(v) {\\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\\n      return;\\n    }\\n\\n    usm.setTheUsername(this._url, v);\\n  }\\n\\n  get password() {\\n    return this._url.password;\\n  }\\n\\n  set password(v) {\\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\\n      return;\\n    }\\n\\n    usm.setThePassword(this._url, v);\\n  }\\n\\n  get host() {\\n    const url = this._url;\\n\\n    if (url.host === null) {\\n      return \\\"\\\";\\n    }\\n\\n    if (url.port === null) {\\n      return usm.serializeHost(url.host);\\n    }\\n\\n    return usm.serializeHost(url.host) + \\\":\\\" + usm.serializeInteger(url.port);\\n  }\\n\\n  set host(v) {\\n    if (this._url.cannotBeABaseURL) {\\n      return;\\n    }\\n\\n    usm.basicURLParse(v, { url: this._url, stateOverride: \\\"host\\\" });\\n  }\\n\\n  get hostname() {\\n    if (this._url.host === null) {\\n      return \\\"\\\";\\n    }\\n\\n    return usm.serializeHost(this._url.host);\\n  }\\n\\n  set hostname(v) {\\n    if (this._url.cannotBeABaseURL) {\\n      return;\\n    }\\n\\n    usm.basicURLParse(v, { url: this._url, stateOverride: \\\"hostname\\\" });\\n  }\\n\\n  get port() {\\n    if (this._url.port === null) {\\n      return \\\"\\\";\\n    }\\n\\n    return usm.serializeInteger(this._url.port);\\n  }\\n\\n  set port(v) {\\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\\n      return;\\n    }\\n\\n    if (v === \\\"\\\") {\\n      this._url.port = null;\\n    } else {\\n      usm.basicURLParse(v, { url: this._url, stateOverride: \\\"port\\\" });\\n    }\\n  }\\n\\n  get pathname() {\\n    if (this._url.cannotBeABaseURL) {\\n      return this._url.path[0];\\n    }\\n\\n    if (this._url.path.length === 0) {\\n      return \\\"\\\";\\n    }\\n\\n    return \\\"/\\\" + this._url.path.join(\\\"/\\\");\\n  }\\n\\n  set pathname(v) {\\n    if (this._url.cannotBeABaseURL) {\\n      return;\\n    }\\n\\n    this._url.path = [];\\n    usm.basicURLParse(v, { url: this._url, stateOverride: \\\"path start\\\" });\\n  }\\n\\n  get search() {\\n    if (this._url.query === null || this._url.query === \\\"\\\") {\\n      return \\\"\\\";\\n    }\\n\\n    return \\\"?\\\" + this._url.query;\\n  }\\n\\n  set search(v) {\\n    const url = this._url;\\n\\n    if (v === \\\"\\\") {\\n      url.query = null;\\n      this._query._list = [];\\n      return;\\n    }\\n\\n    const input = v[0] === \\\"?\\\" ? v.substring(1) : v;\\n    url.query = \\\"\\\";\\n    usm.basicURLParse(input, { url, stateOverride: \\\"query\\\" });\\n    this._query._list = urlencoded.parseUrlencoded(input);\\n  }\\n\\n  get searchParams() {\\n    return this._query;\\n  }\\n\\n  get hash() {\\n    if (this._url.fragment === null || this._url.fragment === \\\"\\\") {\\n      return \\\"\\\";\\n    }\\n\\n    return \\\"#\\\" + this._url.fragment;\\n  }\\n\\n  set hash(v) {\\n    if (v === \\\"\\\") {\\n      this._url.fragment = null;\\n      return;\\n    }\\n\\n    const input = v[0] === \\\"#\\\" ? v.substring(1) : v;\\n    this._url.fragment = \\\"\\\";\\n    usm.basicURLParse(input, { url: this._url, stateOverride: \\\"fragment\\\" });\\n  }\\n\\n  toJSON() {\\n    return this.href;\\n  }\\n};\\n\\n},{\\\"./URLSearchParams\\\":90,\\\"./url-state-machine\\\":92,\\\"./urlencoded\\\":93}],88:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nconst conversions = require(\\\"webidl-conversions\\\");\\nconst utils = require(\\\"./utils.js\\\");\\n\\nconst impl = utils.implSymbol;\\nconst ctorRegistry = utils.ctorRegistrySymbol;\\n\\nconst interfaceName = \\\"URL\\\";\\n\\n/**\\n * When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\\n * method into this array. It allows objects that directly implements *those* interfaces to be recognized as\\n * implementing this mixin interface.\\n */\\nexports._mixedIntoPredicates = [];\\nexports.is = function is(obj) {\\n  if (obj) {\\n    if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\\n      return true;\\n    }\\n    for (const isMixedInto of exports._mixedIntoPredicates) {\\n      if (isMixedInto(obj)) {\\n        return true;\\n      }\\n    }\\n  }\\n  return false;\\n};\\nexports.isImpl = function isImpl(obj) {\\n  if (obj) {\\n    if (obj instanceof Impl.implementation) {\\n      return true;\\n    }\\n\\n    const wrapper = utils.wrapperForImpl(obj);\\n    for (const isMixedInto of exports._mixedIntoPredicates) {\\n      if (isMixedInto(wrapper)) {\\n        return true;\\n      }\\n    }\\n  }\\n  return false;\\n};\\nexports.convert = function convert(obj, { context = \\\"The provided value\\\" } = {}) {\\n  if (exports.is(obj)) {\\n    return utils.implForWrapper(obj);\\n  }\\n  throw new TypeError(`${context} is not of type 'URL'.`);\\n};\\n\\nexports.create = function create(globalObject, constructorArgs, privateData) {\\n  if (globalObject[ctorRegistry] === undefined) {\\n    throw new Error(\\\"Internal error: invalid global object\\\");\\n  }\\n\\n  const ctor = globalObject[ctorRegistry][\\\"URL\\\"];\\n  if (ctor === undefined) {\\n    throw new Error(\\\"Internal error: constructor URL is not installed on the passed global object\\\");\\n  }\\n\\n  let obj = Object.create(ctor.prototype);\\n  obj = exports.setup(obj, globalObject, constructorArgs, privateData);\\n  return obj;\\n};\\nexports.createImpl = function createImpl(globalObject, constructorArgs, privateData) {\\n  const obj = exports.create(globalObject, constructorArgs, privateData);\\n  return utils.implForWrapper(obj);\\n};\\nexports._internalSetup = function _internalSetup(obj) {};\\nexports.setup = function setup(obj, globalObject, constructorArgs = [], privateData = {}) {\\n  privateData.wrapper = obj;\\n\\n  exports._internalSetup(obj);\\n  Object.defineProperty(obj, impl, {\\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\\n    configurable: true\\n  });\\n\\n  obj[impl][utils.wrapperSymbol] = obj;\\n  if (Impl.init) {\\n    Impl.init(obj[impl], privateData);\\n  }\\n  return obj;\\n};\\n\\nexports.install = function install(globalObject) {\\n  class URL {\\n    constructor(url) {\\n      if (arguments.length < 1) {\\n        throw new TypeError(\\n          \\\"Failed to construct 'URL': 1 argument required, but only \\\" + arguments.length + \\\" present.\\\"\\n        );\\n      }\\n      const args = [];\\n      {\\n        let curArg = arguments[0];\\n        curArg = conversions[\\\"USVString\\\"](curArg, { context: \\\"Failed to construct 'URL': parameter 1\\\" });\\n        args.push(curArg);\\n      }\\n      {\\n        let curArg = arguments[1];\\n        if (curArg !== undefined) {\\n          curArg = conversions[\\\"USVString\\\"](curArg, { context: \\\"Failed to construct 'URL': parameter 2\\\" });\\n        }\\n        args.push(curArg);\\n      }\\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\\n    }\\n\\n    toJSON() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl].toJSON();\\n    }\\n\\n    get href() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl][\\\"href\\\"];\\n    }\\n\\n    set href(V) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      V = conversions[\\\"USVString\\\"](V, { context: \\\"Failed to set the 'href' property on 'URL': The provided value\\\" });\\n\\n      this[impl][\\\"href\\\"] = V;\\n    }\\n\\n    toString() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n      return this[impl][\\\"href\\\"];\\n    }\\n\\n    get origin() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl][\\\"origin\\\"];\\n    }\\n\\n    get protocol() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl][\\\"protocol\\\"];\\n    }\\n\\n    set protocol(V) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      V = conversions[\\\"USVString\\\"](V, {\\n        context: \\\"Failed to set the 'protocol' property on 'URL': The provided value\\\"\\n      });\\n\\n      this[impl][\\\"protocol\\\"] = V;\\n    }\\n\\n    get username() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl][\\\"username\\\"];\\n    }\\n\\n    set username(V) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      V = conversions[\\\"USVString\\\"](V, {\\n        context: \\\"Failed to set the 'username' property on 'URL': The provided value\\\"\\n      });\\n\\n      this[impl][\\\"username\\\"] = V;\\n    }\\n\\n    get password() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl][\\\"password\\\"];\\n    }\\n\\n    set password(V) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      V = conversions[\\\"USVString\\\"](V, {\\n        context: \\\"Failed to set the 'password' property on 'URL': The provided value\\\"\\n      });\\n\\n      this[impl][\\\"password\\\"] = V;\\n    }\\n\\n    get host() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl][\\\"host\\\"];\\n    }\\n\\n    set host(V) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      V = conversions[\\\"USVString\\\"](V, { context: \\\"Failed to set the 'host' property on 'URL': The provided value\\\" });\\n\\n      this[impl][\\\"host\\\"] = V;\\n    }\\n\\n    get hostname() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl][\\\"hostname\\\"];\\n    }\\n\\n    set hostname(V) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      V = conversions[\\\"USVString\\\"](V, {\\n        context: \\\"Failed to set the 'hostname' property on 'URL': The provided value\\\"\\n      });\\n\\n      this[impl][\\\"hostname\\\"] = V;\\n    }\\n\\n    get port() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl][\\\"port\\\"];\\n    }\\n\\n    set port(V) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      V = conversions[\\\"USVString\\\"](V, { context: \\\"Failed to set the 'port' property on 'URL': The provided value\\\" });\\n\\n      this[impl][\\\"port\\\"] = V;\\n    }\\n\\n    get pathname() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl][\\\"pathname\\\"];\\n    }\\n\\n    set pathname(V) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      V = conversions[\\\"USVString\\\"](V, {\\n        context: \\\"Failed to set the 'pathname' property on 'URL': The provided value\\\"\\n      });\\n\\n      this[impl][\\\"pathname\\\"] = V;\\n    }\\n\\n    get search() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl][\\\"search\\\"];\\n    }\\n\\n    set search(V) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      V = conversions[\\\"USVString\\\"](V, { context: \\\"Failed to set the 'search' property on 'URL': The provided value\\\" });\\n\\n      this[impl][\\\"search\\\"] = V;\\n    }\\n\\n    get searchParams() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return utils.getSameObject(this, \\\"searchParams\\\", () => {\\n        return utils.tryWrapperForImpl(this[impl][\\\"searchParams\\\"]);\\n      });\\n    }\\n\\n    get hash() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl][\\\"hash\\\"];\\n    }\\n\\n    set hash(V) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      V = conversions[\\\"USVString\\\"](V, { context: \\\"Failed to set the 'hash' property on 'URL': The provided value\\\" });\\n\\n      this[impl][\\\"hash\\\"] = V;\\n    }\\n  }\\n  Object.defineProperties(URL.prototype, {\\n    toJSON: { enumerable: true },\\n    href: { enumerable: true },\\n    toString: { enumerable: true },\\n    origin: { enumerable: true },\\n    protocol: { enumerable: true },\\n    username: { enumerable: true },\\n    password: { enumerable: true },\\n    host: { enumerable: true },\\n    hostname: { enumerable: true },\\n    port: { enumerable: true },\\n    pathname: { enumerable: true },\\n    search: { enumerable: true },\\n    searchParams: { enumerable: true },\\n    hash: { enumerable: true },\\n    [Symbol.toStringTag]: { value: \\\"URL\\\", configurable: true }\\n  });\\n  if (globalObject[ctorRegistry] === undefined) {\\n    globalObject[ctorRegistry] = Object.create(null);\\n  }\\n  globalObject[ctorRegistry][interfaceName] = URL;\\n\\n  Object.defineProperty(globalObject, interfaceName, {\\n    configurable: true,\\n    writable: true,\\n    value: URL\\n  });\\n};\\n\\nconst Impl = require(\\\"./URL-impl.js\\\");\\n\\n},{\\\"./URL-impl.js\\\":87,\\\"./utils.js\\\":94,\\\"webidl-conversions\\\":85}],89:[function(require,module,exports){\\n\\\"use strict\\\";\\nconst stableSortBy = require(\\\"lodash.sortby\\\");\\nconst urlencoded = require(\\\"./urlencoded\\\");\\n\\nexports.implementation = class URLSearchParamsImpl {\\n  constructor(globalObject, constructorArgs, { doNotStripQMark = false }) {\\n    let init = constructorArgs[0];\\n    this._list = [];\\n    this._url = null;\\n\\n    if (!doNotStripQMark && typeof init === \\\"string\\\" && init[0] === \\\"?\\\") {\\n      init = init.slice(1);\\n    }\\n\\n    if (Array.isArray(init)) {\\n      for (const pair of init) {\\n        if (pair.length !== 2) {\\n          throw new TypeError(\\\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \\\" +\\n                              \\\"contain exactly two elements.\\\");\\n        }\\n        this._list.push([pair[0], pair[1]]);\\n      }\\n    } else if (typeof init === \\\"object\\\" && Object.getPrototypeOf(init) === null) {\\n      for (const name of Object.keys(init)) {\\n        const value = init[name];\\n        this._list.push([name, value]);\\n      }\\n    } else {\\n      this._list = urlencoded.parseUrlencoded(init);\\n    }\\n  }\\n\\n  _updateSteps() {\\n    if (this._url !== null) {\\n      let query = urlencoded.serializeUrlencoded(this._list);\\n      if (query === \\\"\\\") {\\n        query = null;\\n      }\\n      this._url._url.query = query;\\n    }\\n  }\\n\\n  append(name, value) {\\n    this._list.push([name, value]);\\n    this._updateSteps();\\n  }\\n\\n  delete(name) {\\n    let i = 0;\\n    while (i < this._list.length) {\\n      if (this._list[i][0] === name) {\\n        this._list.splice(i, 1);\\n      } else {\\n        i++;\\n      }\\n    }\\n    this._updateSteps();\\n  }\\n\\n  get(name) {\\n    for (const tuple of this._list) {\\n      if (tuple[0] === name) {\\n        return tuple[1];\\n      }\\n    }\\n    return null;\\n  }\\n\\n  getAll(name) {\\n    const output = [];\\n    for (const tuple of this._list) {\\n      if (tuple[0] === name) {\\n        output.push(tuple[1]);\\n      }\\n    }\\n    return output;\\n  }\\n\\n  has(name) {\\n    for (const tuple of this._list) {\\n      if (tuple[0] === name) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n\\n  set(name, value) {\\n    let found = false;\\n    let i = 0;\\n    while (i < this._list.length) {\\n      if (this._list[i][0] === name) {\\n        if (found) {\\n          this._list.splice(i, 1);\\n        } else {\\n          found = true;\\n          this._list[i][1] = value;\\n          i++;\\n        }\\n      } else {\\n        i++;\\n      }\\n    }\\n    if (!found) {\\n      this._list.push([name, value]);\\n    }\\n    this._updateSteps();\\n  }\\n\\n  sort() {\\n    this._list = stableSortBy(this._list, [0]);\\n    this._updateSteps();\\n  }\\n\\n  [Symbol.iterator]() {\\n    return this._list[Symbol.iterator]();\\n  }\\n\\n  toString() {\\n    return urlencoded.serializeUrlencoded(this._list);\\n  }\\n};\\n\\n},{\\\"./urlencoded\\\":93,\\\"lodash.sortby\\\":54}],90:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nconst conversions = require(\\\"webidl-conversions\\\");\\nconst utils = require(\\\"./utils.js\\\");\\n\\nconst impl = utils.implSymbol;\\nconst ctorRegistry = utils.ctorRegistrySymbol;\\n\\nconst interfaceName = \\\"URLSearchParams\\\";\\n\\nconst IteratorPrototype = Object.create(utils.IteratorPrototype, {\\n  next: {\\n    value: function next() {\\n      const internal = this[utils.iterInternalSymbol];\\n      const { target, kind, index } = internal;\\n      const values = Array.from(target[impl]);\\n      const len = values.length;\\n      if (index >= len) {\\n        return { value: undefined, done: true };\\n      }\\n\\n      const pair = values[index];\\n      internal.index = index + 1;\\n      const [key, value] = pair.map(utils.tryWrapperForImpl);\\n\\n      let result;\\n      switch (kind) {\\n        case \\\"key\\\":\\n          result = key;\\n          break;\\n        case \\\"value\\\":\\n          result = value;\\n          break;\\n        case \\\"key+value\\\":\\n          result = [key, value];\\n          break;\\n      }\\n      return { value: result, done: false };\\n    },\\n    writable: true,\\n    enumerable: true,\\n    configurable: true\\n  },\\n  [Symbol.toStringTag]: {\\n    value: \\\"URLSearchParams Iterator\\\",\\n    configurable: true\\n  }\\n});\\n\\n/**\\n * When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\\n * method into this array. It allows objects that directly implements *those* interfaces to be recognized as\\n * implementing this mixin interface.\\n */\\nexports._mixedIntoPredicates = [];\\nexports.is = function is(obj) {\\n  if (obj) {\\n    if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\\n      return true;\\n    }\\n    for (const isMixedInto of exports._mixedIntoPredicates) {\\n      if (isMixedInto(obj)) {\\n        return true;\\n      }\\n    }\\n  }\\n  return false;\\n};\\nexports.isImpl = function isImpl(obj) {\\n  if (obj) {\\n    if (obj instanceof Impl.implementation) {\\n      return true;\\n    }\\n\\n    const wrapper = utils.wrapperForImpl(obj);\\n    for (const isMixedInto of exports._mixedIntoPredicates) {\\n      if (isMixedInto(wrapper)) {\\n        return true;\\n      }\\n    }\\n  }\\n  return false;\\n};\\nexports.convert = function convert(obj, { context = \\\"The provided value\\\" } = {}) {\\n  if (exports.is(obj)) {\\n    return utils.implForWrapper(obj);\\n  }\\n  throw new TypeError(`${context} is not of type 'URLSearchParams'.`);\\n};\\n\\nexports.createDefaultIterator = function createDefaultIterator(target, kind) {\\n  const iterator = Object.create(IteratorPrototype);\\n  Object.defineProperty(iterator, utils.iterInternalSymbol, {\\n    value: { target, kind, index: 0 },\\n    configurable: true\\n  });\\n  return iterator;\\n};\\n\\nexports.create = function create(globalObject, constructorArgs, privateData) {\\n  if (globalObject[ctorRegistry] === undefined) {\\n    throw new Error(\\\"Internal error: invalid global object\\\");\\n  }\\n\\n  const ctor = globalObject[ctorRegistry][\\\"URLSearchParams\\\"];\\n  if (ctor === undefined) {\\n    throw new Error(\\\"Internal error: constructor URLSearchParams is not installed on the passed global object\\\");\\n  }\\n\\n  let obj = Object.create(ctor.prototype);\\n  obj = exports.setup(obj, globalObject, constructorArgs, privateData);\\n  return obj;\\n};\\nexports.createImpl = function createImpl(globalObject, constructorArgs, privateData) {\\n  const obj = exports.create(globalObject, constructorArgs, privateData);\\n  return utils.implForWrapper(obj);\\n};\\nexports._internalSetup = function _internalSetup(obj) {};\\nexports.setup = function setup(obj, globalObject, constructorArgs = [], privateData = {}) {\\n  privateData.wrapper = obj;\\n\\n  exports._internalSetup(obj);\\n  Object.defineProperty(obj, impl, {\\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\\n    configurable: true\\n  });\\n\\n  obj[impl][utils.wrapperSymbol] = obj;\\n  if (Impl.init) {\\n    Impl.init(obj[impl], privateData);\\n  }\\n  return obj;\\n};\\n\\nexports.install = function install(globalObject) {\\n  class URLSearchParams {\\n    constructor() {\\n      const args = [];\\n      {\\n        let curArg = arguments[0];\\n        if (curArg !== undefined) {\\n          if (utils.isObject(curArg)) {\\n            if (curArg[Symbol.iterator] !== undefined) {\\n              if (!utils.isObject(curArg)) {\\n                throw new TypeError(\\n                  \\\"Failed to construct 'URLSearchParams': parameter 1\\\" + \\\" sequence\\\" + \\\" is not an iterable object.\\\"\\n                );\\n              } else {\\n                const V = [];\\n                const tmp = curArg;\\n                for (let nextItem of tmp) {\\n                  if (!utils.isObject(nextItem)) {\\n                    throw new TypeError(\\n                      \\\"Failed to construct 'URLSearchParams': parameter 1\\\" +\\n                        \\\" sequence\\\" +\\n                        \\\"'s element\\\" +\\n                        \\\" is not an iterable object.\\\"\\n                    );\\n                  } else {\\n                    const V = [];\\n                    const tmp = nextItem;\\n                    for (let nextItem of tmp) {\\n                      nextItem = conversions[\\\"USVString\\\"](nextItem, {\\n                        context:\\n                          \\\"Failed to construct 'URLSearchParams': parameter 1\\\" +\\n                          \\\" sequence\\\" +\\n                          \\\"'s element\\\" +\\n                          \\\"'s element\\\"\\n                      });\\n\\n                      V.push(nextItem);\\n                    }\\n                    nextItem = V;\\n                  }\\n\\n                  V.push(nextItem);\\n                }\\n                curArg = V;\\n              }\\n            } else {\\n              if (!utils.isObject(curArg)) {\\n                throw new TypeError(\\n                  \\\"Failed to construct 'URLSearchParams': parameter 1\\\" + \\\" record\\\" + \\\" is not an object.\\\"\\n                );\\n              } else {\\n                const result = Object.create(null);\\n                for (const key of Reflect.ownKeys(curArg)) {\\n                  const desc = Object.getOwnPropertyDescriptor(curArg, key);\\n                  if (desc && desc.enumerable) {\\n                    let typedKey = key;\\n\\n                    typedKey = conversions[\\\"USVString\\\"](typedKey, {\\n                      context: \\\"Failed to construct 'URLSearchParams': parameter 1\\\" + \\\" record\\\" + \\\"'s key\\\"\\n                    });\\n\\n                    let typedValue = curArg[key];\\n\\n                    typedValue = conversions[\\\"USVString\\\"](typedValue, {\\n                      context: \\\"Failed to construct 'URLSearchParams': parameter 1\\\" + \\\" record\\\" + \\\"'s value\\\"\\n                    });\\n\\n                    result[typedKey] = typedValue;\\n                  }\\n                }\\n                curArg = result;\\n              }\\n            }\\n          } else {\\n            curArg = conversions[\\\"USVString\\\"](curArg, {\\n              context: \\\"Failed to construct 'URLSearchParams': parameter 1\\\"\\n            });\\n          }\\n        } else {\\n          curArg = \\\"\\\";\\n        }\\n        args.push(curArg);\\n      }\\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\\n    }\\n\\n    append(name, value) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      if (arguments.length < 2) {\\n        throw new TypeError(\\n          \\\"Failed to execute 'append' on 'URLSearchParams': 2 arguments required, but only \\\" +\\n            arguments.length +\\n            \\\" present.\\\"\\n        );\\n      }\\n      const args = [];\\n      {\\n        let curArg = arguments[0];\\n        curArg = conversions[\\\"USVString\\\"](curArg, {\\n          context: \\\"Failed to execute 'append' on 'URLSearchParams': parameter 1\\\"\\n        });\\n        args.push(curArg);\\n      }\\n      {\\n        let curArg = arguments[1];\\n        curArg = conversions[\\\"USVString\\\"](curArg, {\\n          context: \\\"Failed to execute 'append' on 'URLSearchParams': parameter 2\\\"\\n        });\\n        args.push(curArg);\\n      }\\n      return this[impl].append(...args);\\n    }\\n\\n    delete(name) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      if (arguments.length < 1) {\\n        throw new TypeError(\\n          \\\"Failed to execute 'delete' on 'URLSearchParams': 1 argument required, but only \\\" +\\n            arguments.length +\\n            \\\" present.\\\"\\n        );\\n      }\\n      const args = [];\\n      {\\n        let curArg = arguments[0];\\n        curArg = conversions[\\\"USVString\\\"](curArg, {\\n          context: \\\"Failed to execute 'delete' on 'URLSearchParams': parameter 1\\\"\\n        });\\n        args.push(curArg);\\n      }\\n      return this[impl].delete(...args);\\n    }\\n\\n    get(name) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      if (arguments.length < 1) {\\n        throw new TypeError(\\n          \\\"Failed to execute 'get' on 'URLSearchParams': 1 argument required, but only \\\" +\\n            arguments.length +\\n            \\\" present.\\\"\\n        );\\n      }\\n      const args = [];\\n      {\\n        let curArg = arguments[0];\\n        curArg = conversions[\\\"USVString\\\"](curArg, {\\n          context: \\\"Failed to execute 'get' on 'URLSearchParams': parameter 1\\\"\\n        });\\n        args.push(curArg);\\n      }\\n      return this[impl].get(...args);\\n    }\\n\\n    getAll(name) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      if (arguments.length < 1) {\\n        throw new TypeError(\\n          \\\"Failed to execute 'getAll' on 'URLSearchParams': 1 argument required, but only \\\" +\\n            arguments.length +\\n            \\\" present.\\\"\\n        );\\n      }\\n      const args = [];\\n      {\\n        let curArg = arguments[0];\\n        curArg = conversions[\\\"USVString\\\"](curArg, {\\n          context: \\\"Failed to execute 'getAll' on 'URLSearchParams': parameter 1\\\"\\n        });\\n        args.push(curArg);\\n      }\\n      return utils.tryWrapperForImpl(this[impl].getAll(...args));\\n    }\\n\\n    has(name) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      if (arguments.length < 1) {\\n        throw new TypeError(\\n          \\\"Failed to execute 'has' on 'URLSearchParams': 1 argument required, but only \\\" +\\n            arguments.length +\\n            \\\" present.\\\"\\n        );\\n      }\\n      const args = [];\\n      {\\n        let curArg = arguments[0];\\n        curArg = conversions[\\\"USVString\\\"](curArg, {\\n          context: \\\"Failed to execute 'has' on 'URLSearchParams': parameter 1\\\"\\n        });\\n        args.push(curArg);\\n      }\\n      return this[impl].has(...args);\\n    }\\n\\n    set(name, value) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      if (arguments.length < 2) {\\n        throw new TypeError(\\n          \\\"Failed to execute 'set' on 'URLSearchParams': 2 arguments required, but only \\\" +\\n            arguments.length +\\n            \\\" present.\\\"\\n        );\\n      }\\n      const args = [];\\n      {\\n        let curArg = arguments[0];\\n        curArg = conversions[\\\"USVString\\\"](curArg, {\\n          context: \\\"Failed to execute 'set' on 'URLSearchParams': parameter 1\\\"\\n        });\\n        args.push(curArg);\\n      }\\n      {\\n        let curArg = arguments[1];\\n        curArg = conversions[\\\"USVString\\\"](curArg, {\\n          context: \\\"Failed to execute 'set' on 'URLSearchParams': parameter 2\\\"\\n        });\\n        args.push(curArg);\\n      }\\n      return this[impl].set(...args);\\n    }\\n\\n    sort() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl].sort();\\n    }\\n\\n    toString() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n\\n      return this[impl].toString();\\n    }\\n\\n    keys() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n      return exports.createDefaultIterator(this, \\\"key\\\");\\n    }\\n\\n    values() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n      return exports.createDefaultIterator(this, \\\"value\\\");\\n    }\\n\\n    entries() {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n      return exports.createDefaultIterator(this, \\\"key+value\\\");\\n    }\\n\\n    forEach(callback) {\\n      if (!this || !exports.is(this)) {\\n        throw new TypeError(\\\"Illegal invocation\\\");\\n      }\\n      if (arguments.length < 1) {\\n        throw new TypeError(\\\"Failed to execute 'forEach' on 'iterable': 1 argument required, \\\" + \\\"but only 0 present.\\\");\\n      }\\n      if (typeof callback !== \\\"function\\\") {\\n        throw new TypeError(\\n          \\\"Failed to execute 'forEach' on 'iterable': The callback provided \\\" + \\\"as parameter 1 is not a function.\\\"\\n        );\\n      }\\n      const thisArg = arguments[1];\\n      let pairs = Array.from(this[impl]);\\n      let i = 0;\\n      while (i < pairs.length) {\\n        const [key, value] = pairs[i].map(utils.tryWrapperForImpl);\\n        callback.call(thisArg, value, key, this);\\n        pairs = Array.from(this[impl]);\\n        i++;\\n      }\\n    }\\n  }\\n  Object.defineProperties(URLSearchParams.prototype, {\\n    append: { enumerable: true },\\n    delete: { enumerable: true },\\n    get: { enumerable: true },\\n    getAll: { enumerable: true },\\n    has: { enumerable: true },\\n    set: { enumerable: true },\\n    sort: { enumerable: true },\\n    toString: { enumerable: true },\\n    keys: { enumerable: true },\\n    values: { enumerable: true },\\n    entries: { enumerable: true },\\n    forEach: { enumerable: true },\\n    [Symbol.toStringTag]: { value: \\\"URLSearchParams\\\", configurable: true },\\n    [Symbol.iterator]: { value: URLSearchParams.prototype.entries, configurable: true, writable: true }\\n  });\\n  if (globalObject[ctorRegistry] === undefined) {\\n    globalObject[ctorRegistry] = Object.create(null);\\n  }\\n  globalObject[ctorRegistry][interfaceName] = URLSearchParams;\\n\\n  Object.defineProperty(globalObject, interfaceName, {\\n    configurable: true,\\n    writable: true,\\n    value: URLSearchParams\\n  });\\n};\\n\\nconst Impl = require(\\\"./URLSearchParams-impl.js\\\");\\n\\n},{\\\"./URLSearchParams-impl.js\\\":89,\\\"./utils.js\\\":94,\\\"webidl-conversions\\\":85}],91:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nfunction isASCIIDigit(c) {\\n  return c >= 0x30 && c <= 0x39;\\n}\\n\\nfunction isASCIIAlpha(c) {\\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\\n}\\n\\nfunction isASCIIAlphanumeric(c) {\\n  return isASCIIAlpha(c) || isASCIIDigit(c);\\n}\\n\\nfunction isASCIIHex(c) {\\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\\n}\\n\\nmodule.exports = {\\n  isASCIIDigit,\\n  isASCIIAlpha,\\n  isASCIIAlphanumeric,\\n  isASCIIHex\\n};\\n\\n},{}],92:[function(require,module,exports){\\n(function (Buffer){\\n\\\"use strict\\\";\\nconst punycode = require(\\\"punycode\\\");\\nconst tr46 = require(\\\"tr46\\\");\\n\\nconst infra = require(\\\"./infra\\\");\\nconst { percentEncode, percentDecode } = require(\\\"./urlencoded\\\");\\n\\nconst specialSchemes = {\\n  ftp: 21,\\n  file: null,\\n  http: 80,\\n  https: 443,\\n  ws: 80,\\n  wss: 443\\n};\\n\\nconst failure = Symbol(\\\"failure\\\");\\n\\nfunction countSymbols(str) {\\n  return punycode.ucs2.decode(str).length;\\n}\\n\\nfunction at(input, idx) {\\n  const c = input[idx];\\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\\n}\\n\\nfunction isSingleDot(buffer) {\\n  return buffer === \\\".\\\" || buffer.toLowerCase() === \\\"%2e\\\";\\n}\\n\\nfunction isDoubleDot(buffer) {\\n  buffer = buffer.toLowerCase();\\n  return buffer === \\\"..\\\" || buffer === \\\"%2e.\\\" || buffer === \\\".%2e\\\" || buffer === \\\"%2e%2e\\\";\\n}\\n\\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\\n  return infra.isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\\n}\\n\\nfunction isWindowsDriveLetterString(string) {\\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && (string[1] === \\\":\\\" || string[1] === \\\"|\\\");\\n}\\n\\nfunction isNormalizedWindowsDriveLetterString(string) {\\n  return string.length === 2 && infra.isASCIIAlpha(string.codePointAt(0)) && string[1] === \\\":\\\";\\n}\\n\\nfunction containsForbiddenHostCodePoint(string) {\\n  return string.search(/\\\\u0000|\\\\u0009|\\\\u000A|\\\\u000D|\\\\u0020|#|%|\\\\/|:|\\\\?|@|\\\\[|\\\\\\\\|\\\\]/) !== -1;\\n}\\n\\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\\n  return string.search(/\\\\u0000|\\\\u0009|\\\\u000A|\\\\u000D|\\\\u0020|#|\\\\/|:|\\\\?|@|\\\\[|\\\\\\\\|\\\\]/) !== -1;\\n}\\n\\nfunction isSpecialScheme(scheme) {\\n  return specialSchemes[scheme] !== undefined;\\n}\\n\\nfunction isSpecial(url) {\\n  return isSpecialScheme(url.scheme);\\n}\\n\\nfunction isNotSpecial(url) {\\n  return !isSpecialScheme(url.scheme);\\n}\\n\\nfunction defaultPort(scheme) {\\n  return specialSchemes[scheme];\\n}\\n\\nfunction utf8PercentEncode(c) {\\n  const buf = Buffer.from(c);\\n\\n  let str = \\\"\\\";\\n\\n  for (let i = 0; i < buf.length; ++i) {\\n    str += percentEncode(buf[i]);\\n  }\\n\\n  return str;\\n}\\n\\nfunction isC0ControlPercentEncode(c) {\\n  return c <= 0x1F || c > 0x7E;\\n}\\n\\nconst extraUserinfoPercentEncodeSet =\\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\\nfunction isUserinfoPercentEncode(c) {\\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\\n}\\n\\nconst extraFragmentPercentEncodeSet = new Set([32, 34, 60, 62, 96]);\\nfunction isFragmentPercentEncode(c) {\\n  return isC0ControlPercentEncode(c) || extraFragmentPercentEncodeSet.has(c);\\n}\\n\\nconst extraPathPercentEncodeSet = new Set([35, 63, 123, 125]);\\nfunction isPathPercentEncode(c) {\\n  return isFragmentPercentEncode(c) || extraPathPercentEncodeSet.has(c);\\n}\\n\\nfunction percentEncodeChar(c, encodeSetPredicate) {\\n  const cStr = String.fromCodePoint(c);\\n\\n  if (encodeSetPredicate(c)) {\\n    return utf8PercentEncode(cStr);\\n  }\\n\\n  return cStr;\\n}\\n\\nfunction parseIPv4Number(input) {\\n  let R = 10;\\n\\n  if (input.length >= 2 && input.charAt(0) === \\\"0\\\" && input.charAt(1).toLowerCase() === \\\"x\\\") {\\n    input = input.substring(2);\\n    R = 16;\\n  } else if (input.length >= 2 && input.charAt(0) === \\\"0\\\") {\\n    input = input.substring(1);\\n    R = 8;\\n  }\\n\\n  if (input === \\\"\\\") {\\n    return 0;\\n  }\\n\\n  let regex = /[^0-7]/;\\n  if (R === 10) {\\n    regex = /[^0-9]/;\\n  }\\n  if (R === 16) {\\n    regex = /[^0-9A-Fa-f]/;\\n  }\\n\\n  if (regex.test(input)) {\\n    return failure;\\n  }\\n\\n  return parseInt(input, R);\\n}\\n\\nfunction parseIPv4(input) {\\n  const parts = input.split(\\\".\\\");\\n  if (parts[parts.length - 1] === \\\"\\\") {\\n    if (parts.length > 1) {\\n      parts.pop();\\n    }\\n  }\\n\\n  if (parts.length > 4) {\\n    return input;\\n  }\\n\\n  const numbers = [];\\n  for (const part of parts) {\\n    if (part === \\\"\\\") {\\n      return input;\\n    }\\n    const n = parseIPv4Number(part);\\n    if (n === failure) {\\n      return input;\\n    }\\n\\n    numbers.push(n);\\n  }\\n\\n  for (let i = 0; i < numbers.length - 1; ++i) {\\n    if (numbers[i] > 255) {\\n      return failure;\\n    }\\n  }\\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\\n    return failure;\\n  }\\n\\n  let ipv4 = numbers.pop();\\n  let counter = 0;\\n\\n  for (const n of numbers) {\\n    ipv4 += n * Math.pow(256, 3 - counter);\\n    ++counter;\\n  }\\n\\n  return ipv4;\\n}\\n\\nfunction serializeIPv4(address) {\\n  let output = \\\"\\\";\\n  let n = address;\\n\\n  for (let i = 1; i <= 4; ++i) {\\n    output = String(n % 256) + output;\\n    if (i !== 4) {\\n      output = \\\".\\\" + output;\\n    }\\n    n = Math.floor(n / 256);\\n  }\\n\\n  return output;\\n}\\n\\nfunction parseIPv6(input) {\\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\\n  let pieceIndex = 0;\\n  let compress = null;\\n  let pointer = 0;\\n\\n  input = punycode.ucs2.decode(input);\\n\\n  if (input[pointer] === 58) {\\n    if (input[pointer + 1] !== 58) {\\n      return failure;\\n    }\\n\\n    pointer += 2;\\n    ++pieceIndex;\\n    compress = pieceIndex;\\n  }\\n\\n  while (pointer < input.length) {\\n    if (pieceIndex === 8) {\\n      return failure;\\n    }\\n\\n    if (input[pointer] === 58) {\\n      if (compress !== null) {\\n        return failure;\\n      }\\n      ++pointer;\\n      ++pieceIndex;\\n      compress = pieceIndex;\\n      continue;\\n    }\\n\\n    let value = 0;\\n    let length = 0;\\n\\n    while (length < 4 && infra.isASCIIHex(input[pointer])) {\\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\\n      ++pointer;\\n      ++length;\\n    }\\n\\n    if (input[pointer] === 46) {\\n      if (length === 0) {\\n        return failure;\\n      }\\n\\n      pointer -= length;\\n\\n      if (pieceIndex > 6) {\\n        return failure;\\n      }\\n\\n      let numbersSeen = 0;\\n\\n      while (input[pointer] !== undefined) {\\n        let ipv4Piece = null;\\n\\n        if (numbersSeen > 0) {\\n          if (input[pointer] === 46 && numbersSeen < 4) {\\n            ++pointer;\\n          } else {\\n            return failure;\\n          }\\n        }\\n\\n        if (!infra.isASCIIDigit(input[pointer])) {\\n          return failure;\\n        }\\n\\n        while (infra.isASCIIDigit(input[pointer])) {\\n          const number = parseInt(at(input, pointer));\\n          if (ipv4Piece === null) {\\n            ipv4Piece = number;\\n          } else if (ipv4Piece === 0) {\\n            return failure;\\n          } else {\\n            ipv4Piece = ipv4Piece * 10 + number;\\n          }\\n          if (ipv4Piece > 255) {\\n            return failure;\\n          }\\n          ++pointer;\\n        }\\n\\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\\n\\n        ++numbersSeen;\\n\\n        if (numbersSeen === 2 || numbersSeen === 4) {\\n          ++pieceIndex;\\n        }\\n      }\\n\\n      if (numbersSeen !== 4) {\\n        return failure;\\n      }\\n\\n      break;\\n    } else if (input[pointer] === 58) {\\n      ++pointer;\\n      if (input[pointer] === undefined) {\\n        return failure;\\n      }\\n    } else if (input[pointer] !== undefined) {\\n      return failure;\\n    }\\n\\n    address[pieceIndex] = value;\\n    ++pieceIndex;\\n  }\\n\\n  if (compress !== null) {\\n    let swaps = pieceIndex - compress;\\n    pieceIndex = 7;\\n    while (pieceIndex !== 0 && swaps > 0) {\\n      const temp = address[compress + swaps - 1];\\n      address[compress + swaps - 1] = address[pieceIndex];\\n      address[pieceIndex] = temp;\\n      --pieceIndex;\\n      --swaps;\\n    }\\n  } else if (compress === null && pieceIndex !== 8) {\\n    return failure;\\n  }\\n\\n  return address;\\n}\\n\\nfunction serializeIPv6(address) {\\n  let output = \\\"\\\";\\n  const seqResult = findLongestZeroSequence(address);\\n  const compress = seqResult.idx;\\n  let ignore0 = false;\\n\\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\\n    if (ignore0 && address[pieceIndex] === 0) {\\n      continue;\\n    } else if (ignore0) {\\n      ignore0 = false;\\n    }\\n\\n    if (compress === pieceIndex) {\\n      const separator = pieceIndex === 0 ? \\\"::\\\" : \\\":\\\";\\n      output += separator;\\n      ignore0 = true;\\n      continue;\\n    }\\n\\n    output += address[pieceIndex].toString(16);\\n\\n    if (pieceIndex !== 7) {\\n      output += \\\":\\\";\\n    }\\n  }\\n\\n  return output;\\n}\\n\\nfunction parseHost(input, isNotSpecialArg = false) {\\n  if (input[0] === \\\"[\\\") {\\n    if (input[input.length - 1] !== \\\"]\\\") {\\n      return failure;\\n    }\\n\\n    return parseIPv6(input.substring(1, input.length - 1));\\n  }\\n\\n  if (isNotSpecialArg) {\\n    return parseOpaqueHost(input);\\n  }\\n\\n  const domain = percentDecode(Buffer.from(input)).toString();\\n  const asciiDomain = domainToASCII(domain);\\n  if (asciiDomain === failure) {\\n    return failure;\\n  }\\n\\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\\n    return failure;\\n  }\\n\\n  const ipv4Host = parseIPv4(asciiDomain);\\n  if (typeof ipv4Host === \\\"number\\\" || ipv4Host === failure) {\\n    return ipv4Host;\\n  }\\n\\n  return asciiDomain;\\n}\\n\\nfunction parseOpaqueHost(input) {\\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\\n    return failure;\\n  }\\n\\n  let output = \\\"\\\";\\n  const decoded = punycode.ucs2.decode(input);\\n  for (let i = 0; i < decoded.length; ++i) {\\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\\n  }\\n  return output;\\n}\\n\\nfunction findLongestZeroSequence(arr) {\\n  let maxIdx = null;\\n  let maxLen = 1; // only find elements > 1\\n  let currStart = null;\\n  let currLen = 0;\\n\\n  for (let i = 0; i < arr.length; ++i) {\\n    if (arr[i] !== 0) {\\n      if (currLen > maxLen) {\\n        maxIdx = currStart;\\n        maxLen = currLen;\\n      }\\n\\n      currStart = null;\\n      currLen = 0;\\n    } else {\\n      if (currStart === null) {\\n        currStart = i;\\n      }\\n      ++currLen;\\n    }\\n  }\\n\\n  // if trailing zeros\\n  if (currLen > maxLen) {\\n    maxIdx = currStart;\\n    maxLen = currLen;\\n  }\\n\\n  return {\\n    idx: maxIdx,\\n    len: maxLen\\n  };\\n}\\n\\nfunction serializeHost(host) {\\n  if (typeof host === \\\"number\\\") {\\n    return serializeIPv4(host);\\n  }\\n\\n  // IPv6 serializer\\n  if (host instanceof Array) {\\n    return \\\"[\\\" + serializeIPv6(host) + \\\"]\\\";\\n  }\\n\\n  return host;\\n}\\n\\nfunction domainToASCII(domain, beStrict = false) {\\n  const result = tr46.toASCII(domain, {\\n    checkBidi: true,\\n    checkHyphens: false,\\n    checkJoiners: true,\\n    useSTD3ASCIIRules: beStrict,\\n    verifyDNSLength: beStrict\\n  });\\n  if (result === null || result === \\\"\\\") {\\n    return failure;\\n  }\\n  return result;\\n}\\n\\nfunction trimControlChars(url) {\\n  return url.replace(/^[\\\\u0000-\\\\u001F\\\\u0020]+|[\\\\u0000-\\\\u001F\\\\u0020]+$/g, \\\"\\\");\\n}\\n\\nfunction trimTabAndNewline(url) {\\n  return url.replace(/\\\\u0009|\\\\u000A|\\\\u000D/g, \\\"\\\");\\n}\\n\\nfunction shortenPath(url) {\\n  const { path } = url;\\n  if (path.length === 0) {\\n    return;\\n  }\\n  if (url.scheme === \\\"file\\\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\\n    return;\\n  }\\n\\n  path.pop();\\n}\\n\\nfunction includesCredentials(url) {\\n  return url.username !== \\\"\\\" || url.password !== \\\"\\\";\\n}\\n\\nfunction cannotHaveAUsernamePasswordPort(url) {\\n  return url.host === null || url.host === \\\"\\\" || url.cannotBeABaseURL || url.scheme === \\\"file\\\";\\n}\\n\\nfunction isNormalizedWindowsDriveLetter(string) {\\n  return /^[A-Za-z]:$/.test(string);\\n}\\n\\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\\n  this.pointer = 0;\\n  this.input = input;\\n  this.base = base || null;\\n  this.encodingOverride = encodingOverride || \\\"utf-8\\\";\\n  this.stateOverride = stateOverride;\\n  this.url = url;\\n  this.failure = false;\\n  this.parseError = false;\\n\\n  if (!this.url) {\\n    this.url = {\\n      scheme: \\\"\\\",\\n      username: \\\"\\\",\\n      password: \\\"\\\",\\n      host: null,\\n      port: null,\\n      path: [],\\n      query: null,\\n      fragment: null,\\n\\n      cannotBeABaseURL: false\\n    };\\n\\n    const res = trimControlChars(this.input);\\n    if (res !== this.input) {\\n      this.parseError = true;\\n    }\\n    this.input = res;\\n  }\\n\\n  const res = trimTabAndNewline(this.input);\\n  if (res !== this.input) {\\n    this.parseError = true;\\n  }\\n  this.input = res;\\n\\n  this.state = stateOverride || \\\"scheme start\\\";\\n\\n  this.buffer = \\\"\\\";\\n  this.atFlag = false;\\n  this.arrFlag = false;\\n  this.passwordTokenSeenFlag = false;\\n\\n  this.input = punycode.ucs2.decode(this.input);\\n\\n  for (; this.pointer <= this.input.length; ++this.pointer) {\\n    const c = this.input[this.pointer];\\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\\n\\n    // exec state machine\\n    const ret = this[\\\"parse \\\" + this.state](c, cStr);\\n    if (!ret) {\\n      break; // terminate algorithm\\n    } else if (ret === failure) {\\n      this.failure = true;\\n      break;\\n    }\\n  }\\n}\\n\\nURLStateMachine.prototype[\\\"parse scheme start\\\"] = function parseSchemeStart(c, cStr) {\\n  if (infra.isASCIIAlpha(c)) {\\n    this.buffer += cStr.toLowerCase();\\n    this.state = \\\"scheme\\\";\\n  } else if (!this.stateOverride) {\\n    this.state = \\\"no scheme\\\";\\n    --this.pointer;\\n  } else {\\n    this.parseError = true;\\n    return failure;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse scheme\\\"] = function parseScheme(c, cStr) {\\n  if (infra.isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\\n    this.buffer += cStr.toLowerCase();\\n  } else if (c === 58) {\\n    if (this.stateOverride) {\\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\\n        return false;\\n      }\\n\\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\\n        return false;\\n      }\\n\\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \\\"file\\\") {\\n        return false;\\n      }\\n\\n      if (this.url.scheme === \\\"file\\\" && (this.url.host === \\\"\\\" || this.url.host === null)) {\\n        return false;\\n      }\\n    }\\n    this.url.scheme = this.buffer;\\n    if (this.stateOverride) {\\n      if (this.url.port === defaultPort(this.url.scheme)) {\\n        this.url.port = null;\\n      }\\n      return false;\\n    }\\n    this.buffer = \\\"\\\";\\n    if (this.url.scheme === \\\"file\\\") {\\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\\n        this.parseError = true;\\n      }\\n      this.state = \\\"file\\\";\\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\\n      this.state = \\\"special relative or authority\\\";\\n    } else if (isSpecial(this.url)) {\\n      this.state = \\\"special authority slashes\\\";\\n    } else if (this.input[this.pointer + 1] === 47) {\\n      this.state = \\\"path or authority\\\";\\n      ++this.pointer;\\n    } else {\\n      this.url.cannotBeABaseURL = true;\\n      this.url.path.push(\\\"\\\");\\n      this.state = \\\"cannot-be-a-base-URL path\\\";\\n    }\\n  } else if (!this.stateOverride) {\\n    this.buffer = \\\"\\\";\\n    this.state = \\\"no scheme\\\";\\n    this.pointer = -1;\\n  } else {\\n    this.parseError = true;\\n    return failure;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse no scheme\\\"] = function parseNoScheme(c) {\\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\\n    return failure;\\n  } else if (this.base.cannotBeABaseURL && c === 35) {\\n    this.url.scheme = this.base.scheme;\\n    this.url.path = this.base.path.slice();\\n    this.url.query = this.base.query;\\n    this.url.fragment = \\\"\\\";\\n    this.url.cannotBeABaseURL = true;\\n    this.state = \\\"fragment\\\";\\n  } else if (this.base.scheme === \\\"file\\\") {\\n    this.state = \\\"file\\\";\\n    --this.pointer;\\n  } else {\\n    this.state = \\\"relative\\\";\\n    --this.pointer;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse special relative or authority\\\"] = function parseSpecialRelativeOrAuthority(c) {\\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\\n    this.state = \\\"special authority ignore slashes\\\";\\n    ++this.pointer;\\n  } else {\\n    this.parseError = true;\\n    this.state = \\\"relative\\\";\\n    --this.pointer;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse path or authority\\\"] = function parsePathOrAuthority(c) {\\n  if (c === 47) {\\n    this.state = \\\"authority\\\";\\n  } else {\\n    this.state = \\\"path\\\";\\n    --this.pointer;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse relative\\\"] = function parseRelative(c) {\\n  this.url.scheme = this.base.scheme;\\n  if (isNaN(c)) {\\n    this.url.username = this.base.username;\\n    this.url.password = this.base.password;\\n    this.url.host = this.base.host;\\n    this.url.port = this.base.port;\\n    this.url.path = this.base.path.slice();\\n    this.url.query = this.base.query;\\n  } else if (c === 47) {\\n    this.state = \\\"relative slash\\\";\\n  } else if (c === 63) {\\n    this.url.username = this.base.username;\\n    this.url.password = this.base.password;\\n    this.url.host = this.base.host;\\n    this.url.port = this.base.port;\\n    this.url.path = this.base.path.slice();\\n    this.url.query = \\\"\\\";\\n    this.state = \\\"query\\\";\\n  } else if (c === 35) {\\n    this.url.username = this.base.username;\\n    this.url.password = this.base.password;\\n    this.url.host = this.base.host;\\n    this.url.port = this.base.port;\\n    this.url.path = this.base.path.slice();\\n    this.url.query = this.base.query;\\n    this.url.fragment = \\\"\\\";\\n    this.state = \\\"fragment\\\";\\n  } else if (isSpecial(this.url) && c === 92) {\\n    this.parseError = true;\\n    this.state = \\\"relative slash\\\";\\n  } else {\\n    this.url.username = this.base.username;\\n    this.url.password = this.base.password;\\n    this.url.host = this.base.host;\\n    this.url.port = this.base.port;\\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\\n\\n    this.state = \\\"path\\\";\\n    --this.pointer;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse relative slash\\\"] = function parseRelativeSlash(c) {\\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\\n    if (c === 92) {\\n      this.parseError = true;\\n    }\\n    this.state = \\\"special authority ignore slashes\\\";\\n  } else if (c === 47) {\\n    this.state = \\\"authority\\\";\\n  } else {\\n    this.url.username = this.base.username;\\n    this.url.password = this.base.password;\\n    this.url.host = this.base.host;\\n    this.url.port = this.base.port;\\n    this.state = \\\"path\\\";\\n    --this.pointer;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse special authority slashes\\\"] = function parseSpecialAuthoritySlashes(c) {\\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\\n    this.state = \\\"special authority ignore slashes\\\";\\n    ++this.pointer;\\n  } else {\\n    this.parseError = true;\\n    this.state = \\\"special authority ignore slashes\\\";\\n    --this.pointer;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse special authority ignore slashes\\\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\\n  if (c !== 47 && c !== 92) {\\n    this.state = \\\"authority\\\";\\n    --this.pointer;\\n  } else {\\n    this.parseError = true;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse authority\\\"] = function parseAuthority(c, cStr) {\\n  if (c === 64) {\\n    this.parseError = true;\\n    if (this.atFlag) {\\n      this.buffer = \\\"%40\\\" + this.buffer;\\n    }\\n    this.atFlag = true;\\n\\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\\n    const len = countSymbols(this.buffer);\\n    for (let pointer = 0; pointer < len; ++pointer) {\\n      const codePoint = this.buffer.codePointAt(pointer);\\n\\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\\n        this.passwordTokenSeenFlag = true;\\n        continue;\\n      }\\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\\n      if (this.passwordTokenSeenFlag) {\\n        this.url.password += encodedCodePoints;\\n      } else {\\n        this.url.username += encodedCodePoints;\\n      }\\n    }\\n    this.buffer = \\\"\\\";\\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\\n             (isSpecial(this.url) && c === 92)) {\\n    if (this.atFlag && this.buffer === \\\"\\\") {\\n      this.parseError = true;\\n      return failure;\\n    }\\n    this.pointer -= countSymbols(this.buffer) + 1;\\n    this.buffer = \\\"\\\";\\n    this.state = \\\"host\\\";\\n  } else {\\n    this.buffer += cStr;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse hostname\\\"] =\\nURLStateMachine.prototype[\\\"parse host\\\"] = function parseHostName(c, cStr) {\\n  if (this.stateOverride && this.url.scheme === \\\"file\\\") {\\n    --this.pointer;\\n    this.state = \\\"file host\\\";\\n  } else if (c === 58 && !this.arrFlag) {\\n    if (this.buffer === \\\"\\\") {\\n      this.parseError = true;\\n      return failure;\\n    }\\n\\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\\n    if (host === failure) {\\n      return failure;\\n    }\\n\\n    this.url.host = host;\\n    this.buffer = \\\"\\\";\\n    this.state = \\\"port\\\";\\n    if (this.stateOverride === \\\"hostname\\\") {\\n      return false;\\n    }\\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\\n             (isSpecial(this.url) && c === 92)) {\\n    --this.pointer;\\n    if (isSpecial(this.url) && this.buffer === \\\"\\\") {\\n      this.parseError = true;\\n      return failure;\\n    } else if (this.stateOverride && this.buffer === \\\"\\\" &&\\n               (includesCredentials(this.url) || this.url.port !== null)) {\\n      this.parseError = true;\\n      return false;\\n    }\\n\\n    const host = parseHost(this.buffer, isNotSpecial(this.url));\\n    if (host === failure) {\\n      return failure;\\n    }\\n\\n    this.url.host = host;\\n    this.buffer = \\\"\\\";\\n    this.state = \\\"path start\\\";\\n    if (this.stateOverride) {\\n      return false;\\n    }\\n  } else {\\n    if (c === 91) {\\n      this.arrFlag = true;\\n    } else if (c === 93) {\\n      this.arrFlag = false;\\n    }\\n    this.buffer += cStr;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse port\\\"] = function parsePort(c, cStr) {\\n  if (infra.isASCIIDigit(c)) {\\n    this.buffer += cStr;\\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\\n             (isSpecial(this.url) && c === 92) ||\\n             this.stateOverride) {\\n    if (this.buffer !== \\\"\\\") {\\n      const port = parseInt(this.buffer);\\n      if (port > Math.pow(2, 16) - 1) {\\n        this.parseError = true;\\n        return failure;\\n      }\\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\\n      this.buffer = \\\"\\\";\\n    }\\n    if (this.stateOverride) {\\n      return false;\\n    }\\n    this.state = \\\"path start\\\";\\n    --this.pointer;\\n  } else {\\n    this.parseError = true;\\n    return failure;\\n  }\\n\\n  return true;\\n};\\n\\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\\n\\nfunction startsWithWindowsDriveLetter(input, pointer) {\\n  const length = input.length - pointer;\\n  return length >= 2 &&\\n    isWindowsDriveLetterCodePoints(input[pointer], input[pointer + 1]) &&\\n    (length === 2 || fileOtherwiseCodePoints.has(input[pointer + 2]));\\n}\\n\\nURLStateMachine.prototype[\\\"parse file\\\"] = function parseFile(c) {\\n  this.url.scheme = \\\"file\\\";\\n\\n  if (c === 47 || c === 92) {\\n    if (c === 92) {\\n      this.parseError = true;\\n    }\\n    this.state = \\\"file slash\\\";\\n  } else if (this.base !== null && this.base.scheme === \\\"file\\\") {\\n    if (isNaN(c)) {\\n      this.url.host = this.base.host;\\n      this.url.path = this.base.path.slice();\\n      this.url.query = this.base.query;\\n    } else if (c === 63) {\\n      this.url.host = this.base.host;\\n      this.url.path = this.base.path.slice();\\n      this.url.query = \\\"\\\";\\n      this.state = \\\"query\\\";\\n    } else if (c === 35) {\\n      this.url.host = this.base.host;\\n      this.url.path = this.base.path.slice();\\n      this.url.query = this.base.query;\\n      this.url.fragment = \\\"\\\";\\n      this.state = \\\"fragment\\\";\\n    } else {\\n      if (!startsWithWindowsDriveLetter(this.input, this.pointer)) {\\n        this.url.host = this.base.host;\\n        this.url.path = this.base.path.slice();\\n        shortenPath(this.url);\\n      } else {\\n        this.parseError = true;\\n      }\\n\\n      this.state = \\\"path\\\";\\n      --this.pointer;\\n    }\\n  } else {\\n    this.state = \\\"path\\\";\\n    --this.pointer;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse file slash\\\"] = function parseFileSlash(c) {\\n  if (c === 47 || c === 92) {\\n    if (c === 92) {\\n      this.parseError = true;\\n    }\\n    this.state = \\\"file host\\\";\\n  } else {\\n    if (this.base !== null && this.base.scheme === \\\"file\\\" &&\\n        !startsWithWindowsDriveLetter(this.input, this.pointer)) {\\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\\n        this.url.path.push(this.base.path[0]);\\n      } else {\\n        this.url.host = this.base.host;\\n      }\\n    }\\n    this.state = \\\"path\\\";\\n    --this.pointer;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse file host\\\"] = function parseFileHost(c, cStr) {\\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\\n    --this.pointer;\\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\\n      this.parseError = true;\\n      this.state = \\\"path\\\";\\n    } else if (this.buffer === \\\"\\\") {\\n      this.url.host = \\\"\\\";\\n      if (this.stateOverride) {\\n        return false;\\n      }\\n      this.state = \\\"path start\\\";\\n    } else {\\n      let host = parseHost(this.buffer, isNotSpecial(this.url));\\n      if (host === failure) {\\n        return failure;\\n      }\\n      if (host === \\\"localhost\\\") {\\n        host = \\\"\\\";\\n      }\\n      this.url.host = host;\\n\\n      if (this.stateOverride) {\\n        return false;\\n      }\\n\\n      this.buffer = \\\"\\\";\\n      this.state = \\\"path start\\\";\\n    }\\n  } else {\\n    this.buffer += cStr;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse path start\\\"] = function parsePathStart(c) {\\n  if (isSpecial(this.url)) {\\n    if (c === 92) {\\n      this.parseError = true;\\n    }\\n    this.state = \\\"path\\\";\\n\\n    if (c !== 47 && c !== 92) {\\n      --this.pointer;\\n    }\\n  } else if (!this.stateOverride && c === 63) {\\n    this.url.query = \\\"\\\";\\n    this.state = \\\"query\\\";\\n  } else if (!this.stateOverride && c === 35) {\\n    this.url.fragment = \\\"\\\";\\n    this.state = \\\"fragment\\\";\\n  } else if (c !== undefined) {\\n    this.state = \\\"path\\\";\\n    if (c !== 47) {\\n      --this.pointer;\\n    }\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse path\\\"] = function parsePath(c) {\\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\\n      (!this.stateOverride && (c === 63 || c === 35))) {\\n    if (isSpecial(this.url) && c === 92) {\\n      this.parseError = true;\\n    }\\n\\n    if (isDoubleDot(this.buffer)) {\\n      shortenPath(this.url);\\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\\n        this.url.path.push(\\\"\\\");\\n      }\\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\\n               !(isSpecial(this.url) && c === 92)) {\\n      this.url.path.push(\\\"\\\");\\n    } else if (!isSingleDot(this.buffer)) {\\n      if (this.url.scheme === \\\"file\\\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\\n        if (this.url.host !== \\\"\\\" && this.url.host !== null) {\\n          this.parseError = true;\\n          this.url.host = \\\"\\\";\\n        }\\n        this.buffer = this.buffer[0] + \\\":\\\";\\n      }\\n      this.url.path.push(this.buffer);\\n    }\\n    this.buffer = \\\"\\\";\\n    if (this.url.scheme === \\\"file\\\" && (c === undefined || c === 63 || c === 35)) {\\n      while (this.url.path.length > 1 && this.url.path[0] === \\\"\\\") {\\n        this.parseError = true;\\n        this.url.path.shift();\\n      }\\n    }\\n    if (c === 63) {\\n      this.url.query = \\\"\\\";\\n      this.state = \\\"query\\\";\\n    }\\n    if (c === 35) {\\n      this.url.fragment = \\\"\\\";\\n      this.state = \\\"fragment\\\";\\n    }\\n  } else {\\n    // TODO: If c is not a URL code point and not \\\"%\\\", parse error.\\n\\n    if (c === 37 &&\\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\\n      this.parseError = true;\\n    }\\n\\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse cannot-be-a-base-URL path\\\"] = function parseCannotBeABaseURLPath(c) {\\n  if (c === 63) {\\n    this.url.query = \\\"\\\";\\n    this.state = \\\"query\\\";\\n  } else if (c === 35) {\\n    this.url.fragment = \\\"\\\";\\n    this.state = \\\"fragment\\\";\\n  } else {\\n    // TODO: Add: not a URL code point\\n    if (!isNaN(c) && c !== 37) {\\n      this.parseError = true;\\n    }\\n\\n    if (c === 37 &&\\n        (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\\n         !infra.isASCIIHex(this.input[this.pointer + 2]))) {\\n      this.parseError = true;\\n    }\\n\\n    if (!isNaN(c)) {\\n      this.url.path[0] += percentEncodeChar(c, isC0ControlPercentEncode);\\n    }\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse query\\\"] = function parseQuery(c, cStr) {\\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\\n    if (!isSpecial(this.url) || this.url.scheme === \\\"ws\\\" || this.url.scheme === \\\"wss\\\") {\\n      this.encodingOverride = \\\"utf-8\\\";\\n    }\\n\\n    const buffer = Buffer.from(this.buffer); // TODO: Use encoding override instead\\n    for (let i = 0; i < buffer.length; ++i) {\\n      if (buffer[i] < 0x21 ||\\n          buffer[i] > 0x7E ||\\n          buffer[i] === 0x22 || buffer[i] === 0x23 || buffer[i] === 0x3C || buffer[i] === 0x3E ||\\n          (buffer[i] === 0x27 && isSpecial(this.url))) {\\n        this.url.query += percentEncode(buffer[i]);\\n      } else {\\n        this.url.query += String.fromCodePoint(buffer[i]);\\n      }\\n    }\\n\\n    this.buffer = \\\"\\\";\\n    if (c === 35) {\\n      this.url.fragment = \\\"\\\";\\n      this.state = \\\"fragment\\\";\\n    }\\n  } else {\\n    // TODO: If c is not a URL code point and not \\\"%\\\", parse error.\\n    if (c === 37 &&\\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\\n      this.parseError = true;\\n    }\\n\\n    this.buffer += cStr;\\n  }\\n\\n  return true;\\n};\\n\\nURLStateMachine.prototype[\\\"parse fragment\\\"] = function parseFragment(c) {\\n  if (!isNaN(c)) {\\n    // TODO: If c is not a URL code point and not \\\"%\\\", parse error.\\n    if (c === 37 &&\\n      (!infra.isASCIIHex(this.input[this.pointer + 1]) ||\\n        !infra.isASCIIHex(this.input[this.pointer + 2]))) {\\n      this.parseError = true;\\n    }\\n\\n    this.url.fragment += percentEncodeChar(c, isFragmentPercentEncode);\\n  }\\n\\n  return true;\\n};\\n\\nfunction serializeURL(url, excludeFragment) {\\n  let output = url.scheme + \\\":\\\";\\n  if (url.host !== null) {\\n    output += \\\"//\\\";\\n\\n    if (url.username !== \\\"\\\" || url.password !== \\\"\\\") {\\n      output += url.username;\\n      if (url.password !== \\\"\\\") {\\n        output += \\\":\\\" + url.password;\\n      }\\n      output += \\\"@\\\";\\n    }\\n\\n    output += serializeHost(url.host);\\n\\n    if (url.port !== null) {\\n      output += \\\":\\\" + url.port;\\n    }\\n  } else if (url.host === null && url.scheme === \\\"file\\\") {\\n    output += \\\"//\\\";\\n  }\\n\\n  if (url.cannotBeABaseURL) {\\n    output += url.path[0];\\n  } else {\\n    for (const string of url.path) {\\n      output += \\\"/\\\" + string;\\n    }\\n  }\\n\\n  if (url.query !== null) {\\n    output += \\\"?\\\" + url.query;\\n  }\\n\\n  if (!excludeFragment && url.fragment !== null) {\\n    output += \\\"#\\\" + url.fragment;\\n  }\\n\\n  return output;\\n}\\n\\nfunction serializeOrigin(tuple) {\\n  let result = tuple.scheme + \\\"://\\\";\\n  result += serializeHost(tuple.host);\\n\\n  if (tuple.port !== null) {\\n    result += \\\":\\\" + tuple.port;\\n  }\\n\\n  return result;\\n}\\n\\nmodule.exports.serializeURL = serializeURL;\\n\\nmodule.exports.serializeURLOrigin = function (url) {\\n  // https://url.spec.whatwg.org/#concept-url-origin\\n  switch (url.scheme) {\\n    case \\\"blob\\\":\\n      try {\\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\\n      } catch (e) {\\n        // serializing an opaque origin returns \\\"null\\\"\\n        return \\\"null\\\";\\n      }\\n    case \\\"ftp\\\":\\n    case \\\"http\\\":\\n    case \\\"https\\\":\\n    case \\\"ws\\\":\\n    case \\\"wss\\\":\\n      return serializeOrigin({\\n        scheme: url.scheme,\\n        host: url.host,\\n        port: url.port\\n      });\\n    case \\\"file\\\":\\n      // The spec says:\\n      // > Unfortunate as it is, this is left as an exercise to the reader. When in doubt, return a new opaque origin.\\n      // Browsers tested so far:\\n      // - Chrome says \\\"file://\\\", but treats file: URLs as cross-origin for most (all?) purposes; see e.g.\\n      //   https://bugs.chromium.org/p/chromium/issues/detail?id=37586\\n      // - Firefox says \\\"null\\\", but treats file: URLs as same-origin sometimes based on directory stuff; see\\n      //   https://developer.mozilla.org/en-US/docs/Archive/Misc_top_level/Same-origin_policy_for_file:_URIs\\n      return \\\"null\\\";\\n    default:\\n      // serializing an opaque origin returns \\\"null\\\"\\n      return \\\"null\\\";\\n  }\\n};\\n\\nmodule.exports.basicURLParse = function (input, options) {\\n  if (options === undefined) {\\n    options = {};\\n  }\\n\\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\\n  if (usm.failure) {\\n    return null;\\n  }\\n\\n  return usm.url;\\n};\\n\\nmodule.exports.setTheUsername = function (url, username) {\\n  url.username = \\\"\\\";\\n  const decoded = punycode.ucs2.decode(username);\\n  for (let i = 0; i < decoded.length; ++i) {\\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\\n  }\\n};\\n\\nmodule.exports.setThePassword = function (url, password) {\\n  url.password = \\\"\\\";\\n  const decoded = punycode.ucs2.decode(password);\\n  for (let i = 0; i < decoded.length; ++i) {\\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\\n  }\\n};\\n\\nmodule.exports.serializeHost = serializeHost;\\n\\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\\n\\nmodule.exports.serializeInteger = function (integer) {\\n  return String(integer);\\n};\\n\\nmodule.exports.parseURL = function (input, options) {\\n  if (options === undefined) {\\n    options = {};\\n  }\\n\\n  // We don't handle blobs, so this just delegates:\\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\\n};\\n\\n}).call(this,require(\\\"buffer\\\").Buffer)\\n},{\\\"./infra\\\":91,\\\"./urlencoded\\\":93,\\\"buffer\\\":8,\\\"punycode\\\":9,\\\"tr46\\\":77}],93:[function(require,module,exports){\\n(function (Buffer){\\n\\\"use strict\\\";\\nconst { isASCIIHex } = require(\\\"./infra\\\");\\n\\nfunction strictlySplitByteSequence(buf, cp) {\\n  const list = [];\\n  let last = 0;\\n  let i = buf.indexOf(cp);\\n  while (i >= 0) {\\n    list.push(buf.slice(last, i));\\n    last = i + 1;\\n    i = buf.indexOf(cp, last);\\n  }\\n  if (last !== buf.length) {\\n    list.push(buf.slice(last));\\n  }\\n  return list;\\n}\\n\\nfunction replaceByteInByteSequence(buf, from, to) {\\n  let i = buf.indexOf(from);\\n  while (i >= 0) {\\n    buf[i] = to;\\n    i = buf.indexOf(from, i + 1);\\n  }\\n  return buf;\\n}\\n\\nfunction percentEncode(c) {\\n  let hex = c.toString(16).toUpperCase();\\n  if (hex.length === 1) {\\n    hex = \\\"0\\\" + hex;\\n  }\\n\\n  return \\\"%\\\" + hex;\\n}\\n\\nfunction percentDecode(input) {\\n  const output = Buffer.alloc(input.byteLength);\\n  let ptr = 0;\\n  for (let i = 0; i < input.length; ++i) {\\n    if (input[i] !== 37 || !isASCIIHex(input[i + 1]) || !isASCIIHex(input[i + 2])) {\\n      output[ptr++] = input[i];\\n    } else {\\n      output[ptr++] = parseInt(input.slice(i + 1, i + 3).toString(), 16);\\n      i += 2;\\n    }\\n  }\\n  return output.slice(0, ptr);\\n}\\n\\nfunction parseUrlencoded(input) {\\n  const sequences = strictlySplitByteSequence(input, 38);\\n  const output = [];\\n  for (const bytes of sequences) {\\n    if (bytes.length === 0) {\\n      continue;\\n    }\\n\\n    let name;\\n    let value;\\n    const indexOfEqual = bytes.indexOf(61);\\n\\n    if (indexOfEqual >= 0) {\\n      name = bytes.slice(0, indexOfEqual);\\n      value = bytes.slice(indexOfEqual + 1);\\n    } else {\\n      name = bytes;\\n      value = Buffer.alloc(0);\\n    }\\n\\n    name = replaceByteInByteSequence(Buffer.from(name), 43, 32);\\n    value = replaceByteInByteSequence(Buffer.from(value), 43, 32);\\n\\n    output.push([percentDecode(name).toString(), percentDecode(value).toString()]);\\n  }\\n  return output;\\n}\\n\\nfunction serializeUrlencodedByte(input) {\\n  let output = \\\"\\\";\\n  for (const byte of input) {\\n    if (byte === 32) {\\n      output += \\\"+\\\";\\n    } else if (byte === 42 ||\\n               byte === 45 ||\\n               byte === 46 ||\\n               (byte >= 48 && byte <= 57) ||\\n               (byte >= 65 && byte <= 90) ||\\n               byte === 95 ||\\n               (byte >= 97 && byte <= 122)) {\\n      output += String.fromCodePoint(byte);\\n    } else {\\n      output += percentEncode(byte);\\n    }\\n  }\\n  return output;\\n}\\n\\nfunction serializeUrlencoded(tuples, encodingOverride = undefined) {\\n  let encoding = \\\"utf-8\\\";\\n  if (encodingOverride !== undefined) {\\n    encoding = encodingOverride;\\n  }\\n\\n  let output = \\\"\\\";\\n  for (const [i, tuple] of tuples.entries()) {\\n    // TODO: handle encoding override\\n    const name = serializeUrlencodedByte(Buffer.from(tuple[0]));\\n    let value = tuple[1];\\n    if (tuple.length > 2 && tuple[2] !== undefined) {\\n      if (tuple[2] === \\\"hidden\\\" && name === \\\"_charset_\\\") {\\n        value = encoding;\\n      } else if (tuple[2] === \\\"file\\\") {\\n        // value is a File object\\n        value = value.name;\\n      }\\n    }\\n    value = serializeUrlencodedByte(Buffer.from(value));\\n    if (i !== 0) {\\n      output += \\\"&\\\";\\n    }\\n    output += `${name}=${value}`;\\n  }\\n  return output;\\n}\\n\\nmodule.exports = {\\n  percentEncode,\\n  percentDecode,\\n\\n  // application/x-www-form-urlencoded string parser\\n  parseUrlencoded(input) {\\n    return parseUrlencoded(Buffer.from(input));\\n  },\\n\\n  // application/x-www-form-urlencoded serializer\\n  serializeUrlencoded\\n};\\n\\n}).call(this,require(\\\"buffer\\\").Buffer)\\n},{\\\"./infra\\\":91,\\\"buffer\\\":8}],94:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\n// Returns \\\"Type(value) is Object\\\" in ES terminology.\\nfunction isObject(value) {\\n  return typeof value === \\\"object\\\" && value !== null || typeof value === \\\"function\\\";\\n}\\n\\nfunction hasOwn(obj, prop) {\\n  return Object.prototype.hasOwnProperty.call(obj, prop);\\n}\\n\\nconst wrapperSymbol = Symbol(\\\"wrapper\\\");\\nconst implSymbol = Symbol(\\\"impl\\\");\\nconst sameObjectCaches = Symbol(\\\"SameObject caches\\\");\\nconst ctorRegistrySymbol = Symbol.for(\\\"[webidl2js]  constructor registry\\\");\\n\\nfunction getSameObject(wrapper, prop, creator) {\\n  if (!wrapper[sameObjectCaches]) {\\n    wrapper[sameObjectCaches] = Object.create(null);\\n  }\\n\\n  if (prop in wrapper[sameObjectCaches]) {\\n    return wrapper[sameObjectCaches][prop];\\n  }\\n\\n  wrapper[sameObjectCaches][prop] = creator();\\n  return wrapper[sameObjectCaches][prop];\\n}\\n\\nfunction wrapperForImpl(impl) {\\n  return impl ? impl[wrapperSymbol] : null;\\n}\\n\\nfunction implForWrapper(wrapper) {\\n  return wrapper ? wrapper[implSymbol] : null;\\n}\\n\\nfunction tryWrapperForImpl(impl) {\\n  const wrapper = wrapperForImpl(impl);\\n  return wrapper ? wrapper : impl;\\n}\\n\\nfunction tryImplForWrapper(wrapper) {\\n  const impl = implForWrapper(wrapper);\\n  return impl ? impl : wrapper;\\n}\\n\\nconst iterInternalSymbol = Symbol(\\\"internal\\\");\\nconst IteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));\\n\\nfunction isArrayIndexPropName(P) {\\n  if (typeof P !== \\\"string\\\") {\\n    return false;\\n  }\\n  const i = P >>> 0;\\n  if (i === Math.pow(2, 32) - 1) {\\n    return false;\\n  }\\n  const s = `${i}`;\\n  if (P !== s) {\\n    return false;\\n  }\\n  return true;\\n}\\n\\nconst byteLengthGetter =\\n    Object.getOwnPropertyDescriptor(ArrayBuffer.prototype, \\\"byteLength\\\").get;\\nfunction isArrayBuffer(value) {\\n  try {\\n    byteLengthGetter.call(value);\\n    return true;\\n  } catch (e) {\\n    return false;\\n  }\\n}\\n\\nconst supportsPropertyIndex = Symbol(\\\"supports property index\\\");\\nconst supportedPropertyIndices = Symbol(\\\"supported property indices\\\");\\nconst supportsPropertyName = Symbol(\\\"supports property name\\\");\\nconst supportedPropertyNames = Symbol(\\\"supported property names\\\");\\nconst indexedGet = Symbol(\\\"indexed property get\\\");\\nconst indexedSetNew = Symbol(\\\"indexed property set new\\\");\\nconst indexedSetExisting = Symbol(\\\"indexed property set existing\\\");\\nconst namedGet = Symbol(\\\"named property get\\\");\\nconst namedSetNew = Symbol(\\\"named property set new\\\");\\nconst namedSetExisting = Symbol(\\\"named property set existing\\\");\\nconst namedDelete = Symbol(\\\"named property delete\\\");\\n\\nmodule.exports = exports = {\\n  isObject,\\n  hasOwn,\\n  wrapperSymbol,\\n  implSymbol,\\n  getSameObject,\\n  ctorRegistrySymbol,\\n  wrapperForImpl,\\n  implForWrapper,\\n  tryWrapperForImpl,\\n  tryImplForWrapper,\\n  iterInternalSymbol,\\n  IteratorPrototype,\\n  isArrayBuffer,\\n  isArrayIndexPropName,\\n  supportsPropertyIndex,\\n  supportedPropertyIndices,\\n  supportsPropertyName,\\n  supportedPropertyNames,\\n  indexedGet,\\n  indexedSetNew,\\n  indexedSetExisting,\\n  namedGet,\\n  namedSetNew,\\n  namedSetExisting,\\n  namedDelete\\n};\\n\\n},{}],95:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nconst URL = require(\\\"./lib/URL\\\");\\nconst URLSearchParams = require(\\\"./lib/URLSearchParams\\\");\\n\\nexports.URL = URL;\\nexports.URLSearchParams = URLSearchParams;\\n\\n},{\\\"./lib/URL\\\":88,\\\"./lib/URLSearchParams\\\":90}],96:[function(require,module,exports){\\n(function (global){\\n'use strict'\\nmodule.exports = (typeof self === 'object' && self.self === self && self) ||\\n  (typeof global === 'object' && global.global === global && global) ||\\n  this\\n\\n}).call(this,typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n},{}],97:[function(require,module,exports){\\n(function (Buffer){\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nvar _regenerator = _interopRequireDefault(require(\\\"@babel/runtime/regenerator\\\"));\\n\\nvar _asyncToGenerator2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/asyncToGenerator\\\"));\\n\\nvar _bs = _interopRequireDefault(require(\\\"bs58\\\"));\\n\\nvar _contentHash = _interopRequireDefault(require(\\\"content-hash\\\"));\\n\\nvar _windowOrGlobal = _interopRequireDefault(require(\\\"window-or-global\\\"));\\n\\n(function () {\\n  'use strict';\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n\\n  var name = 'ens-library'; // https://github.com/ensdomains/resolvers\\n\\n  var EnsLibrary = function EnsLibrary(ipfsBundle) {\\n    this.ethereumLibrary = ipfsBundle.ethereumLibrary;\\n    this.ipfsBundle = ipfsBundle; // https://docs.ens.domains/ens-deployments\\n    // https://github.com/ensdomains/ui/blob/master/src/ens.js\\n\\n    this.registry = {\\n      0x1: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\\n      0x3: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\\n      0x4: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\\n      0x5: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\\n    };\\n  };\\n\\n  EnsLibrary.prototype.getLogger = function () {\\n    return this.ipfsBundle.getLogger();\\n  };\\n\\n  EnsLibrary.prototype.getENSRegistry = function () {\\n    return this.registry;\\n  }; // https://github.com/ensdomains/ui/blob/master/src/utils/contents.js\\n\\n\\n  EnsLibrary.prototype.decodeContenthash = function (encoded) {\\n    var decoded = null;\\n    var protocol = null;\\n\\n    if (encoded.error) {\\n      throw new Error(encoded.error);\\n    }\\n\\n    if (encoded) {\\n      var codec = _contentHash[\\\"default\\\"].getCodec(encoded);\\n\\n      decoded = _contentHash[\\\"default\\\"].decode(encoded);\\n\\n      if (codec === 'ipfs-ns') {\\n        protocol = 'ipfs';\\n        decoded = this.ipfsBundle.cidToCidV1(decoded, protocol, true);\\n      } else if (codec === 'ipns-ns') {\\n        decoded = _bs[\\\"default\\\"].decode(decoded).slice(2).toString();\\n        protocol = 'ipns';\\n        decoded = this.ipfsBundle.cidToCidV1(decoded, protocol, true);\\n      } else if (codec === 'swarm-ns') {\\n        protocol = 'bzz';\\n      } else if (codec === 'onion') {\\n        protocol = 'onion';\\n      } else if (codec === 'onion3') {\\n        protocol = 'onion3';\\n      } else {\\n        decoded = encoded;\\n      }\\n    }\\n\\n    return {\\n      decoded: decoded,\\n      protocol: protocol\\n    };\\n  }; // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1577.md\\n  // https://github.com/ensdomains/ui/blob/master/src/utils/contents.js\\n\\n\\n  EnsLibrary.prototype.encodeContenthash = function (content) {\\n    var type = null;\\n    var text = null;\\n    var encoded = null;\\n    content = content === undefined || content == null || content.trim() === '' ? null : content.trim();\\n\\n    if (content == null) {\\n      return null;\\n    }\\n\\n    var matched = content.match(/^(ipfs|ipns|bzz|onion|onion3):\\\\/\\\\/(.*)/) || content.match(/\\\\/(ipfs)\\\\/(.*)/) || content.match(/\\\\/(ipns)\\\\/(.*)/);\\n\\n    if (matched) {\\n      type = matched[1];\\n      text = matched[2];\\n    }\\n\\n    if (type === 'ipfs') {\\n      var bs58content = this.ipfsBundle.cidToBase58CidV0(text, true);\\n      encoded = '0x' + _contentHash[\\\"default\\\"].encode('ipfs-ns', bs58content);\\n    } else if (type === 'ipns') {\\n      var _bs58content = _bs[\\\"default\\\"].encode(Buffer.concat([Buffer.from([0, text.length]), Buffer.from(text)]));\\n\\n      encoded = '0x' + _contentHash[\\\"default\\\"].encode('ipns-ns', _bs58content);\\n    } else {\\n      throw new Error(\\\"Unsupported ENS domain protocol: \\\".concat(type));\\n    }\\n\\n    return {\\n      encoded: encoded\\n    };\\n  };\\n\\n  EnsLibrary.prototype.getRegistry = /*#__PURE__*/function () {\\n    var _ref = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee(web3) {\\n      var network, chainId, registry;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee$(_context) {\\n        while (1) {\\n          switch (_context.prev = _context.next) {\\n            case 0:\\n              if (!(web3 === undefined || web3 == null)) {\\n                _context.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined Web3 provider...');\\n\\n            case 2:\\n              _context.next = 4;\\n              return web3.getNetwork();\\n\\n            case 4:\\n              network = _context.sent;\\n              chainId = parseInt(network.chainId); // Retrieve an Ethereum ENS Registry address\\n\\n              registry = null;\\n\\n              try {\\n                registry = this.registry[chainId];\\n              } catch (error) {\\n                this.getLogger().error(error);\\n              }\\n\\n              if (!(registry === undefined || registry == null)) {\\n                _context.next = 10;\\n                break;\\n              }\\n\\n              throw new Error(\\\"Unsupported Ethereum network: \\\".concat(chainId));\\n\\n            case 10:\\n              return _context.abrupt(\\\"return\\\", {\\n                chainId: chainId,\\n                registry: registry\\n              });\\n\\n            case 11:\\n            case \\\"end\\\":\\n              return _context.stop();\\n          }\\n        }\\n      }, _callee, this);\\n    }));\\n\\n    return function (_x) {\\n      return _ref.apply(this, arguments);\\n    };\\n  }();\\n\\n  EnsLibrary.prototype.getResolver = /*#__PURE__*/function () {\\n    var _ref2 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee2(web3, registry, node) {\\n      var abi, iface, data, result, decoded;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee2$(_context2) {\\n        while (1) {\\n          switch (_context2.prev = _context2.next) {\\n            case 0:\\n              if (!(web3 === undefined || web3 == null)) {\\n                _context2.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined Web3 provider...');\\n\\n            case 2:\\n              node = node === undefined || node == null || node.trim() === '' ? null : node.trim();\\n\\n              if (!(node == null)) {\\n                _context2.next = 5;\\n                break;\\n              }\\n\\n              throw new Error('Undefined ENS domain resolver...');\\n\\n            case 5:\\n              registry = registry === undefined || registry == null || registry.trim() === '' ? null : registry.trim();\\n\\n              if (!(registry == null)) {\\n                _context2.next = 8;\\n                break;\\n              }\\n\\n              throw new Error('Undefined ENS registry address...');\\n\\n            case 8:\\n              abi = ['function resolver(bytes32 node) external view returns (address)'];\\n              iface = new _windowOrGlobal[\\\"default\\\"].ethers.utils.Interface(abi);\\n              data = iface.encodeFunctionData('resolver', [node]);\\n              _context2.next = 13;\\n              return web3.call({\\n                to: registry,\\n                data: data\\n              });\\n\\n            case 13:\\n              result = _context2.sent;\\n\\n              if (!(result === undefined || result == null || result === '0x')) {\\n                _context2.next = 16;\\n                break;\\n              }\\n\\n              return _context2.abrupt(\\\"return\\\", null);\\n\\n            case 16:\\n              _context2.prev = 16;\\n              decoded = iface.decodeFunctionResult('resolver', result);\\n\\n              if (!(decoded !== undefined && decoded !== null && Array.isArray(decoded) && decoded.length > 0)) {\\n                _context2.next = 20;\\n                break;\\n              }\\n\\n              return _context2.abrupt(\\\"return\\\", decoded[0]);\\n\\n            case 20:\\n              _context2.next = 25;\\n              break;\\n\\n            case 22:\\n              _context2.prev = 22;\\n              _context2.t0 = _context2[\\\"catch\\\"](16);\\n              this.getLogger().error(_context2.t0);\\n\\n            case 25:\\n              return _context2.abrupt(\\\"return\\\", null);\\n\\n            case 26:\\n            case \\\"end\\\":\\n              return _context2.stop();\\n          }\\n        }\\n      }, _callee2, this, [[16, 22]]);\\n    }));\\n\\n    return function (_x2, _x3, _x4) {\\n      return _ref2.apply(this, arguments);\\n    };\\n  }(); // https://eips.ethereum.org/EIPS/eip-165\\n\\n\\n  EnsLibrary.prototype.checkEip165 = /*#__PURE__*/function () {\\n    var _ref3 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee3(web3, address) {\\n      var abi, iface, data, result, decoded;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee3$(_context3) {\\n        while (1) {\\n          switch (_context3.prev = _context3.next) {\\n            case 0:\\n              if (!(web3 === undefined || web3 == null)) {\\n                _context3.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined Web3 provider...');\\n\\n            case 2:\\n              address = address === undefined || address == null || address.trim() === '' ? null : address.trim();\\n\\n              if (!(address == null)) {\\n                _context3.next = 5;\\n                break;\\n              }\\n\\n              throw new Error('Undefined Ethereum address...');\\n\\n            case 5:\\n              abi = ['function supportsInterface(bytes4 interfaceID) public pure returns(bool)'];\\n              iface = new _windowOrGlobal[\\\"default\\\"].ethers.utils.Interface(abi);\\n              data = iface.encodeFunctionData('supportsInterface', ['0x01ffc9a7']);\\n              _context3.next = 10;\\n              return web3.call({\\n                to: address,\\n                data: data\\n              });\\n\\n            case 10:\\n              result = _context3.sent;\\n\\n              if (!(result === undefined || result == null || result === '0x')) {\\n                _context3.next = 13;\\n                break;\\n              }\\n\\n              return _context3.abrupt(\\\"return\\\", false);\\n\\n            case 13:\\n              _context3.prev = 13;\\n              decoded = iface.decodeFunctionResult('supportsInterface', result);\\n\\n              if (!(decoded !== undefined && decoded !== null && Array.isArray(decoded) && decoded.length > 0)) {\\n                _context3.next = 18;\\n                break;\\n              }\\n\\n              if (!(decoded[0] === false)) {\\n                _context3.next = 18;\\n                break;\\n              }\\n\\n              return _context3.abrupt(\\\"return\\\", false);\\n\\n            case 18:\\n              _context3.next = 24;\\n              break;\\n\\n            case 20:\\n              _context3.prev = 20;\\n              _context3.t0 = _context3[\\\"catch\\\"](13);\\n              this.getLogger().error(_context3.t0);\\n              return _context3.abrupt(\\\"return\\\", false);\\n\\n            case 24:\\n              data = iface.encodeFunctionData('supportsInterface', ['0xffffffff']);\\n              _context3.next = 27;\\n              return web3.call({\\n                to: address,\\n                data: data\\n              });\\n\\n            case 27:\\n              result = _context3.sent;\\n\\n              if (!(result === undefined || result == null || result === '0x')) {\\n                _context3.next = 30;\\n                break;\\n              }\\n\\n              return _context3.abrupt(\\\"return\\\", false);\\n\\n            case 30:\\n              _context3.prev = 30;\\n              decoded = iface.decodeFunctionResult('supportsInterface', result);\\n\\n              if (!(decoded !== undefined && decoded !== null && Array.isArray(decoded) && decoded.length > 0)) {\\n                _context3.next = 35;\\n                break;\\n              }\\n\\n              if (!(decoded[0] === false)) {\\n                _context3.next = 35;\\n                break;\\n              }\\n\\n              return _context3.abrupt(\\\"return\\\", true);\\n\\n            case 35:\\n              _context3.next = 40;\\n              break;\\n\\n            case 37:\\n              _context3.prev = 37;\\n              _context3.t1 = _context3[\\\"catch\\\"](30);\\n              this.getLogger().error(_context3.t1);\\n\\n            case 40:\\n              return _context3.abrupt(\\\"return\\\", false);\\n\\n            case 41:\\n            case \\\"end\\\":\\n              return _context3.stop();\\n          }\\n        }\\n      }, _callee3, this, [[13, 20], [30, 37]]);\\n    }));\\n\\n    return function (_x5, _x6) {\\n      return _ref3.apply(this, arguments);\\n    };\\n  }(); // https://eips.ethereum.org/EIPS/eip-1577\\n\\n\\n  EnsLibrary.prototype.checkEip1577 = /*#__PURE__*/function () {\\n    var _ref4 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee4(web3, address) {\\n      var abi, iface, data, result, decoded;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee4$(_context4) {\\n        while (1) {\\n          switch (_context4.prev = _context4.next) {\\n            case 0:\\n              if (!(web3 === undefined || web3 == null)) {\\n                _context4.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined Web3 provider...');\\n\\n            case 2:\\n              address = address === undefined || address == null || address.trim() === '' ? null : address.trim();\\n\\n              if (!(address == null)) {\\n                _context4.next = 5;\\n                break;\\n              }\\n\\n              throw new Error('Undefined Ethereum address...');\\n\\n            case 5:\\n              // contenthash, true when interfaceID is 0xbc1c58d1\\n              abi = ['function supportsInterface(bytes4 interfaceID) public pure returns(bool)'];\\n              iface = new _windowOrGlobal[\\\"default\\\"].ethers.utils.Interface(abi);\\n              data = iface.encodeFunctionData('supportsInterface', ['0xbc1c58d1']);\\n              _context4.next = 10;\\n              return web3.call({\\n                to: address,\\n                data: data\\n              });\\n\\n            case 10:\\n              result = _context4.sent;\\n\\n              if (!(result === undefined || result == null || result === '0x')) {\\n                _context4.next = 13;\\n                break;\\n              }\\n\\n              return _context4.abrupt(\\\"return\\\", false);\\n\\n            case 13:\\n              _context4.prev = 13;\\n              decoded = iface.decodeFunctionResult('supportsInterface', result);\\n\\n              if (!(decoded !== undefined && decoded !== null && Array.isArray(decoded) && decoded.length > 0)) {\\n                _context4.next = 17;\\n                break;\\n              }\\n\\n              return _context4.abrupt(\\\"return\\\", decoded[0]);\\n\\n            case 17:\\n              _context4.next = 22;\\n              break;\\n\\n            case 19:\\n              _context4.prev = 19;\\n              _context4.t0 = _context4[\\\"catch\\\"](13);\\n              this.getLogger().error(_context4.t0);\\n\\n            case 22:\\n              return _context4.abrupt(\\\"return\\\", false);\\n\\n            case 23:\\n            case \\\"end\\\":\\n              return _context4.stop();\\n          }\\n        }\\n      }, _callee4, this, [[13, 19]]);\\n    }));\\n\\n    return function (_x7, _x8) {\\n      return _ref4.apply(this, arguments);\\n    };\\n  }();\\n\\n  EnsLibrary.prototype.getContentHash = /*#__PURE__*/function () {\\n    var _ref5 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee5(domain, web3) {\\n      var _yield$this$ethereumL, etherscan, domainHash, _yield$this$getRegist, chainId, registry, resolver, eip165, eip1577, abi, iface, data, result, content, _this$decodeContentha, decoded, protocol;\\n\\n      return _regenerator[\\\"default\\\"].wrap(function _callee5$(_context5) {\\n        while (1) {\\n          switch (_context5.prev = _context5.next) {\\n            case 0:\\n              domain = domain === undefined || domain == null || domain.trim() === '' ? null : domain.trim();\\n\\n              if (!(domain == null)) {\\n                _context5.next = 3;\\n                break;\\n              }\\n\\n              throw new Error('Undefined ENS domain...');\\n\\n            case 3:\\n              if (!(web3 === undefined)) {\\n                _context5.next = 8;\\n                break;\\n              }\\n\\n              _context5.next = 6;\\n              return this.ethereumLibrary.getWeb3Provider();\\n\\n            case 6:\\n              _yield$this$ethereumL = _context5.sent;\\n              web3 = _yield$this$ethereumL.web3;\\n\\n            case 8:\\n              etherscan = this.ethereumLibrary.getEtherscanRegistry(); // Resolve domain as namehash\\n\\n              domainHash = _windowOrGlobal[\\\"default\\\"].ethers.utils.namehash(domain); // Fetch ens registry address\\n\\n              _context5.next = 12;\\n              return this.getRegistry(web3);\\n\\n            case 12:\\n              _yield$this$getRegist = _context5.sent;\\n              chainId = _yield$this$getRegist.chainId;\\n              registry = _yield$this$getRegist.registry;\\n              this.getLogger().info(\\\"ENS registry:\\\\n \\\".concat(etherscan[chainId], \\\"/address/\\\").concat(registry)); // Fetch resolver address\\n\\n              _context5.next = 18;\\n              return this.getResolver(web3, registry, domainHash);\\n\\n            case 18:\\n              resolver = _context5.sent;\\n\\n              if (!(resolver == null || /^0x0+$/.test(resolver) === true)) {\\n                _context5.next = 21;\\n                break;\\n              }\\n\\n              throw new Error('Undefined ENS domain resolver...');\\n\\n            case 21:\\n              // Log\\n              this.getLogger().info(\\\"ENS domain resolver:\\\\n \\\".concat(etherscan[chainId], \\\"/address/\\\").concat(resolver)); // Check if resolver is EIP165\\n\\n              _context5.next = 24;\\n              return this.checkEip165(web3, resolver);\\n\\n            case 24:\\n              eip165 = _context5.sent;\\n\\n              if (!(eip165 === false)) {\\n                _context5.next = 27;\\n                break;\\n              }\\n\\n              throw new Error('ENS domain resolver do not conform to EIP165...');\\n\\n            case 27:\\n              _context5.next = 29;\\n              return this.checkEip1577(web3, resolver);\\n\\n            case 29:\\n              eip1577 = _context5.sent;\\n\\n              if (!(eip1577 === false)) {\\n                _context5.next = 32;\\n                break;\\n              }\\n\\n              throw new Error('ENS domain resolver do not conform to EIP1577...');\\n\\n            case 32:\\n              // Retrieve content hash\\n              this.getLogger().info('Retrieving ENS domain content...');\\n              abi = ['function contenthash(bytes32 node) external view returns (bytes memory)'];\\n              iface = new _windowOrGlobal[\\\"default\\\"].ethers.utils.Interface(abi);\\n              data = iface.encodeFunctionData('contenthash', [domainHash]);\\n              _context5.next = 38;\\n              return web3.call({\\n                to: resolver,\\n                data: data\\n              });\\n\\n            case 38:\\n              result = _context5.sent;\\n\\n              if (!(result === undefined || result == null || result === '0x')) {\\n                _context5.next = 41;\\n                break;\\n              }\\n\\n              return _context5.abrupt(\\\"return\\\", {\\n                content: null,\\n                protocol: null\\n              });\\n\\n            case 41:\\n              content = iface.decodeFunctionResult('contenthash', result);\\n\\n              if (!(content !== undefined && content !== null && Array.isArray(content) && content.length > 0)) {\\n                _context5.next = 45;\\n                break;\\n              }\\n\\n              _this$decodeContentha = this.decodeContenthash(content[0]), decoded = _this$decodeContentha.decoded, protocol = _this$decodeContentha.protocol;\\n              return _context5.abrupt(\\\"return\\\", {\\n                content: decoded,\\n                protocol: protocol\\n              });\\n\\n            case 45:\\n              return _context5.abrupt(\\\"return\\\", {\\n                content: null,\\n                protocol: null\\n              });\\n\\n            case 46:\\n            case \\\"end\\\":\\n              return _context5.stop();\\n          }\\n        }\\n      }, _callee5, this);\\n    }));\\n\\n    return function (_x9, _x10) {\\n      return _ref5.apply(this, arguments);\\n    };\\n  }();\\n\\n  EnsLibrary.prototype.isOwner = /*#__PURE__*/function () {\\n    var _ref6 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee6(domain, web3, account) {\\n      var _yield$this$ethereumL2, etherscan, domainHash, _yield$this$getRegist2, chainId, registry, abi, iface, data, result, decoded;\\n\\n      return _regenerator[\\\"default\\\"].wrap(function _callee6$(_context6) {\\n        while (1) {\\n          switch (_context6.prev = _context6.next) {\\n            case 0:\\n              domain = domain === undefined || domain == null || domain.trim() === '' ? null : domain.trim();\\n\\n              if (!(domain == null)) {\\n                _context6.next = 3;\\n                break;\\n              }\\n\\n              throw new Error('Undefined ENS domain...');\\n\\n            case 3:\\n              if (!(account === undefined || account == null || web3 === undefined || web3 == null)) {\\n                _context6.next = 9;\\n                break;\\n              }\\n\\n              _context6.next = 6;\\n              return this.ethereumLibrary.getEnabledWeb3Provider();\\n\\n            case 6:\\n              _yield$this$ethereumL2 = _context6.sent;\\n              account = _yield$this$ethereumL2.account;\\n              web3 = _yield$this$ethereumL2.web3;\\n\\n            case 9:\\n              etherscan = this.ethereumLibrary.getEtherscanRegistry(); // Resolve domain as namehash\\n\\n              domainHash = _windowOrGlobal[\\\"default\\\"].ethers.utils.namehash(domain); // Fetch ens registry address\\n\\n              _context6.next = 13;\\n              return this.getRegistry(web3);\\n\\n            case 13:\\n              _yield$this$getRegist2 = _context6.sent;\\n              chainId = _yield$this$getRegist2.chainId;\\n              registry = _yield$this$getRegist2.registry;\\n              this.getLogger().info(\\\"ENS registry:\\\\n \\\".concat(etherscan[chainId], \\\"/address/\\\").concat(registry));\\n              abi = ['function owner(bytes32 node) public view returns(address)'];\\n              iface = new _windowOrGlobal[\\\"default\\\"].ethers.utils.Interface(abi);\\n              data = iface.encodeFunctionData('owner', [domainHash]);\\n              _context6.next = 22;\\n              return web3.call({\\n                to: registry,\\n                data: data\\n              });\\n\\n            case 22:\\n              result = _context6.sent;\\n\\n              if (!(result === undefined || result == null || result === '0x')) {\\n                _context6.next = 25;\\n                break;\\n              }\\n\\n              return _context6.abrupt(\\\"return\\\", false);\\n\\n            case 25:\\n              _context6.prev = 25;\\n              decoded = iface.decodeFunctionResult('owner', result);\\n\\n              if (!(decoded !== undefined && decoded !== null && Array.isArray(decoded) && decoded.length > 0)) {\\n                _context6.next = 29;\\n                break;\\n              }\\n\\n              return _context6.abrupt(\\\"return\\\", decoded[0].toLowerCase() === account.toLowerCase());\\n\\n            case 29:\\n              _context6.next = 34;\\n              break;\\n\\n            case 31:\\n              _context6.prev = 31;\\n              _context6.t0 = _context6[\\\"catch\\\"](25);\\n              this.getLogger().error(_context6.t0);\\n\\n            case 34:\\n              return _context6.abrupt(\\\"return\\\", false);\\n\\n            case 35:\\n            case \\\"end\\\":\\n              return _context6.stop();\\n          }\\n        }\\n      }, _callee6, this, [[25, 31]]);\\n    }));\\n\\n    return function (_x11, _x12, _x13) {\\n      return _ref6.apply(this, arguments);\\n    };\\n  }();\\n\\n  EnsLibrary.prototype.setContentHash = /*#__PURE__*/function () {\\n    var _ref7 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee7(domain, cid, web3, account) {\\n      var _yield$this$ethereumL3, etherscan, domainHash, _yield$this$getRegist3, chainId, registry, resolver, eip165, eip1577, _this$encodeContentha, encoded, abi, iface, data, signer, tx, err, _err;\\n\\n      return _regenerator[\\\"default\\\"].wrap(function _callee7$(_context7) {\\n        while (1) {\\n          switch (_context7.prev = _context7.next) {\\n            case 0:\\n              cid = cid === undefined || cid == null || cid.toString().trim() === '' ? null : cid.toString().trim();\\n\\n              if (!(cid == null)) {\\n                _context7.next = 3;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS identifier...');\\n\\n            case 3:\\n              domain = domain === undefined || domain == null || domain.trim() === '' ? null : domain.trim();\\n\\n              if (!(domain == null)) {\\n                _context7.next = 6;\\n                break;\\n              }\\n\\n              throw new Error('Undefined ENS domain...');\\n\\n            case 6:\\n              if (!(account === undefined || web3 === undefined)) {\\n                _context7.next = 12;\\n                break;\\n              }\\n\\n              _context7.next = 9;\\n              return this.ethereumLibrary.getEnabledWeb3Provider();\\n\\n            case 9:\\n              _yield$this$ethereumL3 = _context7.sent;\\n              account = _yield$this$ethereumL3.account;\\n              web3 = _yield$this$ethereumL3.web3;\\n\\n            case 12:\\n              etherscan = this.ethereumLibrary.getEtherscanRegistry(); // Resolve domain as namehash\\n\\n              domainHash = _windowOrGlobal[\\\"default\\\"].ethers.utils.namehash(domain); // Fetch ens registry address\\n\\n              _context7.next = 16;\\n              return this.getRegistry(web3);\\n\\n            case 16:\\n              _yield$this$getRegist3 = _context7.sent;\\n              chainId = _yield$this$getRegist3.chainId;\\n              registry = _yield$this$getRegist3.registry;\\n              this.getLogger().info(\\\"ENS registry:\\\\n \\\".concat(etherscan[chainId], \\\"/address/\\\").concat(registry));\\n              _context7.next = 22;\\n              return this.getResolver(web3, registry, domainHash);\\n\\n            case 22:\\n              resolver = _context7.sent;\\n\\n              if (!(resolver == null || /^0x0+$/.test(resolver) === true)) {\\n                _context7.next = 25;\\n                break;\\n              }\\n\\n              throw new Error('Undefined ENS resolver...');\\n\\n            case 25:\\n              this.getLogger().info(\\\"ENS domain resolver:\\\\n \\\".concat(etherscan[chainId], \\\"/address/\\\").concat(resolver)); // Check if resolver is EIP165\\n\\n              _context7.next = 28;\\n              return this.checkEip165(web3, resolver);\\n\\n            case 28:\\n              eip165 = _context7.sent;\\n\\n              if (!(eip165 === false)) {\\n                _context7.next = 31;\\n                break;\\n              }\\n\\n              throw new Error('ENS resolver do not conform to EIP165...');\\n\\n            case 31:\\n              _context7.next = 33;\\n              return this.checkEip1577(web3, resolver);\\n\\n            case 33:\\n              eip1577 = _context7.sent;\\n\\n              if (!(eip1577 === false)) {\\n                _context7.next = 36;\\n                break;\\n              }\\n\\n              throw new Error('ENS resolver do not conform to EIP1577...');\\n\\n            case 36:\\n              // Encode cid\\n              _this$encodeContentha = this.encodeContenthash(cid), encoded = _this$encodeContentha.encoded; // Set Contenthash\\n\\n              this.getLogger().info('Processing ENS domain content...');\\n              abi = ['function setContenthash(bytes32 node, bytes calldata hash)'];\\n              iface = new _windowOrGlobal[\\\"default\\\"].ethers.utils.Interface(abi);\\n              data = iface.encodeFunctionData('setContenthash', [domainHash, encoded]);\\n              _context7.prev = 41;\\n              signer = web3.getSigner(account);\\n              _context7.next = 45;\\n              return signer.sendTransaction({\\n                to: resolver,\\n                data: data\\n              });\\n\\n            case 45:\\n              tx = _context7.sent;\\n              this.getLogger().info(\\\"Processing Transaction:\\\\n \\\".concat(etherscan[chainId], \\\"/tx/\\\").concat(tx.hash)); // Wait for transaction completion\\n\\n              _context7.next = 49;\\n              return tx.wait();\\n\\n            case 49:\\n              this.getLogger().info('Processed ENS domain content...');\\n              _context7.next = 63;\\n              break;\\n\\n            case 52:\\n              _context7.prev = 52;\\n              _context7.t0 = _context7[\\\"catch\\\"](41);\\n\\n              if (!(_context7.t0.code === 4001)) {\\n                _context7.next = 58;\\n                break;\\n              }\\n\\n              err = new Error('Rejected User Request...');\\n              err.name = 'RejectedUserRequest';\\n              throw err;\\n\\n            case 58:\\n              if (!(_context7.t0.code === 4100)) {\\n                _context7.next = 62;\\n                break;\\n              }\\n\\n              _err = new Error('Unauthorized User Account...');\\n              _err.name = 'UnauthorizedUserAccount';\\n              throw _err;\\n\\n            case 62:\\n              throw _context7.t0;\\n\\n            case 63:\\n            case \\\"end\\\":\\n              return _context7.stop();\\n          }\\n        }\\n      }, _callee7, this, [[41, 52]]);\\n    }));\\n\\n    return function (_x14, _x15, _x16, _x17) {\\n      return _ref7.apply(this, arguments);\\n    };\\n  }();\\n\\n  module.exports = EnsLibrary;\\n})();\\n\\n}).call(this,require(\\\"buffer\\\").Buffer)\\n},{\\\"@babel/runtime/helpers/asyncToGenerator\\\":2,\\\"@babel/runtime/helpers/interopRequireDefault\\\":3,\\\"@babel/runtime/regenerator\\\":4,\\\"bs58\\\":10,\\\"buffer\\\":8,\\\"content-hash\\\":39,\\\"window-or-global\\\":96}],98:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nvar _regenerator = _interopRequireDefault(require(\\\"@babel/runtime/regenerator\\\"));\\n\\nvar _asyncToGenerator2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/asyncToGenerator\\\"));\\n\\nvar _windowOrGlobal = _interopRequireDefault(require(\\\"window-or-global\\\"));\\n\\nvar _detectProvider = _interopRequireDefault(require(\\\"@metamask/detect-provider\\\"));\\n\\n(function () {\\n  'use strict';\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n\\n  var name = 'ethereum-library'; // https://github.com/ensdomains/resolvers\\n\\n  var EthereumLibrary = function EthereumLibrary(ipfsBundle) {\\n    this.ipfsBundle = ipfsBundle;\\n    this.ipfsLoader = ipfsBundle.ipfsLoader;\\n    this.network = {\\n      0x1: 'Ethereum Main Network: \\\"Mainnet\\\", chainId: \\\"0x1\\\"',\\n      0x3: 'Ethereum Test Network (PoW): \\\"Ropsten\\\", chainId: \\\"0x3\\\"',\\n      0x4: 'Ethereum Test Network (PoA): \\\"Rinkeby\\\", chainId: \\\"0x4\\\"',\\n      0x5: 'Ethereum Test Network (PoA): \\\"Goerli\\\", chainId: \\\"0x5\\\"',\\n      0x2a: 'Ethereum Test Network (PoA): \\\"Kovan\\\", chainId: \\\"0x2a\\\"'\\n    };\\n    this.etherscan = {\\n      0x1: 'https://etherscan.io',\\n      0x3: 'https://ropsten.etherscan.io',\\n      0x4: 'https://rinkeby.etherscan.io',\\n      0x5: 'https://goerli.etherscan.io',\\n      0x2a: 'https://kovan.etherscan.io'\\n    };\\n    this.once = false;\\n    this.provider = null;\\n  };\\n\\n  EthereumLibrary.prototype.getLogger = function () {\\n    return this.ipfsBundle.getLogger();\\n  };\\n\\n  EthereumLibrary.prototype.getEthereumProvider = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee() {\\n    return _regenerator[\\\"default\\\"].wrap(function _callee$(_context) {\\n      while (1) {\\n        switch (_context.prev = _context.next) {\\n          case 0:\\n            if (!(this.provider == null)) {\\n              _context.next = 4;\\n              break;\\n            }\\n\\n            _context.next = 3;\\n            return this.detectEthereumProvider();\\n\\n          case 3:\\n            this.provider = _context.sent;\\n\\n          case 4:\\n            return _context.abrupt(\\\"return\\\", this.provider);\\n\\n          case 5:\\n          case \\\"end\\\":\\n            return _context.stop();\\n        }\\n      }\\n    }, _callee, this);\\n  }));\\n  /*\\n   * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\\n   * https://eips.ethereum.org/EIPS/eip-1193\\n   * https://docs.metamask.io/guide/ethereum-provider.html#methods-current-api\\n   */\\n\\n  EthereumLibrary.prototype.init = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee2() {\\n    var self, provider, chainId;\\n    return _regenerator[\\\"default\\\"].wrap(function _callee2$(_context2) {\\n      while (1) {\\n        switch (_context2.prev = _context2.next) {\\n          case 0:\\n            if (!this.once) {\\n              _context2.next = 2;\\n              break;\\n            }\\n\\n            return _context2.abrupt(\\\"return\\\");\\n\\n          case 2:\\n            self = this;\\n            _context2.prev = 3;\\n            _context2.next = 6;\\n            return this.getEthereumProvider();\\n\\n          case 6:\\n            provider = _context2.sent;\\n            _context2.next = 9;\\n            return this.provider.request({\\n              method: 'eth_chainId'\\n            });\\n\\n          case 9:\\n            chainId = _context2.sent;\\n            this.chainChanged(chainId); // Init Ethereum listener\\n\\n            provider.on('accountsChanged', function (accounts) {\\n              self.accountChanged(accounts);\\n            });\\n            provider.on('chainChanged', function (chainId) {\\n              self.chainChanged(chainId);\\n            });\\n            provider.on('connect', function (chainId) {\\n              self.chainChanged(chainId);\\n            });\\n            provider.on('disconnect', function (code, reason) {\\n              self.disconnectedFromAllChains(code, reason);\\n            });\\n            provider.on('message', function (message) {\\n              self.providerMessage(message);\\n            });\\n            _context2.next = 22;\\n            break;\\n\\n          case 18:\\n            _context2.prev = 18;\\n            _context2.t0 = _context2[\\\"catch\\\"](3);\\n            this.getLogger().error(_context2.t0);\\n            $tw.utils.alert(name, _context2.t0.message);\\n\\n          case 22:\\n            // Init once\\n            this.once = true;\\n\\n          case 23:\\n          case \\\"end\\\":\\n            return _context2.stop();\\n        }\\n      }\\n    }, _callee2, this, [[3, 18]]);\\n  }));\\n\\n  EthereumLibrary.prototype.accountChanged = /*#__PURE__*/function () {\\n    var _ref3 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee3(accounts) {\\n      var _yield$this$getWeb3Pr, chainId, i, account;\\n\\n      return _regenerator[\\\"default\\\"].wrap(function _callee3$(_context3) {\\n        while (1) {\\n          switch (_context3.prev = _context3.next) {\\n            case 0:\\n              if (!(accounts !== undefined && accounts !== null && Array.isArray(accounts) === true && accounts.length > 0)) {\\n                _context3.next = 16;\\n                break;\\n              }\\n\\n              _context3.prev = 1;\\n              _context3.next = 4;\\n              return this.getWeb3Provider();\\n\\n            case 4:\\n              _yield$this$getWeb3Pr = _context3.sent;\\n              chainId = _yield$this$getWeb3Pr.chainId;\\n              this.getLogger().info('Available Ethereum account:');\\n\\n              for (i = 0; i < accounts.length; i++) {\\n                account = accounts[i];\\n                this.getLogger().info(\\\" \\\".concat(this.etherscan[chainId], \\\"/address/\\\").concat(account));\\n              }\\n\\n              _context3.next = 14;\\n              break;\\n\\n            case 10:\\n              _context3.prev = 10;\\n              _context3.t0 = _context3[\\\"catch\\\"](1);\\n              this.getLogger().error(_context3.t0);\\n              $tw.utils.alert(name, _context3.t0.message);\\n\\n            case 14:\\n              _context3.next = 17;\\n              break;\\n\\n            case 16:\\n              this.getLogger().info('No available Ethereum account...');\\n\\n            case 17:\\n            case \\\"end\\\":\\n              return _context3.stop();\\n          }\\n        }\\n      }, _callee3, this, [[1, 10]]);\\n    }));\\n\\n    return function (_x) {\\n      return _ref3.apply(this, arguments);\\n    };\\n  }();\\n\\n  EthereumLibrary.prototype.disconnectedFromAllChains = function (code, reason) {\\n    this.getLogger().info(\\\"Ethereum Provider is disconnected: \\\".concat(reason, \\\". Code: \\\").concat(code));\\n  };\\n\\n  EthereumLibrary.prototype.providerMessage = function (message) {\\n    this.getLogger().info(\\\"Ethereum Provider message: \\\".concat(message));\\n  };\\n\\n  EthereumLibrary.prototype.chainChanged = function (chainId) {\\n    try {\\n      var chainId = parseInt(chainId, 16);\\n      this.getLogger().info(\\\"Chain: \\\".concat(this.network[chainId]));\\n    } catch (error) {\\n      this.getLogger().error(error);\\n      $tw.utils.alert(name, error.message);\\n    }\\n  };\\n\\n  EthereumLibrary.prototype.getEtherscanRegistry = function () {\\n    return this.etherscan;\\n  };\\n\\n  EthereumLibrary.prototype.getNetworkRegistry = function () {\\n    return this.network;\\n  };\\n\\n  EthereumLibrary.prototype.loadEthers = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee4() {\\n    return _regenerator[\\\"default\\\"].wrap(function _callee4$(_context4) {\\n      while (1) {\\n        switch (_context4.prev = _context4.next) {\\n          case 0:\\n            if (!(_windowOrGlobal[\\\"default\\\"].ethers === undefined || _windowOrGlobal[\\\"default\\\"].ethers == null)) {\\n              _context4.next = 12;\\n              break;\\n            }\\n\\n            _context4.prev = 1;\\n            _context4.next = 4;\\n            return this.ipfsLoader.loadEtherJsLibrary();\\n\\n          case 4:\\n            if (!(_windowOrGlobal[\\\"default\\\"].ethers !== undefined && _windowOrGlobal[\\\"default\\\"].ethers !== null)) {\\n              _context4.next = 6;\\n              break;\\n            }\\n\\n            return _context4.abrupt(\\\"return\\\");\\n\\n          case 6:\\n            _context4.next = 11;\\n            break;\\n\\n          case 8:\\n            _context4.prev = 8;\\n            _context4.t0 = _context4[\\\"catch\\\"](1);\\n            this.getLogger().error(_context4.t0);\\n\\n          case 11:\\n            throw new Error('Unavailable Ethereum library...');\\n\\n          case 12:\\n          case \\\"end\\\":\\n            return _context4.stop();\\n        }\\n      }\\n    }, _callee4, this, [[1, 8]]);\\n  }));\\n\\n  EthereumLibrary.prototype.decrypt = /*#__PURE__*/function () {\\n    var _ref5 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee5(text, provider) {\\n      var account, tStart, decryptedText, tStop, ratio;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee5$(_context5) {\\n        while (1) {\\n          switch (_context5.prev = _context5.next) {\\n            case 0:\\n              if (!(provider === undefined || provider == null)) {\\n                _context5.next = 4;\\n                break;\\n              }\\n\\n              _context5.next = 3;\\n              return this.getEthereumProvider();\\n\\n            case 3:\\n              provider = _context5.sent;\\n\\n            case 4:\\n              _context5.next = 6;\\n              return this.getAccount(provider);\\n\\n            case 6:\\n              account = _context5.sent;\\n              tStart = new Date();\\n              _context5.next = 10;\\n              return provider.request({\\n                method: 'eth_decrypt',\\n                params: [text, account]\\n              });\\n\\n            case 10:\\n              decryptedText = _context5.sent;\\n\\n              if (decryptedText !== undefined || decryptedText !== null) {\\n                tStop = new Date() - tStart;\\n                ratio = Math.floor(decryptedText.length * 100 / text.length);\\n                this.getLogger().info(\\\"Ethereum Decrypt: \\\".concat(tStop, \\\"ms, In: \\\").concat(text.length, \\\", Out: \\\").concat(decryptedText.length, \\\", Ratio: \\\").concat(ratio, \\\"%\\\"));\\n              }\\n\\n              return _context5.abrupt(\\\"return\\\", decryptedText);\\n\\n            case 13:\\n            case \\\"end\\\":\\n              return _context5.stop();\\n          }\\n        }\\n      }, _callee5, this);\\n    }));\\n\\n    return function (_x2, _x3) {\\n      return _ref5.apply(this, arguments);\\n    };\\n  }();\\n\\n  EthereumLibrary.prototype.getPublicEncryptionKey = /*#__PURE__*/function () {\\n    var _ref6 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee6(provider, account) {\\n      var encryptionKey, err;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee6$(_context6) {\\n        while (1) {\\n          switch (_context6.prev = _context6.next) {\\n            case 0:\\n              _context6.prev = 0;\\n\\n              if (!(provider === undefined || provider == null)) {\\n                _context6.next = 5;\\n                break;\\n              }\\n\\n              _context6.next = 4;\\n              return this.getEthereumProvider();\\n\\n            case 4:\\n              provider = _context6.sent;\\n\\n            case 5:\\n              if (!(account === undefined)) {\\n                _context6.next = 9;\\n                break;\\n              }\\n\\n              _context6.next = 8;\\n              return this.getAccount(provider);\\n\\n            case 8:\\n              account = _context6.sent;\\n\\n            case 9:\\n              _context6.next = 11;\\n              return provider.request({\\n                method: 'eth_getEncryptionPublicKey',\\n                params: [account]\\n              });\\n\\n            case 11:\\n              encryptionKey = _context6.sent;\\n              return _context6.abrupt(\\\"return\\\", encryptionKey);\\n\\n            case 15:\\n              _context6.prev = 15;\\n              _context6.t0 = _context6[\\\"catch\\\"](0);\\n\\n              if (!(_context6.t0.code === 4001)) {\\n                _context6.next = 21;\\n                break;\\n              }\\n\\n              err = new Error('Rejected User Request...');\\n              err.name = 'RejectedUserRequest';\\n              throw err;\\n\\n            case 21:\\n              throw _context6.t0;\\n\\n            case 22:\\n            case \\\"end\\\":\\n              return _context6.stop();\\n          }\\n        }\\n      }, _callee6, this, [[0, 15]]);\\n    }));\\n\\n    return function (_x4, _x5) {\\n      return _ref6.apply(this, arguments);\\n    };\\n  }();\\n  /*\\n   * https://eips.ethereum.org/EIPS/eip-1102\\n   * https://eips.ethereum.org/EIPS/eip-1193\\n   * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\\n   * https://eips.ethereum.org/EIPS/eip-2255\\n   * https://docs.metamask.io/guide/ethereum-provider.html#methods-current-api\\n   */\\n\\n\\n  EthereumLibrary.prototype.detectEthereumProvider = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee7() {\\n    var provider;\\n    return _regenerator[\\\"default\\\"].wrap(function _callee7$(_context7) {\\n      while (1) {\\n        switch (_context7.prev = _context7.next) {\\n          case 0:\\n            provider = null;\\n            _context7.prev = 1;\\n            _context7.next = 4;\\n            return (0, _detectProvider[\\\"default\\\"])({\\n              mustBeMetaMask: true\\n            });\\n\\n          case 4:\\n            provider = _context7.sent;\\n\\n            if (provider !== undefined && provider !== null) {\\n              provider.autoRefreshOnNetworkChange = false;\\n            }\\n\\n            _context7.next = 11;\\n            break;\\n\\n          case 8:\\n            _context7.prev = 8;\\n            _context7.t0 = _context7[\\\"catch\\\"](1);\\n            this.getLogger().error(_context7.t0);\\n\\n          case 11:\\n            if (!(provider === undefined || provider == null)) {\\n              _context7.next = 13;\\n              break;\\n            }\\n\\n            throw new Error('Please install ~MetaMask...');\\n\\n          case 13:\\n            return _context7.abrupt(\\\"return\\\", provider);\\n\\n          case 14:\\n          case \\\"end\\\":\\n            return _context7.stop();\\n        }\\n      }\\n    }, _callee7, this, [[1, 8]]);\\n  }));\\n\\n  EthereumLibrary.prototype.checkAccountPermission = /*#__PURE__*/function () {\\n    var _ref8 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee8(provider) {\\n      var permissions, accountsPermission;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee8$(_context8) {\\n        while (1) {\\n          switch (_context8.prev = _context8.next) {\\n            case 0:\\n              if (!(provider === undefined || provider == null)) {\\n                _context8.next = 4;\\n                break;\\n              }\\n\\n              _context8.next = 3;\\n              return this.getEthereumProvider();\\n\\n            case 3:\\n              provider = _context8.sent;\\n\\n            case 4:\\n              _context8.next = 6;\\n              return provider.request({\\n                method: 'wallet_getPermissions'\\n              });\\n\\n            case 6:\\n              permissions = _context8.sent;\\n              accountsPermission = permissions.find(function (permission) {\\n                return permission.parentCapability === 'eth_accounts';\\n              });\\n\\n              if (!accountsPermission) {\\n                _context8.next = 10;\\n                break;\\n              }\\n\\n              return _context8.abrupt(\\\"return\\\", true);\\n\\n            case 10:\\n              return _context8.abrupt(\\\"return\\\", false);\\n\\n            case 11:\\n            case \\\"end\\\":\\n              return _context8.stop();\\n          }\\n        }\\n      }, _callee8, this);\\n    }));\\n\\n    return function (_x6) {\\n      return _ref8.apply(this, arguments);\\n    };\\n  }();\\n\\n  EthereumLibrary.prototype.requestAccountPermission = /*#__PURE__*/function () {\\n    var _ref9 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee9(provider) {\\n      var permissions, accountsPermission;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee9$(_context9) {\\n        while (1) {\\n          switch (_context9.prev = _context9.next) {\\n            case 0:\\n              if (!(provider === undefined || provider == null)) {\\n                _context9.next = 4;\\n                break;\\n              }\\n\\n              _context9.next = 3;\\n              return this.getEthereumProvider();\\n\\n            case 3:\\n              provider = _context9.sent;\\n\\n            case 4:\\n              _context9.next = 6;\\n              return provider.request({\\n                method: 'wallet_requestPermissions',\\n                params: [{\\n                  eth_accounts: {}\\n                }]\\n              });\\n\\n            case 6:\\n              permissions = _context9.sent;\\n              accountsPermission = permissions.find(function (permission) {\\n                return permission.parentCapability === 'eth_accounts';\\n              });\\n\\n              if (!accountsPermission) {\\n                _context9.next = 10;\\n                break;\\n              }\\n\\n              return _context9.abrupt(\\\"return\\\", true);\\n\\n            case 10:\\n              return _context9.abrupt(\\\"return\\\", false);\\n\\n            case 11:\\n            case \\\"end\\\":\\n              return _context9.stop();\\n          }\\n        }\\n      }, _callee9, this);\\n    }));\\n\\n    return function (_x7) {\\n      return _ref9.apply(this, arguments);\\n    };\\n  }();\\n  /*\\n   * https://docs.metamask.io/guide/provider-migration.html#migrating-to-the-new-provider-api\\n   */\\n\\n\\n  EthereumLibrary.prototype.getAccount = /*#__PURE__*/function () {\\n    var _ref10 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee10(provider) {\\n      var accounts, permission, err;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee10$(_context10) {\\n        while (1) {\\n          switch (_context10.prev = _context10.next) {\\n            case 0:\\n              if (!(provider === undefined || provider == null)) {\\n                _context10.next = 4;\\n                break;\\n              }\\n\\n              _context10.next = 3;\\n              return this.getEthereumProvider();\\n\\n            case 3:\\n              provider = _context10.sent;\\n\\n            case 4:\\n              _context10.prev = 4;\\n              accounts = null;\\n\\n              if (!(typeof provider.request === 'function')) {\\n                _context10.next = 45;\\n                break;\\n              }\\n\\n              permission = false; // Permission Attempt\\n\\n              _context10.prev = 8;\\n              _context10.next = 11;\\n              return this.checkAccountPermission(provider);\\n\\n            case 11:\\n              permission = _context10.sent;\\n\\n              if (!(permission === false)) {\\n                _context10.next = 16;\\n                break;\\n              }\\n\\n              _context10.next = 15;\\n              return this.requestAccountPermission(provider);\\n\\n            case 15:\\n              permission = _context10.sent;\\n\\n            case 16:\\n              _context10.next = 23;\\n              break;\\n\\n            case 18:\\n              _context10.prev = 18;\\n              _context10.t0 = _context10[\\\"catch\\\"](8);\\n\\n              if (!(_context10.t0.code === 4001)) {\\n                _context10.next = 22;\\n                break;\\n              }\\n\\n              throw _context10.t0;\\n\\n            case 22:\\n              this.getLogger().error(_context10.t0);\\n\\n            case 23:\\n              _context10.prev = 23;\\n              _context10.t1 = permission === false;\\n\\n              if (_context10.t1) {\\n                _context10.next = 30;\\n                break;\\n              }\\n\\n              _context10.next = 28;\\n              return provider._metamask.isUnlocked();\\n\\n            case 28:\\n              _context10.t2 = _context10.sent;\\n              _context10.t1 = _context10.t2 === false;\\n\\n            case 30:\\n              if (!_context10.t1) {\\n                _context10.next = 34;\\n                break;\\n              }\\n\\n              _context10.next = 33;\\n              return provider.request({\\n                method: 'eth_requestAccounts'\\n              });\\n\\n            case 33:\\n              accounts = _context10.sent;\\n\\n            case 34:\\n              if (!(accounts === undefined || accounts == null || Array.isArray(accounts) === false || accounts.length === 0)) {\\n                _context10.next = 38;\\n                break;\\n              }\\n\\n              _context10.next = 37;\\n              return provider.request({\\n                method: 'eth_accounts'\\n              });\\n\\n            case 37:\\n              accounts = _context10.sent;\\n\\n            case 38:\\n              _context10.next = 45;\\n              break;\\n\\n            case 40:\\n              _context10.prev = 40;\\n              _context10.t3 = _context10[\\\"catch\\\"](23);\\n\\n              if (!(_context10.t3.code === 4001)) {\\n                _context10.next = 44;\\n                break;\\n              }\\n\\n              throw _context10.t3;\\n\\n            case 44:\\n              this.getLogger().error(_context10.t3);\\n\\n            case 45:\\n              if (!(accounts === undefined || accounts == null || Array.isArray(accounts) === false || accounts.length === 0)) {\\n                _context10.next = 50;\\n                break;\\n              }\\n\\n              if (!(typeof provider.enable === 'function')) {\\n                _context10.next = 50;\\n                break;\\n              }\\n\\n              _context10.next = 49;\\n              return provider.enable();\\n\\n            case 49:\\n              accounts = _context10.sent;\\n\\n            case 50:\\n              if (!(accounts === undefined || accounts == null || Array.isArray(accounts) === false || accounts.length === 0)) {\\n                _context10.next = 52;\\n                break;\\n              }\\n\\n              throw new Error('Unable to retrieve any Ethereum accounts...');\\n\\n            case 52:\\n              if (provider.chainId !== undefined) {\\n                this.getLogger().info(\\\"Chain: \\\".concat(provider.chainId, \\\", Connected Account: \\\").concat(accounts[0]));\\n              } else {\\n                this.getLogger().info(\\\"Connected Account: \\\".concat(accounts[0]));\\n              }\\n\\n              return _context10.abrupt(\\\"return\\\", accounts[0]);\\n\\n            case 56:\\n              _context10.prev = 56;\\n              _context10.t4 = _context10[\\\"catch\\\"](4);\\n\\n              if (!(_context10.t4.code === 4001)) {\\n                _context10.next = 62;\\n                break;\\n              }\\n\\n              err = new Error('Rejected User Request...');\\n              err.name = 'RejectedUserRequest';\\n              throw err;\\n\\n            case 62:\\n              throw _context10.t4;\\n\\n            case 63:\\n            case \\\"end\\\":\\n              return _context10.stop();\\n          }\\n        }\\n      }, _callee10, this, [[4, 56], [8, 18], [23, 40]]);\\n    }));\\n\\n    return function (_x8) {\\n      return _ref10.apply(this, arguments);\\n    };\\n  }();\\n\\n  EthereumLibrary.prototype.getEnabledWeb3Provider = /*#__PURE__*/function () {\\n    var _ref11 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee11(provider) {\\n      var account, web3, network, chainId;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee11$(_context11) {\\n        while (1) {\\n          switch (_context11.prev = _context11.next) {\\n            case 0:\\n              if (!(provider === undefined || provider == null)) {\\n                _context11.next = 4;\\n                break;\\n              }\\n\\n              _context11.next = 3;\\n              return this.getEthereumProvider();\\n\\n            case 3:\\n              provider = _context11.sent;\\n\\n            case 4:\\n              if (!(_windowOrGlobal[\\\"default\\\"].ethers === undefined || _windowOrGlobal[\\\"default\\\"].ethers == null)) {\\n                _context11.next = 7;\\n                break;\\n              }\\n\\n              _context11.next = 7;\\n              return this.loadEthers();\\n\\n            case 7:\\n              _context11.next = 9;\\n              return this.getAccount(provider);\\n\\n            case 9:\\n              account = _context11.sent;\\n              // Instantiate a Web3Provider\\n              web3 = new _windowOrGlobal[\\\"default\\\"].ethers.providers.Web3Provider(provider, 'any'); // Retrieve current network\\n\\n              _context11.next = 13;\\n              return web3.getNetwork();\\n\\n            case 13:\\n              network = _context11.sent;\\n              chainId = parseInt(network.chainId);\\n              return _context11.abrupt(\\\"return\\\", {\\n                account: account,\\n                chainId: chainId,\\n                web3: web3\\n              });\\n\\n            case 16:\\n            case \\\"end\\\":\\n              return _context11.stop();\\n          }\\n        }\\n      }, _callee11, this);\\n    }));\\n\\n    return function (_x9) {\\n      return _ref11.apply(this, arguments);\\n    };\\n  }();\\n\\n  EthereumLibrary.prototype.getWeb3Provider = /*#__PURE__*/function () {\\n    var _ref12 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee12(provider) {\\n      var web3, network, chainId;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee12$(_context12) {\\n        while (1) {\\n          switch (_context12.prev = _context12.next) {\\n            case 0:\\n              if (!(provider === undefined || provider == null)) {\\n                _context12.next = 4;\\n                break;\\n              }\\n\\n              _context12.next = 3;\\n              return this.getEthereumProvider();\\n\\n            case 3:\\n              provider = _context12.sent;\\n\\n            case 4:\\n              if (!(_windowOrGlobal[\\\"default\\\"].ethers === undefined || _windowOrGlobal[\\\"default\\\"].ethers == null)) {\\n                _context12.next = 7;\\n                break;\\n              }\\n\\n              _context12.next = 7;\\n              return this.loadEthers();\\n\\n            case 7:\\n              // Instantiate an ethers Web3Provider\\n              web3 = new _windowOrGlobal[\\\"default\\\"].ethers.providers.Web3Provider(provider, 'any'); // Retrieve current network\\n\\n              _context12.next = 10;\\n              return web3.getNetwork();\\n\\n            case 10:\\n              network = _context12.sent;\\n              chainId = parseInt(network.chainId);\\n              return _context12.abrupt(\\\"return\\\", {\\n                web3: web3,\\n                chainId: chainId\\n              });\\n\\n            case 13:\\n            case \\\"end\\\":\\n              return _context12.stop();\\n          }\\n        }\\n      }, _callee12, this);\\n    }));\\n\\n    return function (_x10) {\\n      return _ref12.apply(this, arguments);\\n    };\\n  }();\\n\\n  module.exports = EthereumLibrary;\\n})();\\n\\n},{\\\"@babel/runtime/helpers/asyncToGenerator\\\":2,\\\"@babel/runtime/helpers/interopRequireDefault\\\":3,\\\"@babel/runtime/regenerator\\\":4,\\\"@metamask/detect-provider\\\":5,\\\"window-or-global\\\":96}],99:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nvar _regenerator = _interopRequireDefault(require(\\\"@babel/runtime/regenerator\\\"));\\n\\nvar _asyncToGenerator2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/asyncToGenerator\\\"));\\n\\nvar _cids = _interopRequireDefault(require(\\\"cids\\\"));\\n\\nvar _whatwgUrl = require(\\\"whatwg-url\\\");\\n\\nvar _windowOrGlobal = _interopRequireDefault(require(\\\"window-or-global\\\"));\\n\\nvar _ensLibrary = _interopRequireDefault(require(\\\"./ens-library\\\"));\\n\\nvar _ethereumLibrary = _interopRequireDefault(require(\\\"./ethereum-library\\\"));\\n\\nvar _ipfsLibrary = _interopRequireDefault(require(\\\"./ipfs-library\\\"));\\n\\nvar _ipfsLoader = _interopRequireDefault(require(\\\"./ipfs-loader\\\"));\\n\\nvar _ipfsUrl = _interopRequireDefault(require(\\\"./ipfs-url\\\"));\\n\\n/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-bundle.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Bundle\\n\\n\\\\*/\\n(function () {\\n  'use strict';\\n\\n  var cidAnalyser = 'https://cid.ipfs.io/#';\\n  var libp2pKey = 'libp2p-key';\\n  var dagPb = 'dag-pb';\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n\\n  var name = 'ipfs-bundle';\\n\\n  var IpfsBundle = function IpfsBundle() {\\n    this.once = false;\\n  };\\n\\n  IpfsBundle.prototype.getLogger = function () {\\n    if (_windowOrGlobal[\\\"default\\\"].log !== undefined && _windowOrGlobal[\\\"default\\\"].log !== null) {\\n      var loggers = _windowOrGlobal[\\\"default\\\"].log.getLoggers();\\n\\n      var log = loggers.eruda;\\n\\n      if (log !== undefined && log !== null) {\\n        return log;\\n      }\\n\\n      return loggers[\\\"default\\\"];\\n    }\\n\\n    return console;\\n  };\\n\\n  IpfsBundle.prototype.init = function () {\\n    // Init once\\n    if (this.once) {\\n      return;\\n    }\\n\\n    this.ipfsLoader = new _ipfsLoader[\\\"default\\\"](this);\\n    this.ethereumLibrary = new _ethereumLibrary[\\\"default\\\"](this);\\n    this.ethereumLibrary.init();\\n    this.ensLibrary = new _ensLibrary[\\\"default\\\"](this);\\n    this.ipfsLibrary = new _ipfsLibrary[\\\"default\\\"](this);\\n    this.ipfsUrl = new _ipfsUrl[\\\"default\\\"](this); // Init once\\n\\n    this.once = true;\\n  };\\n\\n  IpfsBundle.prototype.xhrToJson = /*#__PURE__*/function () {\\n    var _ref = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee(url) {\\n      return _regenerator[\\\"default\\\"].wrap(function _callee$(_context) {\\n        while (1) {\\n          switch (_context.prev = _context.next) {\\n            case 0:\\n              _context.next = 2;\\n              return this.ipfsLoader.xhrToJson(url);\\n\\n            case 2:\\n              return _context.abrupt(\\\"return\\\", _context.sent);\\n\\n            case 3:\\n            case \\\"end\\\":\\n              return _context.stop();\\n          }\\n        }\\n      }, _callee, this);\\n    }));\\n\\n    return function (_x) {\\n      return _ref.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsBundle.prototype.getENSRegistry = function () {\\n    return this.ensLibrary.getENSRegistry();\\n  };\\n\\n  IpfsBundle.prototype.getEtherscanRegistry = function () {\\n    return this.ethereumLibrary.getEtherscanRegistry();\\n  };\\n\\n  IpfsBundle.prototype.getNetworkRegistry = function () {\\n    return this.ethereumLibrary.getNetworkRegistry();\\n  };\\n\\n  IpfsBundle.prototype.getPublicEncryptionKey = /*#__PURE__*/function () {\\n    var _ref2 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee2(provider) {\\n      return _regenerator[\\\"default\\\"].wrap(function _callee2$(_context2) {\\n        while (1) {\\n          switch (_context2.prev = _context2.next) {\\n            case 0:\\n              _context2.prev = 0;\\n              _context2.next = 3;\\n              return this.ethereumLibrary.getPublicEncryptionKey(provider);\\n\\n            case 3:\\n              return _context2.abrupt(\\\"return\\\", _context2.sent);\\n\\n            case 6:\\n              _context2.prev = 6;\\n              _context2.t0 = _context2[\\\"catch\\\"](0);\\n\\n              if (!(_context2.t0.name === 'RejectedUserRequest')) {\\n                _context2.next = 10;\\n                break;\\n              }\\n\\n              throw _context2.t0;\\n\\n            case 10:\\n              this.getLogger().error(_context2.t0);\\n              throw new Error('Unable to retrieve an Ethereum Public Encryption Key...');\\n\\n            case 12:\\n            case \\\"end\\\":\\n              return _context2.stop();\\n          }\\n        }\\n      }, _callee2, this, [[0, 6]]);\\n    }));\\n\\n    return function (_x2) {\\n      return _ref2.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsBundle.prototype.decrypt = /*#__PURE__*/function () {\\n    var _ref3 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee3(text, provider) {\\n      return _regenerator[\\\"default\\\"].wrap(function _callee3$(_context3) {\\n        while (1) {\\n          switch (_context3.prev = _context3.next) {\\n            case 0:\\n              _context3.prev = 0;\\n              _context3.next = 3;\\n              return this.ethereumLibrary.decrypt(text, provider);\\n\\n            case 3:\\n              return _context3.abrupt(\\\"return\\\", _context3.sent);\\n\\n            case 6:\\n              _context3.prev = 6;\\n              _context3.t0 = _context3[\\\"catch\\\"](0);\\n\\n              if (!(_context3.t0.name === 'RejectedUserRequest')) {\\n                _context3.next = 10;\\n                break;\\n              }\\n\\n              throw _context3.t0;\\n\\n            case 10:\\n              this.getLogger().error(_context3.t0);\\n              throw new Error('Unable to decrypt content...');\\n\\n            case 12:\\n            case \\\"end\\\":\\n              return _context3.stop();\\n          }\\n        }\\n      }, _callee3, this, [[0, 6]]);\\n    }));\\n\\n    return function (_x3, _x4) {\\n      return _ref3.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsBundle.prototype.isOwner = /*#__PURE__*/function () {\\n    var _ref4 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee4(domain, web3, account) {\\n      return _regenerator[\\\"default\\\"].wrap(function _callee4$(_context4) {\\n        while (1) {\\n          switch (_context4.prev = _context4.next) {\\n            case 0:\\n              _context4.next = 2;\\n              return this.ensLibrary.isOwner(domain, web3, account);\\n\\n            case 2:\\n              return _context4.abrupt(\\\"return\\\", _context4.sent);\\n\\n            case 3:\\n            case \\\"end\\\":\\n              return _context4.stop();\\n          }\\n        }\\n      }, _callee4, this);\\n    }));\\n\\n    return function (_x5, _x6, _x7) {\\n      return _ref4.apply(this, arguments);\\n    };\\n  }();\\n  /*\\n   * https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md\\n   * https://eips.ethereum.org/EIPS/eip-1193\\n   * https://docs.metamask.io/guide/ethereum-provider.html#methods-current-api\\n   */\\n\\n\\n  IpfsBundle.prototype.getEthereumProvider = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee5() {\\n    return _regenerator[\\\"default\\\"].wrap(function _callee5$(_context5) {\\n      while (1) {\\n        switch (_context5.prev = _context5.next) {\\n          case 0:\\n            _context5.next = 2;\\n            return this.ethereumLibrary.getEthereumProvider();\\n\\n          case 2:\\n            return _context5.abrupt(\\\"return\\\", _context5.sent);\\n\\n          case 3:\\n          case \\\"end\\\":\\n            return _context5.stop();\\n        }\\n      }\\n    }, _callee5, this);\\n  }));\\n  IpfsBundle.prototype.getEnabledWeb3Provider = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee6() {\\n    var account, chainId, web3, etherscan, network, provider, _yield$this$ethereumL;\\n\\n    return _regenerator[\\\"default\\\"].wrap(function _callee6$(_context6) {\\n      while (1) {\\n        switch (_context6.prev = _context6.next) {\\n          case 0:\\n            account = null;\\n            chainId = null;\\n            web3 = null;\\n            etherscan = this.getEtherscanRegistry();\\n            network = this.getNetworkRegistry();\\n            _context6.next = 7;\\n            return this.getEthereumProvider();\\n\\n          case 7:\\n            provider = _context6.sent;\\n            _context6.prev = 8;\\n            _context6.next = 11;\\n            return this.ethereumLibrary.getEnabledWeb3Provider(provider);\\n\\n          case 11:\\n            _yield$this$ethereumL = _context6.sent;\\n            account = _yield$this$ethereumL.account;\\n            chainId = _yield$this$ethereumL.chainId;\\n            web3 = _yield$this$ethereumL.web3;\\n            _context6.next = 23;\\n            break;\\n\\n          case 17:\\n            _context6.prev = 17;\\n            _context6.t0 = _context6[\\\"catch\\\"](8);\\n\\n            if (!(_context6.t0.name === 'RejectedUserRequest')) {\\n              _context6.next = 21;\\n              break;\\n            }\\n\\n            throw _context6.t0;\\n\\n          case 21:\\n            this.getLogger().error(_context6.t0);\\n            throw new Error('Unable to retrieve an enabled Ethereum Provider...');\\n\\n          case 23:\\n            // Log\\n            this.getLogger().info(\\\"New Enabled Web3 provider:\\\\n Chain: \\\".concat(network[chainId], \\\"\\\\n Account: \\\").concat(etherscan[chainId], \\\"/address/\\\").concat(account));\\n            return _context6.abrupt(\\\"return\\\", {\\n              account: account,\\n              chainId: chainId,\\n              provider: provider,\\n              web3: web3\\n            });\\n\\n          case 25:\\n          case \\\"end\\\":\\n            return _context6.stop();\\n        }\\n      }\\n    }, _callee6, this, [[8, 17]]);\\n  }));\\n  IpfsBundle.prototype.getWeb3Provider = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee7() {\\n    var chainId, web3, network, provider, _yield$this$ethereumL2;\\n\\n    return _regenerator[\\\"default\\\"].wrap(function _callee7$(_context7) {\\n      while (1) {\\n        switch (_context7.prev = _context7.next) {\\n          case 0:\\n            chainId = null;\\n            web3 = null;\\n            network = this.getNetworkRegistry();\\n            _context7.next = 5;\\n            return this.getEthereumProvider();\\n\\n          case 5:\\n            provider = _context7.sent;\\n            _context7.prev = 6;\\n            _context7.next = 9;\\n            return this.ethereumLibrary.getWeb3Provider(provider);\\n\\n          case 9:\\n            _yield$this$ethereumL2 = _context7.sent;\\n            web3 = _yield$this$ethereumL2.web3;\\n            chainId = _yield$this$ethereumL2.chainId;\\n            _context7.next = 18;\\n            break;\\n\\n          case 14:\\n            _context7.prev = 14;\\n            _context7.t0 = _context7[\\\"catch\\\"](6);\\n            this.getLogger().error(_context7.t0);\\n            throw new Error('Unable to retrieve an Ethereum Provider...');\\n\\n          case 18:\\n            // Log\\n            this.getLogger().info(\\\"New Web3 provider:\\\\n \\\".concat(network[chainId]));\\n            return _context7.abrupt(\\\"return\\\", {\\n              chainId: chainId,\\n              provider: provider,\\n              web3: web3\\n            });\\n\\n          case 20:\\n          case \\\"end\\\":\\n            return _context7.stop();\\n        }\\n      }\\n    }, _callee7, this, [[6, 14]]);\\n  }));\\n\\n  IpfsBundle.prototype.decode = function (b64) {\\n    return Base64Binary.decode(b64);\\n  }; // https://stackoverflow.com/questions/21797299/convert-base64-string-to-arraybuffer/21797381\\n  // https://github.com/danguer/blog-examples/blob/master/js/base64-binary.js\\n\\n  /*\\n   * Copyright (c) 2011, Daniel Guerrero\\n   * All rights reserved.\\n   * Redistribution and use in source and binary forms, with or without\\n   * modification, are permitted provided that the following conditions are met:\\n   * Redistributions of source code must retain the above copyright\\n   * notice, this list of conditions and the following disclaimer.\\n   * Redistributions in binary form must reproduce the above copyright\\n   * notice, this list of conditions and the following disclaimer in the\\n   * documentation and/or other materials provided with the distribution.\\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\" AND\\n   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n   * DISCLAIMED. IN NO EVENT SHALL DANIEL GUERRERO BE LIABLE FOR ANY\\n   * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\\n   * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\\n   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\\n   * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\\n   * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\n   * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n   */\\n\\n  /**\\n   * Uses the new array typed in javascript to binary base64 encode/decode\\n   * at the moment just decodes a binary base64 encoded\\n   * into either an ArrayBuffer (decodeArrayBuffer)\\n   * or into an Uint8Array (decode)\\n   *\\n   * References:\\n   * https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer\\n   * https://developer.mozilla.org/en/JavaScript_typed_arrays/Uint8Array\\n   */\\n\\n\\n  var Base64Binary = {\\n    _keyStr: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\\n\\n    /* will return a  Uint8Array type */\\n    decodeArrayBuffer: function decodeArrayBuffer(input) {\\n      var bytes = input.length / 4 * 3;\\n      var ab = new ArrayBuffer(bytes);\\n      this.decode(input, ab);\\n      return ab;\\n    },\\n    removePaddingChars: function removePaddingChars(input) {\\n      var lkey = this._keyStr.indexOf(input.charAt(input.length - 1));\\n\\n      if (lkey === 64) {\\n        return input.substring(0, input.length - 1);\\n      }\\n\\n      return input;\\n    },\\n    decode: function decode(input, ab) {\\n      //get last chars to see if are valid\\n      input = this.removePaddingChars(input);\\n      input = this.removePaddingChars(input);\\n      var bytes = parseInt(input.length / 4 * 3, 10);\\n      var ua;\\n      var chr1, chr2, chr3;\\n      var enc1, enc2, enc3, enc4;\\n      var i = 0;\\n      var j = 0;\\n      if (ab) ua = new Uint8Array(ab);else ua = new Uint8Array(bytes);\\n      /*eslint no-useless-escape:\\\"off\\\"*/\\n\\n      input = input.replace(/[^A-Za-z0-9\\\\+\\\\/\\\\=]/g, '');\\n\\n      for (i = 0; i < bytes; i += 3) {\\n        //get the 3 octects in 4 ascii chars\\n        enc1 = this._keyStr.indexOf(input.charAt(j++));\\n        enc2 = this._keyStr.indexOf(input.charAt(j++));\\n        enc3 = this._keyStr.indexOf(input.charAt(j++));\\n        enc4 = this._keyStr.indexOf(input.charAt(j++));\\n        chr1 = enc1 << 2 | enc2 >> 4;\\n        chr2 = (enc2 & 15) << 4 | enc3 >> 2;\\n        chr3 = (enc3 & 3) << 6 | enc4;\\n        ua[i] = chr1;\\n        if (enc3 !== 64) ua[i + 1] = chr2;\\n        if (enc4 !== 64) ua[i + 2] = chr3;\\n      }\\n\\n      return ua;\\n    }\\n  };\\n\\n  IpfsBundle.prototype.isJson = function (content) {\\n    return this.ipfsLoader.isJson(content);\\n  };\\n\\n  IpfsBundle.prototype.loadToBase64 = /*#__PURE__*/function () {\\n    var _ref8 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee8(url, password) {\\n      return _regenerator[\\\"default\\\"].wrap(function _callee8$(_context8) {\\n        while (1) {\\n          switch (_context8.prev = _context8.next) {\\n            case 0:\\n              _context8.next = 2;\\n              return this.ipfsLoader.loadToBase64(url, password);\\n\\n            case 2:\\n              return _context8.abrupt(\\\"return\\\", _context8.sent);\\n\\n            case 3:\\n            case \\\"end\\\":\\n              return _context8.stop();\\n          }\\n        }\\n      }, _callee8, this);\\n    }));\\n\\n    return function (_x8, _x9) {\\n      return _ref8.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsBundle.prototype.loadToUtf8 = /*#__PURE__*/function () {\\n    var _ref9 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee9(url, password) {\\n      return _regenerator[\\\"default\\\"].wrap(function _callee9$(_context9) {\\n        while (1) {\\n          switch (_context9.prev = _context9.next) {\\n            case 0:\\n              _context9.next = 2;\\n              return this.ipfsLoader.loadToUtf8(url, password);\\n\\n            case 2:\\n              return _context9.abrupt(\\\"return\\\", _context9.sent);\\n\\n            case 3:\\n            case \\\"end\\\":\\n              return _context9.stop();\\n          }\\n        }\\n      }, _callee9, this);\\n    }));\\n\\n    return function (_x10, _x11) {\\n      return _ref9.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsBundle.prototype.decodeCid = function (decode) {\\n    // Check\\n    if (decode === undefined || decode == null) {\\n      return {\\n        cid: null,\\n        ipnsIdentifier: null,\\n        protocol: null\\n      };\\n    }\\n\\n    if (decode instanceof _whatwgUrl.URL === false && typeof decode !== 'string') {\\n      throw new Error('Unable to decode CID. \\\"URL\\\" or \\\"string\\\" expected...');\\n    }\\n\\n    var cid = null;\\n    var ipnsIdentifier = null;\\n    var protocol = null;\\n    var url = null;\\n\\n    if (decode instanceof _whatwgUrl.URL === false) {\\n      try {\\n        url = this.ipfsUrl.getUrl(decode);\\n      } catch (error) {// Ignore\\n      }\\n    } else {\\n      url = decode;\\n    }\\n\\n    if (url !== null) {\\n      var _this$decodeUrlCid = this.decodeUrlCid(url),\\n          cid = _this$decodeUrlCid.cid,\\n          ipnsIdentifier = _this$decodeUrlCid.ipnsIdentifier,\\n          protocol = _this$decodeUrlCid.protocol;\\n    } else {\\n      var _this$decodeHostnameC = this.decodeHostnameCid(decode),\\n          cid = _this$decodeHostnameC.cid,\\n          ipnsIdentifier = _this$decodeHostnameC.ipnsIdentifier,\\n          protocol = _this$decodeHostnameC.protocol;\\n\\n      if (protocol == null && cid == null && ipnsIdentifier == null) {\\n        var _this$decodePathnameC = this.decodePathnameCid(decode),\\n            cid = _this$decodePathnameC.cid,\\n            ipnsIdentifier = _this$decodePathnameC.ipnsIdentifier,\\n            protocol = _this$decodePathnameC.protocol;\\n      }\\n    }\\n\\n    return {\\n      cid: cid,\\n      ipnsIdentifier: ipnsIdentifier,\\n      protocol: protocol\\n    };\\n  };\\n\\n  IpfsBundle.prototype.decodeUrlCid = function (url) {\\n    // Check\\n    if (url === undefined || url == null) {\\n      return {\\n        cid: null,\\n        ipnsIdentifier: null,\\n        protocol: null\\n      };\\n    }\\n\\n    if (url instanceof _whatwgUrl.URL === false) {\\n      throw new Error('Unable to decode CID. \\\"URL\\\" expected...');\\n    }\\n\\n    var cid = null;\\n    var ipnsIdentifier = null;\\n    var protocol = null;\\n\\n    if (url.protocol === 'ipfs:' || url.protocol === 'ipns:') {\\n      if (url.hostname !== undefined && url.hostname !== null && url.hostname.trim() !== '') {\\n        if (url.protocol === 'ipns:') {\\n          ipnsIdentifier = url.hostname;\\n          protocol = 'ipns';\\n        } else if (url.protocol === 'ipfs:' && this.isCid(url.hostname)) {\\n          cid = url.hostname;\\n          protocol = 'ipfs';\\n        }\\n      }\\n\\n      return {\\n        cid: cid,\\n        ipnsIdentifier: ipnsIdentifier,\\n        protocol: protocol\\n      };\\n    }\\n\\n    var _this$decodeHostnameC2 = this.decodeHostnameCid(url.hostname),\\n        cid = _this$decodeHostnameC2.cid,\\n        ipnsIdentifier = _this$decodeHostnameC2.ipnsIdentifier,\\n        protocol = _this$decodeHostnameC2.protocol;\\n\\n    if (protocol == null && cid == null && ipnsIdentifier == null) {\\n      var _this$decodePathnameC2 = this.decodePathnameCid(url.pathname),\\n          cid = _this$decodePathnameC2.cid,\\n          ipnsIdentifier = _this$decodePathnameC2.ipnsIdentifier,\\n          protocol = _this$decodePathnameC2.protocol;\\n    }\\n\\n    return {\\n      cid: cid,\\n      ipnsIdentifier: ipnsIdentifier,\\n      protocol: protocol\\n    };\\n  };\\n\\n  IpfsBundle.prototype.decodePathnameCid = function (pathname) {\\n    if (pathname === undefined || pathname == null) {\\n      return {\\n        cid: null,\\n        ipnsIdentifier: null,\\n        protocol: null\\n      };\\n    }\\n\\n    if (typeof pathname !== 'string') {\\n      throw new Error('Unable to decode CID. \\\"string\\\" expected...');\\n    }\\n\\n    pathname = pathname.trim() === '' ? null : pathname.trim();\\n\\n    if (pathname == null || pathname === '/') {\\n      return {\\n        cid: null,\\n        ipnsIdentifier: null,\\n        protocol: null\\n      };\\n    }\\n\\n    var identifier = null;\\n    var protocol = null; // Parse\\n\\n    var members = pathname.trim().split('/');\\n\\n    for (var i = 0; i < members.length; i++) {\\n      // Ignore\\n      if (members[i].trim() === '') {\\n        continue;\\n      } // First non empty member\\n\\n\\n      if (protocol == null) {\\n        protocol = members[i];\\n        continue;\\n      } // Second non empty member\\n\\n\\n      if (identifier == null) {\\n        identifier = members[i];\\n        break;\\n      } // Nothing to process\\n\\n\\n      break;\\n    }\\n\\n    if (protocol == null || identifier == null) {\\n      return {\\n        cid: null,\\n        ipnsIdentifier: null,\\n        protocol: null\\n      };\\n    }\\n\\n    if (protocol !== 'ipfs' && protocol !== 'ipns') {\\n      return {\\n        cid: null,\\n        ipnsIdentifier: null,\\n        protocol: null\\n      };\\n    }\\n\\n    var cid = null;\\n    var ipnsIdentifier = null;\\n\\n    if (protocol === 'ipns') {\\n      ipnsIdentifier = identifier;\\n    } else if (protocol === 'ipfs' && this.isCid(identifier)) {\\n      cid = identifier;\\n    } else {\\n      protocol = null;\\n    }\\n\\n    return {\\n      cid: cid,\\n      ipnsIdentifier: ipnsIdentifier,\\n      protocol: protocol\\n    };\\n  };\\n\\n  IpfsBundle.prototype.decodeHostnameCid = function (hostname) {\\n    if (hostname === undefined || hostname == null) {\\n      return {\\n        cid: null,\\n        ipnsIdentifier: null,\\n        protocol: null\\n      };\\n    }\\n\\n    if (typeof hostname !== 'string') {\\n      throw new Error('Unable to decode CID. \\\"string\\\" expected...');\\n    }\\n\\n    hostname = hostname.trim() === '' ? null : hostname.trim();\\n\\n    if (hostname == null) {\\n      return {\\n        cid: null,\\n        ipnsIdentifier: null,\\n        protocol: null\\n      };\\n    }\\n\\n    var identifier = null;\\n    var protocol = null; // Parse\\n\\n    var members = hostname.trim().split('.');\\n\\n    for (var i = 0; i < members.length; i++) {\\n      // Ignore\\n      if (members[i].trim() === '') {\\n        continue;\\n      } // First non empty member\\n\\n\\n      if (identifier == null) {\\n        identifier = members[i];\\n        continue;\\n      } // Second non empty member\\n\\n\\n      if (protocol == null) {\\n        protocol = members[i];\\n        break;\\n      } // Nothing to process\\n\\n\\n      break;\\n    }\\n\\n    if (protocol == null || identifier == null) {\\n      return {\\n        cid: null,\\n        ipnsIdentifier: null,\\n        protocol: null\\n      };\\n    }\\n\\n    if (protocol !== 'ipfs' && protocol !== 'ipns') {\\n      return {\\n        cid: null,\\n        ipnsIdentifier: null,\\n        protocol: null\\n      };\\n    }\\n\\n    var cid = null;\\n    var ipnsIdentifier = null;\\n\\n    if (protocol === 'ipns') {\\n      ipnsIdentifier = identifier;\\n    } else if (protocol === 'ipfs' && this.isCid(identifier)) {\\n      cid = identifier;\\n    } else {\\n      protocol = null;\\n    }\\n\\n    return {\\n      cid: cid,\\n      ipnsIdentifier: ipnsIdentifier,\\n      protocol: protocol\\n    };\\n  };\\n\\n  IpfsBundle.prototype.isCid = function (cid) {\\n    try {\\n      var newCid = new _cids[\\\"default\\\"](cid);\\n      return _cids[\\\"default\\\"].isCID(newCid);\\n    } catch (error) {\\n      return false;\\n    }\\n  };\\n\\n  IpfsBundle.prototype.cidToBase58CidV0 = function (cid, log) {\\n    return this.convertCidToBase58CidV0(cid, log).toString();\\n  };\\n\\n  IpfsBundle.prototype.convertCidToBase58CidV0 = function (cid, log) {\\n    var cidv0 = new _cids[\\\"default\\\"](cid);\\n\\n    if (cidv0.version === 1) {\\n      var converted = new _cids[\\\"default\\\"](0, dagPb, cidv0.multihash, 'base58btc'); // Log\\n\\n      if (log) {\\n        this.getLogger().info(\\\"Converted:\\\\n '\\\".concat(cidv0.codec, \\\"' \\\\\\\"cidv1\\\\\\\" (\\\").concat(cidv0.multibaseName, \\\"): \\\").concat(cidAnalyser).concat(cidv0, \\\"\\\\n to '\\\").concat(converted.codec, \\\"' \\\\\\\"cidv0\\\\\\\" (\\\").concat(converted.multibaseName, \\\"): \\\").concat(cidAnalyser).concat(converted));\\n      }\\n\\n      return converted;\\n    } // Convert\\n\\n\\n    if (cidv0.codec !== dagPb || cidv0.multibaseName !== 'base58btc') {\\n      cidv0 = this.convertCidToCid(cid, 0, dagPb, 'base58btc', log);\\n    }\\n\\n    return cidv0;\\n  };\\n\\n  IpfsBundle.prototype.cidToCidV1 = function (cid, protocol, log) {\\n    return this.convertCidToCidV1(cid, protocol, log).toString();\\n  };\\n\\n  IpfsBundle.prototype.convertCidToCidV1 = function (cid, protocol, log) {\\n    var cidv1 = new _cids[\\\"default\\\"](cid);\\n    var codec = protocol !== undefined && protocol !== null ? protocol === 'ipns' ? libp2pKey : dagPb : dagPb;\\n    var multibasename = codec === libp2pKey ? 'base36' : 'base32'; // Convert cidv0\\n\\n    if (cidv1.version === 0) {\\n      var converted = new _cids[\\\"default\\\"](1, codec, cidv1.multihash, multibasename);\\n\\n      if (log) {\\n        this.getLogger().info(\\\"Converted:\\\\n '\\\".concat(cidv1.codec, \\\"' \\\\\\\"cidv0\\\\\\\" (\\\").concat(cidv1.multibaseName, \\\"): \\\").concat(cidAnalyser).concat(cidv1, \\\"\\\\n to '\\\").concat(converted.codec, \\\"' \\\\\\\"cidv1\\\\\\\" (\\\").concat(converted.multibaseName, \\\"): \\\").concat(cidAnalyser).concat(converted));\\n      }\\n\\n      return converted;\\n    } // Convert\\n\\n\\n    if (cidv1.codec !== codec || cidv1.multibaseName !== multibasename) {\\n      cidv1 = this.convertCidToCid(cid, 1, codec, multibasename, log);\\n    }\\n\\n    return cidv1;\\n  };\\n\\n  IpfsBundle.prototype.cidToLibp2pKeyCidV1 = function (cid, multibaseName, log) {\\n    return this.convertCidToCid(cid, 1, 'libp2p-key', multibaseName, log).toString();\\n  };\\n\\n  IpfsBundle.prototype.convertCidToCid = function (cid, version, codec, multibaseName, log) {\\n    cid = new _cids[\\\"default\\\"](cid);\\n\\n    if (cid.version === version && cid.codec === codec && cid.multibaseName === multibaseName) {\\n      return cid;\\n    }\\n\\n    var converted = new _cids[\\\"default\\\"](version, codec, cid.multihash, multibaseName);\\n\\n    if (log) {\\n      this.getLogger().info(\\\"Converted:\\\\n'\\\".concat(cid.codec, \\\"' \\\\\\\"cidv\\\").concat(cid.version, \\\"\\\\\\\" (\\\").concat(cid.multibaseName, \\\"): \\\").concat(cidAnalyser).concat(cid, \\\"\\\\nto '\\\").concat(codec, \\\"' \\\\\\\"cidv\\\").concat(converted.version, \\\"\\\\\\\" (\\\").concat(multibaseName, \\\"): \\\").concat(cidAnalyser).concat(converted));\\n    }\\n\\n    return converted;\\n  };\\n\\n  IpfsBundle.prototype.Base64ToUint8Array = function (b64) {\\n    return Base64Binary.decode(b64);\\n  }; // https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string\\n\\n\\n  IpfsBundle.prototype.Uint8ArrayToBase64 = function (uint8) {\\n    var CHUNK_SIZE = 0x8000; //arbitrary number\\n\\n    var index = 0;\\n    var length = uint8.length;\\n    var str = '';\\n    var slice;\\n\\n    while (index < length) {\\n      slice = uint8.subarray(index, Math.min(index + CHUNK_SIZE, length));\\n      str += String.fromCharCode.apply(null, slice);\\n      index += CHUNK_SIZE;\\n    }\\n\\n    return btoa(str);\\n  }; // String to uint array\\n\\n\\n  IpfsBundle.prototype.StringToUint8Array = function (string) {\\n    var escstr = encodeURIComponent(string);\\n    var binstr = escstr.replace(/%([0-9A-F]{2})/g, function (match, p1) {\\n      return String.fromCharCode('0x' + p1);\\n    });\\n    var ua = new Uint8Array(binstr.length);\\n    Array.prototype.forEach.call(binstr, function (ch, i) {\\n      ua[i] = ch.charCodeAt(0);\\n    });\\n    return ua;\\n  }; // http://www.onicos.com/staff/iz/amuse/javascript/expert/utf.txt\\n\\n  /*\\n   * utf.js - UTF-8 <=> UTF-16 convertion\\n   *\\n   * Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>\\n   * Version: 1.0\\n   * LastModified: Dec 25 1999\\n   * This library is free.  You can redistribute it and/or modify it.\\n   */\\n\\n\\n  IpfsBundle.prototype.Utf8ArrayToStr = function (array) {\\n    var c, char2, char3;\\n    var out = '';\\n    var len = array.length;\\n    var i = 0;\\n\\n    while (i < len) {\\n      c = array[i++];\\n\\n      switch (c >> 4) {\\n        case 0:\\n        case 1:\\n        case 2:\\n        case 3:\\n        case 4:\\n        case 5:\\n        case 6:\\n        case 7:\\n          // 0xxxxxxx\\n          out += String.fromCharCode(c);\\n          break;\\n\\n        case 12:\\n        case 13:\\n          // 110x xxxx   10xx xxxx\\n          char2 = array[i++];\\n          out += String.fromCharCode((c & 0x1f) << 6 | char2 & 0x3f);\\n          break;\\n\\n        case 14:\\n          // 1110 xxxx  10xx xxxx  10xx xxxx\\n          char2 = array[i++];\\n          char3 = array[i++];\\n          out += String.fromCharCode((c & 0x0f) << 12 | (char2 & 0x3f) << 6 | (char3 & 0x3f) << 0);\\n          break;\\n      }\\n    }\\n\\n    return out;\\n  };\\n\\n  module.exports = {\\n    IpfsBundle: IpfsBundle\\n  };\\n})();\\n\\n},{\\\"./ens-library\\\":97,\\\"./ethereum-library\\\":98,\\\"./ipfs-library\\\":100,\\\"./ipfs-loader\\\":101,\\\"./ipfs-url\\\":102,\\\"@babel/runtime/helpers/asyncToGenerator\\\":2,\\\"@babel/runtime/helpers/interopRequireDefault\\\":3,\\\"@babel/runtime/regenerator\\\":4,\\\"cids\\\":14,\\\"whatwg-url\\\":86,\\\"window-or-global\\\":96}],100:[function(require,module,exports){\\n(function (Buffer){\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nvar _regenerator = _interopRequireDefault(require(\\\"@babel/runtime/regenerator\\\"));\\n\\nvar _asyncToGenerator2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/asyncToGenerator\\\"));\\n\\nvar _asyncIterator2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/asyncIterator\\\"));\\n\\nvar _ipfsProvider = require(\\\"ipfs-provider\\\");\\n\\nvar _windowOrGlobal = _interopRequireDefault(require(\\\"window-or-global\\\"));\\n\\n(function () {\\n  'use strict';\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n\\n  var name = 'ipfs-library';\\n  var httpClient = _ipfsProvider.providers.httpClient,\\n      windowIpfs = _ipfsProvider.providers.windowIpfs;\\n  /*\\n   * https://github.com/ipfs/js-ipfs/tree/master/docs/core-api\\n   **/\\n\\n  var IpfsLibrary = function IpfsLibrary(ipfsBundle) {\\n    this.ipfsBundle = ipfsBundle;\\n    this.ipfsLoader = ipfsBundle.ipfsLoader;\\n  };\\n\\n  IpfsLibrary.prototype.getLogger = function () {\\n    return this.ipfsBundle.getLogger();\\n  };\\n\\n  IpfsLibrary.prototype.loadIpfsHttpClient = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee() {\\n    return _regenerator[\\\"default\\\"].wrap(function _callee$(_context) {\\n      while (1) {\\n        switch (_context.prev = _context.next) {\\n          case 0:\\n            if (!(typeof _windowOrGlobal[\\\"default\\\"].IpfsHttpClient === 'undefined')) {\\n              _context.next = 12;\\n              break;\\n            }\\n\\n            _context.prev = 1;\\n            _context.next = 4;\\n            return this.ipfsLoader.loadIpfsHttpLibrary();\\n\\n          case 4:\\n            if (!(typeof _windowOrGlobal[\\\"default\\\"].IpfsHttpClient !== 'undefined')) {\\n              _context.next = 6;\\n              break;\\n            }\\n\\n            return _context.abrupt(\\\"return\\\");\\n\\n          case 6:\\n            _context.next = 11;\\n            break;\\n\\n          case 8:\\n            _context.prev = 8;\\n            _context.t0 = _context[\\\"catch\\\"](1);\\n            this.getLogger().error(_context.t0);\\n\\n          case 11:\\n            throw new Error('Unavailable IPFS HTTP Client library...');\\n\\n          case 12:\\n          case \\\"end\\\":\\n            return _context.stop();\\n        }\\n      }\\n    }, _callee, this, [[1, 8]]);\\n  })); // Default\\n\\n  IpfsLibrary.prototype.getDefaultIpfs = /*#__PURE__*/function () {\\n    var _ref2 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee2(apiUrl) {\\n      var _yield$this$getWindow, ipfs, provider, _yield$this$getHttpIp, _ipfs, _provider;\\n\\n      return _regenerator[\\\"default\\\"].wrap(function _callee2$(_context2) {\\n        while (1) {\\n          switch (_context2.prev = _context2.next) {\\n            case 0:\\n              _context2.prev = 0;\\n              _context2.next = 3;\\n              return this.getWindowIpfs();\\n\\n            case 3:\\n              _yield$this$getWindow = _context2.sent;\\n              ipfs = _yield$this$getWindow.ipfs;\\n              provider = _yield$this$getWindow.provider;\\n\\n              if (!(ipfs !== null)) {\\n                _context2.next = 8;\\n                break;\\n              }\\n\\n              return _context2.abrupt(\\\"return\\\", {\\n                ipfs: ipfs,\\n                provider: provider\\n              });\\n\\n            case 8:\\n              _context2.next = 12;\\n              break;\\n\\n            case 10:\\n              _context2.prev = 10;\\n              _context2.t0 = _context2[\\\"catch\\\"](0);\\n\\n            case 12:\\n              apiUrl = apiUrl === undefined || apiUrl == null || apiUrl.toString().trim() === '' ? null : apiUrl;\\n\\n              if (!(apiUrl == null)) {\\n                _context2.next = 15;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS API URL...');\\n\\n            case 15:\\n              _context2.prev = 15;\\n              _context2.next = 18;\\n              return this.getHttpIpfs(apiUrl);\\n\\n            case 18:\\n              _yield$this$getHttpIp = _context2.sent;\\n              _ipfs = _yield$this$getHttpIp.ipfs;\\n              _provider = _yield$this$getHttpIp.provider;\\n\\n              if (!(_ipfs !== null)) {\\n                _context2.next = 23;\\n                break;\\n              }\\n\\n              return _context2.abrupt(\\\"return\\\", {\\n                ipfs: _ipfs,\\n                provider: _provider\\n              });\\n\\n            case 23:\\n              _context2.next = 27;\\n              break;\\n\\n            case 25:\\n              _context2.prev = 25;\\n              _context2.t1 = _context2[\\\"catch\\\"](15);\\n\\n            case 27:\\n              throw new Error('Unable to retrieve IPFS Companion and IPFS API URL...');\\n\\n            case 28:\\n            case \\\"end\\\":\\n              return _context2.stop();\\n          }\\n        }\\n      }, _callee2, this, [[0, 10], [15, 25]]);\\n    }));\\n\\n    return function (_x) {\\n      return _ref2.apply(this, arguments);\\n    };\\n  }(); // IPFS companion\\n\\n\\n  IpfsLibrary.prototype.getWindowIpfs = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee3() {\\n    var _yield$getIpfs, ipfs, provider;\\n\\n    return _regenerator[\\\"default\\\"].wrap(function _callee3$(_context3) {\\n      while (1) {\\n        switch (_context3.prev = _context3.next) {\\n          case 0:\\n            _context3.prev = 0;\\n            this.getLogger().info('Processing connection to IPFS Companion...');\\n            _context3.next = 4;\\n            return (0, _ipfsProvider.getIpfs)({\\n              providers: [windowIpfs()]\\n            });\\n\\n          case 4:\\n            _yield$getIpfs = _context3.sent;\\n            ipfs = _yield$getIpfs.ipfs;\\n            provider = _yield$getIpfs.provider;\\n            return _context3.abrupt(\\\"return\\\", {\\n              ipfs: ipfs,\\n              provider: provider\\n            });\\n\\n          case 10:\\n            _context3.prev = 10;\\n            _context3.t0 = _context3[\\\"catch\\\"](0);\\n            this.getLogger().error(_context3.t0);\\n\\n          case 13:\\n            throw new Error('Unreachable IPFS Companion...');\\n\\n          case 14:\\n          case \\\"end\\\":\\n            return _context3.stop();\\n        }\\n      }\\n    }, _callee3, this, [[0, 10]]);\\n  })); // ipfs-http-client\\n\\n  IpfsLibrary.prototype.getHttpIpfs = /*#__PURE__*/function () {\\n    var _ref4 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee4(apiUrl) {\\n      var protocol, port, _yield$getIpfs2, ipfs, provider;\\n\\n      return _regenerator[\\\"default\\\"].wrap(function _callee4$(_context4) {\\n        while (1) {\\n          switch (_context4.prev = _context4.next) {\\n            case 0:\\n              apiUrl = apiUrl === undefined || apiUrl == null || apiUrl.toString().trim() === '' ? null : apiUrl;\\n\\n              if (!(apiUrl == null)) {\\n                _context4.next = 3;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS API URL...');\\n\\n            case 3:\\n              _context4.prev = 3;\\n\\n              if (!(typeof _windowOrGlobal[\\\"default\\\"].IpfsHttpClient === 'undefined')) {\\n                _context4.next = 7;\\n                break;\\n              }\\n\\n              _context4.next = 7;\\n              return this.loadIpfsHttpClient();\\n\\n            case 7:\\n              this.getLogger().info(\\\"Processing connection to IPFS API URL:\\\\n \\\".concat(apiUrl));\\n              protocol = apiUrl.protocol.slice(0, -1);\\n              port = apiUrl.port;\\n\\n              if (port === undefined || port == null || port.trim() === '') {\\n                port = 443;\\n\\n                if (protocol === 'http') {\\n                  port = 80;\\n                }\\n              }\\n\\n              _context4.next = 13;\\n              return (0, _ipfsProvider.getIpfs)({\\n                providers: [httpClient({\\n                  apiAddress: {\\n                    protocol: protocol,\\n                    host: apiUrl.hostname,\\n                    port: port,\\n                    timeout: '4m'\\n                  }\\n                })]\\n              });\\n\\n            case 13:\\n              _yield$getIpfs2 = _context4.sent;\\n              ipfs = _yield$getIpfs2.ipfs;\\n              provider = _yield$getIpfs2.provider;\\n              return _context4.abrupt(\\\"return\\\", {\\n                ipfs: ipfs,\\n                provider: \\\"\\\".concat(provider, \\\", \\\").concat(apiUrl)\\n              });\\n\\n            case 19:\\n              _context4.prev = 19;\\n              _context4.t0 = _context4[\\\"catch\\\"](3);\\n              this.getLogger().error(_context4.t0);\\n\\n            case 22:\\n              throw new Error('Unreachable IPFS API URL...');\\n\\n            case 23:\\n            case \\\"end\\\":\\n              return _context4.stop();\\n          }\\n        }\\n      }, _callee4, this, [[3, 19]]);\\n    }));\\n\\n    return function (_x2) {\\n      return _ref4.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsLibrary.prototype.add = /*#__PURE__*/function () {\\n    var _ref5 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee5(client, content) {\\n      var buffer, added;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee5$(_context5) {\\n        while (1) {\\n          switch (_context5.prev = _context5.next) {\\n            case 0:\\n              if (!(client === undefined || client == null)) {\\n                _context5.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS provider...');\\n\\n            case 2:\\n              if (!(content === undefined || content == null)) {\\n                _context5.next = 4;\\n                break;\\n              }\\n\\n              throw new Error('Undefined content...');\\n\\n            case 4:\\n              if (!client.enable) {\\n                _context5.next = 8;\\n                break;\\n              }\\n\\n              _context5.next = 7;\\n              return client.enable({\\n                commands: ['add']\\n              });\\n\\n            case 7:\\n              client = _context5.sent;\\n\\n            case 8:\\n              if (!(client !== undefined && client.add !== undefined)) {\\n                _context5.next = 17;\\n                break;\\n              }\\n\\n              // Process\\n              buffer = Buffer.from(content);\\n              this.getLogger().info('Processing IPFS add...'); // 1 - https://github.com/ipfs/go-ipfs/issues/5683\\n              // default chunker: \\\"size-262144\\\"\\n              // chunker: \\\"rabin-262144-524288-1048576\\\"\\n              // 2 - TODO: small content generates a wrong cid when cidVersion: 1 is set:\\n              // Not a 'dag-pb' but a 'raw' multicodec instead\\n              // We generate a V0 and convert it to a V1\\n              // https://github.com/xmaysonnave/tiddlywiki-ipfs/issues/14\\n\\n              _context5.next = 13;\\n              return client.add(buffer, {\\n                chunker: 'rabin-262144-524288-1048576',\\n                cidVersion: 0,\\n                hashAlg: 'sha2-256',\\n                pin: false,\\n                rawLeaves: true\\n              });\\n\\n            case 13:\\n              added = _context5.sent;\\n\\n              if (!(added === undefined || added == null || added.path === undefined || added.path == null || added.size === undefined || added.size == null)) {\\n                _context5.next = 16;\\n                break;\\n              }\\n\\n              throw new Error('IPFS client returned an unknown result...');\\n\\n            case 16:\\n              return _context5.abrupt(\\\"return\\\", {\\n                hash: this.ipfsBundle.cidToCidV1(added.path, 'ipfs', true),\\n                size: added.size\\n              });\\n\\n            case 17:\\n              throw new Error('Undefined IPFS add...');\\n\\n            case 18:\\n            case \\\"end\\\":\\n              return _context5.stop();\\n          }\\n        }\\n      }, _callee5, this);\\n    }));\\n\\n    return function (_x3, _x4) {\\n      return _ref5.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsLibrary.prototype.pin = /*#__PURE__*/function () {\\n    var _ref6 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee6(client, cid) {\\n      var result;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee6$(_context6) {\\n        while (1) {\\n          switch (_context6.prev = _context6.next) {\\n            case 0:\\n              if (!(client === undefined || client == null)) {\\n                _context6.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS provider...');\\n\\n            case 2:\\n              cid = cid == null || cid === undefined || cid.trim() === '' ? null : cid.trim();\\n\\n              if (!(cid == null)) {\\n                _context6.next = 5;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS identifier...');\\n\\n            case 5:\\n              if (!client.enable) {\\n                _context6.next = 9;\\n                break;\\n              }\\n\\n              _context6.next = 8;\\n              return client.enable({\\n                commands: ['pin']\\n              });\\n\\n            case 8:\\n              client = _context6.sent;\\n\\n            case 9:\\n              if (!(client !== undefined && client.pin !== undefined && client.pin.add !== undefined)) {\\n                _context6.next = 15;\\n                break;\\n              }\\n\\n              this.getLogger().info('Processing IPFS pin add...');\\n              _context6.next = 13;\\n              return client.pin.add(cid, {\\n                recursive: true\\n              });\\n\\n            case 13:\\n              result = _context6.sent;\\n              return _context6.abrupt(\\\"return\\\", result);\\n\\n            case 15:\\n              throw new Error('Undefined IPFS pin add...');\\n\\n            case 16:\\n            case \\\"end\\\":\\n              return _context6.stop();\\n          }\\n        }\\n      }, _callee6, this);\\n    }));\\n\\n    return function (_x5, _x6) {\\n      return _ref6.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsLibrary.prototype.unpin = /*#__PURE__*/function () {\\n    var _ref7 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee7(client, cid) {\\n      var result;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee7$(_context7) {\\n        while (1) {\\n          switch (_context7.prev = _context7.next) {\\n            case 0:\\n              if (!(client === undefined || client == null)) {\\n                _context7.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS provider...');\\n\\n            case 2:\\n              cid = cid == null || cid === undefined || cid.trim() === '' ? null : cid.trim();\\n\\n              if (!(cid == null)) {\\n                _context7.next = 5;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS identifier...');\\n\\n            case 5:\\n              if (!client.enable) {\\n                _context7.next = 9;\\n                break;\\n              }\\n\\n              _context7.next = 8;\\n              return client.enable({\\n                commands: ['pin']\\n              });\\n\\n            case 8:\\n              client = _context7.sent;\\n\\n            case 9:\\n              if (!(client !== undefined && client.pin !== undefined && client.pin.rm !== undefined)) {\\n                _context7.next = 15;\\n                break;\\n              }\\n\\n              this.getLogger().info('Processing IPFS pin rm...');\\n              _context7.next = 13;\\n              return client.pin.rm(cid, {\\n                recursive: true\\n              });\\n\\n            case 13:\\n              result = _context7.sent;\\n              return _context7.abrupt(\\\"return\\\", result);\\n\\n            case 15:\\n              throw new Error('Undefined IPFS pin rm');\\n\\n            case 16:\\n            case \\\"end\\\":\\n              return _context7.stop();\\n          }\\n        }\\n      }, _callee7, this);\\n    }));\\n\\n    return function (_x7, _x8) {\\n      return _ref7.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsLibrary.prototype.publish = /*#__PURE__*/function () {\\n    var _ref8 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee8(client, ipnsName, cid) {\\n      var result;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee8$(_context8) {\\n        while (1) {\\n          switch (_context8.prev = _context8.next) {\\n            case 0:\\n              if (!(client === undefined || client == null)) {\\n                _context8.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS provider...');\\n\\n            case 2:\\n              cid = cid == null || cid === undefined || cid.trim() === '' ? null : cid.trim();\\n\\n              if (!(cid == null)) {\\n                _context8.next = 5;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS identifier...');\\n\\n            case 5:\\n              ipnsName = ipnsName == null || ipnsName === undefined || ipnsName.trim() === '' ? null : ipnsName.trim();\\n\\n              if (!(ipnsName == null)) {\\n                _context8.next = 8;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPNS name...');\\n\\n            case 8:\\n              if (!client.enable) {\\n                _context8.next = 12;\\n                break;\\n              }\\n\\n              _context8.next = 11;\\n              return client.enable({\\n                commands: ['name']\\n              });\\n\\n            case 11:\\n              client = _context8.sent;\\n\\n            case 12:\\n              if (!(client !== undefined && client.name !== undefined && client.name.publish !== undefined)) {\\n                _context8.next = 20;\\n                break;\\n              }\\n\\n              this.getLogger().info('Processing IPFS name publish...');\\n              _context8.next = 16;\\n              return client.name.publish(cid, {\\n                resolve: true,\\n                key: ipnsName,\\n                allowOffline: false\\n              });\\n\\n            case 16:\\n              result = _context8.sent;\\n\\n              if (!(result === undefined || result == null)) {\\n                _context8.next = 19;\\n                break;\\n              }\\n\\n              throw new Error('IPFS client returned an unknown result...');\\n\\n            case 19:\\n              return _context8.abrupt(\\\"return\\\", {\\n                name: result.name,\\n                value: result.value\\n              });\\n\\n            case 20:\\n              throw new Error('Undefined IPFS name publish...');\\n\\n            case 21:\\n            case \\\"end\\\":\\n              return _context8.stop();\\n          }\\n        }\\n      }, _callee8, this);\\n    }));\\n\\n    return function (_x9, _x10, _x11) {\\n      return _ref8.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsLibrary.prototype.resolve = /*#__PURE__*/function () {\\n    var _ref9 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee9(client, id) {\\n      var resolvedSource, lastResult, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, resolved;\\n\\n      return _regenerator[\\\"default\\\"].wrap(function _callee9$(_context9) {\\n        while (1) {\\n          switch (_context9.prev = _context9.next) {\\n            case 0:\\n              if (!(client === undefined || client == null)) {\\n                _context9.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS provider...');\\n\\n            case 2:\\n              id = id == null || id === undefined || id.trim() === '' ? null : id.trim();\\n\\n              if (!(id == null)) {\\n                _context9.next = 5;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPNS key...');\\n\\n            case 5:\\n              if (!client.enable) {\\n                _context9.next = 9;\\n                break;\\n              }\\n\\n              _context9.next = 8;\\n              return client.enable({\\n                commands: ['name']\\n              });\\n\\n            case 8:\\n              client = _context9.sent;\\n\\n            case 9:\\n              if (!(client !== undefined && client.name !== undefined && client.name.resolve !== undefined)) {\\n                _context9.next = 51;\\n                break;\\n              }\\n\\n              this.getLogger().info('Processing IPFS name resolve...');\\n              _context9.next = 13;\\n              return client.name.resolve(id, {\\n                nocache: false,\\n                recursive: true\\n              });\\n\\n            case 13:\\n              resolvedSource = _context9.sent;\\n              // https://gist.github.com/alanshaw/04b2ddc35a6fff25c040c011ac6acf26\\n              lastResult = null;\\n              _iteratorNormalCompletion = true;\\n              _didIteratorError = false;\\n              _context9.prev = 17;\\n              _iterator = (0, _asyncIterator2[\\\"default\\\"])(resolvedSource);\\n\\n            case 19:\\n              _context9.next = 21;\\n              return _iterator.next();\\n\\n            case 21:\\n              _step = _context9.sent;\\n              _iteratorNormalCompletion = _step.done;\\n              _context9.next = 25;\\n              return _step.value;\\n\\n            case 25:\\n              _value = _context9.sent;\\n\\n              if (_iteratorNormalCompletion) {\\n                _context9.next = 32;\\n                break;\\n              }\\n\\n              resolved = _value;\\n              lastResult = resolved;\\n\\n            case 29:\\n              _iteratorNormalCompletion = true;\\n              _context9.next = 19;\\n              break;\\n\\n            case 32:\\n              _context9.next = 38;\\n              break;\\n\\n            case 34:\\n              _context9.prev = 34;\\n              _context9.t0 = _context9[\\\"catch\\\"](17);\\n              _didIteratorError = true;\\n              _iteratorError = _context9.t0;\\n\\n            case 38:\\n              _context9.prev = 38;\\n              _context9.prev = 39;\\n\\n              if (!(!_iteratorNormalCompletion && _iterator[\\\"return\\\"] != null)) {\\n                _context9.next = 43;\\n                break;\\n              }\\n\\n              _context9.next = 43;\\n              return _iterator[\\\"return\\\"]();\\n\\n            case 43:\\n              _context9.prev = 43;\\n\\n              if (!_didIteratorError) {\\n                _context9.next = 46;\\n                break;\\n              }\\n\\n              throw _iteratorError;\\n\\n            case 46:\\n              return _context9.finish(43);\\n\\n            case 47:\\n              return _context9.finish(38);\\n\\n            case 48:\\n              if (!(lastResult == null || lastResult === undefined)) {\\n                _context9.next = 50;\\n                break;\\n              }\\n\\n              throw new Error('IPFS client returned an unknown result...');\\n\\n            case 50:\\n              return _context9.abrupt(\\\"return\\\", lastResult);\\n\\n            case 51:\\n              throw new Error('Undefined IPFS name resolve...');\\n\\n            case 52:\\n            case \\\"end\\\":\\n              return _context9.stop();\\n          }\\n        }\\n      }, _callee9, this, [[17, 34, 38, 48], [39,, 43, 47]]);\\n    }));\\n\\n    return function (_x12, _x13) {\\n      return _ref9.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsLibrary.prototype.getKeys = /*#__PURE__*/function () {\\n    var _ref10 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee10(client) {\\n      var result;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee10$(_context10) {\\n        while (1) {\\n          switch (_context10.prev = _context10.next) {\\n            case 0:\\n              if (!(client === undefined || client == null)) {\\n                _context10.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS provider...');\\n\\n            case 2:\\n              if (!client.enable) {\\n                _context10.next = 6;\\n                break;\\n              }\\n\\n              _context10.next = 5;\\n              return client.enable({\\n                commands: ['key']\\n              });\\n\\n            case 5:\\n              client = _context10.sent;\\n\\n            case 6:\\n              if (!(client !== undefined && client.key !== undefined && client.key.list !== undefined)) {\\n                _context10.next = 14;\\n                break;\\n              }\\n\\n              this.getLogger().info('Processing IPFS key list...');\\n              _context10.next = 10;\\n              return client.key.list();\\n\\n            case 10:\\n              result = _context10.sent;\\n\\n              if (!(result === undefined || result == null || Array.isArray(result) === false)) {\\n                _context10.next = 13;\\n                break;\\n              }\\n\\n              throw new Error('IPFS client returned an unknown result...');\\n\\n            case 13:\\n              return _context10.abrupt(\\\"return\\\", result);\\n\\n            case 14:\\n              throw new Error('Undefined IPFS key list...');\\n\\n            case 15:\\n            case \\\"end\\\":\\n              return _context10.stop();\\n          }\\n        }\\n      }, _callee10, this);\\n    }));\\n\\n    return function (_x14) {\\n      return _ref10.apply(this, arguments);\\n    };\\n  }(); // Only rsa is supported yet...\\n  // https://github.com/ipfs/interface-js-ipfs-core/blob/master/SPEC/KEY.md#keygen\\n  // https://github.com/libp2p/js-libp2p-crypto/issues/145\\n\\n\\n  IpfsLibrary.prototype.genKey = /*#__PURE__*/function () {\\n    var _ref11 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee11(client, ipnsName) {\\n      var key;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee11$(_context11) {\\n        while (1) {\\n          switch (_context11.prev = _context11.next) {\\n            case 0:\\n              if (!(client === undefined || client == null)) {\\n                _context11.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS provider...');\\n\\n            case 2:\\n              ipnsName = ipnsName == null || ipnsName === undefined || ipnsName.trim() === '' ? null : ipnsName.trim();\\n\\n              if (!(ipnsName == null)) {\\n                _context11.next = 5;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPNS name...');\\n\\n            case 5:\\n              if (!client.enable) {\\n                _context11.next = 9;\\n                break;\\n              }\\n\\n              _context11.next = 8;\\n              return client.enable({\\n                commands: ['key']\\n              });\\n\\n            case 8:\\n              client = _context11.sent;\\n\\n            case 9:\\n              if (!(client !== undefined && client.key !== undefined && client.key.gen !== undefined)) {\\n                _context11.next = 17;\\n                break;\\n              }\\n\\n              this.getLogger().info('Processing IPFS key gen...');\\n              _context11.next = 13;\\n              return client.key.gen(ipnsName, {\\n                type: 'ed25519'\\n              });\\n\\n            case 13:\\n              key = _context11.sent;\\n\\n              if (!(key === undefined || key == null || key.id === undefined || key.id == null)) {\\n                _context11.next = 16;\\n                break;\\n              }\\n\\n              throw new Error('IPFS client returned an unknown result...');\\n\\n            case 16:\\n              return _context11.abrupt(\\\"return\\\", key.id);\\n\\n            case 17:\\n              throw new Error('Undefined IPFS key gen...');\\n\\n            case 18:\\n            case \\\"end\\\":\\n              return _context11.stop();\\n          }\\n        }\\n      }, _callee11, this);\\n    }));\\n\\n    return function (_x15, _x16) {\\n      return _ref11.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsLibrary.prototype.rmKey = /*#__PURE__*/function () {\\n    var _ref12 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee12(client, ipnsName) {\\n      var key;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee12$(_context12) {\\n        while (1) {\\n          switch (_context12.prev = _context12.next) {\\n            case 0:\\n              if (!(client === undefined || client == null)) {\\n                _context12.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS provider...');\\n\\n            case 2:\\n              ipnsName = ipnsName == null || ipnsName === undefined || ipnsName.trim() === '' ? null : ipnsName.trim();\\n\\n              if (!(ipnsName == null)) {\\n                _context12.next = 5;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPNS name...');\\n\\n            case 5:\\n              if (!client.enable) {\\n                _context12.next = 9;\\n                break;\\n              }\\n\\n              _context12.next = 8;\\n              return client.enable({\\n                commands: ['key']\\n              });\\n\\n            case 8:\\n              client = _context12.sent;\\n\\n            case 9:\\n              if (!(client !== undefined && client.key !== undefined && client.key.rm !== undefined)) {\\n                _context12.next = 17;\\n                break;\\n              }\\n\\n              this.getLogger().info('Processing IPFS key rm...');\\n              _context12.next = 13;\\n              return client.key.rm(ipnsName);\\n\\n            case 13:\\n              key = _context12.sent;\\n\\n              if (!(key === undefined || key == null || key.id === undefined || key.id == null)) {\\n                _context12.next = 16;\\n                break;\\n              }\\n\\n              throw new Error('IPFS client returned an unknown result...');\\n\\n            case 16:\\n              return _context12.abrupt(\\\"return\\\", key.id);\\n\\n            case 17:\\n              throw new Error('Undefined IPFS key rm...');\\n\\n            case 18:\\n            case \\\"end\\\":\\n              return _context12.stop();\\n          }\\n        }\\n      }, _callee12, this);\\n    }));\\n\\n    return function (_x17, _x18) {\\n      return _ref12.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsLibrary.prototype.renameKey = /*#__PURE__*/function () {\\n    var _ref13 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee13(client, oldIpnsName, newIpnsName) {\\n      var key, id, was, now, overwrite;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee13$(_context13) {\\n        while (1) {\\n          switch (_context13.prev = _context13.next) {\\n            case 0:\\n              if (!(client === undefined || client == null)) {\\n                _context13.next = 2;\\n                break;\\n              }\\n\\n              throw new Error('Undefined IPFS provider...');\\n\\n            case 2:\\n              oldIpnsName = oldIpnsName == null || oldIpnsName === undefined || oldIpnsName.trim() === '' ? null : oldIpnsName.trim();\\n\\n              if (!(oldIpnsName == null)) {\\n                _context13.next = 5;\\n                break;\\n              }\\n\\n              throw new Error('Undefined Old IPNS name...');\\n\\n            case 5:\\n              newIpnsName = newIpnsName == null || newIpnsName === undefined || newIpnsName.trim() === '' ? null : newIpnsName.trim();\\n\\n              if (!(newIpnsName == null)) {\\n                _context13.next = 8;\\n                break;\\n              }\\n\\n              throw new Error('Undefined New IPNS name...');\\n\\n            case 8:\\n              if (!client.enable) {\\n                _context13.next = 12;\\n                break;\\n              }\\n\\n              _context13.next = 11;\\n              return client.enable({\\n                commands: ['key']\\n              });\\n\\n            case 11:\\n              client = _context13.sent;\\n\\n            case 12:\\n              if (!(client !== undefined && client.key !== undefined && client.key.rename !== undefined)) {\\n                _context13.next = 28;\\n                break;\\n              }\\n\\n              this.getLogger().info('Processing IPFS key rename...');\\n              _context13.next = 16;\\n              return client.key.rename(oldIpnsName, newIpnsName);\\n\\n            case 16:\\n              key = _context13.sent;\\n\\n              if (!(key === undefined || key == null)) {\\n                _context13.next = 19;\\n                break;\\n              }\\n\\n              throw new Error('IPFS client returned an unknown result...');\\n\\n            case 19:\\n              id = null;\\n\\n              if (key.id !== undefined && key.id !== null) {\\n                id = key.id;\\n              }\\n\\n              was = null;\\n\\n              if (key.was !== undefined && key.was !== null) {\\n                was = key.was;\\n              }\\n\\n              now = null;\\n\\n              if (key.now !== undefined && key.now !== null) {\\n                now = key.now;\\n              }\\n\\n              overwrite = null;\\n\\n              if (key.overwrite !== undefined && key.overwrite !== null) {\\n                overwrite = key.overwrite;\\n              }\\n\\n              return _context13.abrupt(\\\"return\\\", {\\n                id: id,\\n                was: was,\\n                now: now,\\n                overwrite: overwrite\\n              });\\n\\n            case 28:\\n              throw new Error('Undefined IPFS key rename...');\\n\\n            case 29:\\n            case \\\"end\\\":\\n              return _context13.stop();\\n          }\\n        }\\n      }, _callee13, this);\\n    }));\\n\\n    return function (_x19, _x20, _x21) {\\n      return _ref13.apply(this, arguments);\\n    };\\n  }();\\n\\n  module.exports = IpfsLibrary;\\n})();\\n\\n}).call(this,require(\\\"buffer\\\").Buffer)\\n},{\\\"@babel/runtime/helpers/asyncIterator\\\":1,\\\"@babel/runtime/helpers/asyncToGenerator\\\":2,\\\"@babel/runtime/helpers/interopRequireDefault\\\":3,\\\"@babel/runtime/regenerator\\\":4,\\\"buffer\\\":8,\\\"ipfs-provider\\\":45,\\\"window-or-global\\\":96}],101:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nvar _regenerator = _interopRequireDefault(require(\\\"@babel/runtime/regenerator\\\"));\\n\\nvar _asyncToGenerator2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/asyncToGenerator\\\"));\\n\\nvar _windowOrGlobal = _interopRequireDefault(require(\\\"window-or-global\\\"));\\n\\n(function () {\\n  'use strict';\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n\\n  var name = 'ipfs-loader';\\n\\n  var IpfsLoader = function IpfsLoader(ipfsBundle) {\\n    this.ipfsBundle = ipfsBundle;\\n  };\\n\\n  IpfsLoader.prototype.getLogger = function () {\\n    return this.ipfsBundle.getLogger();\\n  }; // https://www.srihash.org/\\n\\n\\n  IpfsLoader.prototype.loadTiddlerLibrary = /*#__PURE__*/function () {\\n    var _ref = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee(title, obj, module) {\\n      var tiddler, sourceUri, sourceSri, loaded;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee$(_context) {\\n        while (1) {\\n          switch (_context.prev = _context.next) {\\n            case 0:\\n              if (!(_windowOrGlobal[\\\"default\\\"][obj] === undefined)) {\\n                _context.next = 13;\\n                break;\\n              }\\n\\n              tiddler = $tw.wiki.getTiddler(title);\\n\\n              if (!tiddler) {\\n                _context.next = 12;\\n                break;\\n              }\\n\\n              sourceUri = tiddler.getFieldString('_source_uri');\\n              sourceSri = tiddler.getFieldString('_source_sri');\\n              _context.next = 7;\\n              return this.loadLibrary(title, sourceUri, sourceSri, module);\\n\\n            case 7:\\n              loaded = _context.sent;\\n\\n              if (!(loaded !== undefined && _windowOrGlobal[\\\"default\\\"][obj] !== undefined)) {\\n                _context.next = 11;\\n                break;\\n              }\\n\\n              this.getLogger().info(\\\"Loaded \\\".concat(title, \\\":\\\\n \\\").concat(sourceUri));\\n              return _context.abrupt(\\\"return\\\");\\n\\n            case 11:\\n              throw new Error(\\\"Unable to load Library: \\\".concat(title));\\n\\n            case 12:\\n              throw new Error(\\\"Undefined Library: \\\".concat(title));\\n\\n            case 13:\\n            case \\\"end\\\":\\n              return _context.stop();\\n          }\\n        }\\n      }, _callee, this);\\n    }));\\n\\n    return function (_x, _x2, _x3) {\\n      return _ref.apply(this, arguments);\\n    };\\n  }(); // https://github.com/liriliri/eruda\\n\\n\\n  IpfsLoader.prototype.loadErudaLibrary = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee2() {\\n    return _regenerator[\\\"default\\\"].wrap(function _callee2$(_context2) {\\n      while (1) {\\n        switch (_context2.prev = _context2.next) {\\n          case 0:\\n            if (!(typeof _windowOrGlobal[\\\"default\\\"].eruda === 'undefined')) {\\n              _context2.next = 3;\\n              break;\\n            }\\n\\n            _context2.next = 3;\\n            return this.loadTiddlerLibrary('$:/ipfs/library/eruda', 'eruda', true);\\n\\n          case 3:\\n          case \\\"end\\\":\\n            return _context2.stop();\\n        }\\n      }\\n    }, _callee2, this);\\n  })); // https://github.com/ethers-io/ethers.js/\\n\\n  IpfsLoader.prototype.loadEtherJsLibrary = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee3() {\\n    return _regenerator[\\\"default\\\"].wrap(function _callee3$(_context3) {\\n      while (1) {\\n        switch (_context3.prev = _context3.next) {\\n          case 0:\\n            if (!(typeof _windowOrGlobal[\\\"default\\\"].ethers === 'undefined')) {\\n              _context3.next = 3;\\n              break;\\n            }\\n\\n            _context3.next = 3;\\n            return this.loadTiddlerLibrary('$:/ipfs/library/ethers', 'ethers', true);\\n\\n          case 3:\\n          case \\\"end\\\":\\n            return _context3.stop();\\n        }\\n      }\\n    }, _callee3, this);\\n  })); // https://github.com/ipfs/js-ipfs-http-client\\n\\n  IpfsLoader.prototype.loadIpfsHttpLibrary = /*#__PURE__*/(0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee4() {\\n    return _regenerator[\\\"default\\\"].wrap(function _callee4$(_context4) {\\n      while (1) {\\n        switch (_context4.prev = _context4.next) {\\n          case 0:\\n            if (!(typeof _windowOrGlobal[\\\"default\\\"].IpfsHttpClient === 'undefined')) {\\n              _context4.next = 3;\\n              break;\\n            }\\n\\n            _context4.next = 3;\\n            return this.loadTiddlerLibrary('$:/ipfs/library/ipfs-http-client', 'IpfsHttpClient', true);\\n\\n          case 3:\\n          case \\\"end\\\":\\n            return _context4.stop();\\n        }\\n      }\\n    }, _callee4, this);\\n  }));\\n  /*eslint no-new:\\\"off\\\",no-new-func:\\\"off\\\"*/\\n\\n  IpfsLoader.prototype.supportDynamicImport = function () {\\n    try {\\n      new Function('import(\\\"\\\")');\\n      return true;\\n    } catch (error) {\\n      return false;\\n    }\\n  }; // https://observablehq.com/@bryangingechen/dynamic-import-polyfill\\n\\n\\n  IpfsLoader.prototype.loadLibrary = function (id, url, sri, asModule) {\\n    // Dynamic import\\n    // if (this.supportDynamicImport()) {\\n    //   try {\\n    //     return new Function(`return import(\\\"${url}\\\")`)();\\n    //   } catch (error) {\\n    //     // Ignore\\n    //   }\\n    // }\\n    var self = this;\\n    return new Promise(function (resolve, reject) {\\n      // Process\\n      var script = _windowOrGlobal[\\\"default\\\"].document.createElement('script'); // Functions\\n\\n\\n      var cleanup = function cleanup() {\\n        try {\\n          delete _windowOrGlobal[\\\"default\\\"][id];\\n          script.onerror = null;\\n          script.onload = null;\\n          script.remove();\\n          URL.revokeObjectURL(script.src);\\n          script.src = '';\\n        } catch (error) {\\n          self.getLogger().error(error);\\n        }\\n      };\\n\\n      script.onload = function () {\\n        resolve(_windowOrGlobal[\\\"default\\\"][id]);\\n        cleanup();\\n      };\\n\\n      script.onerror = function () {\\n        reject(new Error(\\\"Failed to load: \\\".concat(url)));\\n        cleanup();\\n      }; // Attributes\\n\\n\\n      if (asModule) {\\n        script.type = 'module';\\n      } else {\\n        script.type = 'text/javascript';\\n      }\\n\\n      script.id = id;\\n      script.async = false;\\n      script.defer = 'defer';\\n\\n      if (sri) {\\n        script.integrity = sri;\\n      }\\n\\n      script.crossOrigin = 'anonymous'; // URL\\n\\n      script.src = url; // Load\\n\\n      _windowOrGlobal[\\\"default\\\"].document.head.appendChild(script);\\n    });\\n  };\\n\\n  IpfsLoader.prototype.isJson = function (content) {\\n    if (content !== undefined && content !== null && typeof content === 'string') {\\n      try {\\n        JSON.parse(content);\\n        return true;\\n      } catch (error) {// Ignore\\n      }\\n    }\\n\\n    return false;\\n  };\\n\\n  IpfsLoader.prototype.xhrToJson = /*#__PURE__*/function () {\\n    var _ref5 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee5(url) {\\n      return _regenerator[\\\"default\\\"].wrap(function _callee5$(_context5) {\\n        while (1) {\\n          switch (_context5.prev = _context5.next) {\\n            case 0:\\n              _context5.next = 2;\\n              return this.httpGet(url, 'post', 'json');\\n\\n            case 2:\\n              return _context5.abrupt(\\\"return\\\", _context5.sent);\\n\\n            case 3:\\n            case \\\"end\\\":\\n              return _context5.stop();\\n          }\\n        }\\n      }, _callee5, this);\\n    }));\\n\\n    return function (_x4) {\\n      return _ref5.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsLoader.prototype.xhrToUint8Array = function (url) {\\n    return this.httpGet(url, 'get', 'arraybuffer');\\n  };\\n\\n  IpfsLoader.prototype.httpGet = function (url, method, responseType) {\\n    var self = this;\\n    var xhr = new XMLHttpRequest();\\n    return new Promise(function (resolve, reject) {\\n      xhr.responseType = responseType;\\n\\n      xhr.onreadystatechange = function () {\\n        if (xhr.readyState === 4 && xhr.status !== 0) {\\n          if (xhr.status >= 300) {\\n            reject(new Error($tw.language.getString('NetworkError/XMLHttpRequest')));\\n            return;\\n          }\\n\\n          try {\\n            var result = null;\\n\\n            if (responseType === 'arraybuffer') {\\n              result = new Uint8Array(this.response);\\n            } else {\\n              result = this.response;\\n            }\\n\\n            self.getLogger().info(\\\"[\\\".concat(xhr.status, \\\"] Loaded:\\\\n \\\").concat(url));\\n            resolve(result);\\n          } catch (error) {\\n            reject(error);\\n          }\\n        }\\n      };\\n\\n      xhr.onerror = function () {\\n        reject(new Error($tw.language.getString('NetworkError/XMLHttpRequest')));\\n      };\\n\\n      try {\\n        xhr.open(method, url, true);\\n        xhr.send();\\n      } catch (error) {\\n        reject(error);\\n      }\\n    });\\n  };\\n  /*\\n   * Load to Base64\\n   */\\n\\n\\n  IpfsLoader.prototype.loadToBase64 = /*#__PURE__*/function () {\\n    var _ref6 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee6(url, password) {\\n      var ua, data, json;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee6$(_context6) {\\n        while (1) {\\n          switch (_context6.prev = _context6.next) {\\n            case 0:\\n              url = url === undefined || url == null || url.toString().trim() === '' ? null : url.toString().trim();\\n\\n              if (!(url == null)) {\\n                _context6.next = 3;\\n                break;\\n              }\\n\\n              throw new Error('Undefined URL...');\\n\\n            case 3:\\n              password = password === undefined || password == null || password.trim() === '' ? null : password.trim();\\n              _context6.next = 6;\\n              return this.xhrToUint8Array(url);\\n\\n            case 6:\\n              ua = _context6.sent;\\n\\n              if (!(ua.length === 0)) {\\n                _context6.next = 9;\\n                break;\\n              }\\n\\n              return _context6.abrupt(\\\"return\\\", '');\\n\\n            case 9:\\n              data = this.ipfsBundle.Utf8ArrayToStr(ua);\\n\\n              if (!data.startsWith('{\\\"pako\\\":')) {\\n                _context6.next = 33;\\n                break;\\n              }\\n\\n              json = JSON.parse(data);\\n\\n              if (!json.pako.startsWith('{\\\"iv\\\":')) {\\n                _context6.next = 23;\\n                break;\\n              }\\n\\n              if (!(password == null && $tw.crypto.hasPassword() === false)) {\\n                _context6.next = 19;\\n                break;\\n              }\\n\\n              _context6.next = 16;\\n              return this.decryptFromPasswordPrompt(json.pako);\\n\\n            case 16:\\n              data = _context6.sent;\\n              _context6.next = 20;\\n              break;\\n\\n            case 19:\\n              data = $tw.crypto.decrypt(json.pako, password);\\n\\n            case 20:\\n              data = $tw.compress.inflate(data);\\n              _context6.next = 31;\\n              break;\\n\\n            case 23:\\n              if (!json.pako.startsWith('{\\\"version\\\":')) {\\n                _context6.next = 30;\\n                break;\\n              }\\n\\n              _context6.next = 26;\\n              return $tw.ipfs.decrypt(json.pako);\\n\\n            case 26:\\n              data = _context6.sent;\\n              data = $tw.compress.inflate(data);\\n              _context6.next = 31;\\n              break;\\n\\n            case 30:\\n              data = $tw.compress.inflate(json.pako);\\n\\n            case 31:\\n              _context6.next = 52;\\n              break;\\n\\n            case 33:\\n              if (!data.startsWith('{\\\"iv\\\":')) {\\n                _context6.next = 44;\\n                break;\\n              }\\n\\n              if (!(password == null && $tw.crypto.hasPassword() === false)) {\\n                _context6.next = 40;\\n                break;\\n              }\\n\\n              _context6.next = 37;\\n              return this.decryptFromPasswordPrompt(data);\\n\\n            case 37:\\n              data = _context6.sent;\\n              _context6.next = 41;\\n              break;\\n\\n            case 40:\\n              data = $tw.crypto.decrypt(data, password);\\n\\n            case 41:\\n              data = btoa(data);\\n              _context6.next = 52;\\n              break;\\n\\n            case 44:\\n              if (!data.startsWith('{\\\"version\\\":')) {\\n                _context6.next = 51;\\n                break;\\n              }\\n\\n              _context6.next = 47;\\n              return $tw.ipfs.decrypt(data);\\n\\n            case 47:\\n              data = _context6.sent;\\n              data = btoa(data);\\n              _context6.next = 52;\\n              break;\\n\\n            case 51:\\n              data = this.ipfsBundle.Uint8ArrayToBase64(ua);\\n\\n            case 52:\\n              return _context6.abrupt(\\\"return\\\", data);\\n\\n            case 53:\\n            case \\\"end\\\":\\n              return _context6.stop();\\n          }\\n        }\\n      }, _callee6, this);\\n    }));\\n\\n    return function (_x5, _x6) {\\n      return _ref6.apply(this, arguments);\\n    };\\n  }();\\n  /*\\n   * Load to UTF-8\\n   */\\n\\n\\n  IpfsLoader.prototype.loadToUtf8 = /*#__PURE__*/function () {\\n    var _ref7 = (0, _asyncToGenerator2[\\\"default\\\"])( /*#__PURE__*/_regenerator[\\\"default\\\"].mark(function _callee7(url, password) {\\n      var ua, data, json;\\n      return _regenerator[\\\"default\\\"].wrap(function _callee7$(_context7) {\\n        while (1) {\\n          switch (_context7.prev = _context7.next) {\\n            case 0:\\n              url = url === undefined || url == null || url.toString().trim() === '' ? null : url.toString().trim();\\n\\n              if (!(url == null)) {\\n                _context7.next = 3;\\n                break;\\n              }\\n\\n              throw new Error('Undefined URL...');\\n\\n            case 3:\\n              password = password === undefined || password == null || password.trim() === '' ? null : password.trim();\\n              _context7.next = 6;\\n              return this.xhrToUint8Array(url);\\n\\n            case 6:\\n              ua = _context7.sent;\\n\\n              if (!(ua.length === 0)) {\\n                _context7.next = 9;\\n                break;\\n              }\\n\\n              return _context7.abrupt(\\\"return\\\", '');\\n\\n            case 9:\\n              data = this.ipfsBundle.Utf8ArrayToStr(ua);\\n\\n              if (!data.startsWith('{\\\"pako\\\":')) {\\n                _context7.next = 33;\\n                break;\\n              }\\n\\n              json = JSON.parse(data);\\n\\n              if (!json.pako.startsWith('{\\\"iv\\\":')) {\\n                _context7.next = 23;\\n                break;\\n              }\\n\\n              if (!(password == null && $tw.crypto.hasPassword() === false)) {\\n                _context7.next = 19;\\n                break;\\n              }\\n\\n              _context7.next = 16;\\n              return this.decryptFromPasswordPrompt(json.pako);\\n\\n            case 16:\\n              data = _context7.sent;\\n              _context7.next = 20;\\n              break;\\n\\n            case 19:\\n              data = $tw.crypto.decrypt(json.pako, password);\\n\\n            case 20:\\n              data = $tw.compress.inflate(data);\\n              _context7.next = 31;\\n              break;\\n\\n            case 23:\\n              if (!json.pako.startsWith('{\\\"version\\\":')) {\\n                _context7.next = 30;\\n                break;\\n              }\\n\\n              _context7.next = 26;\\n              return $tw.ipfs.decrypt(json.pako);\\n\\n            case 26:\\n              data = _context7.sent;\\n              data = $tw.compress.inflate(data);\\n              _context7.next = 31;\\n              break;\\n\\n            case 30:\\n              data = $tw.compress.inflate(json.pako);\\n\\n            case 31:\\n              _context7.next = 47;\\n              break;\\n\\n            case 33:\\n              if (!data.startsWith('{\\\"iv\\\":')) {\\n                _context7.next = 43;\\n                break;\\n              }\\n\\n              if (!(password == null && $tw.crypto.hasPassword() === false)) {\\n                _context7.next = 40;\\n                break;\\n              }\\n\\n              _context7.next = 37;\\n              return this.decryptFromPasswordPrompt(data);\\n\\n            case 37:\\n              data = _context7.sent;\\n              _context7.next = 41;\\n              break;\\n\\n            case 40:\\n              data = $tw.crypto.decrypt(data, password);\\n\\n            case 41:\\n              _context7.next = 47;\\n              break;\\n\\n            case 43:\\n              if (!data.startsWith('{\\\"version\\\":')) {\\n                _context7.next = 47;\\n                break;\\n              }\\n\\n              _context7.next = 46;\\n              return $tw.ipfs.decrypt(data);\\n\\n            case 46:\\n              data = _context7.sent;\\n\\n            case 47:\\n              return _context7.abrupt(\\\"return\\\", data);\\n\\n            case 48:\\n            case \\\"end\\\":\\n              return _context7.stop();\\n          }\\n        }\\n      }, _callee7, this);\\n    }));\\n\\n    return function (_x7, _x8) {\\n      return _ref7.apply(this, arguments);\\n    };\\n  }();\\n\\n  IpfsLoader.prototype.decryptFromPasswordPrompt = function (encrypted) {\\n    return new Promise(function (resolve, reject) {\\n      $tw.passwordPrompt.createPrompt({\\n        serviceName: 'Enter a password to decrypt the imported content!!',\\n        noUserName: true,\\n        canCancel: true,\\n        submitText: 'Decrypt',\\n        callback: function callback(data) {\\n          if (!data) {\\n            return false;\\n          } // Decrypt\\n\\n\\n          try {\\n            var content = $tw.crypto.decrypt(encrypted, data.password);\\n            resolve(content);\\n            return true;\\n          } catch (error) {\\n            reject(error);\\n          }\\n\\n          return false;\\n        }\\n      });\\n    });\\n  };\\n\\n  module.exports = IpfsLoader;\\n})();\\n\\n},{\\\"@babel/runtime/helpers/asyncToGenerator\\\":2,\\\"@babel/runtime/helpers/interopRequireDefault\\\":3,\\\"@babel/runtime/regenerator\\\":4,\\\"window-or-global\\\":96}],102:[function(require,module,exports){\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nvar _windowOrGlobal = _interopRequireDefault(require(\\\"window-or-global\\\"));\\n\\nvar _whatwgUrl = require(\\\"whatwg-url\\\");\\n\\n(function () {\\n  'use strict';\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n\\n  var name = 'ipfs-url';\\n\\n  var IpfsUrl = function IpfsUrl(ipfsBundle) {\\n    this.ipfsBundle = ipfsBundle;\\n  };\\n\\n  IpfsUrl.prototype.getLogger = function () {\\n    return this.ipfsBundle.getLogger();\\n  };\\n\\n  IpfsUrl.prototype.getIpfsDefaultApiUrl = function () {\\n    return new _whatwgUrl.URL(this.getIpfsDefaultApi());\\n  };\\n\\n  IpfsUrl.prototype.getIpfsDefaultGatewayUrl = function () {\\n    return new _whatwgUrl.URL(this.getIpfsDefaultGateway());\\n  };\\n\\n  IpfsUrl.prototype.getIpfsApiUrl = function () {\\n    try {\\n      return this.getUrl($tw.utils.getIpfsSaverApiUrl());\\n    } catch (error) {\\n      return this.getIpfsDefaultApiUrl();\\n    }\\n  };\\n\\n  IpfsUrl.prototype.getIpfsGatewayUrl = function () {\\n    try {\\n      return this.getUrl($tw.utils.getIpfsSaverGatewayUrl());\\n    } catch (error) {\\n      return this.getIpfsDefaultGatewayUrl();\\n    }\\n  };\\n\\n  IpfsUrl.prototype.getIpfsDefaultApi = function () {\\n    return 'https://ipfs.infura.io:5001';\\n  };\\n\\n  IpfsUrl.prototype.getIpfsDefaultGateway = function () {\\n    return 'https://ipfs.infura.io';\\n  };\\n  /**\\n   * url.href;\\n   * url.origin\\n   * url.protocol;\\n   * url.username;\\n   * url.password;\\n   * url.host;\\n   * url.hostname;\\n   * url.port;\\n   * url.pathname;\\n   * url.search;\\n   * url.hash;\\n   * https://jsdom.github.io/whatwg-url/\\n   * https://github.com/stevenvachon/universal-url\\n   * https://github.com/stevenvachon/universal-url-lite\\n   * https://url.spec.whatwg.org/\\n   */\\n\\n\\n  IpfsUrl.prototype.getDocumentUrl = function () {\\n    try {\\n      return new _whatwgUrl.URL(_windowOrGlobal[\\\"default\\\"].location.href);\\n    } catch (error) {\\n      this.getLogger().error(error);\\n    }\\n\\n    throw new Error('Invalid current HTML Document URL...');\\n  };\\n\\n  IpfsUrl.prototype.getUrl = function (url, base) {\\n    try {\\n      if (url instanceof _whatwgUrl.URL) {\\n        return new _whatwgUrl.URL(url.href, base);\\n      }\\n\\n      return new _whatwgUrl.URL(url, base);\\n    } catch (error) {// Ignore\\n    }\\n\\n    throw new Error('Invalid URL...');\\n  };\\n\\n  IpfsUrl.prototype.getIpfsBaseUrl = function () {\\n    var base = this.getIpfsGatewayUrl();\\n\\n    try {\\n      if ($tw.utils.getIpfsUrlPolicy() === 'origin') {\\n        base = this.getDocumentUrl();\\n\\n        if (base.protocol === 'file:') {\\n          return this.getUrl(base);\\n        }\\n      }\\n    } catch (error) {\\n      base = this.getIpfsGatewayUrl();\\n    }\\n\\n    return this.getUrl(\\\"\\\".concat(base.protocol, \\\"//\\\").concat(base.host));\\n  };\\n\\n  IpfsUrl.prototype.normalizeUrl = function (value, base) {\\n    value = value === undefined || value == null || value.toString().trim() === '' ? null : value.toString().trim();\\n\\n    if (value == null) {\\n      return null;\\n    }\\n\\n    base = this.getUrl(base !== undefined && base !== null ? base : this.getIpfsBaseUrl()); // Parse\\n\\n    var url = null; // Text or URL\\n\\n    try {\\n      url = this.getUrl(value);\\n    } catch (error) {\\n      if (value.startsWith('/') === false && value.startsWith('./') === false && value.startsWith('../') === false) {\\n        var text = true;\\n\\n        try {\\n          url = this.getUrl(\\\"https://\\\".concat(value));\\n\\n          if (url.hostname.endsWith('.eth') === false && url.hostname.endsWith('.eth.link') === false) {\\n            url = null;\\n          } else {\\n            text = false;\\n          }\\n        } catch (error) {// ignore\\n        }\\n\\n        if (text) {\\n          return null;\\n        }\\n      }\\n    } // Invalid URL, try to parse with a Base URL\\n\\n\\n    if (url == null) {\\n      url = this.getUrl(value, base);\\n    } else if (url.protocol === 'ipfs:' || url.protocol === 'ipns:') {\\n      if (url.protocol === 'ipns:') {\\n        if (url.hostname !== undefined && url.hostname !== null && url.hostname.trim() !== '') {\\n          base.pathname = \\\"/ipns/\\\".concat(url.hostname);\\n        }\\n      } else {\\n        if (url.hostname !== undefined && url.hostname !== null && url.hostname.trim() !== '') {\\n          base.pathname = \\\"/ipfs/\\\".concat(url.hostname);\\n        }\\n      } // Unable to set url protocol\\n\\n\\n      base.username = url.username;\\n      base.password = url.password;\\n      base.search = url.search;\\n      base.hash = url.hash;\\n      url = base;\\n    } // Remove .link from .eth.link\\n\\n\\n    if (url.hostname.endsWith('.eth.link')) {\\n      url.hostname = url.hostname.substring(0, url.hostname.indexOf('.link'));\\n    }\\n\\n    return url;\\n  };\\n\\n  module.exports = IpfsUrl;\\n})();\\n\\n},{\\\"@babel/runtime/helpers/interopRequireDefault\\\":3,\\\"whatwg-url\\\":86,\\\"window-or-global\\\":96}]},{},[99])(99)\\n});\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/macro/ipfs-console-tooltip.js\": {\n            \"title\": \"$:/plugins/ipfs/macro/ipfs-console-tooltip.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/macro/ipfs-console-tooltip.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: macro\\n\\nIPFS plugin version\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Information about this macro\\n   */\\n  exports.name = 'ipfs-console-tooltip'\\n\\n  exports.params = []\\n\\n  /*\\n   * Run the macro\\n   */\\n  exports.run = function () {\\n    var tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Console/Mobile/Hint')\\n    if (typeof window.eruda === 'undefined') {\\n      tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Console/Mobile/Load')\\n    } else if ($tw.ipfs.ipfsAction !== undefined) {\\n      if ($tw.ipfs.ipfsAction.console) {\\n        tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Console/Mobile/Hide')\\n      } else {\\n        tiddler = $tw.wiki.getTiddler('$:/language/Buttons/Console/Mobile/Show')\\n      }\\n    }\\n    return tiddler.fields.text\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/plugins/ipfs/ipfs-controller.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-controller.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-controller.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Controller\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const EnsAction = require('$:/plugins/ipfs/ens-action.js').EnsAction\\n  const EnsWrapper = require('$:/plugins/ipfs/ens-wrapper.js').EnsWrapper\\n\\n  const IpfsAction = require('$:/plugins/ipfs/ipfs-action.js').IpfsAction\\n  const IpfsBundle = require('$:/plugins/ipfs/ipfs-bundle.js').IpfsBundle\\n  const IpfsTiddler = require('$:/plugins/ipfs/ipfs-tiddler.js').IpfsTiddler\\n  const IpfsWrapper = require('$:/plugins/ipfs/ipfs-wrapper.js').IpfsWrapper\\n\\n  const ipfsKeyword = 'ipfs'\\n  const ipnsKeyword = 'ipns'\\n\\n  const name = 'ipfs-controller'\\n\\n  var IpfsController = function () {\\n    this.ipfsClients = new Map()\\n    this.pin = []\\n    this.unpin = []\\n  }\\n\\n  IpfsController.prototype.init = function () {\\n    // Init once\\n    if (this.once) {\\n      return\\n    }\\n    this.ipfsBundle = new IpfsBundle()\\n    this.ipfsBundle.init()\\n    this.ensWrapper = new EnsWrapper(this.ipfsBundle.ensLibrary)\\n    this.ipfsUrl = this.ipfsBundle.ipfsUrl\\n    this.ipfsWrapper = new IpfsWrapper(this.ipfsBundle)\\n    // Listener\\n    this.ensAction = new EnsAction()\\n    this.ipfsAction = new IpfsAction()\\n    this.ipfsTiddler = new IpfsTiddler()\\n    // Init\\n    this.ensAction.init()\\n    this.ipfsAction.init()\\n    this.ipfsTiddler.init()\\n    // Init once\\n    this.once = true\\n  }\\n\\n  IpfsController.prototype.getLogger = function () {\\n    if (window.log !== undefined && window.log !== null) {\\n      const loggers = window.log.getLoggers()\\n      const log = loggers.eruda\\n      if (log !== undefined && log !== null) {\\n        return log\\n      }\\n      return loggers.default\\n    }\\n    return console\\n  }\\n\\n  IpfsController.prototype.loadToBase64 = async function (url, password) {\\n    return await this.ipfsBundle.loadToBase64(url, password)\\n  }\\n\\n  IpfsController.prototype.loadToUtf8 = async function (url, password) {\\n    return await this.ipfsBundle.loadToUtf8(url, password)\\n  }\\n\\n  IpfsController.prototype.Base64ToUint8Array = function (b64) {\\n    return this.ipfsBundle.Base64ToUint8Array(b64)\\n  }\\n\\n  IpfsController.prototype.Uint8ArrayToBase64 = function (ua) {\\n    return this.ipfsBundle.Uint8ArrayToBase64(ua)\\n  }\\n\\n  IpfsController.prototype.StringToUint8Array = function (string) {\\n    return this.ipfsBundle.StringToUint8Array(string)\\n  }\\n\\n  IpfsController.prototype.Utf8ArrayToStr = function (array) {\\n    return this.ipfsBundle.Utf8ArrayToStr(array)\\n  }\\n\\n  IpfsController.prototype.processContent = function (\\n    tiddler,\\n    content,\\n    encoding\\n  ) {\\n    if (content === undefined || content == null) {\\n      return null\\n    }\\n    if (encoding === undefined || encoding == null) {\\n      encoding = 'utf8'\\n    }\\n    var compressed = $tw.wiki.getTiddler('$:/isCompressed')\\n    compressed =\\n      compressed !== undefined &&\\n      compressed.fields.text !== undefined &&\\n      compressed.fields.text.trim() !== ''\\n        ? compressed.fields.text\\n        : 'yes'\\n    compressed =\\n      tiddler !== undefined &&\\n      tiddler.fields._compress !== undefined &&\\n      tiddler.fields._compress.trim() !== ''\\n        ? tiddler.fields._compress\\n        : compressed\\n    var encrypted = $tw.wiki.getTiddler('$:/isEncrypted')\\n    encrypted =\\n      encrypted !== undefined &&\\n      encrypted.fields.text !== undefined &&\\n      encrypted.fields.text.trim() !== ''\\n        ? encrypted.fields.text\\n        : 'no'\\n    var password =\\n      tiddler !== undefined &&\\n      tiddler.fields._password !== undefined &&\\n      tiddler.fields._password.trim() !== ''\\n        ? tiddler.fields._password\\n        : null\\n    var publicKey =\\n      tiddler !== undefined &&\\n      tiddler.fields._public_key !== undefined &&\\n      tiddler.fields._public_key.trim() !== ''\\n        ? tiddler.fields._public_key\\n        : null\\n    if (encrypted === 'yes' || password || publicKey) {\\n      try {\\n        if (compressed === 'yes') {\\n          content = { pako: $tw.compress.deflate(content) }\\n          content.pako = $tw.crypto.encrypt(content.pako, password, publicKey)\\n          content = JSON.stringify(content)\\n        } else {\\n          // https://github.com/xmaysonnave/tiddlywiki-ipfs/issues/9\\n          if (encoding === 'base64') {\\n            content = atob(content)\\n          }\\n          content = $tw.crypto.encrypt(content, password, publicKey)\\n        }\\n        content = this.StringToUint8Array(content)\\n      } catch (error) {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, 'Failed to process encrypted content...')\\n        return null\\n      }\\n    } else {\\n      try {\\n        if (compressed === 'yes') {\\n          content = { pako: $tw.compress.deflate(content) }\\n          content = JSON.stringify(content)\\n          content = this.StringToUint8Array(content)\\n        } else {\\n          if (encoding === 'base64') {\\n            content = this.Base64ToUint8Array(content)\\n          } else {\\n            content = this.StringToUint8Array(content)\\n          }\\n        }\\n      } catch (error) {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, 'Failed to process content...')\\n        return null\\n      }\\n    }\\n    return content\\n  }\\n\\n  IpfsController.prototype.requestToPin = function (cid, ipnsKey, value) {\\n    const self = this\\n    return new Promise((resolve, reject) => {\\n      if (ipnsKey !== undefined && ipnsKey !== null) {\\n        self\\n          .resolveUrl(true, true, value)\\n          .then(data => {\\n            const { cid, resolvedUrl } = data\\n            if (resolvedUrl !== null && cid !== null) {\\n              resolve(self.addToPin(cid, resolvedUrl))\\n            } else {\\n              resolve(false)\\n            }\\n          })\\n          .catch(error => {\\n            reject(error)\\n          })\\n      } else if (cid !== undefined && cid !== null) {\\n        const normalizedUrl = self.normalizeUrl(`/${ipfsKeyword}/${cid}`)\\n        resolve(self.addToPin(cid, normalizedUrl))\\n      } else {\\n        resolve(false)\\n      }\\n    })\\n  }\\n\\n  IpfsController.prototype.addToPin = function (cid, normalizedUrl) {\\n    if (cid !== undefined && cid !== null) {\\n      var index = this.unpin.indexOf(cid)\\n      if (index !== -1) {\\n        this.unpin.splice(index, 1)\\n        $tw.ipfs.getLogger().info(\\n          `Cancel request to Unpin:\\n ${normalizedUrl}`\\n        )\\n        return false\\n      }\\n      if (this.pin.indexOf(cid) === -1) {\\n        this.pin.push(cid)\\n        $tw.ipfs.getLogger().info(\\n          `Request to Pin:\\n ${normalizedUrl}`\\n        )\\n        return true\\n      }\\n    }\\n    return false\\n  }\\n\\n  IpfsController.prototype.requestToUnpin = function (cid, ipnsKey, value) {\\n    const self = this\\n    return new Promise((resolve, reject) => {\\n      if ($tw.utils.getIpfsUnpin() === false) {\\n        resolve(false)\\n      }\\n      if (ipnsKey !== undefined && ipnsKey !== null) {\\n        self\\n          .resolveUrl(true, true, value)\\n          .then(data => {\\n            const { cid, resolvedUrl } = data\\n            if (resolvedUrl !== null && cid !== null) {\\n              resolve(self.addToUnpin(cid, resolvedUrl))\\n            } else {\\n              resolve(false)\\n            }\\n          })\\n          .catch(error => {\\n            reject(error)\\n          })\\n      } else if (cid !== undefined && cid !== null) {\\n        const normalizedUrl = self.normalizeUrl(`/${ipfsKeyword}/${cid}`)\\n        resolve(self.addToUnpin(cid, normalizedUrl))\\n      } else {\\n        resolve(false)\\n      }\\n    })\\n  }\\n\\n  IpfsController.prototype.addToUnpin = function (cid, normalizedUrl) {\\n    if (cid !== undefined && cid !== null) {\\n      // Discard\\n      var index = this.pin.indexOf(cid)\\n      if (index !== -1) {\\n        this.pin.splice(index, 1)\\n        $tw.ipfs.getLogger().info(\\n          `Cancel request to Pin:\\n ${normalizedUrl}`\\n        )\\n        return false\\n      }\\n      // Add to unpin\\n      if (this.unpin.indexOf(cid) === -1) {\\n        this.unpin.push(cid)\\n        $tw.ipfs.getLogger().info(\\n          `Request to unpin:\\n ${normalizedUrl}`\\n        )\\n        return true\\n      }\\n    }\\n    return false\\n  }\\n\\n  IpfsController.prototype.removeFromPinUnpin = function (cid, normalizedUrl) {\\n    if (cid !== undefined && cid !== null) {\\n      var index = this.pin.indexOf(cid)\\n      if (index !== -1) {\\n        this.pin.splice(index, 1)\\n        $tw.ipfs.getLogger().info(\\n          `Cancel request to Pin:\\n ${normalizedUrl}`\\n        )\\n      }\\n      var index = this.unpin.indexOf(cid)\\n      if (index !== -1) {\\n        this.unpin.splice(index, 1)\\n        $tw.ipfs.getLogger().info(\\n          `Cancel request to Unpin:\\n ${normalizedUrl}`\\n        )\\n      }\\n    }\\n  }\\n\\n  IpfsController.prototype.pinToIpfs = async function (cid) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.pinToIpfs(ipfs, cid)\\n  }\\n\\n  IpfsController.prototype.unpinFromIpfs = async function (cid) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.unpinFromIpfs(ipfs, cid)\\n  }\\n\\n  IpfsController.prototype.addToIpfs = async function (content) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.addToIpfs(ipfs, content)\\n  }\\n\\n  IpfsController.prototype.generateIpnsKey = async function (ipnsName) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.generateIpnsKey(ipfs, ipnsName)\\n  }\\n\\n  IpfsController.prototype.removeIpnsKey = async function (ipnsName) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.removeIpnsKey(ipfs, ipnsName)\\n  }\\n\\n  IpfsController.prototype.renameIpnsName = async function (\\n    oldIpnsName,\\n    newIpnsName\\n  ) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.renameIpnsName(ipfs, oldIpnsName, newIpnsName)\\n  }\\n\\n  IpfsController.prototype.getIpnsIdentifiers = async function (\\n    identifier,\\n    ipnsName\\n  ) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.getIpnsIdentifiers(ipfs, identifier, ipnsName)\\n  }\\n\\n  IpfsController.prototype.resolveIpnsKey = async function (ipnsKey) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.resolveIpnsKey(ipfs, ipnsKey)\\n  }\\n\\n  IpfsController.prototype.publishIpnsName = async function (\\n    cid,\\n    ipnsKey,\\n    ipnsName\\n  ) {\\n    const { ipfs } = await this.getIpfsClient()\\n    return await this.ipfsWrapper.publishIpnsName(cid, ipfs, ipnsKey, ipnsName)\\n  }\\n\\n  IpfsController.prototype.getIpfsBaseUrl = function () {\\n    return this.ipfsUrl.getIpfsBaseUrl()\\n  }\\n\\n  IpfsController.prototype.normalizeUrl = function (value, base) {\\n    return this.ipfsUrl.normalizeUrl(value, base)\\n  }\\n\\n  IpfsController.prototype.getDocumentUrl = function () {\\n    return this.ipfsUrl.getDocumentUrl()\\n  }\\n\\n  IpfsController.prototype.getIpfsDefaultApi = function () {\\n    return this.ipfsUrl.getIpfsDefaultApi()\\n  }\\n\\n  IpfsController.prototype.getIpfsDefaultGateway = function () {\\n    return this.ipfsUrl.getIpfsDefaultGateway()\\n  }\\n\\n  IpfsController.prototype.getIpfsApiUrl = function () {\\n    return this.ipfsUrl.getIpfsApiUrl()\\n  }\\n\\n  IpfsController.prototype.getIpfsGatewayUrl = function () {\\n    return this.ipfsUrl.getIpfsGatewayUrl()\\n  }\\n\\n  IpfsController.prototype.resolveUrl = async function (\\n    resolveIpns,\\n    resolveEns,\\n    value,\\n    base,\\n    web3\\n  ) {\\n    var cid = null\\n    var ipnsKey = null\\n    var ipnsName = null\\n    var normalizedUrl = null\\n    var resolvedUrl = null\\n    value =\\n      value === undefined || value == null || value.toString().trim() === ''\\n        ? null\\n        : value.toString().trim()\\n    if (value == null) {\\n      return {\\n        cid: null,\\n        ipnsKey: null,\\n        ipnsName: null,\\n        normalizedUrl: null,\\n        resolvedUrl: null\\n      }\\n    }\\n    try {\\n      normalizedUrl = this.normalizeUrl(value, base)\\n    } catch (error) {\\n      // Ignore\\n    }\\n    if (normalizedUrl == null) {\\n      return {\\n        cid: null,\\n        ipnsKey: null,\\n        ipnsName: null,\\n        normalizedUrl: null,\\n        resolvedUrl: null\\n      }\\n    }\\n    var { cid, ipnsIdentifier, protocol } = this.decodeCid(normalizedUrl)\\n    if (protocol === ipnsKeyword && ipnsIdentifier !== null) {\\n      var { ipnsKey, ipnsName, normalizedUrl } = await this.getIpnsIdentifiers(\\n        ipnsIdentifier\\n      )\\n      if (resolveIpns) {\\n        $tw.ipfs.getLogger().info(\\n          `Resolving IPNS key:\\n ${normalizedUrl}`\\n        )\\n        $tw.utils.alert(name, 'Resolving an IPNS key...')\\n        try {\\n          cid = await this.resolveIpnsKey(ipnsKey)\\n          if (cid !== null) {\\n            resolvedUrl = this.normalizeUrl(`/${ipfsKeyword}/${cid}`, base)\\n            $tw.ipfs.getLogger().info(\\n              `Successfully resolved IPNS key:\\n ${normalizedUrl}`\\n            )\\n            $tw.utils.alert(name, 'Successfully resolved an IPNS key...')\\n          }\\n        } catch (error) {\\n          // Unable to resolve the key\\n          // It usually happen when the key is not initialized\\n          cid = null\\n          $tw.ipfs.getLogger().error(error)\\n          $tw.utils.alert(name, error.message)\\n        }\\n      }\\n    } else if (resolveEns && normalizedUrl.hostname.endsWith('.eth')) {\\n      var { cid, protocol, resolvedUrl } = await this.resolveEns(\\n        normalizedUrl.hostname,\\n        web3\\n      )\\n      if (protocol === 'ipns') {\\n        ipnsKey = cid\\n        cid = null\\n      }\\n    } else {\\n      resolvedUrl = normalizedUrl\\n    }\\n    return {\\n      cid: cid,\\n      ipnsKey: ipnsKey,\\n      ipnsName: ipnsName,\\n      normalizedUrl: normalizedUrl,\\n      resolvedUrl: resolvedUrl\\n    }\\n  }\\n\\n  IpfsController.prototype.getUrl = function (url, base) {\\n    return this.ipfsUrl.getUrl(url, base)\\n  }\\n\\n  IpfsController.prototype.isJson = function (content) {\\n    return this.ipfsBundle.isJson(content)\\n  }\\n\\n  IpfsController.prototype.getIpfsClient = async function () {\\n    // Provider\\n    const ipfsProvider = $tw.utils.getIpfsProvider()\\n    // IPFS companion\\n    if (ipfsProvider === 'window') {\\n      const client = await this.ipfsWrapper.getWindowIpfsClient()\\n      return {\\n        ipfs: client.ipfs,\\n        provider: client.provider\\n      }\\n    }\\n    // Default, try IPFS companion\\n    if (ipfsProvider === 'default') {\\n      try {\\n        const client = await this.ipfsWrapper.getWindowIpfsClient()\\n        return {\\n          ipfs: client.ipfs,\\n          provider: client.provider\\n        }\\n      } catch (error) {\\n        // Ignore, fallback to HTTP\\n      }\\n    }\\n    // Current API URL\\n    const url = this.getIpfsApiUrl()\\n    // Check\\n    if (url === undefined || url == null || url.toString().trim() === '') {\\n      throw new Error('Undefined IPFS API URL...')\\n    }\\n    // HTTP Client\\n    const client = this.ipfsClients.get(url.toString())\\n    if (client !== undefined) {\\n      // Log\\n      $tw.ipfs.getLogger().info(`Reuse IPFS provider: \\\"${client.provider}\\\"`)\\n      // Done\\n      return {\\n        ipfs: client.ipfs,\\n        provider: client.provider\\n      }\\n    }\\n    // Build a new HTTP client\\n    const policy = await this.ipfsWrapper.getHttpIpfsClient(url)\\n    const ipfs = policy.ipfs\\n    const provider = policy.provider\\n    // Store\\n    this.ipfsClients.set(url.toString(), { ipfs, provider })\\n    // Log\\n    $tw.ipfs.getLogger().info(`New IPFS provider: \\\"${policy.provider}\\\"`)\\n    // Done\\n    return {\\n      ipfs: ipfs,\\n      provider: provider\\n    }\\n  }\\n\\n  IpfsController.prototype.resolveEns = async function (ensDomain, web3) {\\n    if (web3 === undefined || web3 == null) {\\n      var { web3 } = await this.getWeb3Provider()\\n    }\\n    const { content, protocol } = await this.ensWrapper.getContentHash(\\n      ensDomain,\\n      web3\\n    )\\n    if (content !== null && protocol !== null) {\\n      const url = this.normalizeUrl(`/${protocol}/${content}`)\\n      $tw.ipfs.getLogger().info(\\n        `Successfully fetched ENS domain content: \\\"${ensDomain}\\\"\\n ${url}`\\n      )\\n      return {\\n        cid: content,\\n        protocol: protocol,\\n        resolvedUrl: url\\n      }\\n    }\\n    return {\\n      cid: null,\\n      protocol: null,\\n      resolvedUrl: null\\n    }\\n  }\\n\\n  IpfsController.prototype.setContentHash = async function (\\n    ensDomain,\\n    cid,\\n    web3,\\n    account\\n  ) {\\n    if (\\n      account === undefined ||\\n      account == null ||\\n      web3 === undefined ||\\n      web3 == null\\n    ) {\\n      var { account, web3 } = await this.getEnabledWeb3Provider()\\n    }\\n    await this.ensWrapper.setContentHash(ensDomain, cid, web3, account)\\n    const url = this.normalizeUrl(cid)\\n    $tw.ipfs.getLogger().info(\\n      `Successfully set ENS domain content:\\n ${url}\\n to: \\\"${ensDomain}\\\"`\\n    )\\n    return true\\n  }\\n\\n  IpfsController.prototype.xhrToJson = async function (url) {\\n    return await this.ipfsBundle.xhrToJson(url)\\n  }\\n\\n  IpfsController.prototype.decodeCid = function (pathname) {\\n    return this.ipfsBundle.decodeCid(pathname)\\n  }\\n\\n  IpfsController.prototype.isCid = function (cid) {\\n    return this.ipfsBundle.isCid(cid)\\n  }\\n\\n  IpfsController.prototype.cidToBase58CidV0 = function (cid, log) {\\n    return this.ipfsBundle.cidToBase58CidV0(cid, log)\\n  }\\n\\n  IpfsController.prototype.cidToCidV1 = function (cid, protocol, log) {\\n    return this.ipfsBundle.cidToCidV1(cid, protocol, log)\\n  }\\n\\n  IpfsController.prototype.cidToLibp2pKeyCidV1 = function (\\n    cid,\\n    multibaseName,\\n    log\\n  ) {\\n    return this.ipfsBundle.cidToLibp2pKeyCidV1(cid, multibaseName, log)\\n  }\\n\\n  IpfsController.prototype.isOwner = async function (domain, web3, account) {\\n    return await this.ipfsBundle.isOwner(domain, web3, account)\\n  }\\n\\n  IpfsController.prototype.decrypt = async function (text, provider) {\\n    return await this.ipfsBundle.decrypt(text, provider)\\n  }\\n\\n  IpfsController.prototype.getPublicEncryptionKey = async function (provider) {\\n    return await this.ipfsBundle.getPublicEncryptionKey(provider)\\n  }\\n\\n  IpfsController.prototype.getEthereumProvider = async function () {\\n    return await this.ipfsBundle.getEthereumProvider()\\n  }\\n\\n  IpfsController.prototype.getEnabledWeb3Provider = async function () {\\n    return await this.ipfsBundle.getEnabledWeb3Provider()\\n  }\\n\\n  IpfsController.prototype.getWeb3Provider = async function () {\\n    return await this.ipfsBundle.getWeb3Provider()\\n  }\\n\\n  IpfsController.prototype.getEtherscanRegistry = function () {\\n    return this.ipfsBundle.getEtherscanRegistry()\\n  }\\n\\n  IpfsController.prototype.getNetworkRegistry = function () {\\n    return this.ipfsBundle.getNetworkRegistry()\\n  }\\n\\n  IpfsController.prototype.getENSRegistry = function () {\\n    return this.ipfsBundle.getENSRegistry()\\n  }\\n\\n  exports.IpfsController = IpfsController\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ipfs-default.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-default.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-default.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: utils\\n\\nIPFS Default\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Retrieve ipfs saver export protocol with default value if applicable\\n   */\\n  exports.getIpfsExport = function () {\\n    var output = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/export')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.getFieldString('text')\\n      text =\\n        text === undefined || text == null || text.trim() === ''\\n          ? null\\n          : text.trim()\\n      if (text !== null) {\\n        output = text\\n      }\\n    }\\n    if (output == null) {\\n      output = $tw.utils.getIpfsDefaultExport()\\n    }\\n    return output\\n  }\\n\\n  /*\\n   * Default Export\\n   */\\n  exports.getIpfsDefaultExport = function () {\\n    return 'json'\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver protocol with default value if applicable\\n   */\\n  exports.getIpfsProtocol = function () {\\n    var protocol = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/protocol')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.getFieldString('text')\\n      text =\\n        text === undefined || text == null || text.trim() === ''\\n          ? null\\n          : text.trim()\\n      if (text !== null) {\\n        protocol = text\\n      }\\n    }\\n    if (protocol == null) {\\n      protocol = $tw.utils.getIpfsDefaultProtocol()\\n    }\\n    return protocol\\n  }\\n\\n  /*\\n   * Default Protocol\\n   */\\n  exports.getIpfsDefaultProtocol = function () {\\n    return 'ipfs'\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver api url with default value if applicable\\n   */\\n  exports.getIpfsSaverApiUrl = function () {\\n    var api = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/api')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.getFieldString('text')\\n      text =\\n        text === undefined || text == null || text.trim() === ''\\n          ? null\\n          : text.trim()\\n      if (text !== null) {\\n        api = text\\n      }\\n    }\\n    if (api !== null) {\\n      tiddler = $tw.wiki.getTiddler(api)\\n      if (tiddler !== undefined && tiddler !== null) {\\n        var text = tiddler.getFieldString('text')\\n        text =\\n          text === undefined || text == null || text.trim() === ''\\n            ? null\\n            : text.trim()\\n        if (text !== null) {\\n          api = text\\n        }\\n      }\\n    }\\n    if (api == null) {\\n      api = $tw.ipfs.getIpfsDefaultApi()\\n    }\\n    return api\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver gateway url with default value if applicable\\n   */\\n  exports.getIpfsSaverGatewayUrl = function () {\\n    var gateway = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/gateway')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.getFieldString('text')\\n      text =\\n        text === undefined || text == null || text.trim() === ''\\n          ? null\\n          : text.trim()\\n      if (text !== null) {\\n        gateway = text\\n      }\\n    }\\n    if (gateway !== null) {\\n      tiddler = $tw.wiki.getTiddler(gateway)\\n      if (tiddler !== undefined && tiddler !== null) {\\n        var text = tiddler.getFieldString('text')\\n        text =\\n          text === undefined || text == null || text.trim() === ''\\n            ? null\\n            : text.trim()\\n        if (text !== null) {\\n          gateway = text\\n        }\\n      }\\n    }\\n    if (gateway == null) {\\n      gateway = $tw.ipfs.getIpfsDefaultGateway()\\n    }\\n    return gateway\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver ens domain with default value if applicable\\n   */\\n  exports.getIpfsEnsDomain = function () {\\n    var ensDomain = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ens/domain')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.getFieldString('text')\\n      text =\\n        text === undefined || text == null || text.trim() === ''\\n          ? null\\n          : text.trim()\\n      if (text !== null) {\\n        ensDomain = text\\n      }\\n    }\\n    return ensDomain\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver ipns name with default value if applicable\\n   */\\n  exports.getIpfsIpnsName = function () {\\n    var ipnsName = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/name')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.getFieldString('text')\\n      text =\\n        text === undefined || text == null || text.trim() === ''\\n          ? null\\n          : text.trim()\\n      if (text !== null) {\\n        ipnsName = text\\n      }\\n    }\\n    return ipnsName\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver ipns key with default value if applicable\\n   */\\n  exports.getIpfsIpnsKey = function () {\\n    var ipnsKey = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/ipns/key')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.getFieldString('text')\\n      text =\\n        text === undefined || text == null || text.trim() === ''\\n          ? null\\n          : text.trim()\\n      if (text !== null) {\\n        ipnsKey = text\\n      }\\n    }\\n    return ipnsKey\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver verbose with default value if applicable\\n   */\\n  exports.getIpfsVerbose = function () {\\n    var verbose = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/verbose')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.getFieldString('text')\\n      text =\\n        text === undefined || text == null || text.trim() === ''\\n          ? null\\n          : text.trim()\\n      if (text !== null) {\\n        verbose = text\\n      }\\n    }\\n    if (verbose == null) {\\n      verbose = true // default, see ipfs-saver.tid\\n    } else {\\n      verbose = verbose === 'yes'\\n    }\\n    return verbose\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver unpin with default value if applicable\\n   */\\n  exports.getIpfsUnpin = function () {\\n    var unpin = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/unpin')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.getFieldString('text')\\n      text =\\n        text === undefined || text == null || text.trim() === ''\\n          ? null\\n          : text.trim()\\n      if (text !== null) {\\n        unpin = text\\n      }\\n    }\\n    if (unpin == null) {\\n      unpin = false // default, see ipfs-saver.tid\\n    } else {\\n      unpin = unpin === 'yes'\\n    }\\n    return unpin\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver url policy with default value if applicable\\n   */\\n  exports.getIpfsUrlPolicy = function () {\\n    var policy = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/policy')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.getFieldString('text')\\n      text =\\n        text === undefined || text == null || text.trim() === ''\\n          ? null\\n          : text.trim()\\n      if (text !== null) {\\n        policy = text\\n      }\\n    }\\n    if (policy == null) {\\n      policy = $tw.utils.getIpfsDefaultPolicy()\\n    }\\n    return policy\\n  }\\n\\n  /*\\n   * Default Policy\\n   */\\n  exports.getIpfsDefaultPolicy = function () {\\n    return 'gateway'\\n  }\\n\\n  /*\\n   * Retrieve ipfs saver provider with default value if applicable\\n   */\\n  exports.getIpfsProvider = function () {\\n    var provider = null\\n    var tiddler = $tw.wiki.getTiddler('$:/ipfs/saver/provider')\\n    if (tiddler !== undefined && tiddler !== null) {\\n      var text = tiddler.getFieldString('text')\\n      text =\\n        text === undefined || text == null || text.trim() === ''\\n          ? null\\n          : text.trim()\\n      if (text !== null) {\\n        provider = text\\n      }\\n    }\\n    if (provider == null) {\\n      provider = $tw.utils.getIpfsDefaultProvider()\\n    }\\n    return provider\\n  }\\n\\n  /*\\n   * Default Provider\\n   */\\n  exports.getIpfsDefaultProvider = function () {\\n    return 'http'\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"utils\"\n        },\n        \"$:/plugins/ipfs/macro/ipfs-encryption-tooltip.js\": {\n            \"title\": \"$:/plugins/ipfs/macro/ipfs-encryption-tooltip.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/macro/ipfs-encryption-tooltip.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: macro\\n\\nIPFS plugin version\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Information about this macro\\n   */\\n  exports.name = 'ipfs-encryption-tooltip'\\n\\n  exports.params = []\\n\\n  /*\\n   * Run the macro\\n   */\\n  exports.run = function () {\\n    var encrypted = $tw.wiki.getTiddler('$:/isEncrypted')\\n    if (\\n      encrypted !== undefined &&\\n      encrypted !== null &&\\n      encrypted.fields.text === 'yes'\\n    ) {\\n      encrypted = true\\n    } else {\\n      encrypted = false\\n    }\\n    var standford = $tw.wiki.getTiddler('$:/config/Standford')\\n    if (standford.fields.text === 'yes') {\\n      standford = true\\n    } else {\\n      standford = false\\n    }\\n    var tiddler = $tw.wiki.getTiddler(\\n      '$:/language/Buttons/Encryption/SetPublicKey/Hint'\\n    )\\n    if (encrypted) {\\n      if (standford) {\\n        tiddler = $tw.wiki.getTiddler(\\n          '$:/language/Buttons/Encryption/ClearPassword/Hint'\\n        )\\n      } else {\\n        tiddler = $tw.wiki.getTiddler(\\n          '$:/language/Buttons/Encryption/ClearPublicKey/Hint'\\n        )\\n      }\\n    } else {\\n      if (standford) {\\n        tiddler = $tw.wiki.getTiddler(\\n          '$:/language/Buttons/Encryption/SetPassword/Hint'\\n        )\\n      }\\n    }\\n    return tiddler.fields.text\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/plugins/ipfs/ipfs-import.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-import.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-import.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Import\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const name = 'ipfs-import'\\n\\n  const local = '<a href=\\\"'\\n  const remote = '<a rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\" href=\\\"'\\n\\n  const alertFailed = function (\\n    strings,\\n    msg,\\n    key,\\n    field,\\n    parentField,\\n    parentUrl,\\n    parentTitle\\n  ) {\\n    var space = strings[1]\\n    var endH1 = strings[2]\\n    var endL1 = strings[3]\\n    var from = strings[4]\\n    var endH2 = strings[5]\\n    var endL2 = strings[6]\\n    if (\\n      parentUrl.hostname === $tw.ipfs.getIpfsBaseUrl().hostname &&\\n      parentUrl.pathname === $tw.ipfs.getIpfsBaseUrl().pathname\\n    ) {\\n      return `${msg}${space}${remote}${key}${endH1}${field}${endL1}${parentField}${from}${local}${parentUrl}${endH2}${parentTitle}${endL2}`\\n    } else {\\n      return `${msg}${space}${remote}${key}${endH1}${field}${endL1}${parentField}${from}${remote}${parentUrl}${endH2}${parentTitle}${endL2}`\\n    }\\n  }\\n\\n  const alertFieldFailed = function (strings, msg, field, url, title) {\\n    var failed = strings[1]\\n    var from = strings[2]\\n    var endH = strings[3]\\n    var endL = strings[4]\\n    if (\\n      url.hostname === $tw.ipfs.getIpfsBaseUrl().hostname &&\\n      url.pathname === $tw.ipfs.getIpfsBaseUrl().pathname\\n    ) {\\n      return `${msg}${failed}${field}${from}${local}${url}${endH}${title}${endL}`\\n    } else {\\n      return `${msg}${failed}${field}${from}${remote}${url}${endH}${title}${endL}`\\n    }\\n  }\\n\\n  const alertConditionFailed = function (\\n    strings,\\n    msg,\\n    condition,\\n    key,\\n    title,\\n    parentUrl\\n  ) {\\n    var space = strings[1]\\n    var from = strings[2]\\n    var endH1 = strings[3]\\n    var endL1 = strings[4]\\n    var endH2 = strings[5]\\n    var endL2 = strings[6]\\n    if (\\n      parentUrl.hostname === $tw.ipfs.getIpfsBaseUrl().hostname &&\\n      parentUrl.pathname === $tw.ipfs.getIpfsBaseUrl().pathname\\n    ) {\\n      return `${msg}${space}${condition}${from}${remote}${key}${endH1}${title}${endL1}${local}${parentUrl}${endH2}${title}${endL2}`\\n    } else {\\n      return `${msg}${space}${condition}${from}${remote}${key}${endH1}${title}${endL1}${remote}${parentUrl}${endH2}${title}${endL2}`\\n    }\\n  }\\n\\n  var IpfsImport = function () {}\\n\\n  IpfsImport.prototype.removeTiddlers = function (keys, title) {\\n    var removed = 0\\n    for (var key of this.loaded.keys()) {\\n      if (keys.indexOf(key) !== -1) {\\n        continue\\n      }\\n      const { imported, resolvedKey } = this.loaded.get(key)\\n      if (imported.delete(title)) {\\n        const msg = 'Remove:'\\n        const field = ''\\n        $tw.ipfs.getLogger().info(\\n          `${msg} ${field}\\\"${title}\\\"\\n ${resolvedKey}`\\n        )\\n        $tw.utils.alert(\\n          name,\\n          alertFieldFailed`${msg} ${field}${resolvedKey}\\\">${title}</a>`\\n        )\\n        removed += 1\\n      }\\n    }\\n    return removed\\n  }\\n\\n  IpfsImport.prototype.getKey = async function (base, value) {\\n    var cid = null\\n    var ipnsKey = null\\n    var key = null\\n    var normalizedUrl = null\\n    var resolvedUrl = null\\n    value =\\n      value === undefined || value == null || value.trim() === ''\\n        ? null\\n        : value.trim()\\n    if (value == null) {\\n      return {\\n        key: null,\\n        isIpfs: false,\\n        resolvedUrl: null\\n      }\\n    }\\n    var {\\n      cid,\\n      ipnsKey,\\n      normalizedUrl,\\n      resolvedUrl\\n    } = await $tw.ipfs.resolveUrl(false, true, value, base)\\n    if (normalizedUrl == null && resolvedUrl == null) {\\n      throw new Error(`Failed to resolve value: \\\"${value}\\\"`)\\n    }\\n    if (cid !== null) {\\n      key = `ipfs://${cid}`\\n    } else if (ipnsKey !== null) {\\n      key = `ipns://${ipnsKey}`\\n    } else if (normalizedUrl.hostname.endsWith('.eth')) {\\n      key = normalizedUrl.hostname\\n    } else {\\n      key = normalizedUrl.toString()\\n    }\\n    return {\\n      key: key,\\n      resolvedUrl: resolvedUrl\\n    }\\n  }\\n\\n  IpfsImport.prototype.isIpfs = async function (key) {\\n    key =\\n      key === undefined || key == null || key.trim() === '' ? null : key.trim()\\n    if (key == null) {\\n      return false\\n    }\\n    const { cid, ipnsIdentifier, protocol } = $tw.ipfs.decodeCid(key)\\n    if (protocol !== null && (cid !== null || ipnsIdentifier !== null)) {\\n      return true\\n    } else if (key.endsWith('.eth')) {\\n      return true\\n    }\\n    return false\\n  }\\n\\n  IpfsImport.prototype.import = async function (\\n    canonicalUri,\\n    importUri,\\n    tiddler\\n  ) {\\n    const self = this\\n    var loadedAdded = 0\\n    var loadedRemoved = 0\\n    canonicalUri =\\n      canonicalUri === undefined ||\\n      canonicalUri == null ||\\n      canonicalUri.trim() === ''\\n        ? null\\n        : canonicalUri.trim()\\n    importUri =\\n      importUri === undefined || importUri == null || importUri.trim() === ''\\n        ? null\\n        : importUri.trim()\\n    var password = tiddler.fields._password\\n    password =\\n      password === undefined || password == null || password.trim() === ''\\n        ? null\\n        : password.trim()\\n    this.host = tiddler\\n    const { type, info } = $tw.utils.getContentType(\\n      tiddler.fields.title,\\n      tiddler.fields.type\\n    )\\n    this.loaded = new Map()\\n    this.notLoaded = []\\n    this.isEmpty = []\\n    this.resolved = new Map()\\n    this.notResolved = []\\n    this.added = []\\n    this.updated = []\\n    this.merged = new Map()\\n    try {\\n      // Load and prepare imported tiddlers to be processed\\n      const url = $tw.ipfs.getIpfsBaseUrl()\\n      url.hash = tiddler.fields.title\\n      if (canonicalUri !== null || importUri !== null) {\\n        $tw.ipfs.getLogger().info('*** Begin Import ***')\\n        this.rootUri = importUri !== null ? importUri : canonicalUri\\n        if (importUri !== null) {\\n          const {\\n            loaded: importLoaded,\\n            removed: importRemoved\\n          } = await this.load(\\n            url,\\n            tiddler.fields.title,\\n            '_import_uri',\\n            importUri,\\n            password,\\n            true\\n          )\\n          loadedAdded += importLoaded\\n          loadedRemoved += importRemoved\\n        }\\n        if (canonicalUri !== null) {\\n          var load = true\\n          if (info.encoding === 'base64' || type === 'image/svg+xml') {\\n            load = false\\n          }\\n          const {\\n            loaded: canonicalLoaded,\\n            removed: canonicalRemoved\\n          } = await this.load(\\n            url,\\n            tiddler.fields.title,\\n            '_canonical_uri',\\n            canonicalUri,\\n            password,\\n            load\\n          )\\n          loadedAdded += canonicalLoaded\\n          loadedRemoved += canonicalRemoved\\n        }\\n        const { processed, removed: processedRemoved } = this.processImported()\\n        this.importTiddlers()\\n        $tw.ipfs\\n          .getLogger()\\n          .info(`*** Loaded: ${this.loaded.size} Resource(s) ***`)\\n        $tw.ipfs\\n          .getLogger()\\n          .info(`*** Loaded: ${this.isEmpty.length} Empty Resource(s) ***`)\\n        $tw.ipfs\\n          .getLogger()\\n          .info(`*** Failed to Load: ${this.notLoaded.length} Resource(s) ***`)\\n        $tw.ipfs\\n          .getLogger()\\n          .info(`*** Failed to Resolve: ${this.notResolved.length} URL(s) ***`)\\n        $tw.ipfs\\n          .getLogger()\\n          .info(\\n            `*** Loaded: ${loadedAdded}, Removed: ${loadedRemoved} Tiddler(s) ***`\\n          )\\n        $tw.ipfs\\n          .getLogger()\\n          .info(\\n            `*** Processed: ${processed}, Removed: ${processedRemoved} Tiddler(s) ***`\\n          )\\n        $tw.ipfs\\n          .getLogger()\\n          .info(\\n            `*** Added: ${this.added.length}, Updated: ${this.updated.length} Tiddler(s) ***`\\n          )\\n      }\\n      // Update Wiki\\n      var reportAdded = ''\\n      var reportUpdated = ''\\n      for (var [title, merged] of this.merged.entries()) {\\n        $tw.wiki.addTiddler(merged)\\n        if (\\n          this.host !== null &&\\n          this.merged.get(this.host.fields.title) === undefined\\n        ) {\\n          if (this.added.indexOf(title) !== -1) {\\n            reportAdded = `${reportAdded}[[${title}]]`\\n          } else {\\n            reportUpdated = `${reportUpdated}[[${title}]]`\\n          }\\n        }\\n      }\\n      // Process deleted\\n      var deleted = 0\\n      var reportDeleted = ''\\n      $tw.wiki.forEachTiddler({ includeSystem: true }, function (\\n        title,\\n        tiddler\\n      ) {\\n        var value = tiddler.getFieldString('_canonical_uri')\\n        if (\\n          value !== undefined &&\\n          value !== null &&\\n          value === self.rootUri &&\\n          self.merged.get(title) === undefined\\n        ) {\\n          if (\\n            self.host !== null &&\\n            self.merged.get(self.host.fields.title) === undefined &&\\n            self.host.fields.title !== title\\n          ) {\\n            $tw.wiki.deleteTiddler(title)\\n            reportDeleted = `${reportDeleted}[[${title}]]`\\n            deleted += 1\\n          }\\n          return\\n        }\\n        var value = tiddler.getFieldString('_import_uri')\\n        if (\\n          value !== undefined &&\\n          value !== null &&\\n          value === self.rootUri &&\\n          self.merged.get(title) === undefined\\n        ) {\\n          if (\\n            self.host !== null &&\\n            self.merged.get(self.host.fields.title) === undefined &&\\n            self.host.fields.title !== title\\n          ) {\\n            $tw.wiki.deleteTiddler(title)\\n            reportDeleted = `${reportDeleted}[[${title}]]`\\n            deleted += 1\\n          }\\n        }\\n      })\\n      if (this.merged.size > 0) {\\n        $tw.utils.alert(\\n          name,\\n          'Successfully Imported, Added: ' +\\n            this.added.length +\\n            ', Deleted: ' +\\n            deleted +\\n            ', Updated: ' +\\n            this.updated.length\\n        )\\n      }\\n      if (\\n        this.host !== null &&\\n        this.merged.get(this.host.fields.title) === undefined\\n      ) {\\n        var updatedTiddler = new $tw.Tiddler(this.host)\\n        if (this.merged.size === 0) {\\n          updatedTiddler = $tw.utils.updateTiddler({\\n            tiddler: updatedTiddler,\\n            fields: [\\n              {\\n                key: 'type',\\n                value: 'text/vnd.tiddlywiki'\\n              },\\n              {\\n                key: 'text',\\n                value: \\\"''No Tiddlers have been Imported''\\\"\\n              }\\n            ]\\n          })\\n        } else {\\n          const reportAddedMsg = `<p align='left'>''Added: ${this.added.length}''</p>`\\n          const reportDeletedMsg = `<p align='left'>''Deleted: ${deleted}''</p>`\\n          const reportImportedMsg =\\n            \\\"<p align='center'>''Successfully Imported''</p>\\\"\\n          const reportUpdatedMsg = `<p align='left'>''Updated: ${this.updated.length}''</p>`\\n          var value = `${reportImportedMsg}`\\n          if (reportAdded.trim() !== '') {\\n            value = `${value}\\n\\n ${reportAddedMsg}\\n\\n {{{${reportAdded}}}}`\\n          }\\n          if (reportDeleted.trim() !== '') {\\n            value = `${value}\\n\\n ${reportDeletedMsg}\\n\\n {{{${reportDeleted}}}}`\\n          }\\n          if (reportUpdated.trim() !== '') {\\n            value = `${value}\\n\\n ${reportUpdatedMsg}\\n\\n {{{${reportUpdated}}}}`\\n          }\\n          updatedTiddler = $tw.utils.updateTiddler({\\n            tiddler: updatedTiddler,\\n            fields: [\\n              {\\n                key: 'type',\\n                value: 'text/vnd.tiddlywiki'\\n              },\\n              {\\n                key: 'text',\\n                value: value\\n              }\\n            ]\\n          })\\n        }\\n        $tw.wiki.addTiddler(updatedTiddler)\\n      }\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n    }\\n    $tw.ipfs.getLogger().info('*** End Import ***')\\n    this.host = null\\n    this.loaded = null\\n    this.isEmpty = null\\n    this.notLoaded = null\\n    this.resolved = null\\n    this.notResolved = null\\n    this.added = null\\n    this.updated = null\\n    this.merged = null\\n  }\\n\\n  IpfsImport.prototype.load = async function (\\n    parentUrl,\\n    parentTitle,\\n    field,\\n    url,\\n    password,\\n    load\\n  ) {\\n    var loaded = 0\\n    var removed = 0\\n    var key = null\\n    var resolvedUrl = null\\n    if (\\n      url !== null &&\\n      this.notResolved.indexOf(url) === -1 &&\\n      this.resolved.get(url) === undefined\\n    ) {\\n      try {\\n        var { key, resolvedUrl } = await this.getKey(parentUrl, url)\\n        this.resolved.set(url, key)\\n      } catch (error) {\\n        const msg = 'Failed to Resolve:'\\n        this.notResolved.push(url)\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(\\n          name,\\n          alertFieldFailed`${msg} \\\"${field}\\\" from ${parentUrl}\\\">${parentTitle}</a>`\\n        )\\n      }\\n    }\\n    if (\\n      load &&\\n      key !== null &&\\n      resolvedUrl !== null &&\\n      this.notLoaded.indexOf(key) === -1 &&\\n      this.loaded.get(key) === undefined\\n    ) {\\n      const {\\n        loaded: loadedAdded,\\n        removed: loadedRemoved\\n      } = await this.loadResource(\\n        parentUrl,\\n        parentTitle,\\n        field,\\n        url,\\n        key,\\n        resolvedUrl,\\n        password\\n      )\\n      loaded = loadedAdded\\n      removed = loadedRemoved\\n    }\\n    return {\\n      loaded: loaded,\\n      removed: removed\\n    }\\n  }\\n\\n  IpfsImport.prototype.loadResource = async function (\\n    parentUrl,\\n    parentTitle,\\n    parentField,\\n    url,\\n    key,\\n    resolvedKey,\\n    password\\n  ) {\\n    var loaded = 0\\n    var removed = 0\\n    var content = null\\n    var imported = new Map()\\n    var tiddlers = null\\n    try {\\n      // Load\\n      content = await $tw.ipfs.loadToUtf8(resolvedKey, password)\\n      if ($tw.ipfs.isJson(content)) {\\n        tiddlers = $tw.wiki.deserializeTiddlers(\\n          '.json',\\n          content,\\n          $tw.wiki.getCreationFields()\\n        )\\n      } else {\\n        tiddlers = $tw.wiki.deserializeTiddlers(\\n          '.tid',\\n          content,\\n          $tw.wiki.getCreationFields()\\n        )\\n      }\\n      // Loaded\\n      if (tiddlers !== undefined && tiddlers !== null) {\\n        this.loaded.set(key, {\\n          imported: imported,\\n          resolvedKey: resolvedKey,\\n          url: url\\n        })\\n        for (var i in tiddlers) {\\n          const tiddler = tiddlers[i]\\n          var title = tiddler.title\\n          if (title === undefined || title == null || title.trim() === '') {\\n            const msg = 'Ignore Unknown:'\\n            const field = 'Title'\\n            $tw.ipfs.getLogger().info(\\n              `${msg} \\\"${field}\\\"\\n ${resolvedKey}\\n from \\\"${parentField}\\\", \\\"${parentTitle}\\\"\\n ${parentUrl}`\\n            )\\n            $tw.utils.alert(\\n              name,\\n              alertFailed`${msg} ${resolvedKey}\\\">${field}</a>, from \\\"${parentField}\\\", ${parentUrl}\\\">${parentTitle}</a>`\\n            )\\n            removed += 1\\n            continue\\n          }\\n          if (imported.get(title) !== undefined) {\\n            const msg = 'Ignore Duplicate:'\\n            $tw.ipfs.getLogger().info(\\n              `${msg} \\\"${title}\\\"\\n ${resolvedKey}\\n from \\\"${parentField}\\\", \\\"${parentTitle}\\\"\\n ${parentUrl}`\\n            )\\n            $tw.utils.alert(\\n              name,\\n              alertFailed`${msg} ${resolvedKey}\\\">${title}</a>, from \\\"${parentField}\\\", ${parentUrl}\\\">${parentTitle}</a>`\\n            )\\n            removed += 1\\n            continue\\n          }\\n          var type = tiddler.type\\n          if (type === undefined || type == null) {\\n            type = 'text/vnd.tiddlywiki'\\n          }\\n          var info = $tw.config.contentTypeInfo[type]\\n          if (info === undefined || info == null) {\\n            const msg = 'Unknown:'\\n            const field = 'Content-Type'\\n            $tw.ipfs.getLogger().info(\\n              `${msg} \\\"${field}\\\": \\\"${title}\\\"\\n ${resolvedKey}`\\n            )\\n            $tw.utils.alert(\\n              name,\\n              alertFieldFailed`${msg} \\\"${field}\\\": ${resolvedKey}\\\">${title}</a>`\\n            )\\n            // Default\\n            type = 'text/vnd.tiddlywiki'\\n            info = $tw.config.contentTypeInfo[type]\\n          }\\n          tiddler.type = type\\n          // Next\\n          var canonicalUri = tiddler._canonical_uri\\n          canonicalUri =\\n            canonicalUri === undefined ||\\n            canonicalUri == null ||\\n            canonicalUri.trim() === ''\\n              ? null\\n              : canonicalUri.trim()\\n          tiddler._canonical_uri = canonicalUri\\n          var importUri = tiddler._import_uri\\n          importUri =\\n            importUri === undefined ||\\n            importUri == null ||\\n            importUri.trim() === ''\\n              ? null\\n              : importUri.trim()\\n          tiddler._import_uri = importUri\\n          if (canonicalUri !== null || importUri !== null) {\\n            password = tiddler._password\\n            password =\\n              password === undefined ||\\n              password == null ||\\n              password.trim() === ''\\n                ? null\\n                : password.trim()\\n            if (importUri !== null) {\\n              const {\\n                loaded: loadedAdded,\\n                removed: loadedRemoved\\n              } = await this.load(\\n                resolvedKey,\\n                title,\\n                '_import_uri',\\n                importUri,\\n                password,\\n                true\\n              )\\n              loaded += loadedAdded\\n              removed += loadedRemoved\\n            }\\n            if (canonicalUri !== null) {\\n              var load = true\\n              if (\\n                info.encoding === 'base64' ||\\n                tiddler.type === 'image/svg+xml'\\n              ) {\\n                load = false\\n              }\\n              const {\\n                loaded: loadedAdded,\\n                removed: loadedRemoved\\n              } = await this.load(\\n                resolvedKey,\\n                title,\\n                'canonical_uri',\\n                canonicalUri,\\n                password,\\n                load\\n              )\\n              loaded += loadedAdded\\n              removed += loadedRemoved\\n            }\\n          }\\n          imported.set(title, tiddler)\\n          loaded += 1\\n        }\\n      }\\n      if (imported.size === 0) {\\n        this.isEmpty.push(key)\\n        const msg = 'Empty:'\\n        const field = 'Resource'\\n        $tw.ipfs.getLogger().info(\\n          `${msg} \\\"${field}\\\"\\n ${resolvedKey}\\n from \\\"${parentField}\\\", \\\"${parentTitle}\\\"\\n ${parentUrl}`\\n        )\\n        $tw.utils.alert(\\n          name,\\n          alertFailed`${msg} ${resolvedKey}\\\">${field}</a> from \\\"${parentField}\\\", ${parentUrl}\\\">${parentTitle}</a>`\\n        )\\n      }\\n    } catch (error) {\\n      this.notLoaded.push(key)\\n      const msg = 'Failed to Load:'\\n      const field = 'Resource'\\n      $tw.ipfs.getLogger().info(\\n        `${msg} \\\"${field}\\\"\\n ${resolvedKey}\\n from \\\"${parentField}\\\", \\\"${parentTitle}\\\"\\n ${parentUrl}`\\n      )\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(\\n        name,\\n        alertFailed`${msg} ${resolvedKey}\\\">${field}</a> from \\\"${parentField}\\\", ${parentUrl}\\\">${parentTitle}</a>`\\n      )\\n    }\\n    return {\\n      loaded: loaded,\\n      removed: removed\\n    }\\n  }\\n\\n  IpfsImport.prototype.processImported = function () {\\n    var processed = 0\\n    var removed = 0\\n    var processedTitles = []\\n    for (var key of this.loaded.keys()) {\\n      const { imported, resolvedKey } = this.loaded.get(key)\\n      for (var title of imported.keys()) {\\n        if (processedTitles.indexOf(title) !== -1) {\\n          continue\\n        }\\n        const keys = []\\n        const tiddler = imported.get(title)\\n        var type = tiddler.type\\n        var info = $tw.config.contentTypeInfo[type]\\n        var canonicalUri = tiddler._canonical_uri\\n        canonicalUri =\\n          canonicalUri === undefined ||\\n          canonicalUri == null ||\\n          canonicalUri.trim() === ''\\n            ? null\\n            : canonicalUri.trim()\\n        var importUri = tiddler._import_uri\\n        importUri =\\n          importUri === undefined ||\\n          importUri == null ||\\n          importUri.trim() === ''\\n            ? null\\n            : importUri.trim()\\n        if (canonicalUri == null && importUri == null) {\\n          keys.push(key)\\n        } else if (canonicalUri == null && importUri !== null) {\\n          const msg = 'Missing:'\\n          const field = '_canonical_uri'\\n          $tw.ipfs.getLogger().info(\\n            `${msg} \\\"${field}\\\" from ${title}\\\"\\n ${resolvedKey}`\\n          )\\n          $tw.utils.alert(\\n            name,\\n            alertFieldFailed`${msg} \\\"${field}\\\" from ${resolvedKey}\\\">${title}</a>`\\n          )\\n        } else {\\n          var canonicalKey = null\\n          if (\\n            canonicalUri !== null &&\\n            this.notResolved.indexOf(canonicalUri) === -1\\n          ) {\\n            canonicalKey = this.resolved.get(canonicalUri)\\n          }\\n          if (canonicalKey !== undefined && canonicalKey !== null) {\\n            if (key === canonicalKey) {\\n              const msg = 'Cycle:'\\n              const field = '_canonical_uri'\\n              $tw.ipfs.getLogger().info(\\n                `${msg} \\\"${field}\\\" from ${title}\\\"\\n ${resolvedKey}`\\n              )\\n              $tw.utils.alert(\\n                name,\\n                alertFieldFailed`${msg} \\\"${field}\\\" from ${resolvedKey}\\\">${title}</a>`\\n              )\\n            } else if (\\n              this.processCanonicalKey(\\n                keys,\\n                resolvedKey,\\n                title,\\n                canonicalKey,\\n                type,\\n                info\\n              )\\n            ) {\\n              var importKey = null\\n              if (\\n                importUri !== null &&\\n                this.notResolved.indexOf(importUri) === -1\\n              ) {\\n                importKey = this.resolved.get(importUri)\\n              }\\n              if (importKey === undefined || importKey == null) {\\n                keys.push(key)\\n              } else {\\n                if (canonicalKey === importKey) {\\n                  const msg = 'Matching:'\\n                  const field = '\\\"_canonical_uri\\\" and \\\"_import_uri\\\"'\\n                  $tw.ipfs.getLogger().info(\\n                    `${msg} ${field} from \\\"${title}\\\"\\n ${resolvedKey}`\\n                  )\\n                  $tw.utils.alert(\\n                    name,\\n                    alertFieldFailed`${msg} ${field} from ${resolvedKey}\\\">${title}</a>`\\n                  )\\n                } else if (key === importKey) {\\n                  const msg = 'Cycle:'\\n                  const field = '_import_uri'\\n                  $tw.ipfs.getLogger().info(\\n                    `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${resolvedKey}`\\n                  )\\n                  $tw.utils.alert(\\n                    name,\\n                    alertFieldFailed`${msg} \\\"${field}\\\" from ${resolvedKey}\\\">${title}</a>`\\n                  )\\n                } else {\\n                  keys.push(key)\\n                  this.processImportKey(\\n                    keys,\\n                    resolvedKey,\\n                    title,\\n                    canonicalKey,\\n                    importKey\\n                  )\\n                }\\n              }\\n            }\\n          }\\n        }\\n        processed += keys.length\\n        removed += this.removeTiddlers(keys, title)\\n        processedTitles.push(title)\\n      }\\n    }\\n    return {\\n      processed: processed,\\n      removed: removed\\n    }\\n  }\\n\\n  IpfsImport.prototype.processCanonicalKey = function (\\n    keys,\\n    parentResolvedKey,\\n    title,\\n    canonicalKey,\\n    type,\\n    info\\n  ) {\\n    if (info.encoding === 'base64' || type === 'image/svg+xml') {\\n      keys.push(canonicalKey)\\n      return true\\n    }\\n    if (this.notLoaded.indexOf(canonicalKey) !== -1) {\\n      return false\\n    }\\n    if (this.loaded.get(canonicalKey) === undefined) {\\n      return false\\n    }\\n    const { imported, resolvedKey } = this.loaded.get(canonicalKey)\\n    if (imported === undefined) {\\n      return false\\n    }\\n    const tiddler = imported.get(title)\\n    if (tiddler === undefined) {\\n      return false\\n    }\\n    var canonicalUri = tiddler._canonical_uri\\n    canonicalUri =\\n      canonicalUri == null ||\\n      canonicalUri === undefined ||\\n      canonicalUri.trim() === ''\\n        ? null\\n        : canonicalUri.trim()\\n    if (canonicalUri !== null) {\\n      const msg = 'Inconsistency:'\\n      const field = '_canonical_uri'\\n      $tw.ipfs.getLogger().info(\\n        `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${resolvedKey}\\n and ${parentResolvedKey}`\\n      )\\n      $tw.utils.alert(\\n        name,\\n        alertConditionFailed`${msg} \\\"${field}\\\" from ${resolvedKey}\\\">${title}</a> and ${parentResolvedKey}\\\">${title}</a>`\\n      )\\n      return false\\n    }\\n    var importUri = tiddler._import_uri\\n    importUri =\\n      importUri == null || importUri === undefined || importUri.trim() === ''\\n        ? null\\n        : importUri.trim()\\n    if (importUri !== null) {\\n      const msg = 'Inconsistency:'\\n      const field = '_import_uri'\\n      $tw.ipfs.getLogger().info(\\n        `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${resolvedKey}\\n and ${parentResolvedKey}`\\n      )\\n      $tw.utils.alert(\\n        name,\\n        alertConditionFailed`${msg} \\\"${field}\\\" from ${resolvedKey}\\\">${title}</a> and ${parentResolvedKey}\\\">${title}</a>`\\n      )\\n      return false\\n    }\\n    keys.push(canonicalKey)\\n    return true\\n  }\\n\\n  IpfsImport.prototype.processImportKey = function (\\n    keys,\\n    parentResolvedKey,\\n    title,\\n    canonicalKey,\\n    importKey\\n  ) {\\n    if (this.notLoaded.indexOf(importKey) !== -1) {\\n      return\\n    }\\n    if (this.loaded.get(importKey) === undefined) {\\n      return\\n    }\\n    const { imported, resolvedKey: importResolvedKey } = this.loaded.get(\\n      importKey\\n    )\\n    if (imported === undefined) {\\n      return\\n    }\\n    const tiddler = imported.get(title)\\n    if (tiddler === undefined) {\\n      return\\n    }\\n    var targetCanonicalUri = tiddler._canonical_uri\\n    targetCanonicalUri =\\n      targetCanonicalUri == null ||\\n      targetCanonicalUri === undefined ||\\n      targetCanonicalUri.trim() === ''\\n        ? null\\n        : targetCanonicalUri.trim()\\n    var targetCanonicalKey = null\\n    if (\\n      targetCanonicalUri !== null &&\\n      this.notResolved.indexOf(targetCanonicalUri) === -1\\n    ) {\\n      targetCanonicalKey = this.resolved.get(targetCanonicalUri)\\n    }\\n    if (\\n      targetCanonicalKey !== undefined &&\\n      targetCanonicalKey !== null &&\\n      canonicalKey !== targetCanonicalKey\\n    ) {\\n      const msg = 'Inconsistency:'\\n      const field = '_canonical_uri'\\n      $tw.ipfs.getLogger().info(\\n        `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${importResolvedKey}\\n and ${parentResolvedKey}`\\n      )\\n      $tw.utils.alert(\\n        name,\\n        alertConditionFailed`${msg} \\\"${field}\\\" from ${importResolvedKey}\\\">${title}</a> and ${parentResolvedKey}\\\">${title}</a>`\\n      )\\n      return\\n    }\\n    var nextImportUri = tiddler._import_uri\\n    nextImportUri =\\n      nextImportUri == null ||\\n      nextImportUri === undefined ||\\n      nextImportUri.trim() === ''\\n        ? null\\n        : nextImportUri.trim()\\n    if (targetCanonicalUri == null && nextImportUri !== null) {\\n      const msg = 'Missing:'\\n      const field = '_canonical_uri'\\n      $tw.ipfs.getLogger().info(\\n        `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${importResolvedKey}`\\n      )\\n      $tw.utils.alert(\\n        name,\\n        alertFieldFailed`${msg} \\\"${field}\\\" from ${importResolvedKey}\\\">${title}</a>`\\n      )\\n      return\\n    }\\n    if (nextImportUri == null) {\\n      keys.push(importKey)\\n    } else {\\n      var nextImportKey = null\\n      if (\\n        nextImportUri !== null &&\\n        this.notResolved.indexOf(nextImportUri) === -1\\n      ) {\\n        nextImportKey = this.resolved.get(nextImportUri)\\n      }\\n      if (nextImportKey !== undefined && nextImportKey !== null) {\\n        if (canonicalKey === nextImportKey) {\\n          const msg = 'Matching:'\\n          const field = '\\\"_canonical_uri\\\" and \\\"_import_uri\\\"'\\n          $tw.ipfs.getLogger().info(\\n            `${msg} ${field} from \\\"${title}\\\"\\n ${importResolvedKey}`\\n          )\\n          $tw.utils.alert(\\n            name,\\n            alertFieldFailed`${msg} ${field} from ${importResolvedKey}\\\">${title}</a>`\\n          )\\n        } else if (keys.indexOf(nextImportKey) !== -1) {\\n          const msg = 'Cycle:'\\n          const field = '_import_uri'\\n          $tw.ipfs.getLogger().info(\\n            `${msg} \\\"${field}\\\" from \\\"${title}\\\"\\n ${importResolvedKey}`\\n          )\\n          $tw.utils.alert(\\n            name,\\n            alertFieldFailed`${msg} \\\"${field}\\\" from ${importResolvedKey}\\\">${title}</a>`\\n          )\\n        } else {\\n          keys.push(importKey)\\n          this.processImportKey(\\n            keys,\\n            importResolvedKey,\\n            title,\\n            canonicalKey,\\n            nextImportKey\\n          )\\n        }\\n      }\\n    }\\n  }\\n\\n  IpfsImport.prototype.importTiddlers = function () {\\n    var processedTitles = []\\n    for (var key of this.loaded.keys()) {\\n      const { imported, url } = this.loaded.get(key)\\n      for (var title of imported.keys()) {\\n        if (processedTitles.indexOf(title) !== -1) {\\n          continue\\n        }\\n        const tiddler = imported.get(title)\\n        var type = tiddler.type\\n        var info = $tw.config.contentTypeInfo[type]\\n        var canonicalUri = tiddler._canonical_uri\\n        canonicalUri =\\n          canonicalUri === undefined ||\\n          canonicalUri == null ||\\n          canonicalUri.trim() === ''\\n            ? null\\n            : canonicalUri.trim()\\n        var importUri = tiddler._import_uri\\n        importUri =\\n          importUri === undefined ||\\n          importUri == null ||\\n          importUri.trim() === ''\\n            ? null\\n            : importUri.trim()\\n        var exist = null\\n        if (importUri !== null) {\\n          exist = this.importTiddler(title, importUri)\\n        }\\n        if (\\n          exist == null &&\\n          canonicalUri !== null &&\\n          info.encoding !== 'base64' &&\\n          type !== 'image/svg+xml'\\n        ) {\\n          this.importTiddler(title, canonicalUri)\\n        }\\n        exist = this.mergeTiddler(title, url)\\n        if (exist !== null) {\\n          const merged = this.merged.get(title)\\n          var type = merged.type\\n          var info = $tw.config.contentTypeInfo[type]\\n          if (info.encoding === 'base64' || type === 'image/svg+xml') {\\n            merged._import_uri = this.rootUri\\n          } else {\\n            var canonicalUri = merged._canonical_uri\\n            if (canonicalUri === undefined || canonicalUri == null) {\\n              if (url !== this.rootUri) {\\n                merged._canonical_uri = this.resolved.get(url)\\n                merged._import_uri = this.rootUri\\n              } else {\\n                merged._canonical_uri = this.rootUri\\n              }\\n            } else {\\n              merged._canonical_uri = this.resolved.get(merged._canonical_uri)\\n              if (canonicalUri !== this.rootUri) {\\n                merged._import_uri = this.rootUri\\n              }\\n            }\\n          }\\n          if (exist) {\\n            this.updated.push(title)\\n          } else {\\n            this.added.push(title)\\n          }\\n          processedTitles.push(title)\\n        }\\n      }\\n    }\\n  }\\n\\n  IpfsImport.prototype.importTiddler = function (title, uri) {\\n    const key = this.resolved.get(uri)\\n    if (key === undefined) {\\n      return null\\n    }\\n    if (this.loaded.get(key) === undefined) {\\n      return null\\n    }\\n    const { imported } = this.loaded.get(key)\\n    if (imported === undefined) {\\n      return null\\n    }\\n    const tiddler = imported.get(title)\\n    if (tiddler === undefined) {\\n      return null\\n    }\\n    var type = tiddler.type\\n    var info = $tw.config.contentTypeInfo[type]\\n    var importUri = tiddler._import_uri\\n    importUri =\\n      importUri == null || importUri === undefined || importUri.trim() === ''\\n        ? null\\n        : importUri.trim()\\n    var canonicalUri = tiddler._canonical_uri\\n    canonicalUri =\\n      canonicalUri == null ||\\n      canonicalUri === undefined ||\\n      canonicalUri.trim() === ''\\n        ? null\\n        : canonicalUri.trim()\\n    var exist = null\\n    if (importUri !== null) {\\n      exist = this.importTiddler(title, importUri)\\n    }\\n    if (\\n      exist == null &&\\n      canonicalUri !== null &&\\n      info.encoding !== 'base64' &&\\n      type !== 'image/svg+xml'\\n    ) {\\n      this.importTiddler(title, canonicalUri)\\n    }\\n    return this.mergeTiddler(title, uri)\\n  }\\n\\n  IpfsImport.prototype.mergeTiddler = function (title, uri) {\\n    var merged = null\\n    var currentTiddler = null\\n    const key = this.resolved.get(uri)\\n    if (key === undefined) {\\n      return null\\n    }\\n    if (this.loaded.get(key) === undefined) {\\n      return null\\n    }\\n    const { imported } = this.loaded.get(key)\\n    if (imported === undefined) {\\n      return null\\n    }\\n    const tiddler = imported.get(title)\\n    if (tiddler === undefined) {\\n      return null\\n    }\\n    // Retrieve target host Tiddler\\n    if (this.host !== null && this.host.fields.title === title) {\\n      currentTiddler = this.host\\n    } else {\\n      currentTiddler = $tw.wiki.getTiddler(title)\\n    }\\n    // Retrieve or prepare merged content\\n    merged = this.merged.get(title)\\n    if (merged === undefined) {\\n      merged = {}\\n      this.merged.set(title, merged)\\n    }\\n    // Tags\\n    var tags = tiddler.tags !== undefined ? tiddler.tags : ''\\n    // Fields\\n    var hasModified = false\\n    for (var field in tiddler) {\\n      // Discard\\n      if (field === 'tags') {\\n        continue\\n      }\\n      if (field === 'modified') {\\n        hasModified = true\\n      }\\n      // Unknown from leaf to top, we keep the top modified field\\n      if (\\n        merged[field] === undefined ||\\n        merged[field] == null ||\\n        field === '_canonical_uri' ||\\n        field === '_import_uri' ||\\n        field === 'modified'\\n      ) {\\n        merged[field] = tiddler[field]\\n      }\\n    }\\n    if (hasModified === false) {\\n      merged.modified = new Date()\\n    }\\n    // Merge current Tiddler Tags\\n    if (currentTiddler !== undefined && currentTiddler !== null) {\\n      const currentTags = (currentTiddler.fields.tags || []).slice(0)\\n      for (var i = 0; i < currentTags.length; i++) {\\n        const currentTag = currentTags[i]\\n        if (tags.includes(currentTag) === false) {\\n          tags = `${tags} [[${currentTag}]]`\\n        }\\n      }\\n    }\\n    // Merge merged Tags\\n    if (merged.tags !== undefined && merged.tags !== null) {\\n      const mergedTags = $tw.utils.parseStringArray(merged.tags, false)\\n      for (var i = 0; i < mergedTags.length; i++) {\\n        const mergedTag = mergedTags[i]\\n        if (tags.includes(mergedTag) === false) {\\n          tags = `${tags} [[${mergedTag}]]`\\n        }\\n      }\\n    }\\n    // IPFS tag\\n    if (this.isIpfs(key) && tags.includes('$:/isIpfs') === false) {\\n      tags = `${tags} $:/isIpfs`\\n    }\\n    // Imported tag\\n    if (tags.includes('$:/isImported') === false) {\\n      tags = `${tags} $:/isImported`\\n    }\\n    // Processed tags\\n    merged.tags = tags\\n    if (currentTiddler !== undefined && currentTiddler !== null) {\\n      return true\\n    }\\n    return false\\n  }\\n\\n  exports.IpfsImport = IpfsImport\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/modules/widgets/ipfs-link.js\": {\n            \"title\": \"$:/plugins/ipfs/modules/widgets/ipfs-link.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/modules/widgets/ipfs-link.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: widget\\n\\nIPFS link widget\\n\\n\\\\*/\\n\\n/**\\n * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n *\\n * Copyright (c) 2004-2007, Jeremy Ruston\\n * Copyright (c) 2007-2018, UnaMesa Association\\n * Copyright (c) 2019-2020, Blue Light\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without\\n * modification, are permitted provided that the following conditions are met:\\n *\\n * * Redistributions of source code must retain the above copyright notice, this\\n *   list of conditions and the following disclaimer.\\n *\\n * * Redistributions in binary form must reproduce the above copyright notice,\\n *   this list of conditions and the following disclaimer in the documentation\\n *   and/or other materials provided with the distribution.\\n *\\n * * Neither the name of the copyright holder nor the names of its\\n *   contributors may be used to endorse or promote products derived from\\n *   this software without specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n */\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  var Widget = require('$:/core/modules/widgets/widget.js').widget\\n\\n  const name = 'ipfs-link'\\n\\n  var IpfsLinkWidget = function (parseTreeNode, options) {\\n    this.initialise(parseTreeNode, options)\\n  }\\n\\n  /*\\n   * Inherit from the base widget class\\n   */\\n  IpfsLinkWidget.prototype = new Widget()\\n\\n  /*\\n   * Render this widget into the DOM\\n   */\\n  IpfsLinkWidget.prototype.render = function (parent, nextSibling) {\\n    var self = this\\n    // Save the parent dom node\\n    this.parentDomNode = parent\\n    // Compute our attributes\\n    this.computeAttributes()\\n    // Execute our logic\\n    this.execute()\\n    // Tiddler link\\n    var value = this.url !== undefined ? this.url : this.value\\n    var tiddler = $tw.wiki.getTiddler(value)\\n    if (tiddler !== undefined && tiddler !== null) {\\n      this.renderTiddlerLink(parent, nextSibling)\\n    } else {\\n      this.renderText(parent, nextSibling)\\n      $tw.ipfs\\n        .resolveUrl(false, false, value)\\n        .then(data => {\\n          var { normalizedUrl } = data\\n          if (normalizedUrl !== null) {\\n            const sibling = self.findNextSiblingDomNode()\\n            self.removeChildDomNodes()\\n            self.renderExternalLink(\\n              parent,\\n              nextSibling !== null ? nextSibling : sibling,\\n              normalizedUrl\\n            )\\n          }\\n        })\\n        .catch(error => {\\n          $tw.ipfs.getLogger().error(error)\\n        })\\n    }\\n  }\\n\\n  /*\\n   * Render this widget into the DOM\\n   */\\n  IpfsLinkWidget.prototype.renderExternalLink = function (\\n    parent,\\n    nextSibling,\\n    url\\n  ) {\\n    // Sanitise the specified tag\\n    var tag = this.linkTag\\n    if ($tw.config.htmlUnsafeElements.indexOf(tag) !== -1) {\\n      tag = 'a'\\n    }\\n    // Create our element\\n    var namespace = this.getVariable('namespace', {\\n      defaultValue: 'http://www.w3.org/1999/xhtml'\\n    })\\n    var domNode = this.document.createElementNS(namespace, tag)\\n    domNode.setAttribute('href', url)\\n    // Add a click event handler\\n    $tw.utils.addEventListeners(domNode, [\\n      {\\n        name: 'click',\\n        handlerObject: this,\\n        handlerMethod: 'handleExternalClickEvent'\\n      }\\n    ])\\n    // Assign classes\\n    var classes = []\\n    if (this.classes) {\\n      classes.push(this.classes)\\n    }\\n    if (classes.length > 0) {\\n      domNode.setAttribute('class', classes.join(' '))\\n    }\\n    if (this['aria-label']) {\\n      domNode.setAttribute('aria-label', this['aria-label'])\\n    }\\n    parent.insertBefore(domNode, nextSibling)\\n    this.renderChildren(domNode, null)\\n    this.domNodes.push(domNode)\\n  }\\n\\n  /*\\n   * Render this widget into the DOM\\n   */\\n  IpfsLinkWidget.prototype.renderTiddlerLink = function (parent, nextSibling) {\\n    // self\\n    var self = this\\n    // Sanitise the specified tag\\n    var tag = this.linkTag\\n    if ($tw.config.htmlUnsafeElements.indexOf(tag) !== -1) {\\n      tag = 'a'\\n    }\\n    var value = this.url !== undefined ? this.url : this.value\\n    var isMissing = !this.wiki.tiddlerExists(value)\\n    var isShadow = this.wiki.isShadowTiddler(value)\\n    // Create our element\\n    var namespace = this.getVariable('namespace', {\\n      defaultValue: 'http://www.w3.org/1999/xhtml'\\n    })\\n    var domNode = this.document.createElementNS(namespace, tag)\\n    // Assign classes\\n    var classes = []\\n    if (this.overrideClasses === undefined) {\\n      classes.push('tc-tiddlylink')\\n      if (isShadow) {\\n        classes.push('tc-tiddlylink-shadow')\\n      }\\n      if (isMissing && !isShadow) {\\n        classes.push('tc-tiddlylink-missing')\\n      } else {\\n        if (!isMissing) {\\n          classes.push('tc-tiddlylink-resolves')\\n        }\\n      }\\n      if (this.linkClasses) {\\n        classes.push(this.linkClasses)\\n      }\\n    } else if (this.overrideClasses !== '') {\\n      classes.push(this.overrideClasses)\\n    }\\n    if (classes.length > 0) {\\n      domNode.setAttribute('class', classes.join(' '))\\n    }\\n    // Set an href\\n    var wikilinkTransformFilter = this.getVariable('tv-filter-export-link')\\n    var wikiLinkText\\n    if (wikilinkTransformFilter) {\\n      // Use the filter to construct the href\\n      wikiLinkText = this.wiki.filterTiddlers(\\n        wikilinkTransformFilter,\\n        this,\\n        function (iterator) {\\n          iterator(self.wiki.getTiddler(value), value)\\n        }\\n      )[0]\\n    } else {\\n      // Expand the tv-wikilink-template variable to construct the href\\n      var wikiLinkTemplateMacro = this.getVariable('tv-wikilink-template')\\n      var wikiLinkTemplate = wikiLinkTemplateMacro\\n        ? wikiLinkTemplateMacro.trim()\\n        : '#$uri_encoded$'\\n      wikiLinkText = $tw.utils.replaceString(\\n        wikiLinkTemplate,\\n        '$uri_encoded$',\\n        encodeURIComponent(value)\\n      )\\n      wikiLinkText = $tw.utils.replaceString(\\n        wikiLinkText,\\n        '$uri_doubleencoded$',\\n        encodeURIComponent(encodeURIComponent(value))\\n      )\\n    }\\n    // Override with the value of tv-get-export-link if defined\\n    wikiLinkText = this.getVariable('tv-get-export-link', {\\n      params: [{ name: 'to', value: value }],\\n      defaultValue: wikiLinkText\\n    })\\n    if (tag === 'a') {\\n      var namespaceHref =\\n        namespace === 'http://www.w3.org/2000/svg'\\n          ? 'http://www.w3.org/1999/xlink'\\n          : undefined\\n      domNode.setAttributeNS(namespaceHref, 'href', wikiLinkText)\\n    }\\n    // Set the tabindex\\n    if (this.tabIndex) {\\n      domNode.setAttribute('tabindex', this.tabIndex)\\n    }\\n    // Set the tooltip\\n    // HACK: Performance issues with re-parsing the tooltip prevent us defaulting the tooltip to \\\"<$transclude field='tooltip'><$transclude field='title'/></$transclude>\\\"\\n    var tooltipWikiText =\\n      this.tooltip || this.getVariable('tv-wikilink-tooltip')\\n    if (tooltipWikiText) {\\n      var tooltipText = this.wiki.renderText(\\n        'text/plain',\\n        'text/vnd.tiddlywiki',\\n        tooltipWikiText,\\n        {\\n          parseAsInline: true,\\n          variables: {\\n            currentTiddler: value\\n          },\\n          parentWidget: this\\n        }\\n      )\\n      domNode.setAttribute('title', tooltipText)\\n    }\\n    if (this['aria-label']) {\\n      domNode.setAttribute('aria-label', this['aria-label'])\\n    }\\n    // Add a click event handler\\n    $tw.utils.addEventListeners(domNode, [\\n      {\\n        name: 'click',\\n        handlerObject: this,\\n        handlerMethod: 'handleTiddlerClickEvent'\\n      }\\n    ])\\n    // Make the link draggable if required\\n    if (this.draggable === 'yes') {\\n      $tw.utils.makeDraggable({\\n        domNode: domNode,\\n        dragTiddlerFn: function () {\\n          return value\\n        },\\n        widget: this\\n      })\\n    }\\n    parent.insertBefore(domNode, nextSibling)\\n    this.renderChildren(domNode, null)\\n    this.domNodes.push(domNode)\\n  }\\n\\n  /*\\n   * Render this widget into the DOM\\n   */\\n  IpfsLinkWidget.prototype.renderText = function (parent, nextSibling) {\\n    const domNode = this.document.createElement('span')\\n    parent.insertBefore(domNode, nextSibling)\\n    this.renderChildren(domNode, null)\\n    this.domNodes.push(domNode)\\n  }\\n\\n  IpfsLinkWidget.prototype.handleExternalClickEvent = function (event) {\\n    const value = this.url !== undefined ? this.url : this.value\\n    $tw.ipfs\\n      .resolveUrl(true, true, value)\\n      .then(data => {\\n        const { resolvedUrl } = data\\n        if (resolvedUrl !== null) {\\n          window.open(resolvedUrl.href, '_blank', 'noopener,noreferrer')\\n        }\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n    event.preventDefault()\\n    event.stopPropagation()\\n    return false\\n  }\\n\\n  IpfsLinkWidget.prototype.handleTiddlerClickEvent = function (event) {\\n    // Send the click on its way as a navigate event\\n    const bounds = this.domNodes[0].getBoundingClientRect()\\n    const value = this.url !== undefined ? this.url : this.value\\n    this.dispatchEvent({\\n      type: 'tm-navigate',\\n      navigateTo: value,\\n      navigateFromTitle: this.getVariable('storyTiddler'),\\n      navigateFromNode: this,\\n      navigateFromClientRect: {\\n        top: bounds.top,\\n        left: bounds.left,\\n        width: bounds.width,\\n        right: bounds.right,\\n        bottom: bounds.bottom,\\n        height: bounds.height\\n      },\\n      navigateSuppressNavigation:\\n        event.metaKey || event.ctrlKey || event.button === 1,\\n      metaKey: event.metaKey,\\n      ctrlKey: event.ctrlKey,\\n      altKey: event.altKey,\\n      shiftKey: event.shiftKey\\n    })\\n    if (this.domNodes[0].hasAttribute('href')) {\\n      event.preventDefault()\\n    }\\n    event.stopPropagation()\\n    return false\\n  }\\n\\n  /*\\n   * Compute the internal state of the widget\\n   */\\n  IpfsLinkWidget.prototype.execute = function () {\\n    // Pick up our attributes\\n    this.url = undefined\\n    this.tiddler =\\n      this.getAttribute('tiddler') !== undefined\\n        ? this.getAttribute('tiddler')\\n        : this.getVariable('currentTiddler')\\n    const tiddler = $tw.wiki.getTiddler(this.tiddler)\\n    this.field = this.getAttribute('field')\\n    this.value =\\n      this.getAttribute('value') !== undefined\\n        ? this.getAttribute('value')\\n        : tiddler.getFieldString(this.field) !== ''\\n        ? tiddler.getFieldString(this.field)\\n        : this.tiddler\\n    if (\\n      this.getAttribute('value') !== undefined &&\\n      tiddler.getFieldString(this.getAttribute('value')) !== ''\\n    ) {\\n      this.url = tiddler.getFieldString(this.getAttribute('value'))\\n    }\\n    this.tooltip = this.getAttribute('tooltip')\\n    this['aria-label'] = this.getAttribute('aria-label')\\n    this.linkClasses = this.getAttribute('class') || 'tc-ipfs-link-external'\\n    this.overrideClasses = this.getAttribute('overrideClass')\\n    this.tabIndex = this.getAttribute('tabindex')\\n    this.draggable = this.getAttribute('draggable', 'yes')\\n    this.linkTag = this.getAttribute('tag', 'a')\\n    var templateTree\\n    if (this.parseTreeNode.children && this.parseTreeNode.children.length > 0) {\\n      templateTree = this.parseTreeNode.children\\n    } else {\\n      templateTree = [{ type: 'text', text: this.value }]\\n    }\\n    this.makeChildWidgets(templateTree)\\n  }\\n\\n  /*\\n   * Selectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\\n   */\\n  IpfsLinkWidget.prototype.refresh = function (changedTiddlers) {\\n    const changedAttributes = this.computeAttributes()\\n    const tiddler = $tw.wiki.getTiddler(this.tiddler)\\n    var value = null\\n    if (this.field !== undefined && this.field !== null) {\\n      value = tiddler.getFieldString(this.field)\\n    }\\n    if (\\n      changedAttributes.field ||\\n      changedTiddlers[this.field] ||\\n      changedAttributes.value ||\\n      changedTiddlers[this.value] ||\\n      changedAttributes.tooltip ||\\n      changedAttributes['aria-label'] ||\\n      changedTiddlers['$:/ipfs/saver/gateway'] ||\\n      changedTiddlers['$:/ipfs/saver/policy'] ||\\n      (value !== null && value !== this.value)\\n    ) {\\n      this.refreshSelf()\\n      return true\\n    }\\n    return this.refreshChildren(changedTiddlers)\\n  }\\n\\n  exports.ipfslink = IpfsLinkWidget\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"widget\"\n        },\n        \"$:/plugins/ipfs/ipfs-password.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-password.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-password.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: startup\\n\\nCompression handling\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  // Export name and synchronous status\\n  exports.name = 'ipfs-password'\\n  exports.platforms = ['browser']\\n  exports.after = ['startup']\\n  exports.synchronous = true\\n\\n  exports.startup = function () {\\n    var setPassword = function () {\\n      $tw.passwordPrompt.createPrompt({\\n        serviceName: $tw.language.getString('Encryption/PromptSetPassword'),\\n        noUserName: true,\\n        submitText: $tw.language.getString('Encryption/SetPassword'),\\n        canCancel: true,\\n        repeatPassword: true,\\n        callback: function (data) {\\n          if (data) {\\n            $tw.crypto.setPassword(data.password)\\n          } else {\\n            $tw.crypto.setPassword(null)\\n          }\\n          return true // Get rid of the password prompt\\n        }\\n      })\\n    }\\n    // Ensure that $:/isEncrypted is maintained properly\\n    $tw.wiki.addEventListener('change', function (changes) {\\n      if ($tw.utils.hop(changes, '$:/config/Standford')) {\\n        const encrypted = $tw.wiki.getTiddler('$:/isEncrypted')\\n        if (encrypted.fields.text === 'yes') {\\n          const hasPassword = $tw.crypto.hasPassword()\\n          const standford = $tw.wiki.getTiddler('$:/config/Standford')\\n          if (!hasPassword && standford.fields.text === 'yes') {\\n            setPassword()\\n          } else if (hasPassword) {\\n            $tw.rootWidget.dispatchEvent({ type: 'tm-clear-password' })\\n          }\\n        }\\n      }\\n    })\\n    $tw.rootWidget.addEventListener('tm-set-password', async function (event) {\\n      const standford = $tw.wiki.getTiddler('$:/config/Standford')\\n      if (standford.fields.text === 'yes') {\\n        if ($tw.crypto.hasPassword() === false) {\\n          setPassword()\\n        }\\n      } else {\\n        try {\\n          const encryptionKey = await $tw.ipfs.getPublicEncryptionKey()\\n          $tw.crypto.setEncryptionKey(encryptionKey)\\n        } catch (error) {\\n          if (error.name !== 'RejectedUserRequest') {\\n            $tw.ipfs.getLogger().error(error)\\n          }\\n          $tw.utils.alert(name, error.message)\\n          $tw.crypto.setEncryptionKey(null)\\n        }\\n      }\\n    })\\n    $tw.rootWidget.addEventListener('tm-clear-password', async function (\\n      event\\n    ) {\\n      if ($tw.browser) {\\n        const hadPassword = $tw.crypto.hasPassword()\\n        const standford = $tw.wiki.getTiddler('$:/config/Standford')\\n        if (\\n          hadPassword &&\\n          standford.fields.text === 'yes' &&\\n          !confirm($tw.language.getString('Encryption/ConfirmClearPassword'))\\n        ) {\\n          return\\n        }\\n        $tw.crypto.setPassword(null)\\n        if (standford.fields.text === 'no' && hadPassword) {\\n          try {\\n            const encryptionKey = await $tw.ipfs.getPublicEncryptionKey()\\n            $tw.crypto.setEncryptionKey(encryptionKey)\\n          } catch (error) {\\n            if (error.name !== 'RejectedUserRequest') {\\n              $tw.ipfs.getLogger().error(error)\\n            }\\n            $tw.utils.alert(name, error.message)\\n            $tw.crypto.setEncryptionKey(null)\\n          }\\n        }\\n      }\\n    })\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/ipfs/macro/ipfs-plugin-version.js\": {\n            \"title\": \"$:/plugins/ipfs/macro/ipfs-plugin-version.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/macro/ipfs-plugin-version.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: macro\\n\\nIPFS plugin version\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /*\\n   * Information about this macro\\n   */\\n  exports.name = 'ipfs-plugin-version'\\n\\n  exports.params = []\\n\\n  /*\\n   * Run the macro\\n   */\\n  exports.run = function () {\\n    return $tw.wiki.getTiddler('$:/plugins/ipfs').fields.version\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"macro\"\n        },\n        \"$:/plugins/ipfs/ipfs-saver.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-saver.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-saver.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: saver\\n\\nIPFS Saver\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const IpfsController = require('$:/plugins/ipfs/ipfs-controller.js')\\n    .IpfsController\\n\\n  const ensKeyword = 'ens'\\n  const ipfsKeyword = 'ipfs'\\n  const ipnsKeyword = 'ipns'\\n\\n  const name = 'ipfs-saver'\\n\\n  /*\\n   * Select the appropriate saver module and set it up\\n   */\\n  var IpfsSaver = function (wiki) {\\n    // Controller\\n    $tw.ipfs = new IpfsController()\\n    $tw.ipfs.init()\\n    // Log\\n    $tw.ipfs.getLogger().info('ipfs-saver is starting up...')\\n    // Log url policy\\n    const base = $tw.ipfs.getIpfsBaseUrl()\\n    if ($tw.utils.getIpfsUrlPolicy() === 'origin') {\\n      $tw.ipfs.getLogger().info(`Origin Policy: ${base}`)\\n    } else {\\n      $tw.ipfs.getLogger().info(`Gateway Policy: ${base}`)\\n    }\\n  }\\n\\n  IpfsSaver.prototype.save = async function (text, method, callback, options) {\\n    if ($tw.saverHandler.isDirty() === false) {\\n      return false\\n    }\\n    try {\\n      var account = null\\n      var cid = null\\n      var ensCid = null\\n      var ensDomain = null\\n      var ipnsCid = null\\n      var ipnsKey = null\\n      var ipnsName = null\\n      var options = options || {}\\n      var web3 = null\\n      const wiki = $tw.ipfs.getDocumentUrl()\\n      var base = $tw.ipfs.getIpfsBaseUrl()\\n      var nextWiki = $tw.ipfs.getUrl(wiki, base)\\n      // https://github.com/jsdom/whatwg-url/issues/163#issuecomment-667732256\\n      base.pathname = nextWiki.pathname\\n      base.username = nextWiki.username\\n      base.password = nextWiki.password\\n      base.search = nextWiki.search\\n      base.hash = nextWiki.hash\\n      nextWiki = base\\n      try {\\n        var { cid, ipnsKey } = await $tw.ipfs.resolveUrl(false, true, wiki)\\n        if (cid != null) {\\n          await $tw.ipfs.requestToUnpin(cid)\\n        }\\n      } catch (error) {\\n        $tw.ipfs.getLogger().error(error)\\n        callback(error)\\n        return true\\n      }\\n      // IPNS\\n      if (ipnsKey !== null || $tw.utils.getIpfsProtocol() === ipnsKeyword) {\\n        // Resolve current IPNS\\n        if (ipnsKey !== null) {\\n          try {\\n            var { cid: ipnsCid, ipnsName } = await $tw.ipfs.resolveUrl(\\n              true,\\n              false,\\n              wiki\\n            )\\n          } catch (error) {\\n            $tw.ipfs.getLogger().error(error)\\n            $tw.utils.alert(name, error.message)\\n          }\\n        } else {\\n          // Default IPNS\\n          ipnsKey = $tw.utils.getIpfsIpnsKey()\\n          ipnsKey =\\n            ipnsKey === undefined || ipnsKey == null || ipnsKey.trim() === ''\\n              ? null\\n              : ipnsKey.trim()\\n          ipnsName = $tw.utils.getIpfsIpnsName()\\n          ipnsName =\\n            ipnsName === undefined || ipnsName == null || ipnsName.trim() === ''\\n              ? null\\n              : ipnsName.trim()\\n          if (ipnsKey == null && ipnsName == null) {\\n            callback(new Error('Unknown default IPNS identifiers...'))\\n            return true\\n          }\\n          $tw.ipfs.getLogger().info('Processing default IPNS identifiers...')\\n          var identifier = ipnsKey\\n          if (identifier == null) {\\n            identifier = ipnsName\\n          }\\n          try {\\n            var { cid: ipnsCid, ipnsKey, ipnsName } = await $tw.ipfs.resolveUrl(\\n              true,\\n              false,\\n              `/${ipnsKeyword}/${identifier}`\\n            )\\n          } catch (error) {\\n            $tw.ipfs.getLogger().error(error)\\n            $tw.utils.alert(name, error.message)\\n          }\\n        }\\n        if (ipnsCid != null) {\\n          await $tw.ipfs.requestToUnpin(ipnsCid)\\n        }\\n      }\\n      // ENS\\n      if ($tw.utils.getIpfsProtocol() === ensKeyword) {\\n        ensDomain = $tw.utils.getIpfsEnsDomain()\\n        if (ensDomain == null) {\\n          callback(new Error('Undefined ENS domain...'))\\n          return true\\n        }\\n        var { account, web3 } = await $tw.ipfs.getEnabledWeb3Provider()\\n        const isOwner = await $tw.ipfs.isOwner(ensDomain, web3, account)\\n        if (isOwner === false) {\\n          const err = new Error('Unauthorized Account...')\\n          err.name = 'OwnerError'\\n          throw err\\n        }\\n        var { cid: ensCid } = await $tw.ipfs.resolveUrl(\\n          false,\\n          true,\\n          ensDomain,\\n          null,\\n          web3\\n        )\\n        if (ensCid != null) {\\n          await $tw.ipfs.requestToUnpin(ensCid)\\n        }\\n      }\\n      // Upload  current document\\n      $tw.ipfs.getLogger().info(`Uploading wiki: ${text.length}`)\\n      // Add\\n      const { added } = await $tw.ipfs.addToIpfs(text)\\n      // Default next\\n      nextWiki.pathname = `/${ipfsKeyword}/${added}`\\n      // Pin\\n      try {\\n        await $tw.ipfs.pinToIpfs(added)\\n      } catch (error) {\\n        $tw.ipfs.getLogger().warn(error)\\n        $tw.utils.alert(name, error.message)\\n      }\\n      // Publish to IPNS\\n      if (ipnsKey !== null && ipnsName !== null) {\\n        $tw.utils.alert(name, `Publishing IPNS name: ${ipnsName}`)\\n        try {\\n          await $tw.ipfs.publishIpnsName(added, ipnsKey, ipnsName)\\n          nextWiki.pathname = `/${ipnsKeyword}/${ipnsKey}`\\n          $tw.utils.alert(name, `Successfully Published IPNS name: ${ipnsName}`)\\n        } catch (error) {\\n          $tw.ipfs.getLogger().warn(error)\\n          $tw.utils.alert(name, error.message)\\n          $tw.ipfs.requestToPin(ipnsCid)\\n        }\\n      }\\n      // Publish to ENS\\n      if ($tw.utils.getIpfsProtocol() === ensKeyword) {\\n        try {\\n          $tw.utils.alert(name, `Publishing to ENS: ${ensDomain}`)\\n          await $tw.ipfs.setContentHash(\\n            ensDomain,\\n            `/${ipfsKeyword}/${added}`,\\n            web3,\\n            account\\n          )\\n          $tw.utils.alert(name, `Successfully published to ENS: ${ensDomain}`)\\n        } catch (error) {\\n          $tw.ipfs.getLogger().warn(error)\\n          $tw.utils.alert(name, error.message)\\n          $tw.ipfs.requestToPin(ensCid)\\n        }\\n      }\\n      $tw.ipfs.pin = []\\n      // Unpin\\n      if ($tw.utils.getIpfsUnpin()) {\\n        for (var i in $tw.ipfs.unpin) {\\n          try {\\n            const unpin = $tw.ipfs.unpin[i]\\n            await $tw.ipfs.unpinFromIpfs(unpin)\\n          } catch (error) {\\n            $tw.ipfs.getLogger().warn(error)\\n            $tw.utils.alert(name, error.message)\\n          }\\n        }\\n      }\\n      $tw.ipfs.unpin = []\\n      // Pin\\n      for (var i in $tw.ipfs.pin) {\\n        try {\\n          const pin = $tw.ipfs.pin[i]\\n          await $tw.ipfs.pinToIpfs(pin)\\n        } catch (error) {\\n          $tw.ipfs.getLogger().warn(error)\\n          $tw.utils.alert(name, error.message)\\n        }\\n      }\\n      callback(null)\\n      if (nextWiki.host !== wiki.host || nextWiki.pathname !== wiki.pathname) {\\n        $tw.ipfs.getLogger().info(`Loading: '${nextWiki.href}'`)\\n        window.location.assign(nextWiki.href)\\n      }\\n    } catch (error) {\\n      if (\\n        error.name !== 'OwnerError' &&\\n        error.name !== 'RejectedUserRequest' &&\\n        error.name !== 'UnauthorizedUserAccount'\\n      ) {\\n        $tw.ipfs.getLogger().error(error)\\n      }\\n      callback(error)\\n      return true\\n    }\\n    callback(null)\\n    return true\\n  }\\n\\n  /*\\n   * Information about this saver\\n   */\\n  IpfsSaver.prototype.info = {\\n    name: 'Ipfs',\\n    priority: 3100,\\n    capabilities: ['save']\\n  }\\n\\n  /*\\n   * Static method that returns true if this saver is capable of working\\n   */\\n  exports.canSave = function (wiki) {\\n    return true\\n  }\\n\\n  /*\\n   * Create an instance of this saver\\n   */\\n  exports.create = function (wiki) {\\n    return new IpfsSaver(wiki)\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"saver\"\n        },\n        \"$:/plugins/ipfs/ipfs-startup.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-startup.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-startup.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: startup\\n\\nStartup initialisation\\n\\n\\\\*/\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  exports.platforms = ['browser']\\n  exports.before = ['startup']\\n  exports.synchronous = true\\n\\n  exports.startup = function () {\\n    var getLogger = function () {\\n      if (window.log !== undefined && window.log !== null) {\\n        return window.log.getLogger('default')\\n      }\\n      return console\\n    }\\n    // Logger\\n    if (window.log !== undefined && window.log !== null) {\\n      const log = window.log.getLogger('default')\\n      if ($tw.utils.getIpfsVerbose()) {\\n        log.setLevel('info', false)\\n      } else {\\n        log.setLevel('warn', false)\\n      }\\n      log.info('loglevel is set up...')\\n    }\\n    // Missing Media Types\\n    $tw.utils.registerFileType('application/gzip', 'base64', '.gz')\\n    $tw.utils.registerFileType(\\n      'application/x-tiddler-dictionary',\\n      'utf8',\\n      '.dict'\\n    )\\n    $tw.utils.registerFileType('audio/mpeg', 'base64', '.mp2')\\n    $tw.utils.registerFileType('image/jpg', 'base64', ['.jpg', '.jpeg'], {\\n      flags: ['image']\\n    })\\n    $tw.utils.registerFileType('text/csv', 'utf8', '.csv')\\n    $tw.utils.registerFileType('video/quicktime', 'base64', ['.mov', '.qt'])\\n    $tw.utils.registerFileType('text/x-tiddlywiki', 'utf8', '.tid', {\\n      deserializerType: 'text/html'\\n    })\\n    // Log\\n    getLogger().info('ipfs-startup is starting up...')\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"startup\"\n        },\n        \"$:/plugins/ipfs/ipfs-tiddler.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-tiddler.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-tiddler.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Tiddler\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const IpfsImport = require('$:/plugins/ipfs/ipfs-import.js').IpfsImport\\n\\n  const name = 'ipfs-tiddler'\\n\\n  /*\\n   * https://tiddlywiki.com/#TiddlerFields\\n   * $:/core/modules/server/routes/get-tiddler.js\\n   * TODO: expose it as Tiddler ??\\n   */\\n  const reservedFields = [\\n    'bag',\\n    'caption',\\n    'class',\\n    'color',\\n    'description',\\n    'created',\\n    'creator',\\n    'fields',\\n    'footer',\\n    'hide-body',\\n    'icon',\\n    '_is_skinny',\\n    'library',\\n    'list',\\n    'list-after',\\n    'list-before',\\n    'modified',\\n    'modifier',\\n    'name',\\n    'plugin-priority',\\n    'plugin-type',\\n    'permissions',\\n    'recipe',\\n    'revision',\\n    // \\\"source\\\",\\n    'subtitle',\\n    'tags',\\n    'text',\\n    // \\\"url\\\",\\n    'throttle.refresh',\\n    'toc-link',\\n    'title',\\n    'type'\\n  ]\\n\\n  var IpfsTiddler = function () {\\n    this.once = false\\n  }\\n\\n  IpfsTiddler.prototype.init = function () {\\n    // Init once\\n    if (this.once) {\\n      return\\n    }\\n    const self = this\\n    // Wiki\\n    $tw.wiki.addEventListener('change', function (changes) {\\n      return self.handleChangeEvent(changes)\\n    })\\n    // Hook\\n    $tw.hooks.addHook('th-deleting-tiddler', async function (tiddler) {\\n      return await self.handleDeleteTiddler(tiddler)\\n    })\\n    $tw.hooks.addHook('th-importing-tiddler', function (tiddler) {\\n      return self.handleFileImport(tiddler)\\n    })\\n    $tw.hooks.addHook('th-saving-tiddler', async function (tiddler) {\\n      return await self.handleSaveTiddler(tiddler)\\n    })\\n    // Widget\\n    $tw.rootWidget.addEventListener('tm-ipfs-pin', function (event) {\\n      return self.handleIpfsPin(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-refresh-tiddler', function (event) {\\n      return self.handleRefreshTiddler(event)\\n    })\\n    $tw.rootWidget.addEventListener('tm-ipfs-unpin', function (event) {\\n      return self.handleIpfsUnpin(event)\\n    })\\n    // Init once\\n    this.once = true\\n  }\\n\\n  IpfsTiddler.prototype.handleChangeEvent = function (changes) {\\n    // Gateway preference\\n    const api = changes['$:/ipfs/saver/api']\\n    if (api !== undefined && api.modified) {\\n      $tw.ipfs.getLogger().info(`IPFS API: ${$tw.ipfs.getIpfsApiUrl()}`)\\n    }\\n    // Gateway preference\\n    const gateway = changes['$:/ipfs/saver/gateway']\\n    if (gateway !== undefined && gateway.modified) {\\n      const base = $tw.ipfs.getIpfsBaseUrl()\\n      if ($tw.utils.getIpfsUrlPolicy() === 'gateway') {\\n        $tw.ipfs.getLogger().info(`Gateway Policy: ${base}`)\\n      }\\n    }\\n    // Policy preference\\n    const policy = changes['$:/ipfs/saver/policy']\\n    if (policy !== undefined && policy.modified) {\\n      const base = $tw.ipfs.getIpfsBaseUrl()\\n      if ($tw.utils.getIpfsUrlPolicy() === 'origin') {\\n        $tw.ipfs.getLogger().info(`Origin Policy: ${base}`)\\n      } else {\\n        $tw.ipfs.getLogger().info(`Gateway Policy: ${base}`)\\n      }\\n    }\\n    // Unpin preference\\n    const unpin = changes['$:/ipfs/saver/unpin']\\n    if (unpin !== undefined && unpin.modified) {\\n      if ($tw.utils.getIpfsUnpin()) {\\n        $tw.ipfs.getLogger().info('Unpin previous IPFS content...')\\n      } else {\\n        $tw.ipfs.getLogger().info('Do not unpin previous IPFS content...')\\n      }\\n    }\\n    // Verbose preference\\n    const verbose = changes['$:/ipfs/saver/verbose']\\n    if (verbose !== undefined && verbose.modified) {\\n      if (window.log !== undefined && window.log !== null) {\\n        if ($tw.utils.getIpfsVerbose()) {\\n          window.log.setLevel('info', false)\\n        } else {\\n          window.log.setLevel('warn', false)\\n        }\\n      }\\n    }\\n  }\\n\\n  IpfsTiddler.prototype.handleIpfsPin = function (event) {\\n    const title = event.tiddlerTitle\\n    const tiddler = $tw.wiki.getTiddler(title)\\n    if (event.param !== undefined && event.param !== null) {\\n      // Tiddler\\n      for (var field in tiddler.fields) {\\n        if (reservedFields.indexOf(field) !== -1) {\\n          continue\\n        }\\n        var value = tiddler.getFieldString(field)\\n        value =\\n          value === undefined || value == null || value.trim() === ''\\n            ? null\\n            : value.trim()\\n        if (value !== null) {\\n          this.ipfsPin(value, field)\\n        }\\n      }\\n      return true\\n    }\\n    // Wiki\\n    this.ipfsPin($tw.ipfs.getDocumentUrl().toString(), 'Wiki')\\n    return true\\n  }\\n\\n  IpfsTiddler.prototype.ipfsPin = function (value, field) {\\n    $tw.ipfs\\n      .resolveUrl(true, true, value)\\n      .then(data => {\\n        const { cid, resolvedUrl } = data\\n        if (resolvedUrl !== null && cid !== null) {\\n          $tw.ipfs.getLogger().info(\\n            `Pinning: \\\"${field}\\\"\\n ${resolvedUrl}`\\n          )\\n          $tw.ipfs\\n            .pinToIpfs(cid)\\n            .then(data => {\\n              if (data) {\\n                $tw.ipfs.removeFromPinUnpin(cid, resolvedUrl)\\n                $tw.utils.alert(\\n                  name,\\n                  `Successfully Pinned : <a rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\" href=\\\"${resolvedUrl}\\\">${field}</a>`\\n                )\\n              }\\n            })\\n            .catch(error => {\\n              $tw.ipfs.getLogger().error(error)\\n              $tw.utils.alert(name, error.message)\\n            })\\n        }\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n  }\\n\\n  IpfsTiddler.prototype.handleIpfsUnpin = async function (event) {\\n    const title = event.tiddlerTitle\\n    const tiddler = $tw.wiki.getTiddler(title)\\n    const { type, info } = $tw.utils.getContentType(title, tiddler.fields.type)\\n    if (event.param !== undefined && event.param !== null) {\\n      // Tiddler\\n      for (var field in tiddler.fields) {\\n        if (reservedFields.indexOf(field) !== -1) {\\n          continue\\n        }\\n        var value = tiddler.getFieldString(field)\\n        value =\\n          value === undefined || value == null || value.trim() === ''\\n            ? null\\n            : value.trim()\\n        if (value !== null) {\\n          if (info.encoding !== 'base64' && type !== 'image/svg+xml') {\\n            if (field === '_canonical_uri' || field === '_import_uri') {\\n              continue\\n            }\\n          }\\n          this.ipfsUnpin(value, field)\\n        }\\n      }\\n      return true\\n    }\\n    // Wiki\\n    this.ipfsUnpin($tw.ipfs.getDocumentUrl().toString(), 'Wiki')\\n    return true\\n  }\\n\\n  IpfsTiddler.prototype.ipfsUnpin = function (value, field) {\\n    value =\\n      value === undefined || value == null || value.trim() === ''\\n        ? null\\n        : value.trim()\\n    if (value == null) {\\n      return\\n    }\\n    field =\\n      field === undefined || field == null || field.trim() === ''\\n        ? null\\n        : field.trim()\\n    if (field == null) {\\n      return\\n    }\\n    $tw.ipfs\\n      .resolveUrl(true, true, value)\\n      .then(data => {\\n        const { cid, resolvedUrl } = data\\n        if (resolvedUrl !== null && cid !== null) {\\n          $tw.ipfs.getLogger().info(\\n            `Unpinning: \\\"${field}\\n ${resolvedUrl}`\\n          )\\n          if ($tw.utils.getIpfsUnpin()) {\\n            $tw.ipfs\\n              .unpinFromIpfs(cid)\\n              .then(data => {\\n                if (data !== undefined && data !== null) {\\n                  $tw.ipfs.removeFromPinUnpin(cid, resolvedUrl)\\n                  $tw.utils.alert(\\n                    name,\\n                    `Successfully Unpinned : <a rel=\\\"noopener noreferrer\\\" target=\\\"_blank\\\" href=\\\"${resolvedUrl}\\\">${field}</a>`\\n                  )\\n                }\\n              })\\n              .catch(error => {\\n                $tw.ipfs.getLogger().error(error)\\n                $tw.utils.alert(name, error.message)\\n              })\\n          }\\n        }\\n      })\\n      .catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n  }\\n\\n  IpfsTiddler.prototype.handleDeleteTiddler = async function (tiddler) {\\n    try {\\n      const { type, info } = $tw.utils.getContentType(\\n        tiddler.fields.title,\\n        tiddler.fields.type\\n      )\\n      // Process\\n      var field = null\\n      if (info.encoding === 'base64' || type === 'image/svg+xml') {\\n        field = '_canonical_uri'\\n      } else {\\n        field = '_export_uri'\\n      }\\n      // Value\\n      var url = null\\n      const value = tiddler.getFieldString(field)\\n      if (value !== undefined && value !== null && value !== '') {\\n        // URL or not\\n        try {\\n          url = $tw.ipfs.normalizeUrl(value)\\n        } catch (error) {\\n          // Ignore\\n        }\\n        // Process\\n        if (url !== undefined && url !== null) {\\n          const { cid } = $tw.ipfs.decodeCid(url)\\n          // Request to unpin\\n          if ($tw.utils.getIpfsUnpin() && cid !== null) {\\n            $tw.ipfs.requestToUnpin(cid)\\n          }\\n        }\\n      }\\n    } catch (error) {\\n      $tw.ipfs.getLogger().error(error)\\n      $tw.utils.alert(name, error.message)\\n    }\\n    return tiddler\\n  }\\n\\n  IpfsTiddler.prototype.handleFileImport = function (tiddler) {\\n    // Update tiddler\\n    const addition = $tw.wiki.getModificationFields()\\n    addition.title = tiddler.fields.title\\n    addition.tags = (tiddler.fields.tags || []).slice(0)\\n    // Add isAttachment tag\\n    if (addition.tags.indexOf('$:/isAttachment') === -1) {\\n      $tw.utils.pushTop(addition.tags, '$:/isAttachment')\\n    }\\n    // Add isEmbedded tag\\n    if (addition.tags.indexOf('$:/isEmbedded') === -1) {\\n      $tw.utils.pushTop(addition.tags, '$:/isEmbedded')\\n    }\\n    return new $tw.Tiddler(tiddler, addition)\\n  }\\n\\n  IpfsTiddler.prototype.handleRefreshTiddler = function (event) {\\n    const title = event.tiddlerTitle\\n    const tiddler = $tw.wiki.getTiddler(title)\\n    const { type, info } = $tw.utils.getContentType(title, tiddler.fields.type)\\n    var canonicalUri = tiddler.getFieldString('_canonical_uri')\\n    canonicalUri =\\n      canonicalUri === undefined ||\\n      canonicalUri == null ||\\n      canonicalUri.trim() === ''\\n        ? null\\n        : canonicalUri.trim()\\n    var importUri = tiddler.getFieldString('_import_uri')\\n    importUri =\\n      importUri === undefined || importUri == null || importUri.trim() === ''\\n        ? null\\n        : importUri.trim()\\n    // Reload Attachment\\n    if (\\n      (info.encoding === 'base64' || type === 'image/svg+xml') &&\\n      canonicalUri !== null &&\\n      importUri == null\\n    ) {\\n      const updatedTiddler = $tw.utils.updateTiddler({\\n        tiddler: tiddler,\\n        fields: [{ key: 'text', value: '' }]\\n      })\\n      $tw.wiki.addTiddler(updatedTiddler)\\n      return true\\n    }\\n    // Async Import\\n    if (\\n      type === 'text/vnd.tiddlywiki' &&\\n      (canonicalUri !== null || importUri !== null)\\n    ) {\\n      var ipfsImport = new IpfsImport()\\n      ipfsImport.import(canonicalUri, importUri, tiddler).catch(error => {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      })\\n    } else {\\n      $tw.wiki.clearCache(title)\\n      const changedTiddler = $tw.utils.getChangedTiddler(title)\\n      $tw.rootWidget.refresh(changedTiddler)\\n    }\\n    return true\\n  }\\n\\n  IpfsTiddler.prototype.handleSaveTiddler = async function (tiddler) {\\n    const oldTiddler = $tw.wiki.getTiddler(tiddler.fields.title)\\n    const { type, info } = $tw.utils.getContentType(\\n      tiddler.fields.title,\\n      tiddler.fields.type\\n    )\\n    var password = tiddler.fields._password\\n    password =\\n      password === undefined || password == null || password.trim() === ''\\n        ? null\\n        : password.trim()\\n    // Prepare\\n    var updatedTiddler = new $tw.Tiddler(tiddler)\\n    // Process deleted fields\\n    if (oldTiddler !== undefined && oldTiddler !== null) {\\n      for (var field in oldTiddler.fields) {\\n        // Not a reserved keyword\\n        if (reservedFields.indexOf(field) !== -1) {\\n          continue\\n        }\\n        // Updated\\n        const discard = tiddler.fields[field]\\n        if (\\n          discard !== undefined &&\\n          discard !== null &&\\n          tiddler.getFieldString(field) !== undefined\\n        ) {\\n          continue\\n        }\\n        // Process\\n        var oldCid = null\\n        var oldIpnsKey = null\\n        var oldNormalizedUrl = null\\n        var oldResolvedUrl = null\\n        var oldValue = oldTiddler.getFieldString(field)\\n        try {\\n          var {\\n            cid: oldCid,\\n            ipnsKey: oldIpnsKey,\\n            normalizedUrl: oldNormalizedUrl,\\n            resolvedUrl: oldResolvedUrl\\n          } = await $tw.ipfs.resolveUrl(false, true, oldValue)\\n        } catch (error) {\\n          $tw.ipfs.getLogger().error(error)\\n          $tw.utils.alert(name, error.message)\\n          return tiddler\\n        }\\n        oldResolvedUrl =\\n          oldResolvedUrl === undefined ||\\n          oldResolvedUrl == null ||\\n          oldResolvedUrl.toString().trim() === ''\\n            ? null\\n            : oldResolvedUrl.toString().trim()\\n        if (oldResolvedUrl !== null && field === '_canonical_uri') {\\n          var data = tiddler.getFieldString('text')\\n          try {\\n            if (info.encoding === 'base64') {\\n              data = await $tw.ipfs.loadToBase64(oldResolvedUrl, password)\\n            } else {\\n              data = await $tw.ipfs.loadToUtf8(oldResolvedUrl, password)\\n            }\\n            updatedTiddler = $tw.utils.updateTiddler({\\n              tiddler: updatedTiddler,\\n              addTags: ['$:/isAttachment', '$:/isEmbedded'],\\n              fields: [{ key: 'text', value: data }]\\n            })\\n            $tw.ipfs.getLogger().info(\\n              `Embed attachment: ${data.length}\\n ${oldResolvedUrl}`\\n            )\\n          } catch (error) {\\n            $tw.ipfs.getLogger().error(error)\\n            $tw.utils.alert(name, error.message)\\n            return tiddler\\n          }\\n        }\\n        $tw.ipfs.requestToUnpin(oldCid, oldIpnsKey, oldNormalizedUrl)\\n      }\\n    }\\n    var canonicalUri = null\\n    var exportUri = null\\n    var importUri = null\\n    var canonicalCid = null\\n    var exportCid = null\\n    var importCid = null\\n    // Process new and updated fields\\n    for (var field in tiddler.fields) {\\n      // Not a reserved keyword\\n      if (reservedFields.indexOf(field) !== -1) {\\n        continue\\n      }\\n      // Process\\n      var cid = null\\n      var ipnsKey = null\\n      var normalizedUrl = null\\n      var resolvedUrl = null\\n      var value = tiddler.getFieldString(field)\\n      try {\\n        var {\\n          cid,\\n          ipnsKey,\\n          normalizedUrl,\\n          resolvedUrl\\n        } = await $tw.ipfs.resolveUrl(false, true, value)\\n      } catch (error) {\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n        return tiddler\\n      }\\n      // Store\\n      resolvedUrl =\\n        resolvedUrl === undefined ||\\n        resolvedUrl == null ||\\n        resolvedUrl.toString().trim() === ''\\n          ? null\\n          : resolvedUrl.toString().trim()\\n      if (field === '_canonical_uri') {\\n        canonicalUri = resolvedUrl\\n        canonicalCid = cid\\n      }\\n      if (field === '_import_uri') {\\n        importUri = resolvedUrl\\n        importCid = cid\\n      }\\n      if (field === '_export_uri') {\\n        exportUri = resolvedUrl\\n        exportCid = cid\\n      }\\n      // Previous values if any\\n      var oldValue = null\\n      if (oldTiddler !== undefined && oldTiddler !== null) {\\n        oldValue = oldTiddler.getFieldString(field)\\n      }\\n      // Process new or updated\\n      if (value === oldValue) {\\n        continue\\n      }\\n      var oldCid = null\\n      var oldIpnsKey = null\\n      var oldNormalizedUrl = null\\n      try {\\n        var {\\n          cid: oldCid,\\n          ipnsKey: oldIpnsKey,\\n          normalizedUrl: oldNormalizedUrl\\n        } = await $tw.ipfs.resolveUrl(false, true, oldValue)\\n      } catch (error) {\\n        // We cannot resolve the previous value\\n        $tw.ipfs.getLogger().error(error)\\n        $tw.utils.alert(name, error.message)\\n      }\\n      // Process _canonical_uri\\n      if (field === '_canonical_uri') {\\n        updatedTiddler = $tw.utils.updateTiddler({\\n          tiddler: updatedTiddler,\\n          fields: [{ key: 'text', value: '' }]\\n        })\\n      }\\n      $tw.ipfs.requestToPin(cid, ipnsKey, normalizedUrl)\\n      $tw.ipfs.requestToUnpin(oldCid, oldIpnsKey, oldNormalizedUrl)\\n    }\\n    // Tag management\\n    var addTags = []\\n    var removeTags = []\\n    if (canonicalUri == null && exportUri == null && importUri == null) {\\n      removeTags.push('$:/isExported', '$:/isImported', '$:/isIpfs')\\n    }\\n    if (canonicalCid == null && exportCid == null && importCid == null) {\\n      if (removeTags.indexOf('$:/isIpfs') === -1) {\\n        removeTags.push('$:/isIpfs')\\n      }\\n    } else {\\n      addTags.push('$:/isIpfs')\\n    }\\n    if (canonicalUri !== null) {\\n      // Attachment\\n      if (info.encoding === 'base64' || type === 'image/svg+xml') {\\n        if (addTags.indexOf('$:/isAttachment') === -1) {\\n          addTags.push('$:/isAttachment')\\n        }\\n        if (removeTags.indexOf('$:/isEmbedded') === -1) {\\n          removeTags.push('$:/isEmbedded')\\n        }\\n        if (importUri !== null) {\\n          if (addTags.indexOf('$:/isImported') === -1) {\\n            addTags.push('$:/isImported')\\n          }\\n        } else {\\n          if (removeTags.indexOf('$:/isImported') === -1) {\\n            removeTags.push('$:/isImported')\\n          }\\n        }\\n        // Others\\n      } else {\\n        if (removeTags.indexOf('$:/isAttachment') === -1) {\\n          removeTags.push('$:/isAttachment')\\n        }\\n        if (removeTags.indexOf('$:/isEmbedded') === -1) {\\n          removeTags.push('$:/isEmbedded')\\n        }\\n        if (addTags.indexOf('$:/isImported') === -1) {\\n          addTags.push('$:/isImported')\\n        }\\n      }\\n    } else {\\n      // Attachment\\n      if (info.encoding === 'base64' || type === 'image/svg+xml') {\\n        if (addTags.indexOf('$:/isAttachment') === -1) {\\n          addTags.push('$:/isAttachment')\\n        }\\n        if (addTags.indexOf('$:/isEmbedded') === -1) {\\n          addTags.push('$:/isEmbedded')\\n        }\\n        // Others\\n      } else {\\n        if (removeTags.indexOf('$:/isAttachment') === -1) {\\n          removeTags.push('$:/isAttachment')\\n        }\\n        if (removeTags.indexOf('$:/isEmbedded') === -1) {\\n          removeTags.push('$:/isEmbedded')\\n        }\\n      }\\n      if (importUri !== null) {\\n        if (addTags.indexOf('$:/isImported') === -1) {\\n          addTags.push('$:/isImported')\\n        }\\n      } else {\\n        if (removeTags.indexOf('$:/isImported') === -1) {\\n          removeTags.push('$:/isImported')\\n        }\\n      }\\n    }\\n    if (exportUri !== null) {\\n      if (addTags.indexOf('$:/isExported') === -1) {\\n        addTags.push('$:/isExported')\\n      }\\n    } else {\\n      if (removeTags.indexOf('$:/isExported') === -1) {\\n        removeTags.push('$:/isExported')\\n      }\\n    }\\n    if (addTags.length > 0 || removeTags.length > 0) {\\n      updatedTiddler = $tw.utils.updateTiddler({\\n        tiddler: updatedTiddler,\\n        addTags: addTags,\\n        removeTags: removeTags\\n      })\\n    }\\n    $tw.wiki.addTiddler(updatedTiddler)\\n    return updatedTiddler\\n  }\\n\\n  exports.IpfsTiddler = IpfsTiddler\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/plugins/ipfs/ipfs-utils.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-utils.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-utils.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: utils\\n\\nIPFS utils\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  /**\\n   * $:/core/modules/utils/logger.js\\n   *\\n   * TiddlyWiki created by Jeremy Ruston, (jeremy [at] jermolene [dot] com)\\n   *\\n   * Copyright (c) 2004-2007, Jeremy Ruston\\n   * Copyright (c) 2007-2018, UnaMesa Association\\n   * Copyright (c) 2019-2020, Blue Light\\n   * All rights reserved.\\n   *\\n   * Redistribution and use in source and binary forms, with or without\\n   * modification, are permitted provided that the following conditions are met:\\n   *\\n   * * Redistributions of source code must retain the above copyright notice, this\\n   *   list of conditions and the following disclaimer.\\n   *\\n   * * Redistributions in binary form must reproduce the above copyright notice,\\n   *   this list of conditions and the following disclaimer in the documentation\\n   *   and/or other materials provided with the distribution.\\n   *\\n   * * Neither the name of the copyright holder nor the names of its\\n   *   contributors may be used to endorse or promote products derived from\\n   *   this software without specific prior written permission.\\n   *\\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS'\\n   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\n   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\n   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\\n   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\\n   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\\n   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\\n   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\\n   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n   */\\n\\n  /*\\n   * from $:/core/modules/utils/logger.js\\n   **/\\n  exports.alert = function (callee, text) {\\n    if (\\n      typeof window === 'undefined' ||\\n      typeof window.navigator === 'undefined'\\n    ) {\\n      return\\n    }\\n    const ALERT_TAG = '$:/tags/Alert'\\n    // Prepare the text of the alert\\n    // var text = Array.prototype.join.call(arguments,\\\" \\\");\\n    // Check if there is an existing alert with the same text and the same component\\n    var existingAlerts = $tw.wiki.getTiddlersWithTag(ALERT_TAG)\\n    var alertFields\\n    var existingCount\\n    var self = this\\n    $tw.utils.each(existingAlerts, function (title) {\\n      var tiddler = $tw.wiki.getTiddler(title)\\n      if (\\n        tiddler.fields.text === text &&\\n        tiddler.fields.component === self.componentName &&\\n        tiddler.fields.modified &&\\n        (!alertFields || tiddler.fields.modified < alertFields.modified)\\n      ) {\\n        alertFields = $tw.utils.extend({}, tiddler.fields)\\n      }\\n    })\\n    if (alertFields) {\\n      existingCount = alertFields.count || 1\\n    } else {\\n      alertFields = {\\n        title: $tw.wiki.generateNewTitle('$:/temp/alerts/alert', {\\n          prefix: ''\\n        }),\\n        text: text,\\n        tags: [ALERT_TAG],\\n        component: callee\\n      }\\n      existingCount = 0\\n    }\\n    alertFields.modified = new Date()\\n    if (++existingCount > 1) {\\n      alertFields.count = existingCount\\n    } else {\\n      alertFields.count = undefined\\n    }\\n    $tw.wiki.addTiddler(new $tw.Tiddler(alertFields))\\n  }\\n\\n  exports.getChangedTiddler = function (object) {\\n    // Holder\\n    const changedTiddler = Object.create(null)\\n    // Check\\n    if (object === undefined || object == null) {\\n      return changedTiddler\\n    }\\n    if (object instanceof $tw.Tiddler === false && typeof object !== 'string') {\\n      return changedTiddler\\n    }\\n    // Retrieve title\\n    var title = null\\n    if (typeof object === 'string') {\\n      title = object\\n    }\\n    if (object instanceof $tw.Tiddler) {\\n      title = object.getFieldString('title')\\n    }\\n    // Check\\n    if (title === undefined || title == null) {\\n      return changedTiddler\\n    }\\n    // Process title\\n    changedTiddler[title] = Object.create(null)\\n    // Done\\n    return changedTiddler\\n  }\\n\\n  exports.updateTiddler = function (updates) {\\n    // Is there anything to do\\n    if (\\n      updates === undefined ||\\n      updates == null ||\\n      updates.tiddler === undefined ||\\n      updates.tiddler == null\\n    ) {\\n      return null\\n    }\\n    // Prepare updates\\n    const fields = $tw.wiki.getModificationFields()\\n    // Tags\\n    fields.tags = (updates.tiddler.fields.tags || []).slice(0)\\n    // Process add tags\\n    if (\\n      updates.addTags !== undefined &&\\n      updates.addTags !== null &&\\n      Array.isArray(updates.addTags)\\n    ) {\\n      for (var i = 0; i < updates.addTags.length; i++) {\\n        const tag = updates.addTags[i]\\n        if (fields.tags.indexOf(tag) === -1) {\\n          $tw.utils.pushTop(fields.tags, tag)\\n        }\\n      }\\n    }\\n    // Process remove tags\\n    if (\\n      updates.removeTags !== undefined &&\\n      updates.removeTags !== null &&\\n      Array.isArray(updates.removeTags)\\n    ) {\\n      for (var i = 0; i < updates.removeTags.length; i++) {\\n        const tag = updates.removeTags[i]\\n        const index = fields.tags.indexOf(tag)\\n        if (index !== -1) {\\n          fields.tags.splice(index, 1)\\n        }\\n      }\\n    }\\n    // Process fields\\n    if (\\n      updates.fields !== undefined &&\\n      updates.fields !== null &&\\n      Array.isArray(updates.fields)\\n    ) {\\n      for (var i = 0; i < updates.fields.length; i++) {\\n        const field = updates.fields[i]\\n        if (field.key !== undefined && field.key !== null) {\\n          fields[field.key] = field.value\\n        }\\n      }\\n    }\\n    // Update tiddler\\n    return new $tw.Tiddler(updates.tiddler, fields)\\n  }\\n\\n  exports.getContentType = function (title, type) {\\n    type =\\n      type === undefined || type == null || type.trim() === ''\\n        ? null\\n        : type.trim()\\n    if (type == null) {\\n      type = 'text/vnd.tiddlywiki'\\n    }\\n    var info = $tw.config.contentTypeInfo[type]\\n    if (info === undefined || info == null) {\\n      const url = $tw.ipfs.getDocumentUrl()\\n      url.hash = title\\n      $tw.ipfs.getLogger().info(\\n        `Unknown Content-Type: \\\"${type}\\\", default: \\\"text/vnd.tiddlywiki\\\":\\n ${url}`\\n      )\\n      type = 'text/vnd.tiddlywiki'\\n      info = $tw.config.contentTypeInfo[type]\\n    }\\n    return {\\n      type: type,\\n      info: info\\n    }\\n  }\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"utils\"\n        },\n        \"$:/plugins/ipfs/ipfs-wrapper.js\": {\n            \"title\": \"$:/plugins/ipfs/ipfs-wrapper.js\",\n            \"text\": \"/*\\\\\\ntitle: $:/plugins/ipfs/ipfs-wrapper.js\\ntype: application/javascript\\ntags: $:/ipfs/core\\nmodule-type: library\\n\\nIPFS Wrapper\\n\\n\\\\*/\\n\\n;(function () {\\n  /*jslint node:true,browser:true*/\\n  /*global $tw:false*/\\n  'use strict'\\n\\n  const cidAnalyser = 'https://cid.ipfs.io/#'\\n\\n  const ipfsKeyword = 'ipfs'\\n  const ipnsKeyword = 'ipns'\\n\\n  /*eslint no-unused-vars:\\\"off\\\"*/\\n  const name = 'ipfs-wrapper'\\n\\n  var IpfsWrapper = function (ipfsBundle) {\\n    this.ipfsBundle = ipfsBundle\\n    this.ipfsLibrary = ipfsBundle.ipfsLibrary\\n    this.ipfsUrl = ipfsBundle.ipfsUrl\\n  }\\n\\n  IpfsWrapper.prototype.getLogger = function () {\\n    return this.ipfsBundle.getLogger()\\n  }\\n\\n  IpfsWrapper.prototype.getWindowIpfsClient = async function () {\\n    // IPFS Companion\\n    try {\\n      const policy = await this.ipfsLibrary.getWindowIpfs()\\n      if (policy !== null && policy.ipfs !== null && policy.provider !== null) {\\n        return policy\\n      }\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to retrieve IPFS Companion...')\\n  }\\n\\n  IpfsWrapper.prototype.getHttpIpfsClient = async function (url) {\\n    // HTTP Client\\n    try {\\n      const policy = await this.ipfsLibrary.getHttpIpfs(url)\\n      if (policy !== null && policy.ipfs !== null && policy.provider !== null) {\\n        return policy\\n      }\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to retrieve an IPFS HTTP provider...')\\n  }\\n\\n  IpfsWrapper.prototype.getIpfsClient = async function (url) {\\n    // IPFS client\\n    try {\\n      var policy = null\\n      const ipfsProvider = $tw.utils.getIpfsProvider()\\n      if (ipfsProvider === 'window') {\\n        policy = await this.ipfsLibrary.getWindowIpfs()\\n      } else if (ipfsProvider === 'http') {\\n        policy = await this.ipfsLibrary.getHttpIpfs(url)\\n      } else {\\n        policy = await this.ipfsLibrary.getDefaultIpfs(url)\\n      }\\n      if (policy !== null && policy.ipfs !== null && policy.provider !== null) {\\n        return policy\\n      }\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to retrieve an IPFS provider...')\\n  }\\n\\n  IpfsWrapper.prototype.getIpnsIdentifiers = async function (\\n    ipfs,\\n    identifier,\\n    ipnsName\\n  ) {\\n    identifier =\\n      identifier === undefined || identifier == null || identifier.trim() === ''\\n        ? null\\n        : identifier.trim()\\n    ipnsName =\\n      ipnsName === undefined || ipnsName == null || ipnsName.trim() === ''\\n        ? null\\n        : ipnsName.trim()\\n    if (identifier == null && ipnsName == null) {\\n      throw new Error('Undefined IPNS identifiers...')\\n    }\\n    var found = false\\n    var ipnsKey = null\\n    var keys = null\\n    var normalizedUrl = null\\n    try {\\n      // Only the server who generates the key has the knowledge\\n      keys = await this.getIpnsKeys(ipfs)\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    // Do our best\\n    if (ipnsName !== null && identifier !== null) {\\n      if (keys !== null && keys !== undefined && Array.isArray(keys)) {\\n        for (var index = 0; index < keys.length; index++) {\\n          const cidv1b32 = this.ipfsBundle.cidToLibp2pKeyCidV1(\\n            keys[index].id,\\n            'base32',\\n            false\\n          )\\n          const cidv1b36 = this.ipfsBundle.cidToLibp2pKeyCidV1(\\n            keys[index].id,\\n            'base36',\\n            false\\n          )\\n          if (\\n            (keys[index].id === identifier ||\\n              cidv1b32 === identifier ||\\n              cidv1b36 === identifier) &&\\n            keys[index].name === ipnsName\\n          ) {\\n            ipnsKey = keys[index].id\\n            found = true\\n            break\\n          }\\n        }\\n      }\\n    } else if (ipnsName !== null) {\\n      if (keys !== null && keys !== undefined && Array.isArray(keys)) {\\n        for (var index = 0; index < keys.length; index++) {\\n          if (keys[index].name === ipnsName) {\\n            ipnsKey = keys[index].id\\n            found = true\\n            break\\n          }\\n        }\\n      }\\n    } else {\\n      if (keys !== null && keys !== undefined && Array.isArray(keys)) {\\n        for (var index = 0; index < keys.length; index++) {\\n          const cidv1b32 = this.ipfsBundle.cidToLibp2pKeyCidV1(\\n            keys[index].id,\\n            'base32',\\n            false\\n          )\\n          const cidv1b36 = this.ipfsBundle.cidToLibp2pKeyCidV1(\\n            keys[index].id,\\n            'base36',\\n            false\\n          )\\n          if (\\n            keys[index].id === identifier ||\\n            cidv1b32 === identifier ||\\n            cidv1b36 === identifier ||\\n            keys[index].name === identifier\\n          ) {\\n            ipnsKey = keys[index].id\\n            ipnsName = keys[index].name\\n            found = true\\n            break\\n          }\\n        }\\n      }\\n    }\\n    if (found === false) {\\n      // Unable to resolve the keys, check if identifier is a an IPFS cid\\n      if (this.ipfsBundle.isCid(identifier) === false) {\\n        throw new Error('Unknown IPNS identifier...')\\n      }\\n      ipnsKey = identifier\\n    }\\n    // Lets build an url, the resolver will do the final check, we cannot do more here\\n    if (found) {\\n      const cidv0 = this.ipfsBundle.cidToBase58CidV0(ipnsKey, false)\\n      const cidv1b32 = this.ipfsBundle.cidToLibp2pKeyCidV1(\\n        cidv0,\\n        'base32',\\n        false\\n      )\\n      ipnsKey = this.ipfsBundle.cidToLibp2pKeyCidV1(cidv1b32, 'base36', false)\\n      normalizedUrl = this.ipfsUrl.normalizeUrl(`/${ipnsKeyword}/${ipnsKey}`)\\n      this.getLogger().info(\\n        `Successfully Fetched IPNS identifiers: '${ipnsName}':\\n 'dag-pb' \\\"cidv0\\\" (base58btc): ${cidAnalyser}${cidv0}\\n to 'libp2p-key' \\\"cidv1\\\" (base32): ${cidAnalyser}${cidv1b32}\\n to 'libp2p-key' \\\"cidv1\\\" (base36): ${cidAnalyser}${ipnsKey}\\n ${normalizedUrl}`\\n      )\\n    } else {\\n      normalizedUrl = this.ipfsUrl.normalizeUrl(`/${ipnsKeyword}/${ipnsKey}`)\\n      this.getLogger().info(\\n        `Unable to Fetch IPNS identifiers, default to\\n ${normalizedUrl}`\\n      )\\n    }\\n    return {\\n      ipnsKey: ipnsKey,\\n      ipnsName: ipnsName,\\n      normalizedUrl: normalizedUrl\\n    }\\n  }\\n\\n  IpfsWrapper.prototype.generateIpnsKey = async function (ipfs, ipnsName) {\\n    try {\\n      const key = await this.ipfsLibrary.genKey(ipfs, ipnsName)\\n      const cid = this.ipfsBundle.cidToLibp2pKeyCidV1(key, 'base36', true)\\n      const url = this.ipfsUrl.normalizeUrl(`/${ipnsKeyword}/${cid}`)\\n      this.getLogger().info(\\n        `Successfully generated IPNS key with IPNS name: ${ipnsName}\\n ${url}`\\n      )\\n      return cid\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to generate and IPNS key...')\\n  }\\n\\n  IpfsWrapper.prototype.removeIpnsKey = async function (ipfs, ipnsName) {\\n    try {\\n      const hash = await this.ipfsLibrary.rmKey(ipfs, ipnsName)\\n      const msg = `Successfully removed IPNS name: ${ipnsName}`\\n      this.getLogger().info(msg)\\n      $tw.utils.alert(name, msg)\\n      return hash\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to remove an IPNS Key...')\\n  }\\n\\n  IpfsWrapper.prototype.renameIpnsName = async function (\\n    ipfs,\\n    oldIpnsName,\\n    newIpnsName\\n  ) {\\n    try {\\n      const { id, was, now } = await this.ipfsLibrary.renameKey(\\n        ipfs,\\n        oldIpnsName,\\n        newIpnsName\\n      )\\n      const key = this.ipfsBundle.cidToLibp2pKeyCidV1(id, 'base36', true)\\n      const msg = `Successfully renamed IPNS name: ${was} with ${now}`\\n      this.getLogger().info(msg)\\n      $tw.utils.alert(name, msg)\\n      return {\\n        ipnsKey: key,\\n        ipnsName: now\\n      }\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to rename an IPNS name...')\\n  }\\n\\n  IpfsWrapper.prototype.getIpnsKeys = async function (ipfs) {\\n    try {\\n      const keys = await this.ipfsLibrary.getKeys(ipfs)\\n      this.getLogger().info('Successfully fetched IPNS keys...')\\n      return keys\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to fetch IPNS keys...')\\n  }\\n\\n  IpfsWrapper.prototype.fetchFromIpfs = async function (ipfs, cid) {\\n    cid =\\n      cid === undefined || cid == null || cid.toString().trim() === ''\\n        ? null\\n        : cid.toString().trim()\\n    if (cid == null) {\\n      throw new Error('Undefined IPNS identifier...')\\n    }\\n    const pathname = `/${ipfsKeyword}/${cid}`\\n    try {\\n      const fetched = await this.ipfsLibrary.cat(ipfs, pathname)\\n      const url = this.ipfsUrl.normalizeUrl(pathname)\\n      this.getLogger().info(`Successfully fetched:\\n ${url}`)\\n      return fetched\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to fetch from IPFS...')\\n  }\\n\\n  IpfsWrapper.prototype.addToIpfs = async function (ipfs, content) {\\n    try {\\n      const { hash, size } = await this.ipfsLibrary.add(ipfs, content)\\n      const pathname = '/' + ipfsKeyword + '/' + hash\\n      const url = this.ipfsUrl.normalizeUrl(pathname)\\n      this.getLogger().info(`Successfully added ${size}:\\n ${url}`)\\n      return {\\n        added: hash,\\n        size: size\\n      }\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to add content to IPFS...')\\n  }\\n\\n  IpfsWrapper.prototype.resolveIpnsKey = async function (ipfs, ipnsKey) {\\n    ipnsKey =\\n      ipnsKey === undefined || ipnsKey == null || ipnsKey.trim() === ''\\n        ? null\\n        : ipnsKey.trim()\\n    if (ipnsKey == null) {\\n      throw new Error('Undefined IPNS key...')\\n    }\\n    const pathname = `/${ipnsKeyword}/${ipnsKey}`\\n    try {\\n      const url = this.ipfsUrl.normalizeUrl(pathname)\\n      const resolved = await this.ipfsLibrary.resolve(ipfs, pathname)\\n      const { cid } = this.ipfsBundle.decodeCid(resolved)\\n      if (cid !== null) {\\n        const parsed = this.ipfsUrl.normalizeUrl(resolved)\\n        this.getLogger().info(\\n          `Successfully resolved IPNS key:\\n ${url}\\n ${parsed}`\\n        )\\n        return cid\\n      }\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to resolve an IPNS key...')\\n  }\\n\\n  IpfsWrapper.prototype.publishIpnsName = async function (\\n    cid,\\n    ipfs,\\n    ipnsKey,\\n    ipnsName\\n  ) {\\n    ipnsKey =\\n      ipnsKey === undefined || ipnsKey == null || ipnsKey.trim() === ''\\n        ? null\\n        : ipnsKey.trim()\\n    if (ipnsKey == null) {\\n      throw new Error('Undefined IPNS key...')\\n    }\\n    ipnsName =\\n      ipnsName === undefined || ipnsName == null || ipnsName.trim() === ''\\n        ? null\\n        : ipnsName.trim()\\n    if (ipnsName == null) {\\n      throw new Error('Undefined IPNS name...')\\n    }\\n    cid =\\n      cid === undefined || cid == null || cid.toString().trim() === ''\\n        ? null\\n        : cid.toString().trim()\\n    if (cid == null) {\\n      throw new Error('Undefined IPNS identifier...')\\n    }\\n    // Path\\n    const key = `/${ipnsKeyword}/${ipnsKey}`\\n    const pathname = `/${ipfsKeyword}/${cid}`\\n    try {\\n      // Publish\\n      const result = await this.ipfsLibrary.publish(ipfs, ipnsName, pathname)\\n      const keyParsed = this.ipfsUrl.normalizeUrl(key)\\n      const url = this.ipfsUrl.normalizeUrl(pathname)\\n      this.getLogger().info(\\n        `Successfully published IPNS name: ${ipnsName}\\n ${keyParsed}\\n ${url}`\\n      )\\n      return result\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to publish an IPNS name...')\\n  }\\n\\n  IpfsWrapper.prototype.pinToIpfs = async function (ipfs, cid) {\\n    cid =\\n      cid === undefined || cid == null || cid.toString().trim() === ''\\n        ? null\\n        : cid.toString().trim()\\n    if (cid == null) {\\n      throw new Error('Undefined IPNS identifier...')\\n    }\\n    const pathname = `/${ipfsKeyword}/${cid}`\\n    try {\\n      const pinned = await this.ipfsLibrary.pin(ipfs, pathname)\\n      const url = this.ipfsUrl.normalizeUrl(pathname)\\n      this.getLogger().info(\\n        `Successfully pinned:\\n ${url}`\\n      )\\n      return pinned\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to pin to IPFS...')\\n  }\\n\\n  IpfsWrapper.prototype.unpinFromIpfs = async function (ipfs, cid) {\\n    cid =\\n      cid === undefined || cid == null || cid.toString().trim() === ''\\n        ? null\\n        : cid.toString().trim()\\n    if (cid == null) {\\n      throw new Error('Undefined IPNS identifier...')\\n    }\\n    const pathname = `/${ipfsKeyword}/${cid}`\\n    try {\\n      const unpinned = await this.ipfsLibrary.unpin(ipfs, pathname)\\n      const url = this.ipfsUrl.normalizeUrl(pathname)\\n      this.getLogger().info(\\n        `Successfully unpinned:\\n ${url}`\\n      )\\n      return unpinned\\n    } catch (error) {\\n      this.getLogger().error(error)\\n    }\\n    throw new Error('Failed to unpin from IPFS...')\\n  }\\n\\n  exports.IpfsWrapper = IpfsWrapper\\n})()\\n\",\n            \"type\": \"application/javascript\",\n            \"tags\": \"$:/ipfs/core\",\n            \"module-type\": \"library\"\n        },\n        \"$:/language/Buttons/3Box/Profile/Caption\": {\n            \"title\": \"$:/language/Buttons/3Box/Profile/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"3Box profile\"\n        },\n        \"$:/language/Buttons/3Box/Profile/Hint\": {\n            \"title\": \"$:/language/Buttons/3Box/Profile/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Load 3Box profile\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"export to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Export this tiddler to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Attachment/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Attachment/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"export attachment to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Attachment/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Attachment/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Export attachment to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Content/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Content/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"export content to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Export/Content/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Export/Content/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Export this tiddler content to IPFS\"\n        },\n        \"$:/language/Buttons/Ipns/Fetch/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Fetch/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"fetch from IPNS\"\n        },\n        \"$:/language/Buttons/Ipns/Fetch/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Fetch/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Fetch IPNS key\"\n        },\n        \"$:/language/Buttons/Ipns/Generate/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Generate/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"generate IPNS\"\n        },\n        \"$:/language/Buttons/Ipns/Generate/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Generate/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Generate IPNS key\"\n        },\n        \"$:/language/Buttons/Ipfs/Refresh/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Refresh/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"refresh\"\n        },\n        \"$:/language/Buttons/Ipfs/Refresh/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Refresh/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Perform a full refresh of the tiddler\"\n        },\n        \"$:/language/Buttons/Ipfs/Pin/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Pin/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"pin to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Pin/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Pin/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Pin this wiki to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Tiddler/Pin/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Tiddler/Pin/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"pin to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Tiddler/Pin/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Tiddler/Pin/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Pin tiddler resources to IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Tiddler/Unpin/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Tiddler/Unpin/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"unpin from IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Tiddler/Unpin/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Tiddler/Unpin/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Unpin tiddler resources from IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Unpin/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Unpin/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"unpin from IPFS\"\n        },\n        \"$:/language/Buttons/Ipfs/Unpin/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipfs/Unpin/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Unpin this wiki from IPFS\"\n        },\n        \"$:/language/Buttons/Console/Mobile/Caption\": {\n            \"title\": \"$:/language/Buttons/Console/Mobile/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"mobile console\"\n        },\n        \"$:/language/Buttons/Console/Mobile/Hint\": {\n            \"title\": \"$:/language/Buttons/Console/Mobile/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Load/Show/Hide Mobile Console\"\n        },\n        \"$:/language/Buttons/Console/Mobile/Hide\": {\n            \"title\": \"$:/language/Buttons/Console/Mobile/Hide\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Hide Mobile Console\"\n        },\n        \"$:/language/Buttons/Console/Mobile/Load\": {\n            \"title\": \"$:/language/Buttons/Console/Mobile/Load\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Load Mobile Console\"\n        },\n        \"$:/language/Buttons/Console/Mobile/Show\": {\n            \"title\": \"$:/language/Buttons/Console/Mobile/Show\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Show Mobile Console\"\n        },\n        \"$:/language/Buttons/Encryption/Hint\": {\n            \"title\": \"$:/language/Buttons/Encryption/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Set or clear a password or a public key for saving this wiki\"\n        },\n        \"$:/language/Buttons/Encryption/ClearPassword/Caption\": {\n            \"title\": \"$:/language/Buttons/Encryption/ClearPassword/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"clear password or public key\"\n        },\n        \"$:/language/Buttons/Encryption/ClearPassword/Hint\": {\n            \"title\": \"$:/language/Buttons/Encryption/ClearPassword/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Clear the password and save this wiki without encryption\"\n        },\n        \"$:/language/Buttons/Encryption/ClearPublicKey/Hint\": {\n            \"title\": \"$:/language/Buttons/Encryption/ClearPublicKey/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Clear the public key and save this wiki without encryption\"\n        },\n        \"$:/language/Buttons/Encryption/SetPassword/Caption\": {\n            \"title\": \"$:/language/Buttons/Encryption/SetPassword/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"set password or public key\"\n        },\n        \"$:/language/Buttons/Encryption/SetPassword/Hint\": {\n            \"title\": \"$:/language/Buttons/Encryption/SetPassword/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Set a password for saving this wiki with encryption\"\n        },\n        \"$:/language/Buttons/Encryption/SetPublicKey/Hint\": {\n            \"title\": \"$:/language/Buttons/Encryption/SetPublicKey/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Set a public key for saving this wiki with encryption\"\n        },\n        \"$:/language/Buttons/Ens/Manager/Open/Caption\": {\n            \"title\": \"$:/language/Buttons/Ens/Manager/Open/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"open ENS Manager\"\n        },\n        \"$:/language/Buttons/Ens/Manager/Open/Hint\": {\n            \"title\": \"$:/language/Buttons/Ens/Manager/Open/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Open ENS Domain Manager\"\n        },\n        \"$:/language/Buttons/Ens/Publish/Caption\": {\n            \"title\": \"$:/language/Buttons/Ens/Publish/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"publish to ENS\"\n        },\n        \"$:/language/Buttons/Ens/Publish/Hint\": {\n            \"title\": \"$:/language/Buttons/Ens/Publish/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Publish this wiki to ENS\"\n        },\n        \"$:/language/Buttons/Ens/Resolve/And/Open/Caption\": {\n            \"title\": \"$:/language/Buttons/Ens/Resolve/And/Open/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"open ENS Domain content\"\n        },\n        \"$:/language/Buttons/Ens/Resolve/And/Open/Hint\": {\n            \"title\": \"$:/language/Buttons/Ens/Resolve/And/Open/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Open resolved ENS Domain content\"\n        },\n        \"$:/language/Buttons/Ipns/Publish/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Publish/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"publish to IPNS\"\n        },\n        \"$:/language/Buttons/Ipns/Publish/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Publish/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Publish this wiki to IPNS\"\n        },\n        \"$:/language/Buttons/Ipns/Remove/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Remove/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"remove\"\n        },\n        \"$:/language/Buttons/Ipns/Remove/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Remove/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Remove IPNS name and IPNS key\"\n        },\n        \"$:/language/Buttons/Ipns/Rename/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Rename/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"rename\"\n        },\n        \"$:/language/Buttons/Ipns/Rename/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Rename/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Rename IPNS name\"\n        },\n        \"$:/language/Buttons/Ipns/Resolve/And/Open/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Resolve/And/Open/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"resolve and open\"\n        },\n        \"$:/language/Buttons/Ipns/Resolve/And/Open/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Resolve/And/Open/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Open resolved IPNS key\"\n        },\n        \"$:/language/Buttons/Ipns/Publish/To/Ens/Caption\": {\n            \"title\": \"$:/language/Buttons/Ipns/Publish/To/Ens/Caption\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"publish to ENS\"\n        },\n        \"$:/language/Buttons/Ipns/Publish/To/Ens/Hint\": {\n            \"title\": \"$:/language/Buttons/Ipns/Publish/To/Ens/Hint\",\n            \"modified\": \"20200606094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"publish IPNS key to ENS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Caption\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Caption\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPFS Saver\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"These settings are only used when saving to IPFS.\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Verbose\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Verbose\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Saver Verbose\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Url\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Url\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPFS Server URL\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/ApiUrl\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/ApiUrl\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"API\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/GatewayUrl\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/GatewayUrl\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Gateway\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Ens\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Ens\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"ENS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/EnsDomain\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/EnsDomain\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"ENS domain\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Ipns\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Ipns\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPNS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/IpnsName\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/IpnsName\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPNS name\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/IpnsKey\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/IpnsKey\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPNS key\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Resolved\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Resolved\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Resolved\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Global\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Global\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Global\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Verbose/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Verbose/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Verbose\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Unpin/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Unpin/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Unpin previous content\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Wait/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Wait/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Wait\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Policy\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Policy\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Relative URL Policy\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Policy/Origin/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Policy/Origin/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Origin\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Policy/Gateway/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Policy/Gateway/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Gateway\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Protocol\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Protocol\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Protocol\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ens/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ens/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"ENS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ipfs/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ipfs/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPFS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ipns/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Protocol/Ipns/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPNS\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Export\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Export\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Export\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Export/Static/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Export/Static/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Static\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Export/Json/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Export/Json/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"JSON\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Export/Tid/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Export/Tid/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"TID\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Provider\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Provider\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPFS Provider\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Provider/Default/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Provider/Default/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Default\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Provider/Window/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Provider/Window/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"IPFS Companion\"\n        },\n        \"$:/language/ControlPanel/Saving/IpfsService/Provider/HTTP/Description\": {\n            \"title\": \"$:/language/ControlPanel/Saving/IpfsService/Provider/HTTP/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"HTTP Client\"\n        },\n        \"$:/language/ControlPanel/Basics/Version/Prompt\": {\n            \"title\": \"$:/language/ControlPanel/Basics/Version/Prompt\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"<b>~TiddlyWiki</b>:\"\n        },\n        \"$:/language/ControlPanel/Ipfs/Version/Prompt\": {\n            \"title\": \"$:/language/ControlPanel/Ipfs/Version/Prompt\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"<b>IPFS</b>:\"\n        },\n        \"$:/language/ControlPanel/Settings/Encryption/Caption\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Encryption/Caption\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Encryption\"\n        },\n        \"$:/language/ControlPanel/Settings/Encryption/Standford/Description\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Encryption/Standford/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Use Standford encryption\"\n        },\n        \"$:/language/ControlPanel/Settings/Encryption/Ethereum/Description\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Encryption/Ethereum/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Use Ethereum public key\"\n        },\n        \"$:/language/ControlPanel/Settings/Compression/Caption\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Compression/Caption\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Compression\"\n        },\n        \"$:/language/ControlPanel/Settings/Compression/Description\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Compression/Description\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Use Content Compression\"\n        },\n        \"$:/language/ControlPanel/Settings/PreferredSaver/Caption\": {\n            \"title\": \"$:/language/ControlPanel/Settings/PreferredSaver/Caption\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Preferred Saver\"\n        },\n        \"$:/language/ControlPanel/Appearance/Hint\": {\n            \"title\": \"$:/language/ControlPanel/Appearance/Hint\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Ways to customise the appearance of your <b>~TiddlyWiki</b>.\"\n        },\n        \"$:/language/ControlPanel/Info/Hint\": {\n            \"title\": \"$:/language/ControlPanel/Info/Hint\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Information about this <b>~TiddlyWiki</b>\"\n        },\n        \"$:/language/ControlPanel/Saving/Hint\": {\n            \"title\": \"$:/language/ControlPanel/Saving/Hint\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Settings used for saving the entire <b>~TiddlyWiki</b> as a single file via a saver module.\"\n        },\n        \"$:/language/ControlPanel/Settings/Hint\": {\n            \"title\": \"$:/language/ControlPanel/Settings/Hint\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"These settings let you customise the behaviour of <b>~TiddlyWiki</b>.\"\n        },\n        \"$:/language/EditTemplate/Body/External/Hint\": {\n            \"title\": \"$:/language/EditTemplate/Body/External/Hint\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"This tiddler shows content stored outside of the main ~TiddlyWiki file.<br/>You can edit the tags and fields but cannot directly edit the content itself\"\n        },\n        \"$:/language/NetworkError/XMLHttpRequest\": {\n            \"title\": \"$:/language/NetworkError/XMLHttpRequest\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"Network Error while loading...\"\n        },\n        \"$:/language/LazyLoadingWarning\": {\n            \"title\": \"$:/language/LazyLoadingWarning\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"<p>Trying to load external Tiddler content from:<p></p>''<$ipfslink field=\\\"_canonical_uri\\\" tiddler=<<currentTiddler>>/>''</p>\"\n        },\n        \"$:/language/EmptyTidddler\": {\n            \"title\": \"$:/language/EmptyTidddler\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"text\": \"<p>An external Tiddler content has been loaded:</p><p>''<$ipfslink field=\\\"_canonical_uri\\\" tiddler=<<currentTiddler>>/>''</p><p>The imported Tiddler content is empty, possible reasons:</p><ul><li>The Tiddler Content Type doesn't match the type of the external content.</li>\"\n        },\n        \"$:/ipfs/library/eruda\": {\n            \"title\": \"$:/ipfs/library/eruda\",\n            \"modified\": \"20200619094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/liriliri/eruda/master/LICENSE\",\n            \"_project_uri\": \"https://github.com/liriliri/eruda\",\n            \"_source_uri\": \"https://cdn.jsdelivr.net/npm/eruda@2.3.3/eruda.min.js\",\n            \"_source_sri\": \"sha384-O4NQOgwNPEet1/xZmB7hYYb/vMdpWyVJcqL+47zpRWuXtRlhwnEoNM/w3/C3HCoP\"\n        },\n        \"$:/ipfs/library/ethers\": {\n            \"title\": \"$:/ipfs/library/ethers\",\n            \"modified\": \"20200805094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/ethers-io/ethers.js/master/LICENSE.md\",\n            \"_project_uri\": \"https://github.com/ethers-io/ethers.js/\",\n            \"_source_uri\": \"https://cdn.jsdelivr.net/npm/ethers@5.0.8/dist/ethers.umd.min.js\",\n            \"_source_sri\": \"sha384-VdCv2iQkvQgOtRBysKb+Fm3b9feRD5z/ggtd9msExhEXGqWzw6f/pSHrh1JwAiwZ\"\n        },\n        \"$:/ipfs/library/ipfs-http-client\": {\n            \"title\": \"$:/ipfs/library/ipfs-http-client\",\n            \"modified\": \"20200717094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"_license_uri\": \"https://raw.githubusercontent.com/ipfs/js-ipfs/master/packages/ipfs-http-client/LICENSE-MIT\",\n            \"_project_uri\": \"https://github.com/ipfs/js-ipfs/tree/master/packages/ipfs-http-client\",\n            \"_source_uri\": \"https://cdn.jsdelivr.net/npm/ipfs-http-client@45.0.0/dist/index.min.js\",\n            \"_source_sri\": \"sha384-T8JKzLOxigh+TH0YXwRyNYH71GNG07T+4CMIMzrlTcuM9HLimsKFdAM8FBiKp0D1\"\n        },\n        \"$:/plugins/ipfs/changelog\": {\n            \"title\": \"$:/plugins/ipfs/changelog\",\n            \"modified\": \"20200720094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"type\": \"text/vnd.tiddlywiki\",\n            \"text\": \"!! v0.4.0\\n\\n[[See GitHub for detailed change history of this release|https://github.com/xmaysonnave/tiddlywiki-ipfs/compare/v0.3.0...v0.4.0]]\\n\\n!! v0.3.0\\n\\n[[See GitHub for detailed change history of this release|https://github.com/xmaysonnave/tiddlywiki-ipfs/compare/v0.2.9...v0.3.0]]\\n\\n!! v0.2.9\\n\\n[[See GitHub for detailed change history of this release|https://github.com/xmaysonnave/tiddlywiki-ipfs/compare/v0.2.8...v0.2.9]]\\n\\n!! v0.2.8\\n\\n[[See GitHub for detailed change history of this release|https://github.com/xmaysonnave/tiddlywiki-ipfs/compare/v0.2.7...v0.2.8]]\\n\\n...\\n\\n!! 0.2.2\\n\\n* First public release\"\n        },\n        \"$:/plugins/ipfs/readme\": {\n            \"title\": \"$:/plugins/ipfs/readme\",\n            \"modified\": \"20200622094915385\",\n            \"tags\": \"$:/ipfs/core\",\n            \"type\": \"text/vnd.tiddlywiki\",\n            \"text\": \"!! IPFS with ~TiddlyWiki\\n\\nFeatures:\\n\\n* Store `TiddlyWiki's` and attachments on [ext[IPFS|https://ipfs.io/]]\\n* Access `TiddlyWiki's` and attachments from [ext[IPFS|https://ipfs.io/]]\\n* Encrypt and Decrypt `TiddlyWiki` and attachments\\n* Publish and Manage IPNS Keys and Names\\n* Interact with [ext[Metamask|https://metamask.io]] Ethereum wallets\\n* Publish to [ext[ENS|https://ens.domains]]\\n* Share over [ext[IPFS|https://ipfs.io/]] `TiddlyWiki's` [ext[Tiddlers|https://tiddlywiki.com/#Tiddlers]] and attachments\\n\\nSupported Browsers:\\n\\n* [ext[Firefox|https://www.mozilla.org]]\\n* [ext[Chrome|https://www.google.com/chrome/]]\\n* [ext[Chromium|https://www.chromium.org]]\\n\\nSupported Ethereum browser extension:\\n\\n* [ext[Metamask|https://metamask.io]]\\n\\nSupported Mobile ĐApp browser:\\n\\n* [ext[Metamask|https://metamask.io]]\\n\\nSupported ENS Ethereum Networks\\n\\n* `Mainnet`: Ethereum Main Network\\n* `Ropsten`: Ethereum Test Network (~PoW)\\n* `Rinkeby`: Ethereum Test Network (~PoA)\\n* `Goerli`: Ethereum Test Network (~PoA)\\n\\nResources:\\n\\n* https://github.com/xmaysonnave/tiddlywiki-ipfs/\\n* https://github.com/xmaysonnave/tiddlywiki-ipfs/blob/master/README.md\\n\\n!! With a capable ENS browser:\\n\\n* [ext[IPFS with TiddlyWiki|https://bluelightav.eth]] on \\\"Mainnet: Ethereum Main Network\\\"\\n* [ext[IPFS with TiddlyWiki|https://bluelightav.eth]] on [ext[Rinkeby|https://www.rinkeby.io/]]: Ethereum Test Network (~PoA)\\n* [ext[IPFS with TiddlyWiki plugin|https://bluelightav.eth/#%24%3A%2Fplugins%2Fipfs]]\\n* [ext[IPFS with TiddlyWiki Documentation|https://bluelightav.eth/#IPFS%20Documentation]]\\n\\n!! With a non capable ENS browser:\\n\\n* [ext[IPFS with TiddlyWiki|https://bluelightav.eth.link]]\\n* [ext[IPFS with TiddlyWiki plugin|https://bluelightav.eth.link/#%24%3A%2Fplugins%2Fipfs]]\\n* [ext[IPFS with TiddlyWiki Documentation|https://bluelightav.eth.link/#IPFS%20Documentation]]\\n\"\n        },\n        \"$:/ipfs/saver/api/http/127.0.0.1/5001\": {\n            \"title\": \"$:/ipfs/saver/api/http/127.0.0.1/5001\",\n            \"modified\": \"20200806094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/api\",\n            \"text\": \"http://127.0.0.1:5001\"\n        },\n        \"$:/ipfs/saver/api/http/localhost/5001\": {\n            \"title\": \"$:/ipfs/saver/api/http/localhost/5001\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/api\",\n            \"text\": \"http://localhost:5001\"\n        },\n        \"$:/ipfs/saver/api/https/ipfs.infura.io/5001\": {\n            \"title\": \"$:/ipfs/saver/api/https/ipfs.infura.io/5001\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/api\",\n            \"text\": \"https://ipfs.infura.io:5001\"\n        },\n        \"$:/ipfs/saver/api/https/ipfs.bluelightav.org\": {\n            \"title\": \"$:/ipfs/saver/api/https/ipfs.bluelightav.org\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/api\",\n            \"text\": \"https://ipfs.bluelightav.org\"\n        },\n        \"$:/ipfs/saver/gateway/https/cf-ipfs.com\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/cf-ipfs.com\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://cf-ipfs.com\"\n        },\n        \"$:/ipfs/saver/gateway/https/cloudflare-ipfs.com\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/cloudflare-ipfs.com\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://cloudflare-ipfs.com\"\n        },\n        \"$:/ipfs/saver/gateway/https/dweb.link\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/dweb.link\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://dweb.link\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.eternum.io\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.eternum.io\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.eternum.io\"\n        },\n        \"$:/ipfs/saver/gateway/https/gateway.bluelightav.org\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/gateway.bluelightav.org\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://gateway.bluelightav.org\"\n        },\n        \"$:/ipfs/saver/gateway/https/gateway.ipfs.io\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/gateway.ipfs.io\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://gateway.ipfs.io\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.greyh.at\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.greyh.at\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.greyh.at\"\n        },\n        \"$:/ipfs/saver/gateway/https/hardbin.com\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/hardbin.com\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://hardbin.com\"\n        },\n        \"$:/ipfs/saver/gateway/http/127.0.0.1\": {\n            \"title\": \"$:/ipfs/saver/gateway/http/127.0.0.1\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"http://127.0.0.1:8080\"\n        },\n        \"$:/ipfs/saver/gateway/http/localhost\": {\n            \"title\": \"$:/ipfs/saver/gateway/http/localhost\",\n            \"modified\": \"20200810494915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"http://localhost:8080\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.infura.io\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.infura.io\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.infura.io\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.bluelightav.org\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.bluelightav.org\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.bluelightav.org\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.io\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.io\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.io\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.jes.xxx\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.jes.xxx\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.jes.xxx\"\n        },\n        \"$:/ipfs/saver/gateway/https/ninetailed.ninja\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ninetailed.ninja\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ninetailed.ninja\"\n        },\n        \"$:/ipfs/saver/gateway/https/gateway.pinata.cloud\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/gateway.pinata.cloud\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://gateway.pinata.cloud\"\n        },\n        \"$:/ipfs/saver/gateway/https/ipfs.sloppyta.co\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/ipfs.sloppyta.co\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://ipfs.sloppyta.co\"\n        },\n        \"$:/ipfs/saver/gateway/https/gateway.temporal.cloud\": {\n            \"title\": \"$:/ipfs/saver/gateway/https/gateway.temporal.cloud\",\n            \"modified\": \"20200804094915385\",\n            \"tags\": \"$:/ipfs/core $:/ipfs/saver/gateway\",\n            \"text\": \"https://gateway.temporal.cloud\"\n        },\n        \"$:/core/ui/ControlPanel/Saving/Ipfs\": {\n            \"title\": \"$:/core/ui/ControlPanel/Saving/Ipfs\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/ControlPanel/Saving\",\n            \"caption\": \"{{$:/language/ControlPanel/Saving/IpfsService/Caption}}\",\n            \"text\": \"\\\\define lingo-base() $:/language/ControlPanel/Saving/IpfsService/\\n\\\\define service-name() Ipfs\\n\\n<<lingo Description>>\\n\\n''<<lingo Global>>''\\n\\n<table>\\n<tbody>\\n<tr>\\n<td width=\\\"90%\\\">''<$link to=\\\"$:/ipfs/saver/verbose\\\"><<lingo Verbose/Description>></$link>''</td>\\n<td width=\\\"10%\\\"><$checkbox tiddler=\\\"$:/ipfs/saver/verbose\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"yes\\\"/></td>\\n</tr>\\n<tr>\\n<td width=\\\"90%\\\">''<$link to=\\\"$:/ipfs/saver/unpin\\\"><<lingo Unpin/Description>></$link>''</td>\\n<td width=\\\"10%\\\"><$checkbox tiddler=\\\"$:/ipfs/saver/unpin\\\" field=\\\"text\\\" checked=\\\"yes\\\" unchecked=\\\"no\\\" default=\\\"no\\\"/></td>\\n</tr>\\n</tbody>\\n</table>\\n\\n''<$link to=\\\"$:/ipfs/saver/provider\\\"><<lingo Provider>></$link>''\\n\\n<$radio tiddler=\\\"$:/ipfs/saver/provider\\\" value=\\\"default\\\"><<lingo Provider/Default/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/provider\\\" value=\\\"window\\\"><<lingo Provider/Window/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/provider\\\" value=\\\"http\\\"><<lingo Provider/HTTP/Description>></$radio>\\n\\n''<$link to=\\\"$:/ipfs/saver/export\\\"><<lingo Export>></$link>''\\n\\n<$radio tiddler=\\\"$:/ipfs/saver/export\\\" value=\\\"json\\\"><<lingo Export/Json/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/export\\\" value=\\\"static\\\"><<lingo Export/Static/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/export\\\" value=\\\"tid\\\"><<lingo Export/Tid/Description>></$radio>\\n\\n''<$link to=\\\"$:/ipfs/saver/protocol\\\"><<lingo Protocol>></$link>''\\n\\n<$radio tiddler=\\\"$:/ipfs/saver/protocol\\\" value=\\\"ens\\\"><<lingo Protocol/Ens/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/protocol\\\" value=\\\"ipfs\\\"><<lingo Protocol/Ipfs/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/protocol\\\" value=\\\"ipns\\\"><<lingo Protocol/Ipns/Description>></$radio>\\n\\n''<$link to=\\\"$:/ipfs/saver/policy\\\"><<lingo Policy>></$link>''\\n\\n<$radio tiddler=\\\"$:/ipfs/saver/policy\\\" value=\\\"origin\\\"><<lingo Policy/Origin/Description>></$radio>\\n<$radio tiddler=\\\"$:/ipfs/saver/policy\\\" value=\\\"gateway\\\"><<lingo Policy/Gateway/Description>></$radio>\\n\\n''<<lingo Url>>''\\n\\n<table>\\n<tbody>\\n<tr>\\n<td width=\\\"20%\\\">''<$link to=\\\"$:/ipfs/saver/api\\\"><<lingo ApiUrl>></$link>''</td>\\n<td width=\\\"80%\\\">\\n<$select tiddler=\\\"$:/ipfs/saver/api\\\" default=\\\"$:/ipfs/saver/api/https/ipfs.infura.io/5001\\\" class=\\\"tc-edit-texteditor\\\">\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/ipfs/saver/api]!has[draft.of]sort[]]\\\">\\n<option value=<<currentTiddler>>><$transclude><$text text=<<currentTiddler>>/></$transclude></option>\\n</$list>\\n</$select>\\n</td>\\n</tr>\\n<tr>\\n<td width=\\\"20%\\\">''<$link to=\\\"$:/ipfs/saver/gateway\\\"><<lingo GatewayUrl>></$link>''</td>\\n<td width=\\\"80%\\\">\\n<$select tiddler=\\\"$:/ipfs/saver/gateway\\\" default=\\\"$:/ipfs/saver/gateway/https/ipfs.infura.io\\\" class=\\\"tc-edit-texteditor\\\">\\n<$list filter=\\\"[all[shadows+tiddlers]tag[$:/ipfs/saver/gateway]!has[draft.of]sort[]]\\\">\\n<option value=<<currentTiddler>>><$transclude><$text text=<<currentTiddler>>/></$transclude></option>\\n</$list>\\n</$select>\\n</td>\\n</tr>\\n</tbody>\\n</table>\\n\\n''<<lingo Ens>>''\\n\\n<table>\\n<tbody>\\n<tr>\\n<td width=\\\"20%\\\">''<$link to=\\\"$:/ipfs/saver/ens/domain\\\"><<lingo EnsDomain>></$link>''</td>\\n<td width=\\\"80%\\\"><$edit-text tiddler=\\\"$:/ipfs/saver/ens/domain\\\" class=\\\"tc-edit-texteditor\\\" default=\\\"\\\" tag=\\\"input\\\"/></td>\\n</tr>\\n</tbody>\\n</table>\\n\\n<table style=\\\"width:20%;margin-left:40%;margin-right:40%;text-align:center;\\\">\\n<tbody>\\n<tr>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ens-manager-open\\\" tooltip={{$:/language/Buttons/Ens/Manager/Open/Hint}} aria-label={{$:/language/Buttons/Ens/Manager/Open/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/ens}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ens/Manager/Open/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ens-resolve-and-open\\\" tooltip={{$:/language/Buttons/Ens/Resolve/And/Open/Hint}} aria-label={{$:/language/Buttons/Ens/Resolve/And/Open/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/globe}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ens/Resolve/And/Open/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n</tr>\\n</tbody>\\n</table>\\n\\n''<<lingo Ipns>>''\\n\\n<table>\\n<tbody>\\n<tr>\\n<td width=\\\"20%\\\">''<$link to=\\\"$:/ipfs/saver/ipns/name\\\"><<lingo IpnsName>></$link>''</td>\\n<td width=\\\"80%\\\"><$edit-text tiddler=\\\"$:/ipfs/saver/ipns/name\\\" class=\\\"tc-edit-texteditor\\\" default=\\\"\\\" tag=\\\"input\\\"/></td>\\n</tr>\\n<tr>\\n<td width=\\\"20%\\\">''<$link to=\\\"$:/ipfs/saver/ipns/key\\\"><<lingo IpnsKey>></$link>''</td>\\n<td width=\\\"80%\\\"><$text text={{$:/ipfs/saver/ipns/key}} class=\\\"tc-edit-texteditor\\\"/></td>\\n</tr>\\n</tbody>\\n</table>\\n\\n<table style=\\\"width:50%;margin-left:25%;margin-right:25%;text-align:center;\\\">\\n<tbody>\\n<tr>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-rename\\\" tooltip={{$:/language/Buttons/Ipns/Rename/Hint}} aria-label={{$:/language/Buttons/Ipns/Rename/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/mono-line}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Rename/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-generate\\\" tooltip={{$:/language/Buttons/Ipns/Generate/Hint}} aria-label={{$:/language/Buttons/Ipns/Generate/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/new-here-button}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Generate/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-remove\\\" tooltip={{$:/language/Buttons/Ipns/Remove/Hint}} aria-label={{$:/language/Buttons/Ipns/Remove/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/delete-button}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Remove/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-fetch\\\" tooltip={{$:/language/Buttons/Ipns/Fetch/Hint}} aria-label={{$:/language/Buttons/Ipns/Fetch/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/refresh-button}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Fetch/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-resolve-and-open\\\" tooltip={{$:/language/Buttons/Ipns/Resolve/And/Open/Hint}} aria-label={{$:/language/Buttons/Ipns/Resolve/And/Open/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/globe}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Resolve/And/Open/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n<td style=\\\"width:10%\\\">\\n<$button message=\\\"tm-ipns-publish-to-ens\\\" tooltip={{$:/language/Buttons/Ipns/Publish/To/Ens/Hint}} aria-label={{$:/language/Buttons/Ipns/Publish/To/Ens/Caption}} class=\\\"tc-btn-invisible tc-ipfs-action\\\">\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/ens}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Publish/To/Ens/Caption}}/></span>\\n</$list>\\n</$button>\\n</td>\\n</tr>\\n</tbody>\\n</table>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/console/mobile\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/console/mobile\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core  $:/tags/PageControls\",\n            \"caption\": \"{{$:/core/images/preview-open}} {{$:/language/Buttons/Console/Mobile/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Console/Mobile/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-console-mobile\\\" tooltip=<<ipfs-console-tooltip>> aria-label={{$:/language/Buttons/Console/Mobile/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/preview-open}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Console/Mobile/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/pin\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/pin\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/PageControls\",\n            \"caption\": \"{{$:/core/images/chevron-up}} {{$:/language/Buttons/Ipfs/Pin/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Pin/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-ipfs-pin\\\" tooltip={{$:/language/Buttons/Ipfs/Pin/Hint}} aria-label={{$:/language/Buttons/Ipfs/Pin/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/chevron-up}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipfs/Pin/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ens/publish\": {\n            \"title\": \"$:/core/ui/Buttons/ens/publish\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/PageControls\",\n            \"caption\": \"{{$:/core/images/ens}} {{$:/language/Buttons/Ens/Publish/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ens/Publish/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-ens-publish\\\" tooltip={{$:/language/Buttons/Ens/Publish/Hint}} aria-label={{$:/language/Buttons/Ens/Publish/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/ens}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ens/Publish/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipns/publish\": {\n            \"title\": \"$:/core/ui/Buttons/ipns/publish\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/PageControls\",\n            \"caption\": \"{{$:/core/images/excise}} {{$:/language/Buttons/Ipns/Publish/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipns/Publish/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-ipns-publish\\\" tooltip={{$:/language/Buttons/Ipns/Publish/Hint}} aria-label={{$:/language/Buttons/Ipns/Publish/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/excise}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipns/Publish/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/unpin\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/unpin\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core  $:/tags/PageControls\",\n            \"caption\": \"{{$:/core/images/chevron-down}} {{$:/language/Buttons/Ipfs/Unpin/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Unpin/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-ipfs-unpin\\\" tooltip={{$:/language/Buttons/Ipfs/Unpin/Hint}} aria-label={{$:/language/Buttons/Ipfs/Unpin/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/chevron-down}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipfs/Unpin/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/export/attachment\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/export/attachment\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/core/images/ipfs}} {{$:/language/Buttons/Ipfs/Export/Attachment/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Export/Attachment/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$button message=\\\"tm-ipfs-export-attachment\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Export/Attachment/Hint}} aria-label={{$:/language/Buttons/Ipfs/Export/Attachment/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/ipfs}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n<$text text=\\\" \\\"/>\\n<$text text={{$:/language/Buttons/Ipfs/Export/Attachment/Caption}}/>\\n</span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/export/content\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/export/content\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/core/images/excise}} {{$:/language/Buttons/Ipfs/Export/Content/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Export/Content/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$button message=\\\"tm-ipfs-export-content\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Export/Content/Hint}} aria-label={{$:/language/Buttons/Ipfs/Export/Content/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/excise}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n<$text text=\\\" \\\"/>\\n<$text text={{$:/language/Buttons/Ipfs/Export/Content/Caption}}/>\\n</span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/export\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/export\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/core/images/excise}} {{$:/language/Buttons/Ipfs/Export/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Export/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$button message=\\\"tm-ipfs-export\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Export/Hint}} aria-label={{$:/language/Buttons/Ipfs/Export/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/excise}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n<$text text=\\\" \\\"/>\\n<$text text={{$:/language/Buttons/Ipfs/Export/Caption}}/>\\n</span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/refresh\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/refresh\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/core/images/refresh-button}} {{$:/language/Buttons/Ipfs/Refresh/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Refresh/Hint}}\",\n            \"text\": \"<$button message=\\\"tm-refresh-tiddler\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Refresh/Hint}} aria-label={{$:/language/Buttons/Ipfs/Refresh/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/refresh-button}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\"><$text text={{$:/language/Buttons/Ipfs/Refresh/Caption}}/></span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/tiddler/pin\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/tiddler/pin\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/core/images/chevron-up}} {{$:/language/Buttons/Ipfs/Tiddler/Pin/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Tiddler/Pin/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$button message=\\\"tm-ipfs-pin\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Tiddler/Pin/Hint}} aria-label={{$:/language/Buttons/Ipfs/Tiddler/Pin/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/chevron-up}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n<$text text=\\\" \\\"/>\\n<$text text={{$:/language/Buttons/Ipfs/Tiddler/Pin/Caption}}/>\\n</span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/core/ui/Buttons/ipfs/tiddler/unpin\": {\n            \"title\": \"$:/core/ui/Buttons/ipfs/tiddler/unpin\",\n            \"modified\": \"20200528094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/ViewToolbar\",\n            \"caption\": \"{{$:/core/images/chevron-down}} {{$:/language/Buttons/Ipfs/Tiddler/Unpin/Caption}}\",\n            \"description\": \"{{$:/language/Buttons/Ipfs/Tiddler/Unpin/Hint}}\",\n            \"text\": \"\\\\whitespace trim\\n<$button message=\\\"tm-ipfs-unpin\\\" param=<<currentTiddler>> tooltip={{$:/language/Buttons/Ipfs/Tiddler/Unpin/Hint}} aria-label={{$:/language/Buttons/Ipfs/Tiddler/Unpin/Caption}} class=<<tv-config-toolbar-class>>>\\n<$list filter=\\\"[<tv-config-toolbar-icons>match[yes]]\\\">\\n{{$:/core/images/chevron-down}}\\n</$list>\\n<$list filter=\\\"[<tv-config-toolbar-text>match[yes]]\\\">\\n<span class=\\\"tc-btn-text\\\">\\n<$text text=\\\" \\\"/>\\n<$text text={{$:/language/Buttons/Ipfs/Tiddler/Unpin/Caption}}/>\\n</span>\\n</$list>\\n</$button>\"\n        },\n        \"$:/plugins/ipfs/styles\": {\n            \"title\": \"$:/plugins/ipfs/styles\",\n            \"modified\": \"20200608094915385\",\n            \"tags\": \"$:/ipfs/core $:/tags/Stylesheet\",\n            \"type\": \"text/css\",\n            \"text\": \".tc-ipfs-action {\\n  display: block;\\n  margin: auto;\\n  width: 18px;\\n  height: 18px;\\n}\\n\\n.tc-icon-ipfs-wrapper {\\n  display: inline-block;\\n  width: 1em;\\n  height: 1em;\\n}\\n\\na.tc-ipfs-link-external {\\n\\ttext-decoration: underline;\\n\\tcolor: <<colour external-link-foreground>>;\\n\\tbackground-color: <<colour external-link-background>>;\\n}\\n\\na.tc-ipfs-link-external:visited {\\n\\tcolor: <<colour external-link-foreground-visited>>;\\n\\tbackground-color: <<colour external-link-background-visited>>;\\n}\\n\\na.tc-ipfs-link-external:hover {\\n\\tcolor: <<colour external-link-foreground-hover>>;\\n\\tbackground-color: <<colour external-link-background-hover>>;\\n  cursor: pointer;\\n}\\n\\n.ethAddress {\\n  padding: 20px 0px 0px 40px;\\n  height: 80px;\\n}\"\n        }\n    }\n}"
}